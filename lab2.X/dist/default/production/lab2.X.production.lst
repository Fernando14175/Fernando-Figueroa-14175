

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jan 31 15:41:25 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0008                     _PORTDbits	set	8
   204  0008                     _PORTD	set	8
   205  0007                     _PORTC	set	7
   206  0006                     _PORTBbits	set	6
   207  0088                     _TRISD	set	136
   208  0087                     _TRISC	set	135
   209  0086                     _TRISB	set	134
   210  0189                     _ANSELH	set	393
   211  0188                     _ANSEL	set	392
   212                           
   213                           	psect	cinit
   214  07FA                     start_initialization:	
   215                           ; #config settings
   216                           
   217  07FA                     __initialization:
   218                           
   219                           ; Clear objects allocated to COMMON
   220  07FA  01F0               	clrf	__pbssCOMMON& (0+127)
   221  07FB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   222  07FC                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225  07FC                     __end_of__initialization:
   226  07FC  0183               	clrf	3
   227  07FD  120A  118A  2F65   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMMON
   230  0070                     __pbssCOMMON:
   231  0070                     _cont:
   232  0070                     	ds	2
   233                           
   234                           	psect	cstackCOMMON
   235  0072                     __pcstackCOMMON:
   236  0072                     ?_config:
   237  0072                     ??_config:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0072                     ?_contled:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0072                     ??_contled:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0072                     ?_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0072                     ??_main:	
   250                           ; 1 bytes @ 0x0
   251                           
   252                           
   253                           ; 1 bytes @ 0x0
   254  0072                     	ds	2
   255                           
   256                           	psect	maintext
   257  0765                     __pmaintext:	
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   260 ;;
   261 ;; *************** function _main *****************
   262 ;; Defined at:
   263 ;;		line 41 in file "newmain.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;		None
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   272 ;; Tracked objects:
   273 ;;		On entry : B00/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   277 ;;      Params:         0       0       0       0       0
   278 ;;      Locals:         0       0       0       0       0
   279 ;;      Temps:          2       0       0       0       0
   280 ;;      Totals:         2       0       0       0       0
   281 ;;Total ram usage:        2 bytes
   282 ;; Hardware stack levels required when called:    1
   283 ;; This function calls:
   284 ;;		_config
   285 ;;		_contled
   286 ;; This function is called by:
   287 ;;		Startup code after reset
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           
   292                           ;psect for function _main
   293  0765                     _main:
   294  0765                     l680:	
   295                           ;incstack = 0
   296                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   297                           
   298                           
   299                           ;newmain.c: 43:     config();
   300  0765  120A  118A  2756  120A  118A  	fcall	_config
   301                           
   302                           ;newmain.c: 45:     while(cont < 5){
   303  076A  2F92               	goto	l694
   304  076B                     l682:
   305                           
   306                           ;newmain.c: 46:      _delay((unsigned long)((30)*(8000000/4000.0)));
   307  076B  304E               	movlw	78
   308  076C  00F3               	movwf	??_main+1
   309  076D  30EB               	movlw	235
   310  076E  00F2               	movwf	??_main
   311  076F                     u117:
   312  076F  0BF2               	decfsz	??_main,f
   313  0770  2F6F               	goto	u117
   314  0771  0BF3               	decfsz	??_main+1,f
   315  0772  2F6F               	goto	u117
   316  0773                     l684:
   317                           
   318                           ;newmain.c: 47:      if (PORTBbits.RB0 == 1){
   319  0773  1283               	bcf	3,5	;RP0=0, select bank0
   320  0774  1303               	bcf	3,6	;RP1=0, select bank0
   321  0775  1C06               	btfss	6,0	;volatile
   322  0776  2F78               	goto	u81
   323  0777  2F79               	goto	u80
   324  0778                     u81:
   325  0778  2F81               	goto	l688
   326  0779                     u80:
   327  0779                     l686:
   328                           
   329                           ;newmain.c: 48:          cont = cont+1;
   330  0779  0870               	movf	_cont,w
   331  077A  3E01               	addlw	1
   332  077B  00F0               	movwf	_cont
   333  077C  0871               	movf	_cont+1,w
   334  077D  1803               	skipnc
   335  077E  3E01               	addlw	1
   336  077F  3E00               	addlw	0
   337  0780  00F1               	movwf	_cont+1
   338  0781                     l688:
   339                           
   340                           ;newmain.c: 50:      if (PORTBbits.RB1 == 1){
   341  0781  1C86               	btfss	6,1	;volatile
   342  0782  2F84               	goto	u91
   343  0783  2F85               	goto	u90
   344  0784                     u91:
   345  0784  2F8D               	goto	l692
   346  0785                     u90:
   347  0785                     l690:
   348                           
   349                           ;newmain.c: 51:          cont = cont-1;
   350  0785  0870               	movf	_cont,w
   351  0786  3EFF               	addlw	255
   352  0787  00F0               	movwf	_cont
   353  0788  0871               	movf	_cont+1,w
   354  0789  1803               	skipnc
   355  078A  3E01               	addlw	1
   356  078B  3EFF               	addlw	255
   357  078C  00F1               	movwf	_cont+1
   358  078D                     l692:
   359                           
   360                           ;newmain.c: 54:      contled();
   361  078D  120A  118A  27A2  120A  118A  	fcall	_contled
   362  0792                     l694:
   363                           
   364                           ;newmain.c: 45:     while(cont < 5){
   365  0792  0871               	movf	_cont+1,w
   366  0793  3A80               	xorlw	128
   367  0794  00FF               	movwf	btemp+1
   368  0795  3080               	movlw	128
   369  0796  027F               	subwf	btemp+1,w
   370  0797  1D03               	skipz
   371  0798  2F9B               	goto	u105
   372  0799  3005               	movlw	5
   373  079A  0270               	subwf	_cont,w
   374  079B                     u105:
   375  079B  1C03               	skipc
   376  079C  2F9E               	goto	u101
   377  079D  2F9F               	goto	u100
   378  079E                     u101:
   379  079E  2F6B               	goto	l682
   380  079F                     u100:
   381  079F                     l36:
   382  079F  120A  118A  2800   	ljmp	start
   383  07A2                     __end_of_main:
   384                           
   385                           	psect	text1
   386  07A2                     __ptext1:	
   387 ;; *************** function _contled *****************
   388 ;; Defined at:
   389 ;;		line 79 in file "newmain.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, btemp+1
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   403 ;;      Params:         0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0
   405 ;;      Temps:          0       0       0       0       0
   406 ;;      Totals:         0       0       0       0       0
   407 ;;Total ram usage:        0 bytes
   408 ;; Hardware stack levels used:    1
   409 ;; This function calls:
   410 ;;		Nothing
   411 ;; This function is called by:
   412 ;;		_main
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           
   417                           ;psect for function _contled
   418  07A2                     _contled:
   419  07A2                     l654:	
   420                           ;incstack = 0
   421                           ; Regs used in _contled: [wreg+status,2+status,0+btemp+1]
   422                           
   423                           
   424                           ;newmain.c: 81:             if (cont == 0){
   425  07A2  0870               	movf	_cont,w
   426  07A3  0471               	iorwf	_cont+1,w
   427  07A4  1D03               	btfss	3,2
   428  07A5  2FA7               	goto	u11
   429  07A6  2FA8               	goto	u10
   430  07A7                     u11:
   431  07A7  2FAF               	goto	l658
   432  07A8                     u10:
   433  07A8                     l656:
   434                           
   435                           ;newmain.c: 82:                 PORTDbits.RD0 = 1;
   436  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   437  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   438  07AA  1408               	bsf	8,0	;volatile
   439                           
   440                           ;newmain.c: 83:                 PORTDbits.RD1 = 0;
   441  07AB  1088               	bcf	8,1	;volatile
   442                           
   443                           ;newmain.c: 84:                 PORTDbits.RD2 = 0;
   444  07AC  1108               	bcf	8,2	;volatile
   445                           
   446                           ;newmain.c: 85:                 PORTDbits.RD3 = 0;
   447  07AD  1188               	bcf	8,3	;volatile
   448                           
   449                           ;newmain.c: 86:                 PORTDbits.RD4 = 0;
   450  07AE  1208               	bcf	8,4	;volatile
   451  07AF                     l658:
   452                           
   453                           ;newmain.c: 88:             if (cont == 1){
   454  07AF  0370               	decf	_cont,w
   455  07B0  0471               	iorwf	_cont+1,w
   456  07B1  1D03               	btfss	3,2
   457  07B2  2FB4               	goto	u21
   458  07B3  2FB5               	goto	u20
   459  07B4                     u21:
   460  07B4  2FBC               	goto	l662
   461  07B5                     u20:
   462  07B5                     l660:
   463                           
   464                           ;newmain.c: 89:                 PORTDbits.RD0 = 0;
   465  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   466  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   467  07B7  1008               	bcf	8,0	;volatile
   468                           
   469                           ;newmain.c: 90:                 PORTDbits.RD1 = 1;
   470  07B8  1488               	bsf	8,1	;volatile
   471                           
   472                           ;newmain.c: 91:                 PORTDbits.RD2 = 0;
   473  07B9  1108               	bcf	8,2	;volatile
   474                           
   475                           ;newmain.c: 92:                 PORTDbits.RD3 = 0;
   476  07BA  1188               	bcf	8,3	;volatile
   477                           
   478                           ;newmain.c: 93:                 PORTDbits.RD4 = 0;
   479  07BB  1208               	bcf	8,4	;volatile
   480  07BC                     l662:
   481                           
   482                           ;newmain.c: 95:            if (cont == 2){
   483  07BC  3002               	movlw	2
   484  07BD  0670               	xorwf	_cont,w
   485  07BE  0471               	iorwf	_cont+1,w
   486  07BF  1D03               	btfss	3,2
   487  07C0  2FC2               	goto	u31
   488  07C1  2FC3               	goto	u30
   489  07C2                     u31:
   490  07C2  2FCA               	goto	l666
   491  07C3                     u30:
   492  07C3                     l664:
   493                           
   494                           ;newmain.c: 96:                 PORTDbits.RD0 = 0;
   495  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   496  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   497  07C5  1008               	bcf	8,0	;volatile
   498                           
   499                           ;newmain.c: 97:                 PORTDbits.RD1 = 0;
   500  07C6  1088               	bcf	8,1	;volatile
   501                           
   502                           ;newmain.c: 98:                 PORTDbits.RD2 = 1;
   503  07C7  1508               	bsf	8,2	;volatile
   504                           
   505                           ;newmain.c: 99:                 PORTDbits.RD3 = 0;
   506  07C8  1188               	bcf	8,3	;volatile
   507                           
   508                           ;newmain.c: 100:                 PORTDbits.RD4 = 0;
   509  07C9  1208               	bcf	8,4	;volatile
   510  07CA                     l666:
   511                           
   512                           ;newmain.c: 102:            if (cont == 3){
   513  07CA  3003               	movlw	3
   514  07CB  0670               	xorwf	_cont,w
   515  07CC  0471               	iorwf	_cont+1,w
   516  07CD  1D03               	btfss	3,2
   517  07CE  2FD0               	goto	u41
   518  07CF  2FD1               	goto	u40
   519  07D0                     u41:
   520  07D0  2FD8               	goto	l670
   521  07D1                     u40:
   522  07D1                     l668:
   523                           
   524                           ;newmain.c: 103:                 PORTDbits.RD0 = 0;
   525  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   526  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   527  07D3  1008               	bcf	8,0	;volatile
   528                           
   529                           ;newmain.c: 104:                 PORTDbits.RD1 = 0;
   530  07D4  1088               	bcf	8,1	;volatile
   531                           
   532                           ;newmain.c: 105:                 PORTDbits.RD2 = 0;
   533  07D5  1108               	bcf	8,2	;volatile
   534                           
   535                           ;newmain.c: 106:                 PORTDbits.RD3 = 1;
   536  07D6  1588               	bsf	8,3	;volatile
   537                           
   538                           ;newmain.c: 107:                 PORTDbits.RD4 = 0;
   539  07D7  1208               	bcf	8,4	;volatile
   540  07D8                     l670:
   541                           
   542                           ;newmain.c: 109:            if (cont == 4){
   543  07D8  3004               	movlw	4
   544  07D9  0670               	xorwf	_cont,w
   545  07DA  0471               	iorwf	_cont+1,w
   546  07DB  1D03               	btfss	3,2
   547  07DC  2FDE               	goto	u51
   548  07DD  2FDF               	goto	u50
   549  07DE                     u51:
   550  07DE  2FE6               	goto	l674
   551  07DF                     u50:
   552  07DF                     l672:
   553                           
   554                           ;newmain.c: 110:                 PORTDbits.RD0 = 0;
   555  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   556  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   557  07E1  1008               	bcf	8,0	;volatile
   558                           
   559                           ;newmain.c: 111:                 PORTDbits.RD1 = 0;
   560  07E2  1088               	bcf	8,1	;volatile
   561                           
   562                           ;newmain.c: 112:                 PORTDbits.RD2 = 0;
   563  07E3  1108               	bcf	8,2	;volatile
   564                           
   565                           ;newmain.c: 113:                 PORTDbits.RD3 = 0;
   566  07E4  1188               	bcf	8,3	;volatile
   567                           
   568                           ;newmain.c: 114:                 PORTDbits.RD4 = 1;
   569  07E5  1608               	bsf	8,4	;volatile
   570  07E6                     l674:
   571                           
   572                           ;newmain.c: 116:             if(cont > 4 || cont < 0){
   573  07E6  0871               	movf	_cont+1,w
   574  07E7  3A80               	xorlw	128
   575  07E8  00FF               	movwf	btemp+1
   576  07E9  3080               	movlw	128
   577  07EA  027F               	subwf	btemp+1,w
   578  07EB  1D03               	skipz
   579  07EC  2FEF               	goto	u65
   580  07ED  3005               	movlw	5
   581  07EE  0270               	subwf	_cont,w
   582  07EF                     u65:
   583  07EF  1803               	skipnc
   584  07F0  2FF2               	goto	u61
   585  07F1  2FF3               	goto	u60
   586  07F2                     u61:
   587  07F2  2FF7               	goto	l678
   588  07F3                     u60:
   589  07F3                     l676:
   590  07F3  1FF1               	btfss	_cont+1,7
   591  07F4  2FF6               	goto	u71
   592  07F5  2FF7               	goto	u70
   593  07F6                     u71:
   594  07F6  2FF9               	goto	l50
   595  07F7                     u70:
   596  07F7                     l678:
   597                           
   598                           ;newmain.c: 117:                 cont = 0;
   599  07F7  01F0               	clrf	_cont
   600  07F8  01F1               	clrf	_cont+1
   601  07F9                     l50:
   602  07F9  0008               	return
   603  07FA                     __end_of_contled:
   604                           
   605                           	psect	text2
   606  0756                     __ptext2:	
   607 ;; *************** function _config *****************
   608 ;; Defined at:
   609 ;;		line 66 in file "newmain.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0
   626 ;;      Totals:         0       0       0       0       0
   627 ;;Total ram usage:        0 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _config
   638  0756                     _config:
   639  0756                     l642:	
   640                           ;incstack = 0
   641                           ; Regs used in _config: [wreg+status,2]
   642                           
   643                           
   644                           ;newmain.c: 67:     ANSEL = 0b00000000;
   645  0756  1683               	bsf	3,5	;RP0=1, select bank3
   646  0757  1703               	bsf	3,6	;RP1=1, select bank3
   647  0758  0188               	clrf	8	;volatile
   648                           
   649                           ;newmain.c: 68:     ANSELH = 0b00000000;
   650  0759  0189               	clrf	9	;volatile
   651  075A                     l644:
   652                           
   653                           ;newmain.c: 70:     TRISB = 0b00000011;
   654  075A  3003               	movlw	3
   655  075B  1683               	bsf	3,5	;RP0=1, select bank1
   656  075C  1303               	bcf	3,6	;RP1=0, select bank1
   657  075D  0086               	movwf	6	;volatile
   658  075E                     l646:
   659                           
   660                           ;newmain.c: 71:     TRISC = 0b00000000;
   661  075E  0187               	clrf	7	;volatile
   662  075F                     l648:
   663                           
   664                           ;newmain.c: 72:     TRISD = 0b00000000;
   665  075F  0188               	clrf	8	;volatile
   666  0760                     l650:
   667                           
   668                           ;newmain.c: 74:     PORTC = 0b00000000;
   669  0760  1283               	bcf	3,5	;RP0=0, select bank0
   670  0761  1303               	bcf	3,6	;RP1=0, select bank0
   671  0762  0187               	clrf	7	;volatile
   672  0763                     l652:
   673                           
   674                           ;newmain.c: 75:     PORTD = 0b00000000;
   675  0763  0188               	clrf	8	;volatile
   676  0764                     l39:
   677  0764  0008               	return
   678  0765                     __end_of_config:
   679  007E                     btemp	set	126	;btemp
   680  007E                     wtemp0	set	126
   681                           
   682                           	psect	config
   683                           
   684                           ;Config register CONFIG1 @ 0x2007
   685                           ;	Oscillator Selection bits
   686                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   687                           ;	Watchdog Timer Enable bit
   688                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   689                           ;	Power-up Timer Enable bit
   690                           ;	PWRTE = OFF, PWRT disabled
   691                           ;	RE3/MCLR pin function select bit
   692                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   693                           ;	Code Protection bit
   694                           ;	CP = OFF, Program memory code protection is disabled
   695                           ;	Data Code Protection bit
   696                           ;	CPD = OFF, Data memory code protection is disabled
   697                           ;	Brown Out Reset Selection bits
   698                           ;	BOREN = OFF, BOR disabled
   699                           ;	Internal External Switchover bit
   700                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   701                           ;	Fail-Safe Clock Monitor Enabled bit
   702                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   703                           ;	Low Voltage Programming Enable bit
   704                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   705                           ;	In-Circuit Debugger Mode bit
   706                           ;	DEBUG = 0x1, unprogrammed default
   707  2007                     	org	8199
   708  2007  20D1               	dw	8401
   709                           
   710                           ;Config register CONFIG2 @ 0x2008
   711                           ;	Brown-out Reset Selection bit
   712                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   713                           ;	Flash Program Memory Self Write Enable bits
   714                           ;	WRT = OFF, Write protection off
   715  2008                     	org	8200
   716  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
                             _config
                            _contled
 ---------------------------------------------------------------------------------
 (1) _contled                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
   _contled

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jan 31 15:41:25 2021

                     l50 07F9                       l36 079F                       l39 0764  
                     u10 07A8                       u11 07A7                       u20 07B5  
                     u21 07B4                       u30 07C3                       u31 07C2  
                     u40 07D1                       u41 07D0                       u50 07DF  
                     u51 07DE                       u60 07F3                       u61 07F2  
                     u70 07F7                       u71 07F6                       u80 0779  
                     u65 07EF                       u81 0778                       u90 0785  
                     u91 0784                      l650 0760                      l642 0756  
                    l652 0763                      l644 075A                      l660 07B5  
                    l646 075E                      l670 07D8                      l662 07BC  
                    l654 07A2                      l648 075F                      l672 07DF  
                    l664 07C3                      l656 07A8                      l680 0765  
                    l674 07E6                      l666 07CA                      l658 07AF  
                    l690 0785                      l682 076B                      l676 07F3  
                    l668 07D1                      l692 078D                      l684 0773  
                    l678 07F7                      l686 0779                      l694 0792  
                    l688 0781                      u100 079F                      u101 079E  
                    u105 079B                      u117 076F                     _cont 0070  
                   _main 0765                     btemp 007E                     start 0000  
                  ?_main 0072                    _ANSEL 0188                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088          __end_of_contled 07FA                    status 0003  
                  wtemp0 007E          __initialization 07FA             __end_of_main 07A2  
                 ??_main 0072                   _ANSELH 0189                   _config 0756  
              ??_contled 0072  __end_of__initialization 07FC           __pcstackCOMMON 0072  
             __pmaintext 0765                  ?_config 0072          __size_of_config 000F  
                __ptext1 07A2                  __ptext2 0756                  _contled 07A2  
   end_of_initialization 07FC                _PORTBbits 0006                _PORTDbits 0008  
         __end_of_config 0765      start_initialization 07FA                 ??_config 0072  
            __pbssCOMMON 0070                ___latbits 0002                 ?_contled 0072  
       __size_of_contled 0058            __size_of_main 003D  
