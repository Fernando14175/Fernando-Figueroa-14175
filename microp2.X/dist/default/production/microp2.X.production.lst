

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 23:07:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  0105                     	;# 
   221  0107                     	;# 
   222  0108                     	;# 
   223  0109                     	;# 
   224  010C                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0185                     	;# 
   230  0187                     	;# 
   231  0188                     	;# 
   232  0189                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235                           
   236                           	psect	strings
   237  0471                     __pstrings:
   238  0471                     stringtab:
   239  0471                     __stringtab:
   240  0471                     stringcode:	
   241                           ;	String table - string pointers are 1 byte each
   242                           
   243  0471                     stringdir:
   244  0471  3004               	movlw	high stringdir
   245  0472  008A               	movwf	10
   246  0473  0804               	movf	4,w
   247  0474  0A84               	incf	4,f
   248  0475  0782               	addwf	2,f
   249  0476                     __stringbase:
   250  0476  3400               	retlw	0
   251  0477                     __end_of__stringtab:
   252  0477                     _dpowers:
   253  0477  3401               	retlw	1
   254  0478  3400               	retlw	0
   255  0479  340A               	retlw	10
   256  047A  3400               	retlw	0
   257  047B  3464               	retlw	100
   258  047C  3400               	retlw	0
   259  047D  34E8               	retlw	232
   260  047E  3403               	retlw	3
   261  047F  3410               	retlw	16
   262  0480  3427               	retlw	39
   263  0481                     __end_of_dpowers:
   264  001A                     _RCREG	set	26
   265  0019                     _TXREG	set	25
   266  000C                     _PIR1bits	set	12
   267  0009                     _PORTE	set	9
   268  0007                     _PORTC	set	7
   269  000B                     _INTCONbits	set	11
   270  0018                     _RCSTAbits	set	24
   271  0006                     _PORTB	set	6
   272  0008                     _PORTDbits	set	8
   273  0014                     _SSPCON	set	20
   274  0013                     _SSPBUF	set	19
   275  0043                     _RD3	set	67
   276  0042                     _RD2	set	66
   277  0063                     _SSPIF	set	99
   278  008F                     _OSCCON	set	143
   279  0089                     _TRISE	set	137
   280  0087                     _TRISCbits	set	135
   281  008C                     _PIE1bits	set	140
   282  0098                     _TXSTAbits	set	152
   283  0099                     _SPBRG	set	153
   284  009A                     _SPBRGH	set	154
   285  0086                     _TRISB	set	134
   286  0093                     _SSPADD	set	147
   287  0091                     _SSPCON2	set	145
   288  0094                     _SSPSTAT	set	148
   289  0443                     _TRISD3	set	1091
   290  0442                     _TRISD2	set	1090
   291  04A0                     _BF	set	1184
   292  048B                     _RCEN	set	1163
   293  048A                     _PEN	set	1162
   294  048C                     _ACKEN	set	1164
   295  048D                     _ACKDT	set	1165
   296  0489                     _RSEN	set	1161
   297  0488                     _SEN	set	1160
   298  043C                     _TRISC4	set	1084
   299  043B                     _TRISC3	set	1083
   300  0189                     _ANSELH	set	393
   301  0188                     _ANSEL	set	392
   302  0481                     STR_1:
   303  0481  3454               	retlw	84	;'T'
   304  0482  3465               	retlw	101	;'e'
   305  0483  346D               	retlw	109	;'m'
   306  0484  3470               	retlw	112	;'p'
   307  0485  3465               	retlw	101	;'e'
   308  0486  3472               	retlw	114	;'r'
   309  0487  3461               	retlw	97	;'a'
   310  0488  3474               	retlw	116	;'t'
   311  0489  3475               	retlw	117	;'u'
   312  048A  3472               	retlw	114	;'r'
   313  048B  3461               	retlw	97	;'a'
   314  048C  3400               	retlw	0
   315  048D                     STR_2:
   316  048D  3447               	retlw	71	;'G'
   317  048E  3472               	retlw	114	;'r'
   318  048F  3461               	retlw	97	;'a'
   319  0490  3464               	retlw	100	;'d'
   320  0491  346F               	retlw	111	;'o'
   321  0492  3473               	retlw	115	;'s'
   322  0493  3400               	retlw	0
   323  0494                     STR_3:
   324  0494  3420               	retlw	32	;' '
   325  0495  3425               	retlw	37	;'%'
   326  0496  3432               	retlw	50	;'2'
   327  0497  3469               	retlw	105	;'i'
   328  0498  3420               	retlw	32	;' '
   329  0499  3400               	retlw	0
   330                           
   331                           	psect	cinit
   332  0011                     start_initialization:	
   333                           ; #config settings
   334                           
   335  0011                     __initialization:
   336                           
   337                           ; Clear objects allocated to COMMON
   338  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   339  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   340  0013  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   341  0014  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   342                           
   343                           ; Clear objects allocated to BANK0
   344  0015  1283               	bcf	3,5	;RP0=0, select bank0
   345  0016  1303               	bcf	3,6	;RP1=0, select bank0
   346  0017  01BF               	clrf	__pbssBANK0& (0+127)
   347  0018  01C0               	clrf	(__pbssBANK0+1)& (0+127)
   348  0019  01C1               	clrf	(__pbssBANK0+2)& (0+127)
   349  001A  01C2               	clrf	(__pbssBANK0+3)& (0+127)
   350  001B  01C3               	clrf	(__pbssBANK0+4)& (0+127)
   351  001C  01C4               	clrf	(__pbssBANK0+5)& (0+127)
   352  001D  01C5               	clrf	(__pbssBANK0+6)& (0+127)
   353  001E  01C6               	clrf	(__pbssBANK0+7)& (0+127)
   354  001F  01C7               	clrf	(__pbssBANK0+8)& (0+127)
   355  0020                     end_of_initialization:	
   356                           ;End of C runtime variable initialization code
   357                           
   358  0020                     __end_of__initialization:
   359  0020  0183               	clrf	3
   360  0021  120A  118A  29AC   	ljmp	_main	;jump to C main() function
   361                           
   362                           	psect	bssCOMMON
   363  0076                     __pbssCOMMON:
   364  0076                     _eusart_flag:
   365  0076                     	ds	1
   366  0077                     _str_pos:
   367  0077                     	ds	1
   368  0078                     _uart_data:
   369  0078                     	ds	1
   370  0079                     _bufferr:
   371  0079                     	ds	1
   372                           
   373                           	psect	bssBANK0
   374  003F                     __pbssBANK0:
   375  003F                     _temp:
   376  003F                     	ds	4
   377  0043                     _cc:
   378  0043                     	ds	2
   379  0045                     _uart_cont:
   380  0045                     	ds	1
   381  0046                     _r:
   382  0046                     	ds	1
   383  0047                     _datos:
   384  0047                     	ds	1
   385                           
   386                           	psect	cstackCOMMON
   387  0070                     __pcstackCOMMON:
   388  0070                     ?_isdigit:
   389  0070                     ?_LCD_cmd:	
   390                           ; 1 bit 
   391                           
   392  0070                     ?_LCD_data:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_conversion:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_i2c_init:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_i2c_wait:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_i2c_rep_start:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_i2c_NACK:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_i2c_stop:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_i2c_rx:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_i2c_send:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_Lcd_Cmd:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_Lcd_Write_Char:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_Lcd_Write_String:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_LCD_init:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_LCD_disp:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_eusart_init_tx:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_eusart_enable_tx_isr:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_eusart_init_rx:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_eusart_enable_rx_isr:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_config:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_isr:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ??_isr:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_main:	
   456                           ; 1 bytes @ 0x0
   457                           
   458                           
   459                           ; 1 bytes @ 0x0
   460  0070                     	ds	4
   461  0074                     ??_isdigit:
   462  0074                     ??_i2c_init:	
   463                           ; 1 bytes @ 0x4
   464                           
   465  0074                     ??_i2c_wait:	
   466                           ; 1 bytes @ 0x4
   467                           
   468  0074                     ??_i2c_rep_start:	
   469                           ; 1 bytes @ 0x4
   470                           
   471  0074                     ??_i2c_NACK:	
   472                           ; 1 bytes @ 0x4
   473                           
   474  0074                     ??_i2c_stop:	
   475                           ; 1 bytes @ 0x4
   476                           
   477  0074                     ??_i2c_rx:	
   478                           ; 1 bytes @ 0x4
   479                           
   480  0074                     ??_i2c_send:	
   481                           ; 1 bytes @ 0x4
   482                           
   483  0074                     ??_Lcd_Cmd:	
   484                           ; 1 bytes @ 0x4
   485                           
   486  0074                     ??_Lcd_Write_Char:	
   487                           ; 1 bytes @ 0x4
   488                           
   489  0074                     ?_delay:	
   490                           ; 1 bytes @ 0x4
   491                           
   492  0074                     ??_eusart_init_tx:	
   493                           ; 1 bytes @ 0x4
   494                           
   495  0074                     ??_eusart_enable_tx_isr:	
   496                           ; 1 bytes @ 0x4
   497                           
   498  0074                     ??_eusart_init_rx:	
   499                           ; 1 bytes @ 0x4
   500                           
   501  0074                     ??_eusart_enable_rx_isr:	
   502                           ; 1 bytes @ 0x4
   503                           
   504  0074                     ??_config:	
   505                           ; 1 bytes @ 0x4
   506                           
   507  0074                     ??___wmul:	
   508                           ; 1 bytes @ 0x4
   509                           
   510  0074                     ??___awdiv:	
   511                           ; 1 bytes @ 0x4
   512                           
   513  0074                     ??___awmod:	
   514                           ; 1 bytes @ 0x4
   515                           
   516  0074                     ??___lwdiv:	
   517                           ; 1 bytes @ 0x4
   518                           
   519  0074                     i2c_send@c:	
   520                           ; 1 bytes @ 0x4
   521                           
   522  0074                     _isdigit$862:	
   523                           ; 1 bytes @ 0x4
   524                           
   525  0074                     delay@x:	
   526                           ; 1 bytes @ 0x4
   527                           
   528  0074                     ___wmul@product:	
   529                           ; 2 bytes @ 0x4
   530                           
   531                           
   532                           ; 2 bytes @ 0x4
   533  0074                     	ds	1
   534  0075                     ??___lwmod:
   535  0075                     Lcd_Write_Char@a:	
   536                           ; 1 bytes @ 0x5
   537                           
   538  0075                     isdigit@c:	
   539                           ; 1 bytes @ 0x5
   540                           
   541                           
   542                           ; 1 bytes @ 0x5
   543  0075                     	ds	1
   544  0076                     ??_LCD_cmd:
   545  0076                     ??_LCD_data:	
   546                           ; 1 bytes @ 0x6
   547                           
   548  0076                     ??_Lcd_Write_String:	
   549                           ; 1 bytes @ 0x6
   550                           
   551  0076                     ??_delay:	
   552                           ; 1 bytes @ 0x6
   553                           
   554  0076                     ??_LCD_init:	
   555                           ; 1 bytes @ 0x6
   556                           
   557                           
   558                           	psect	cstackBANK0
   559  0020                     __pcstackBANK0:	
   560                           ; 1 bytes @ 0x6
   561                           
   562  0020                     ?___wmul:
   563  0020                     ?___awdiv:	
   564                           ; 2 bytes @ 0x0
   565                           
   566  0020                     ?___awmod:	
   567                           ; 2 bytes @ 0x0
   568                           
   569  0020                     ?___lwdiv:	
   570                           ; 2 bytes @ 0x0
   571                           
   572  0020                     Lcd_Cmd@a:	
   573                           ; 2 bytes @ 0x0
   574                           
   575  0020                     LCD_cmd@y:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0020                     LCD_data@y:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0020                     Lcd_Write_String@i:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0020                     ___wmul@multiplier:	
   585                           ; 2 bytes @ 0x0
   586                           
   587  0020                     ___awdiv@divisor:	
   588                           ; 2 bytes @ 0x0
   589                           
   590  0020                     ___awmod@divisor:	
   591                           ; 2 bytes @ 0x0
   592                           
   593  0020                     ___lwdiv@divisor:	
   594                           ; 2 bytes @ 0x0
   595                           
   596                           
   597                           ; 2 bytes @ 0x0
   598  0020                     	ds	1
   599  0021                     ?_Lcd_Set_Cursor:
   600  0021                     Lcd_Set_Cursor@b:	
   601                           ; 1 bytes @ 0x1
   602                           
   603                           
   604                           ; 1 bytes @ 0x1
   605  0021                     	ds	1
   606  0022                     ??_Lcd_Set_Cursor:
   607  0022                     Lcd_Write_String@a:	
   608                           ; 1 bytes @ 0x2
   609                           
   610  0022                     ___wmul@multiplicand:	
   611                           ; 1 bytes @ 0x2
   612                           
   613  0022                     ___awdiv@dividend:	
   614                           ; 2 bytes @ 0x2
   615                           
   616  0022                     ___awmod@dividend:	
   617                           ; 2 bytes @ 0x2
   618                           
   619  0022                     ___lwdiv@dividend:	
   620                           ; 2 bytes @ 0x2
   621                           
   622                           
   623                           ; 2 bytes @ 0x2
   624  0022                     	ds	1
   625  0023                     Lcd_Set_Cursor@a:
   626                           
   627                           ; 1 bytes @ 0x3
   628  0023                     	ds	1
   629  0024                     Lcd_Set_Cursor@temp:
   630  0024                     ___awdiv@counter:	
   631                           ; 1 bytes @ 0x4
   632                           
   633  0024                     ___awmod@counter:	
   634                           ; 1 bytes @ 0x4
   635                           
   636  0024                     ___lwdiv@counter:	
   637                           ; 1 bytes @ 0x4
   638                           
   639                           
   640                           ; 1 bytes @ 0x4
   641  0024                     	ds	1
   642  0025                     ___awdiv@sign:
   643  0025                     ___awmod@sign:	
   644                           ; 1 bytes @ 0x5
   645                           
   646  0025                     ___lwdiv@quotient:	
   647                           ; 1 bytes @ 0x5
   648                           
   649                           
   650                           ; 2 bytes @ 0x5
   651  0025                     	ds	1
   652  0026                     ___awdiv@quotient:
   653                           
   654                           ; 2 bytes @ 0x6
   655  0026                     	ds	1
   656  0027                     ?___lwmod:
   657  0027                     ___lwmod@divisor:	
   658                           ; 2 bytes @ 0x7
   659                           
   660                           
   661                           ; 2 bytes @ 0x7
   662  0027                     	ds	1
   663  0028                     ??_LCD_disp:
   664                           
   665                           ; 1 bytes @ 0x8
   666  0028                     	ds	1
   667  0029                     ___lwmod@dividend:
   668                           
   669                           ; 2 bytes @ 0x9
   670  0029                     	ds	1
   671  002A                     LCD_disp@y:
   672                           
   673                           ; 1 bytes @ 0xA
   674  002A                     	ds	1
   675  002B                     ___lwmod@counter:
   676  002B                     LCD_disp@temp:	
   677                           ; 1 bytes @ 0xB
   678                           
   679                           
   680                           ; 2 bytes @ 0xB
   681  002B                     	ds	1
   682  002C                     ?_sprintf:
   683  002C                     sprintf@f:	
   684                           ; 2 bytes @ 0xC
   685                           
   686                           
   687                           ; 1 bytes @ 0xC
   688  002C                     	ds	3
   689  002F                     ??_sprintf:
   690                           
   691                           ; 1 bytes @ 0xF
   692  002F                     	ds	3
   693  0032                     sprintf@ap:
   694                           
   695                           ; 1 bytes @ 0x12
   696  0032                     	ds	1
   697  0033                     sprintf@prec:
   698                           
   699                           ; 1 bytes @ 0x13
   700  0033                     	ds	1
   701  0034                     sprintf@flag:
   702                           
   703                           ; 1 bytes @ 0x14
   704  0034                     	ds	1
   705  0035                     sprintf@val:
   706                           
   707                           ; 2 bytes @ 0x15
   708  0035                     	ds	2
   709  0037                     sprintf@sp:
   710                           
   711                           ; 1 bytes @ 0x17
   712  0037                     	ds	1
   713  0038                     sprintf@width:
   714                           
   715                           ; 2 bytes @ 0x18
   716  0038                     	ds	2
   717  003A                     sprintf@c:
   718                           
   719                           ; 1 bytes @ 0x1A
   720  003A                     	ds	1
   721  003B                     ??_conversion:
   722                           
   723                           ; 1 bytes @ 0x1B
   724  003B                     	ds	3
   725  003E                     ??_main:
   726                           
   727                           ; 1 bytes @ 0x1E
   728  003E                     	ds	1
   729                           
   730                           	psect	maintext
   731  01AC                     __pmaintext:	
   732 ;;
   733 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   734 ;;
   735 ;; *************** function _main *****************
   736 ;; Defined at:
   737 ;;		line 83 in file "microproyecto2.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : B00/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0
   753 ;;      Temps:          0       1       0       0       0
   754 ;;      Totals:         0       1       0       0       0
   755 ;;Total ram usage:        1 bytes
   756 ;; Hardware stack levels required when called:    4
   757 ;; This function calls:
   758 ;;		_LCD_cmd
   759 ;;		_LCD_disp
   760 ;;		_LCD_init
   761 ;;		_Lcd_Set_Cursor
   762 ;;		_Lcd_Write_String
   763 ;;		_config
   764 ;;		_conversion
   765 ;;		_delay
   766 ;;		_i2c_NACK
   767 ;;		_i2c_init
   768 ;;		_i2c_rep_start
   769 ;;		_i2c_rx
   770 ;;		_i2c_send
   771 ;;		_i2c_stop
   772 ;;		_i2c_wait
   773 ;; This function is called by:
   774 ;;		Startup code after reset
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           
   779                           ;psect for function _main
   780  01AC                     _main:
   781  01AC                     l2226:	
   782                           ;incstack = 0
   783                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   784                           
   785                           
   786                           ;microproyecto2.c: 86:     config();
   787  01AC  120A  118A  24EA  120A  118A  	fcall	_config
   788                           
   789                           ;microproyecto2.c: 87:  LCD_init();
   790  01B1  120A  118A  2445  120A  118A  	fcall	_LCD_init
   791                           
   792                           ;microproyecto2.c: 88:     Lcd_Set_Cursor(1,1);
   793  01B6  1283               	bcf	3,5	;RP0=0, select bank0
   794  01B7  1303               	bcf	3,6	;RP1=0, select bank0
   795  01B8  01A1               	clrf	Lcd_Set_Cursor@b
   796  01B9  0AA1               	incf	Lcd_Set_Cursor@b,f
   797  01BA  3001               	movlw	1
   798  01BB  120A  118A  2511  120A  118A  	fcall	_Lcd_Set_Cursor
   799  01C0                     l2228:
   800                           
   801                           ;microproyecto2.c: 89:     Lcd_Write_String("Temperatura");
   802  01C0  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   803  01C1  120A  118A  249A  120A  118A  	fcall	_Lcd_Write_String
   804  01C6                     l2230:
   805                           
   806                           ;microproyecto2.c: 90:     Lcd_Set_Cursor(2,7);
   807  01C6  3007               	movlw	7
   808  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   809  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   810  01C9  00BE               	movwf	??_main
   811  01CA  083E               	movf	??_main,w
   812  01CB  00A1               	movwf	Lcd_Set_Cursor@b
   813  01CC  3002               	movlw	2
   814  01CD  120A  118A  2511  120A  118A  	fcall	_Lcd_Set_Cursor
   815                           
   816                           ;microproyecto2.c: 91:     Lcd_Write_String("Grados");
   817  01D2  3017               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   818  01D3  120A  118A  249A  120A  118A  	fcall	_Lcd_Write_String
   819  01D8                     l2232:
   820                           
   821                           ;microproyecto2.c: 92:  delay(6500);
   822  01D8  3064               	movlw	100
   823  01D9  00F4               	movwf	delay@x
   824  01DA  3019               	movlw	25
   825  01DB  00F5               	movwf	delay@x+1
   826  01DC  120A  118A  2606  120A  118A  	fcall	_delay
   827  01E1                     l2234:
   828                           
   829                           ;microproyecto2.c: 93:  i2c_init();
   830  01E1  120A  118A  2572  120A  118A  	fcall	_i2c_init
   831  01E6                     l2236:
   832                           
   833                           ;microproyecto2.c: 94:  delay(6500);
   834  01E6  3064               	movlw	100
   835  01E7  00F4               	movwf	delay@x
   836  01E8  3019               	movlw	25
   837  01E9  00F5               	movwf	delay@x+1
   838  01EA  120A  118A  2606  120A  118A  	fcall	_delay
   839  01EF                     l2238:
   840                           
   841                           ;microproyecto2.c: 96:  {;microproyecto2.c: 98:   LCD_cmd(0x86);
   842  01EF  3086               	movlw	134
   843  01F0  120A  118A  2555  120A  118A  	fcall	_LCD_cmd
   844  01F5                     l2240:
   845                           
   846                           ;microproyecto2.c: 100:   i2c_rep_start();
   847  01F5  120A  118A  263E  120A  118A  	fcall	_i2c_rep_start
   848  01FA                     l2242:
   849                           
   850                           ;microproyecto2.c: 101:   delay(4);
   851  01FA  3004               	movlw	4
   852  01FB  00F4               	movwf	delay@x
   853  01FC  3000               	movlw	0
   854  01FD  00F5               	movwf	delay@x+1
   855  01FE  120A  118A  2606  120A  118A  	fcall	_delay
   856  0203                     l2244:
   857                           
   858                           ;microproyecto2.c: 103:   i2c_send(0x90);
   859  0203  3090               	movlw	144
   860  0204  120A  118A  25C5  120A  118A  	fcall	_i2c_send
   861  0209                     l2246:
   862                           
   863                           ;microproyecto2.c: 106:   i2c_rep_start();
   864  0209  120A  118A  263E  120A  118A  	fcall	_i2c_rep_start
   865  020E                     l2248:
   866                           
   867                           ;microproyecto2.c: 107:   delay(4);
   868  020E  3004               	movlw	4
   869  020F  00F4               	movwf	delay@x
   870  0210  3000               	movlw	0
   871  0211  00F5               	movwf	delay@x+1
   872  0212  120A  118A  2606  120A  118A  	fcall	_delay
   873  0217                     l2250:
   874                           
   875                           ;microproyecto2.c: 109:   SSPBUF = 0x91;
   876  0217  3091               	movlw	145
   877  0218  1283               	bcf	3,5	;RP0=0, select bank0
   878  0219  1303               	bcf	3,6	;RP1=0, select bank0
   879  021A  0093               	movwf	19	;volatile
   880  021B                     l2252:
   881                           
   882                           ;microproyecto2.c: 110:   i2c_wait();
   883  021B  120A  118A  2636  120A  118A  	fcall	_i2c_wait
   884  0220                     l2254:
   885                           
   886                           ;microproyecto2.c: 111:   delay(4);
   887  0220  3004               	movlw	4
   888  0221  00F4               	movwf	delay@x
   889  0222  3000               	movlw	0
   890  0223  00F5               	movwf	delay@x+1
   891  0224  120A  118A  2606  120A  118A  	fcall	_delay
   892  0229                     l2256:
   893                           
   894                           ;microproyecto2.c: 113:   r = i2c_rx();
   895  0229  120A  118A  2622  120A  118A  	fcall	_i2c_rx
   896  022E  1283               	bcf	3,5	;RP0=0, select bank0
   897  022F  1303               	bcf	3,6	;RP1=0, select bank0
   898  0230  00BE               	movwf	??_main
   899  0231  083E               	movf	??_main,w
   900  0232  00C6               	movwf	_r
   901  0233                     l2258:
   902                           
   903                           ;microproyecto2.c: 114:   i2c_wait();
   904  0233  120A  118A  2636  120A  118A  	fcall	_i2c_wait
   905  0238                     l2260:
   906                           
   907                           ;microproyecto2.c: 116:   i2c_NACK();
   908  0238  120A  118A  262D  120A  118A  	fcall	_i2c_NACK
   909  023D                     l2262:
   910                           
   911                           ;microproyecto2.c: 117:   delay(4);
   912  023D  3004               	movlw	4
   913  023E  00F4               	movwf	delay@x
   914  023F  3000               	movlw	0
   915  0240  00F5               	movwf	delay@x+1
   916  0241  120A  118A  2606  120A  118A  	fcall	_delay
   917  0246                     l2264:
   918                           
   919                           ;microproyecto2.c: 119:   i2c_stop();
   920  0246  120A  118A  2615  120A  118A  	fcall	_i2c_stop
   921  024B                     l2266:
   922                           
   923                           ;microproyecto2.c: 120:   delay(4);
   924  024B  3004               	movlw	4
   925  024C  00F4               	movwf	delay@x
   926  024D  3000               	movlw	0
   927  024E  00F5               	movwf	delay@x+1
   928  024F  120A  118A  2606  120A  118A  	fcall	_delay
   929  0254                     l2268:
   930                           
   931                           ;microproyecto2.c: 122:         Lcd_Set_Cursor(2,4);
   932  0254  3004               	movlw	4
   933  0255  1283               	bcf	3,5	;RP0=0, select bank0
   934  0256  1303               	bcf	3,6	;RP1=0, select bank0
   935  0257  00BE               	movwf	??_main
   936  0258  083E               	movf	??_main,w
   937  0259  00A1               	movwf	Lcd_Set_Cursor@b
   938  025A  3002               	movlw	2
   939  025B  120A  118A  2511  120A  118A  	fcall	_Lcd_Set_Cursor
   940  0260                     l2270:
   941                           
   942                           ;microproyecto2.c: 123:   LCD_disp(r);
   943  0260  1283               	bcf	3,5	;RP0=0, select bank0
   944  0261  1303               	bcf	3,6	;RP1=0, select bank0
   945  0262  0846               	movf	_r,w
   946  0263  120A  118A  2335  120A  118A  	fcall	_LCD_disp
   947  0268                     l2272:
   948                           
   949                           ;microproyecto2.c: 124:         conversion();
   950  0268  120A  118A  258C  120A  118A  	fcall	_conversion
   951  026D  29EF               	goto	l2238
   952  026E  120A  118A  280E   	ljmp	start
   953  0271                     __end_of_main:
   954                           
   955                           	psect	text1
   956  0615                     __ptext1:	
   957 ;; *************** function _i2c_stop *****************
   958 ;; Defined at:
   959 ;;		line 42 in file "./I2C.h"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		status,2, status,0, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0
   976 ;;      Totals:         0       0       0       0       0
   977 ;;Total ram usage:        0 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    2
   980 ;; This function calls:
   981 ;;		_i2c_wait
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _i2c_stop
   989  0615                     _i2c_stop:
   990  0615                     l1732:	
   991                           ;incstack = 0
   992                           ; Regs used in _i2c_stop: [status,2+status,0+pclath+cstack]
   993                           
   994                           
   995                           ;./I2C.h: 44:  i2c_wait();
   996  0615  120A  118A  2636  120A  118A  	fcall	_i2c_wait
   997  061A                     l1734:
   998                           
   999                           ;./I2C.h: 45:  PEN = 1;
  1000  061A  1683               	bsf	3,5	;RP0=1, select bank1
  1001  061B  1303               	bcf	3,6	;RP1=0, select bank1
  1002  061C  1511               	bsf	17,2	;volatile
  1003  061D                     l116:	
  1004                           ;./I2C.h: 46:  while(PEN);
  1005                           
  1006  061D  1911               	btfsc	17,2	;volatile
  1007  061E  2E20               	goto	u1271
  1008  061F  2E21               	goto	u1270
  1009  0620                     u1271:
  1010  0620  2E1D               	goto	l116
  1011  0621                     u1270:
  1012  0621                     l119:
  1013  0621  0008               	return
  1014  0622                     __end_of_i2c_stop:
  1015                           
  1016                           	psect	text2
  1017  05C5                     __ptext2:	
  1018 ;; *************** function _i2c_send *****************
  1019 ;; Defined at:
  1020 ;;		line 56 in file "./I2C.h"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;  c               1    wreg     unsigned char 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  c               1    4[COMMON] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      unsigned char 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0, pclath, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1034 ;;      Params:         0       0       0       0       0
  1035 ;;      Locals:         1       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0
  1037 ;;      Totals:         1       0       0       0       0
  1038 ;;Total ram usage:        1 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    2
  1041 ;; This function calls:
  1042 ;;		_i2c_wait
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           
  1049                           ;psect for function _i2c_send
  1050  05C5                     _i2c_send:
  1051                           
  1052                           ;incstack = 0
  1053                           ; Regs used in _i2c_send: [wreg+status,2+status,0+pclath+cstack]
  1054                           ;i2c_send@c stored from wreg
  1055  05C5  00F4               	movwf	i2c_send@c
  1056  05C6                     l1742:
  1057                           
  1058                           ;./I2C.h: 56: unsigned char i2c_send(unsigned char c);./I2C.h: 57: {;./I2C.h: 58:  SSPBU
      +                          F = c;
  1059  05C6  0874               	movf	i2c_send@c,w
  1060  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  1061  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  1062  05C9  0093               	movwf	19	;volatile
  1063  05CA                     l128:	
  1064                           ;./I2C.h: 59:  while(BF);
  1065                           
  1066  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  1067  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  1068  05CC  1814               	btfsc	20,0	;volatile
  1069  05CD  2DCF               	goto	u1291
  1070  05CE  2DD0               	goto	u1290
  1071  05CF                     u1291:
  1072  05CF  2DCA               	goto	l128
  1073  05D0                     u1290:
  1074  05D0                     l1744:
  1075                           
  1076                           ;./I2C.h: 60:  i2c_wait();
  1077  05D0  120A  118A  2636  120A  118A  	fcall	_i2c_wait
  1078  05D5                     l131:
  1079  05D5  0008               	return
  1080  05D6                     __end_of_i2c_send:
  1081                           
  1082                           	psect	text3
  1083  0636                     __ptext3:	
  1084 ;; *************** function _i2c_wait *****************
  1085 ;; Defined at:
  1086 ;;		line 23 in file "./I2C.h"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		None
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1100 ;;      Params:         0       0       0       0       0
  1101 ;;      Locals:         0       0       0       0       0
  1102 ;;      Temps:          0       0       0       0       0
  1103 ;;      Totals:         0       0       0       0       0
  1104 ;;Total ram usage:        0 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    1
  1107 ;; This function calls:
  1108 ;;		Nothing
  1109 ;; This function is called by:
  1110 ;;		_i2c_stop
  1111 ;;		_i2c_send
  1112 ;;		_main
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           
  1117                           ;psect for function _i2c_wait
  1118  0636                     _i2c_wait:
  1119  0636                     l1472:	
  1120                           ;incstack = 0
  1121                           ; Regs used in _i2c_wait: []
  1122                           
  1123  0636                     l98:	
  1124                           ;./I2C.h: 25:  while(SSPIF==0);
  1125                           
  1126  0636  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0637  1303               	bcf	3,6	;RP1=0, select bank0
  1128  0638  1D8C               	btfss	12,3	;volatile
  1129  0639  2E3B               	goto	u911
  1130  063A  2E3C               	goto	u910
  1131  063B                     u911:
  1132  063B  2E36               	goto	l98
  1133  063C                     u910:
  1134  063C                     l100:
  1135                           
  1136                           ;./I2C.h: 26:  SSPIF = 0;
  1137  063C  118C               	bcf	12,3	;volatile
  1138  063D                     l101:
  1139  063D  0008               	return
  1140  063E                     __end_of_i2c_wait:
  1141                           
  1142                           	psect	text4
  1143  0622                     __ptext4:	
  1144 ;; *************** function _i2c_rx *****************
  1145 ;; Defined at:
  1146 ;;		line 49 in file "./I2C.h"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      unsigned char 
  1153 ;; Registers used:
  1154 ;;		wreg
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0
  1163 ;;      Totals:         0       0       0       0       0
  1164 ;;Total ram usage:        0 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    1
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _i2c_rx
  1176  0622                     _i2c_rx:
  1177  0622                     l1736:	
  1178                           ;incstack = 0
  1179                           ; Regs used in _i2c_rx: [wreg]
  1180                           
  1181                           
  1182                           ;./I2C.h: 51:  RCEN = 1;
  1183  0622  1683               	bsf	3,5	;RP0=1, select bank1
  1184  0623  1303               	bcf	3,6	;RP1=0, select bank1
  1185  0624  1591               	bsf	17,3	;volatile
  1186  0625                     l122:	
  1187                           ;./I2C.h: 52:  while(!BF);
  1188                           
  1189  0625  1C14               	btfss	20,0	;volatile
  1190  0626  2E28               	goto	u1281
  1191  0627  2E29               	goto	u1280
  1192  0628                     u1281:
  1193  0628  2E25               	goto	l122
  1194  0629                     u1280:
  1195  0629                     l1738:
  1196                           
  1197                           ;./I2C.h: 53:  return SSPBUF;
  1198  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1199  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1200  062B  0813               	movf	19,w	;volatile
  1201  062C                     l125:
  1202  062C  0008               	return
  1203  062D                     __end_of_i2c_rx:
  1204                           
  1205                           	psect	text5
  1206  063E                     __ptext5:	
  1207 ;; *************** function _i2c_rep_start *****************
  1208 ;; Defined at:
  1209 ;;		line 29 in file "./I2C.h"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		None
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    1
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           
  1238                           ;psect for function _i2c_rep_start
  1239  063E                     _i2c_rep_start:
  1240  063E                     l1728:	
  1241                           ;incstack = 0
  1242                           ; Regs used in _i2c_rep_start: []
  1243                           
  1244                           
  1245                           ;./I2C.h: 31:  RSEN = 1;
  1246  063E  1683               	bsf	3,5	;RP0=1, select bank1
  1247  063F  1303               	bcf	3,6	;RP1=0, select bank1
  1248  0640  1491               	bsf	17,1	;volatile
  1249  0641                     l104:	
  1250                           ;./I2C.h: 32:  while(RSEN);
  1251                           
  1252  0641  1891               	btfsc	17,1	;volatile
  1253  0642  2E44               	goto	u1251
  1254  0643  2E45               	goto	u1250
  1255  0644                     u1251:
  1256  0644  2E41               	goto	l104
  1257  0645                     u1250:
  1258  0645                     l107:
  1259  0645  0008               	return
  1260  0646                     __end_of_i2c_rep_start:
  1261                           
  1262                           	psect	text6
  1263  0572                     __ptext6:	
  1264 ;; *************** function _i2c_init *****************
  1265 ;; Defined at:
  1266 ;;		line 5 in file "./I2C.h"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       0       0       0       0
  1281 ;;      Locals:         0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0
  1283 ;;      Totals:         0       0       0       0       0
  1284 ;;Total ram usage:        0 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    1
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           
  1295                           ;psect for function _i2c_init
  1296  0572                     _i2c_init:
  1297  0572                     l1716:	
  1298                           ;incstack = 0
  1299                           ; Regs used in _i2c_init: [wreg+status,2]
  1300                           
  1301                           
  1302                           ;./I2C.h: 7:  TRISC3 = 1;
  1303  0572  1683               	bsf	3,5	;RP0=1, select bank1
  1304  0573  1303               	bcf	3,6	;RP1=0, select bank1
  1305  0574  1587               	bsf	7,3	;volatile
  1306                           
  1307                           ;./I2C.h: 8:  TRISC4 = 1;
  1308  0575  1607               	bsf	7,4	;volatile
  1309  0576                     l1718:
  1310                           
  1311                           ;./I2C.h: 9:  SSPBUF = 0x00;
  1312  0576  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0577  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0578  0193               	clrf	19	;volatile
  1315  0579                     l1720:
  1316                           
  1317                           ;./I2C.h: 10:  SSPSTAT = 0xc0;
  1318  0579  30C0               	movlw	192
  1319  057A  1683               	bsf	3,5	;RP0=1, select bank1
  1320  057B  1303               	bcf	3,6	;RP1=0, select bank1
  1321  057C  0094               	movwf	20	;volatile
  1322  057D                     l1722:
  1323                           
  1324                           ;./I2C.h: 11:  SSPCON = 0x28;
  1325  057D  3028               	movlw	40
  1326  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1327  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1328  0580  0094               	movwf	20	;volatile
  1329                           
  1330                           ;./I2C.h: 12:  SSPCON2 = 0x00;
  1331  0581  1683               	bsf	3,5	;RP0=1, select bank1
  1332  0582  1303               	bcf	3,6	;RP1=0, select bank1
  1333  0583  0191               	clrf	17	;volatile
  1334  0584                     l1724:
  1335                           
  1336                           ;./I2C.h: 13:  SSPIF = 0;
  1337  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0586  118C               	bcf	12,3	;volatile
  1340  0587                     l1726:
  1341                           
  1342                           ;./I2C.h: 14:  SSPADD = 9;
  1343  0587  3009               	movlw	9
  1344  0588  1683               	bsf	3,5	;RP0=1, select bank1
  1345  0589  1303               	bcf	3,6	;RP1=0, select bank1
  1346  058A  0093               	movwf	19	;volatile
  1347  058B                     l89:
  1348  058B  0008               	return
  1349  058C                     __end_of_i2c_init:
  1350                           
  1351                           	psect	text7
  1352  062D                     __ptext7:	
  1353 ;; *************** function _i2c_NACK *****************
  1354 ;; Defined at:
  1355 ;;		line 35 in file "./I2C.h"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		None
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0
  1372 ;;      Totals:         0       0       0       0       0
  1373 ;;Total ram usage:        0 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    1
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_main
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           
  1384                           ;psect for function _i2c_NACK
  1385  062D                     _i2c_NACK:
  1386  062D                     l1730:	
  1387                           ;incstack = 0
  1388                           ; Regs used in _i2c_NACK: []
  1389                           
  1390                           
  1391                           ;./I2C.h: 37:  ACKDT = 1;
  1392  062D  1683               	bsf	3,5	;RP0=1, select bank1
  1393  062E  1303               	bcf	3,6	;RP1=0, select bank1
  1394  062F  1691               	bsf	17,5	;volatile
  1395                           
  1396                           ;./I2C.h: 38:  ACKEN = 1;
  1397  0630  1611               	bsf	17,4	;volatile
  1398  0631                     l110:	
  1399                           ;./I2C.h: 39:  while(ACKEN);
  1400                           
  1401  0631  1A11               	btfsc	17,4	;volatile
  1402  0632  2E34               	goto	u1261
  1403  0633  2E35               	goto	u1260
  1404  0634                     u1261:
  1405  0634  2E31               	goto	l110
  1406  0635                     u1260:
  1407  0635                     l113:
  1408  0635  0008               	return
  1409  0636                     __end_of_i2c_NACK:
  1410                           
  1411                           	psect	text8
  1412  058C                     __ptext8:	
  1413 ;; *************** function _conversion *****************
  1414 ;; Defined at:
  1415 ;;		line 129 in file "microproyecto2.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;		None
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1429 ;;      Params:         0       0       0       0       0
  1430 ;;      Locals:         0       0       0       0       0
  1431 ;;      Temps:          0       3       0       0       0
  1432 ;;      Totals:         0       3       0       0       0
  1433 ;;Total ram usage:        3 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    3
  1436 ;; This function calls:
  1437 ;;		_sprintf
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           
  1444                           ;psect for function _conversion
  1445  058C                     _conversion:
  1446  058C                     l2206:	
  1447                           ;incstack = 0
  1448                           ; Regs used in _conversion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1449                           
  1450                           
  1451                           ;microproyecto2.c: 130:     sprintf(datos, " %2i ", r);
  1452  058C  301E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1453  058D  1283               	bcf	3,5	;RP0=0, select bank0
  1454  058E  1303               	bcf	3,6	;RP1=0, select bank0
  1455  058F  00BB               	movwf	??_conversion
  1456  0590  083B               	movf	??_conversion,w
  1457  0591  00AC               	movwf	sprintf@f
  1458  0592  0846               	movf	_r,w
  1459  0593  00BC               	movwf	??_conversion+1
  1460  0594  01BD               	clrf	??_conversion+2
  1461  0595  083C               	movf	??_conversion+1,w
  1462  0596  00AD               	movwf	?_sprintf+1
  1463  0597  083D               	movf	??_conversion+2,w
  1464  0598  00AE               	movwf	?_sprintf+2
  1465  0599  3047               	movlw	(low (_datos| 0))& (0+255)
  1466  059A  120A  118A  2024  120A  118A  	fcall	_sprintf
  1467  059F                     l232:
  1468  059F  0008               	return
  1469  05A0                     __end_of_conversion:
  1470                           
  1471                           	psect	text9
  1472  0024                     __ptext9:	
  1473 ;; *************** function _sprintf *****************
  1474 ;; Defined at:
  1475 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  sp              1    wreg     PTR unsigned char 
  1478 ;;		 -> datos(1), 
  1479 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  1480 ;;		 -> STR_3(6), 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  sp              1   23[BANK0 ] PTR unsigned char 
  1483 ;;		 -> datos(1), 
  1484 ;;  tmpval          4    0        struct .
  1485 ;;  width           2   24[BANK0 ] int 
  1486 ;;  val             2   21[BANK0 ] unsigned int 
  1487 ;;  cp              2    0        PTR const unsigned char 
  1488 ;;  len             2    0        unsigned int 
  1489 ;;  c               1   26[BANK0 ] unsigned char 
  1490 ;;  flag            1   20[BANK0 ] unsigned char 
  1491 ;;  prec            1   19[BANK0 ] char 
  1492 ;;  ap              1   18[BANK0 ] PTR void [1]
  1493 ;;		 -> ?_sprintf(2), 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  2   12[BANK0 ] int 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1503 ;;      Params:         0       3       0       0       0
  1504 ;;      Locals:         0       9       0       0       0
  1505 ;;      Temps:          0       3       0       0       0
  1506 ;;      Totals:         0      15       0       0       0
  1507 ;;Total ram usage:       15 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    2
  1510 ;; This function calls:
  1511 ;;		___lwdiv
  1512 ;;		___lwmod
  1513 ;;		___wmul
  1514 ;;		_isdigit
  1515 ;; This function is called by:
  1516 ;;		_conversion
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           
  1521                           ;psect for function _sprintf
  1522  0024                     _sprintf:
  1523                           
  1524                           ;incstack = 0
  1525                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1526                           ;sprintf@sp stored from wreg
  1527  0024  1283               	bcf	3,5	;RP0=0, select bank0
  1528  0025  1303               	bcf	3,6	;RP1=0, select bank0
  1529  0026  00B7               	movwf	sprintf@sp
  1530  0027                     l1994:
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1533  0027  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1534  0028  00AF               	movwf	??_sprintf
  1535  0029  082F               	movf	??_sprintf,w
  1536  002A  00B2               	movwf	sprintf@ap
  1537                           
  1538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1539  002B  2995               	goto	l2076
  1540  002C                     l1996:
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1543  002C  3025               	movlw	37
  1544  002D  063A               	xorwf	sprintf@c,w
  1545  002E  1903               	btfsc	3,2
  1546  002F  2831               	goto	u1521
  1547  0030  2832               	goto	u1520
  1548  0031                     u1521:
  1549  0031  283E               	goto	l2002
  1550  0032                     u1520:
  1551  0032                     l1998:
  1552                           
  1553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1554  0032  083A               	movf	sprintf@c,w
  1555  0033  00AF               	movwf	??_sprintf
  1556  0034  0837               	movf	sprintf@sp,w
  1557  0035  0084               	movwf	4
  1558  0036  082F               	movf	??_sprintf,w
  1559  0037  1383               	bcf	3,7	;select IRP bank0
  1560  0038  0080               	movwf	0
  1561  0039                     l2000:
  1562  0039  3001               	movlw	1
  1563  003A  00AF               	movwf	??_sprintf
  1564  003B  082F               	movf	??_sprintf,w
  1565  003C  07B7               	addwf	sprintf@sp,f
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1568  003D  2995               	goto	l2076
  1569  003E                     l2002:
  1570                           
  1571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1572  003E  01B8               	clrf	sprintf@width
  1573  003F  01B9               	clrf	sprintf@width+1
  1574                           
  1575                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1576  0040  01B4               	clrf	sprintf@flag
  1577  0041                     l2004:
  1578                           
  1579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1580  0041  082C               	movf	sprintf@f,w
  1581  0042  0084               	movwf	4
  1582  0043  120A  118A  2471  120A  118A  	fcall	stringdir
  1583  0048  120A  118A  25B3  120A  118A  	fcall	_isdigit
  1584  004D  1C03               	btfss	3,0
  1585  004E  2850               	goto	u1531
  1586  004F  2851               	goto	u1530
  1587  0050                     u1531:
  1588  0050  2891               	goto	l2018
  1589  0051                     u1530:
  1590  0051                     l2006:
  1591                           
  1592                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1593  0051  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0052  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0053  01B8               	clrf	sprintf@width
  1596  0054  01B9               	clrf	sprintf@width+1
  1597  0055                     l2008:
  1598                           
  1599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1600  0055  300A               	movlw	10
  1601  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1603  0058  00A0               	movwf	___wmul@multiplier
  1604  0059  3000               	movlw	0
  1605  005A  00A1               	movwf	___wmul@multiplier+1
  1606  005B  0839               	movf	sprintf@width+1,w
  1607  005C  00A3               	movwf	___wmul@multiplicand+1
  1608  005D  0838               	movf	sprintf@width,w
  1609  005E  00A2               	movwf	___wmul@multiplicand
  1610  005F  120A  118A  24C3  120A  118A  	fcall	___wmul
  1611  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1612  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1613  0066  0821               	movf	?___wmul+1,w
  1614  0067  00B9               	movwf	sprintf@width+1
  1615  0068  0820               	movf	?___wmul,w
  1616  0069  00B8               	movwf	sprintf@width
  1617  006A                     l2010:
  1618                           
  1619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1620  006A  082C               	movf	sprintf@f,w
  1621  006B  0084               	movwf	4
  1622  006C  120A  118A  2471  120A  118A  	fcall	stringdir
  1623  0071  3ED0               	addlw	208
  1624  0072  00AF               	movwf	??_sprintf
  1625  0073  30FF               	movlw	255
  1626  0074  1803               	skipnc
  1627  0075  3000               	movlw	0
  1628  0076  00B0               	movwf	??_sprintf+1
  1629  0077  082F               	movf	??_sprintf,w
  1630  0078  07B8               	addwf	sprintf@width,f
  1631  0079  1803               	skipnc
  1632  007A  0AB9               	incf	sprintf@width+1,f
  1633  007B  0830               	movf	??_sprintf+1,w
  1634  007C  07B9               	addwf	sprintf@width+1,f
  1635  007D                     l2012:
  1636  007D  3001               	movlw	1
  1637  007E  00AF               	movwf	??_sprintf
  1638  007F  082F               	movf	??_sprintf,w
  1639  0080  07AC               	addwf	sprintf@f,f
  1640  0081                     l2014:
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1643  0081  082C               	movf	sprintf@f,w
  1644  0082  0084               	movwf	4
  1645  0083  120A  118A  2471  120A  118A  	fcall	stringdir
  1646  0088  120A  118A  25B3  120A  118A  	fcall	_isdigit
  1647  008D  1803               	btfsc	3,0
  1648  008E  2890               	goto	u1541
  1649  008F  2891               	goto	u1540
  1650  0090                     u1541:
  1651  0090  2855               	goto	l2008
  1652  0091                     u1540:
  1653  0091                     l2018:
  1654  0091  3001               	movlw	1
  1655  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1657  0094  07AC               	addwf	sprintf@f,f
  1658  0095  30FF               	movlw	-1
  1659  0096  072C               	addwf	sprintf@f,w
  1660  0097  0084               	movwf	4
  1661  0098  120A  118A  2471  120A  118A  	fcall	stringdir
  1662  009D  00BA               	movwf	sprintf@c
  1663  009E  00AF               	movwf	??_sprintf
  1664  009F  01B0               	clrf	??_sprintf+1
  1665                           
  1666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1667                           ; Switch size 1, requested type "simple"
  1668                           ; Number of cases is 1, Range of values is 0 to 0
  1669                           ; switch strategies available:
  1670                           ; Name         Instructions Cycles
  1671                           ; simple_byte            4     3 (average)
  1672                           ; direct_byte           11     8 (fixed)
  1673                           ; jumptable            260     6 (fixed)
  1674                           ;	Chosen strategy is simple_byte
  1675  00A0  0830               	movf	??_sprintf+1,w
  1676  00A1  3A00               	xorlw	0	; case 0
  1677  00A2  1903               	skipnz
  1678  00A3  28A5               	goto	l2294
  1679  00A4  2995               	goto	l2076
  1680  00A5                     l2294:
  1681                           
  1682                           ; Switch size 1, requested type "simple"
  1683                           ; Number of cases is 3, Range of values is 0 to 105
  1684                           ; switch strategies available:
  1685                           ; Name         Instructions Cycles
  1686                           ; simple_byte           10     6 (average)
  1687                           ; jumptable            260     6 (fixed)
  1688                           ;	Chosen strategy is simple_byte
  1689  00A5  082F               	movf	??_sprintf,w
  1690  00A6  3A00               	xorlw	0	; case 0
  1691  00A7  1903               	skipnz
  1692  00A8  29A7               	goto	l2078
  1693  00A9  3A64               	xorlw	100	; case 100
  1694  00AA  1903               	skipnz
  1695  00AB  28B0               	goto	l2020
  1696  00AC  3A0D               	xorlw	13	; case 105
  1697  00AD  1903               	skipnz
  1698  00AE  28B0               	goto	l2020
  1699  00AF  2995               	goto	l2076
  1700  00B0                     l2020:
  1701                           
  1702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1703  00B0  0832               	movf	sprintf@ap,w
  1704  00B1  0084               	movwf	4
  1705  00B2  1383               	bcf	3,7	;select IRP bank0
  1706  00B3  0800               	movf	0,w
  1707  00B4  00B5               	movwf	sprintf@val
  1708  00B5  0A84               	incf	4,f
  1709  00B6  0800               	movf	0,w
  1710  00B7  00B6               	movwf	sprintf@val+1
  1711  00B8                     l2022:
  1712  00B8  3002               	movlw	2
  1713  00B9  00AF               	movwf	??_sprintf
  1714  00BA  082F               	movf	??_sprintf,w
  1715  00BB  07B2               	addwf	sprintf@ap,f
  1716  00BC                     l2024:
  1717                           
  1718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1719  00BC  1FB6               	btfss	sprintf@val+1,7
  1720  00BD  28BF               	goto	u1551
  1721  00BE  28C0               	goto	u1550
  1722  00BF                     u1551:
  1723  00BF  28C9               	goto	l2030
  1724  00C0                     u1550:
  1725  00C0                     l2026:
  1726                           
  1727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1728  00C0  3003               	movlw	3
  1729  00C1  00AF               	movwf	??_sprintf
  1730  00C2  082F               	movf	??_sprintf,w
  1731  00C3  04B4               	iorwf	sprintf@flag,f
  1732  00C4                     l2028:
  1733                           
  1734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1735  00C4  09B5               	comf	sprintf@val,f
  1736  00C5  09B6               	comf	sprintf@val+1,f
  1737  00C6  0AB5               	incf	sprintf@val,f
  1738  00C7  1903               	skipnz
  1739  00C8  0AB6               	incf	sprintf@val+1,f
  1740  00C9                     l2030:
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1743  00C9  01BA               	clrf	sprintf@c
  1744  00CA  0ABA               	incf	sprintf@c,f
  1745  00CB                     l2036:
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1748  00CB  083A               	movf	sprintf@c,w
  1749  00CC  00AF               	movwf	??_sprintf
  1750  00CD  072F               	addwf	??_sprintf,w
  1751  00CE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1752  00CF  0084               	movwf	4
  1753  00D0  120A  118A  2471  120A  118A  	fcall	stringdir
  1754  00D5  00B0               	movwf	??_sprintf+1
  1755  00D6  120A  118A  2471  120A  118A  	fcall	stringdir
  1756  00DB  00B1               	movwf	??_sprintf+2
  1757  00DC  0831               	movf	??_sprintf+2,w
  1758  00DD  0236               	subwf	sprintf@val+1,w
  1759  00DE  1D03               	skipz
  1760  00DF  28E2               	goto	u1565
  1761  00E0  0830               	movf	??_sprintf+1,w
  1762  00E1  0235               	subwf	sprintf@val,w
  1763  00E2                     u1565:
  1764  00E2  1803               	skipnc
  1765  00E3  28E5               	goto	u1561
  1766  00E4  28E6               	goto	u1560
  1767  00E5                     u1561:
  1768  00E5  28E7               	goto	l2040
  1769  00E6                     u1560:
  1770  00E6  28F1               	goto	l2042
  1771  00E7                     l2040:
  1772  00E7  3001               	movlw	1
  1773  00E8  00AF               	movwf	??_sprintf
  1774  00E9  082F               	movf	??_sprintf,w
  1775  00EA  07BA               	addwf	sprintf@c,f
  1776  00EB  3005               	movlw	5
  1777  00EC  063A               	xorwf	sprintf@c,w
  1778  00ED  1D03               	btfss	3,2
  1779  00EE  28F0               	goto	u1571
  1780  00EF  28F1               	goto	u1570
  1781  00F0                     u1571:
  1782  00F0  28CB               	goto	l2036
  1783  00F1                     u1570:
  1784  00F1                     l2042:
  1785                           
  1786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  1787  00F1  0838               	movf	sprintf@width,w
  1788  00F2  0439               	iorwf	sprintf@width+1,w
  1789  00F3  1903               	btfsc	3,2
  1790  00F4  28F6               	goto	u1581
  1791  00F5  28F7               	goto	u1580
  1792  00F6                     u1581:
  1793  00F6  2903               	goto	l342
  1794  00F7                     u1580:
  1795  00F7                     l2044:
  1796  00F7  0834               	movf	sprintf@flag,w
  1797  00F8  3903               	andlw	3
  1798  00F9  1903               	btfsc	3,2
  1799  00FA  28FC               	goto	u1591
  1800  00FB  28FD               	goto	u1590
  1801  00FC                     u1591:
  1802  00FC  2903               	goto	l342
  1803  00FD                     u1590:
  1804  00FD                     l2046:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  1807  00FD  30FF               	movlw	255
  1808  00FE  07B8               	addwf	sprintf@width,f
  1809  00FF  1803               	skipnc
  1810  0100  0AB9               	incf	sprintf@width+1,f
  1811  0101  30FF               	movlw	255
  1812  0102  07B9               	addwf	sprintf@width+1,f
  1813  0103                     l342:
  1814                           
  1815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1816  0103  0839               	movf	sprintf@width+1,w
  1817  0104  3A80               	xorlw	128
  1818  0105  3C80               	sublw	128
  1819  0106  1D03               	skipz
  1820  0107  290A               	goto	u1605
  1821  0108  0838               	movf	sprintf@width,w
  1822  0109  023A               	subwf	sprintf@c,w
  1823  010A                     u1605:
  1824  010A  1803               	skipnc
  1825  010B  290D               	goto	u1601
  1826  010C  290E               	goto	u1600
  1827  010D                     u1601:
  1828  010D  291A               	goto	l2050
  1829  010E                     u1600:
  1830  010E                     l2048:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1833  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1834  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0110  083A               	movf	sprintf@c,w
  1836  0111  00AF               	movwf	??_sprintf
  1837  0112  01B0               	clrf	??_sprintf+1
  1838  0113  082F               	movf	??_sprintf,w
  1839  0114  02B8               	subwf	sprintf@width,f
  1840  0115  0830               	movf	??_sprintf+1,w
  1841  0116  1C03               	skipc
  1842  0117  03B9               	decf	sprintf@width+1,f
  1843  0118  02B9               	subwf	sprintf@width+1,f
  1844  0119  291E               	goto	l2052
  1845  011A                     l2050:
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1848  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1849  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1850  011C  01B8               	clrf	sprintf@width
  1851  011D  01B9               	clrf	sprintf@width+1
  1852  011E                     l2052:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1855  011E  0838               	movf	sprintf@width,w
  1856  011F  0439               	iorwf	sprintf@width+1,w
  1857  0120  1903               	btfsc	3,2
  1858  0121  2923               	goto	u1611
  1859  0122  2924               	goto	u1610
  1860  0123                     u1611:
  1861  0123  293B               	goto	l2060
  1862  0124                     u1610:
  1863  0124                     l2054:
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1866  0124  3020               	movlw	32
  1867  0125  00AF               	movwf	??_sprintf
  1868  0126  0837               	movf	sprintf@sp,w
  1869  0127  0084               	movwf	4
  1870  0128  082F               	movf	??_sprintf,w
  1871  0129  1383               	bcf	3,7	;select IRP bank0
  1872  012A  0080               	movwf	0
  1873  012B                     l2056:
  1874  012B  3001               	movlw	1
  1875  012C  00AF               	movwf	??_sprintf
  1876  012D  082F               	movf	??_sprintf,w
  1877  012E  07B7               	addwf	sprintf@sp,f
  1878  012F                     l2058:
  1879  012F  30FF               	movlw	255
  1880  0130  07B8               	addwf	sprintf@width,f
  1881  0131  1803               	skipnc
  1882  0132  0AB9               	incf	sprintf@width+1,f
  1883  0133  30FF               	movlw	255
  1884  0134  07B9               	addwf	sprintf@width+1,f
  1885  0135  0838               	movf	sprintf@width,w
  1886  0136  0439               	iorwf	sprintf@width+1,w
  1887  0137  1D03               	btfss	3,2
  1888  0138  293A               	goto	u1621
  1889  0139  293B               	goto	u1620
  1890  013A                     u1621:
  1891  013A  2924               	goto	l2054
  1892  013B                     u1620:
  1893  013B                     l2060:
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  1896  013B  0834               	movf	sprintf@flag,w
  1897  013C  3903               	andlw	3
  1898  013D  1903               	btfsc	3,2
  1899  013E  2940               	goto	u1631
  1900  013F  2941               	goto	u1630
  1901  0140                     u1631:
  1902  0140  294C               	goto	l2066
  1903  0141                     u1630:
  1904  0141                     l2062:
  1905                           
  1906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1907  0141  302D               	movlw	45
  1908  0142  00AF               	movwf	??_sprintf
  1909  0143  0837               	movf	sprintf@sp,w
  1910  0144  0084               	movwf	4
  1911  0145  082F               	movf	??_sprintf,w
  1912  0146  1383               	bcf	3,7	;select IRP bank0
  1913  0147  0080               	movwf	0
  1914  0148                     l2064:
  1915  0148  3001               	movlw	1
  1916  0149  00AF               	movwf	??_sprintf
  1917  014A  082F               	movf	??_sprintf,w
  1918  014B  07B7               	addwf	sprintf@sp,f
  1919  014C                     l2066:
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1922  014C  083A               	movf	sprintf@c,w
  1923  014D  00AF               	movwf	??_sprintf
  1924  014E  082F               	movf	??_sprintf,w
  1925  014F  00B3               	movwf	sprintf@prec
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1928  0150  298C               	goto	l2074
  1929  0151                     l2068:
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1932  0151  300A               	movlw	10
  1933  0152  00A7               	movwf	___lwmod@divisor
  1934  0153  3000               	movlw	0
  1935  0154  00A8               	movwf	___lwmod@divisor+1
  1936  0155  0833               	movf	sprintf@prec,w
  1937  0156  00AF               	movwf	??_sprintf
  1938  0157  072F               	addwf	??_sprintf,w
  1939  0158  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1940  0159  0084               	movwf	4
  1941  015A  120A  118A  2471  120A  118A  	fcall	stringdir
  1942  015F  00A0               	movwf	___lwdiv@divisor
  1943  0160  120A  118A  2471  120A  118A  	fcall	stringdir
  1944  0165  00A1               	movwf	___lwdiv@divisor+1
  1945  0166  0836               	movf	sprintf@val+1,w
  1946  0167  00A3               	movwf	___lwdiv@dividend+1
  1947  0168  0835               	movf	sprintf@val,w
  1948  0169  00A2               	movwf	___lwdiv@dividend
  1949  016A  120A  118A  2385  120A  118A  	fcall	___lwdiv
  1950  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0171  0821               	movf	?___lwdiv+1,w
  1953  0172  00AA               	movwf	___lwmod@dividend+1
  1954  0173  0820               	movf	?___lwdiv,w
  1955  0174  00A9               	movwf	___lwmod@dividend
  1956  0175  120A  118A  2409  120A  118A  	fcall	___lwmod
  1957  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1958  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1959  017C  0827               	movf	?___lwmod,w
  1960  017D  3E30               	addlw	48
  1961  017E  00B0               	movwf	??_sprintf+1
  1962  017F  0830               	movf	??_sprintf+1,w
  1963  0180  00BA               	movwf	sprintf@c
  1964  0181                     l2070:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1967  0181  083A               	movf	sprintf@c,w
  1968  0182  00AF               	movwf	??_sprintf
  1969  0183  0837               	movf	sprintf@sp,w
  1970  0184  0084               	movwf	4
  1971  0185  082F               	movf	??_sprintf,w
  1972  0186  1383               	bcf	3,7	;select IRP bank0
  1973  0187  0080               	movwf	0
  1974  0188                     l2072:
  1975  0188  3001               	movlw	1
  1976  0189  00AF               	movwf	??_sprintf
  1977  018A  082F               	movf	??_sprintf,w
  1978  018B  07B7               	addwf	sprintf@sp,f
  1979  018C                     l2074:
  1980                           
  1981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1982  018C  30FF               	movlw	255
  1983  018D  00AF               	movwf	??_sprintf
  1984  018E  082F               	movf	??_sprintf,w
  1985  018F  07B3               	addwf	sprintf@prec,f
  1986  0190  0A33               	incf	sprintf@prec,w
  1987  0191  1D03               	btfss	3,2
  1988  0192  2994               	goto	u1641
  1989  0193  2995               	goto	u1640
  1990  0194                     u1641:
  1991  0194  2951               	goto	l2068
  1992  0195                     u1640:
  1993  0195                     l2076:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1996  0195  3001               	movlw	1
  1997  0196  07AC               	addwf	sprintf@f,f
  1998  0197  30FF               	movlw	-1
  1999  0198  072C               	addwf	sprintf@f,w
  2000  0199  0084               	movwf	4
  2001  019A  120A  118A  2471  120A  118A  	fcall	stringdir
  2002  019F  00AF               	movwf	??_sprintf
  2003  01A0  082F               	movf	??_sprintf,w
  2004  01A1  00BA               	movwf	sprintf@c
  2005  01A2  083A               	movf	sprintf@c,w
  2006  01A3  1D03               	btfss	3,2
  2007  01A4  29A6               	goto	u1651
  2008  01A5  29A7               	goto	u1650
  2009  01A6                     u1651:
  2010  01A6  282C               	goto	l1996
  2011  01A7                     u1650:
  2012  01A7                     l2078:
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2015  01A7  0837               	movf	sprintf@sp,w
  2016  01A8  0084               	movwf	4
  2017  01A9  1383               	bcf	3,7	;select IRP bank0
  2018  01AA  0180               	clrf	0
  2019  01AB                     l353:
  2020  01AB  0008               	return
  2021  01AC                     __end_of_sprintf:
  2022                           
  2023                           	psect	text10
  2024  05B3                     __ptext10:	
  2025 ;; *************** function _isdigit *****************
  2026 ;; Defined at:
  2027 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  c               1    wreg     unsigned char 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  c               1    5[COMMON] unsigned char 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;		None               void
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2041 ;;      Params:         0       0       0       0       0
  2042 ;;      Locals:         2       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0
  2044 ;;      Totals:         2       0       0       0       0
  2045 ;;Total ram usage:        2 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; Hardware stack levels required when called:    1
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_sprintf
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function _isdigit
  2057  05B3                     _isdigit:
  2058                           
  2059                           ;incstack = 0
  2060                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2061                           ;isdigit@c stored from wreg
  2062  05B3  00F5               	movwf	isdigit@c
  2063  05B4                     l1398:
  2064  05B4  01F4               	clrf	_isdigit$862
  2065  05B5                     l1400:
  2066  05B5  303A               	movlw	58
  2067  05B6  0275               	subwf	isdigit@c,w
  2068  05B7  1803               	skipnc
  2069  05B8  2DBA               	goto	u721
  2070  05B9  2DBB               	goto	u720
  2071  05BA                     u721:
  2072  05BA  2DC3               	goto	l1406
  2073  05BB                     u720:
  2074  05BB                     l1402:
  2075  05BB  3030               	movlw	48
  2076  05BC  0275               	subwf	isdigit@c,w
  2077  05BD  1C03               	skipc
  2078  05BE  2DC0               	goto	u731
  2079  05BF  2DC1               	goto	u730
  2080  05C0                     u731:
  2081  05C0  2DC3               	goto	l1406
  2082  05C1                     u730:
  2083  05C1                     l1404:
  2084  05C1  01F4               	clrf	_isdigit$862
  2085  05C2  0AF4               	incf	_isdigit$862,f
  2086  05C3                     l1406:
  2087  05C3  0C74               	rrf	_isdigit$862,w
  2088  05C4                     l810:
  2089  05C4  0008               	return
  2090  05C5                     __end_of_isdigit:
  2091                           
  2092                           	psect	text11
  2093  04C3                     __ptext11:	
  2094 ;; *************** function ___wmul *****************
  2095 ;; Defined at:
  2096 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2099 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  product         2    4[COMMON] unsigned int 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  2    0[BANK0 ] unsigned int 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       4       0       0       0
  2112 ;;      Locals:         2       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0
  2114 ;;      Totals:         2       4       0       0       0
  2115 ;;Total ram usage:        6 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    1
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_sprintf
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function ___wmul
  2127  04C3                     ___wmul:
  2128  04C3                     l1918:	
  2129                           ;incstack = 0
  2130                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2131                           
  2132  04C3  01F4               	clrf	___wmul@product
  2133  04C4  01F5               	clrf	___wmul@product+1
  2134  04C5                     l1920:
  2135  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2136  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2137  04C7  1C20               	btfss	___wmul@multiplier,0
  2138  04C8  2CCA               	goto	u1411
  2139  04C9  2CCB               	goto	u1410
  2140  04CA                     u1411:
  2141  04CA  2CD1               	goto	l357
  2142  04CB                     u1410:
  2143  04CB                     l1922:
  2144  04CB  0822               	movf	___wmul@multiplicand,w
  2145  04CC  07F4               	addwf	___wmul@product,f
  2146  04CD  1803               	skipnc
  2147  04CE  0AF5               	incf	___wmul@product+1,f
  2148  04CF  0823               	movf	___wmul@multiplicand+1,w
  2149  04D0  07F5               	addwf	___wmul@product+1,f
  2150  04D1                     l357:
  2151  04D1  3001               	movlw	1
  2152  04D2                     u1425:
  2153  04D2  1003               	clrc
  2154  04D3  0DA2               	rlf	___wmul@multiplicand,f
  2155  04D4  0DA3               	rlf	___wmul@multiplicand+1,f
  2156  04D5  3EFF               	addlw	-1
  2157  04D6  1D03               	skipz
  2158  04D7  2CD2               	goto	u1425
  2159  04D8                     l1924:
  2160  04D8  3001               	movlw	1
  2161  04D9                     u1435:
  2162  04D9  1003               	clrc
  2163  04DA  0CA1               	rrf	___wmul@multiplier+1,f
  2164  04DB  0CA0               	rrf	___wmul@multiplier,f
  2165  04DC  3EFF               	addlw	-1
  2166  04DD  1D03               	skipz
  2167  04DE  2CD9               	goto	u1435
  2168  04DF                     l1926:
  2169  04DF  0820               	movf	___wmul@multiplier,w
  2170  04E0  0421               	iorwf	___wmul@multiplier+1,w
  2171  04E1  1D03               	btfss	3,2
  2172  04E2  2CE4               	goto	u1441
  2173  04E3  2CE5               	goto	u1440
  2174  04E4                     u1441:
  2175  04E4  2CC5               	goto	l1920
  2176  04E5                     u1440:
  2177  04E5                     l1928:
  2178  04E5  0875               	movf	___wmul@product+1,w
  2179  04E6  00A1               	movwf	?___wmul+1
  2180  04E7  0874               	movf	___wmul@product,w
  2181  04E8  00A0               	movwf	?___wmul
  2182  04E9                     l359:
  2183  04E9  0008               	return
  2184  04EA                     __end_of___wmul:
  2185                           
  2186                           	psect	text12
  2187  0409                     __ptext12:	
  2188 ;; *************** function ___lwmod *****************
  2189 ;; Defined at:
  2190 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  divisor         2    7[BANK0 ] unsigned int 
  2193 ;;  dividend        2    9[BANK0 ] unsigned int 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  counter         1   11[BANK0 ] unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  2    7[BANK0 ] unsigned int 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2, status,0
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2205 ;;      Params:         0       4       0       0       0
  2206 ;;      Locals:         0       1       0       0       0
  2207 ;;      Temps:          1       0       0       0       0
  2208 ;;      Totals:         1       5       0       0       0
  2209 ;;Total ram usage:        6 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_sprintf
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           
  2220                           ;psect for function ___lwmod
  2221  0409                     ___lwmod:
  2222  0409                     l1450:	
  2223                           ;incstack = 0
  2224                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2225                           
  2226  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2227  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2228  040B  0827               	movf	___lwmod@divisor,w
  2229  040C  0428               	iorwf	___lwmod@divisor+1,w
  2230  040D  1903               	btfsc	3,2
  2231  040E  2C10               	goto	u851
  2232  040F  2C11               	goto	u850
  2233  0410                     u851:
  2234  0410  2C40               	goto	l1468
  2235  0411                     u850:
  2236  0411                     l1452:
  2237  0411  01AB               	clrf	___lwmod@counter
  2238  0412  0AAB               	incf	___lwmod@counter,f
  2239  0413  2C1F               	goto	l1458
  2240  0414                     l1454:
  2241  0414  3001               	movlw	1
  2242  0415                     u865:
  2243  0415  1003               	clrc
  2244  0416  0DA7               	rlf	___lwmod@divisor,f
  2245  0417  0DA8               	rlf	___lwmod@divisor+1,f
  2246  0418  3EFF               	addlw	-1
  2247  0419  1D03               	skipz
  2248  041A  2C15               	goto	u865
  2249  041B                     l1456:
  2250  041B  3001               	movlw	1
  2251  041C  00F5               	movwf	??___lwmod
  2252  041D  0875               	movf	??___lwmod,w
  2253  041E  07AB               	addwf	___lwmod@counter,f
  2254  041F                     l1458:
  2255  041F  1FA8               	btfss	___lwmod@divisor+1,7
  2256  0420  2C22               	goto	u871
  2257  0421  2C23               	goto	u870
  2258  0422                     u871:
  2259  0422  2C14               	goto	l1454
  2260  0423                     u870:
  2261  0423                     l1460:
  2262  0423  0828               	movf	___lwmod@divisor+1,w
  2263  0424  022A               	subwf	___lwmod@dividend+1,w
  2264  0425  1D03               	skipz
  2265  0426  2C29               	goto	u885
  2266  0427  0827               	movf	___lwmod@divisor,w
  2267  0428  0229               	subwf	___lwmod@dividend,w
  2268  0429                     u885:
  2269  0429  1C03               	skipc
  2270  042A  2C2C               	goto	u881
  2271  042B  2C2D               	goto	u880
  2272  042C                     u881:
  2273  042C  2C33               	goto	l1464
  2274  042D                     u880:
  2275  042D                     l1462:
  2276  042D  0827               	movf	___lwmod@divisor,w
  2277  042E  02A9               	subwf	___lwmod@dividend,f
  2278  042F  0828               	movf	___lwmod@divisor+1,w
  2279  0430  1C03               	skipc
  2280  0431  03AA               	decf	___lwmod@dividend+1,f
  2281  0432  02AA               	subwf	___lwmod@dividend+1,f
  2282  0433                     l1464:
  2283  0433  3001               	movlw	1
  2284  0434                     u895:
  2285  0434  1003               	clrc
  2286  0435  0CA8               	rrf	___lwmod@divisor+1,f
  2287  0436  0CA7               	rrf	___lwmod@divisor,f
  2288  0437  3EFF               	addlw	-1
  2289  0438  1D03               	skipz
  2290  0439  2C34               	goto	u895
  2291  043A                     l1466:
  2292  043A  3001               	movlw	1
  2293  043B  02AB               	subwf	___lwmod@counter,f
  2294  043C  1D03               	btfss	3,2
  2295  043D  2C3F               	goto	u901
  2296  043E  2C40               	goto	u900
  2297  043F                     u901:
  2298  043F  2C23               	goto	l1460
  2299  0440                     u900:
  2300  0440                     l1468:
  2301  0440  082A               	movf	___lwmod@dividend+1,w
  2302  0441  00A8               	movwf	?___lwmod+1
  2303  0442  0829               	movf	___lwmod@dividend,w
  2304  0443  00A7               	movwf	?___lwmod
  2305  0444                     l639:
  2306  0444  0008               	return
  2307  0445                     __end_of___lwmod:
  2308                           
  2309                           	psect	text13
  2310  0385                     __ptext13:	
  2311 ;; *************** function ___lwdiv *****************
  2312 ;; Defined at:
  2313 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  divisor         2    0[BANK0 ] unsigned int 
  2316 ;;  dividend        2    2[BANK0 ] unsigned int 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  quotient        2    5[BANK0 ] unsigned int 
  2319 ;;  counter         1    4[BANK0 ] unsigned char 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  2    0[BANK0 ] unsigned int 
  2322 ;; Registers used:
  2323 ;;		wreg, status,2, status,0
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2329 ;;      Params:         0       4       0       0       0
  2330 ;;      Locals:         0       3       0       0       0
  2331 ;;      Temps:          1       0       0       0       0
  2332 ;;      Totals:         1       7       0       0       0
  2333 ;;Total ram usage:        8 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    1
  2336 ;; This function calls:
  2337 ;;		Nothing
  2338 ;; This function is called by:
  2339 ;;		_sprintf
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           
  2344                           ;psect for function ___lwdiv
  2345  0385                     ___lwdiv:
  2346  0385                     l1932:	
  2347                           ;incstack = 0
  2348                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2349                           
  2350  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0387  01A5               	clrf	___lwdiv@quotient
  2353  0388  01A6               	clrf	___lwdiv@quotient+1
  2354  0389                     l1934:
  2355  0389  0820               	movf	___lwdiv@divisor,w
  2356  038A  0421               	iorwf	___lwdiv@divisor+1,w
  2357  038B  1903               	btfsc	3,2
  2358  038C  2B8E               	goto	u1451
  2359  038D  2B8F               	goto	u1450
  2360  038E                     u1451:
  2361  038E  2BC6               	goto	l1954
  2362  038F                     u1450:
  2363  038F                     l1936:
  2364  038F  01A4               	clrf	___lwdiv@counter
  2365  0390  0AA4               	incf	___lwdiv@counter,f
  2366  0391  2B9D               	goto	l1942
  2367  0392                     l1938:
  2368  0392  3001               	movlw	1
  2369  0393                     u1465:
  2370  0393  1003               	clrc
  2371  0394  0DA0               	rlf	___lwdiv@divisor,f
  2372  0395  0DA1               	rlf	___lwdiv@divisor+1,f
  2373  0396  3EFF               	addlw	-1
  2374  0397  1D03               	skipz
  2375  0398  2B93               	goto	u1465
  2376  0399                     l1940:
  2377  0399  3001               	movlw	1
  2378  039A  00F4               	movwf	??___lwdiv
  2379  039B  0874               	movf	??___lwdiv,w
  2380  039C  07A4               	addwf	___lwdiv@counter,f
  2381  039D                     l1942:
  2382  039D  1FA1               	btfss	___lwdiv@divisor+1,7
  2383  039E  2BA0               	goto	u1471
  2384  039F  2BA1               	goto	u1470
  2385  03A0                     u1471:
  2386  03A0  2B92               	goto	l1938
  2387  03A1                     u1470:
  2388  03A1                     l1944:
  2389  03A1  3001               	movlw	1
  2390  03A2                     u1485:
  2391  03A2  1003               	clrc
  2392  03A3  0DA5               	rlf	___lwdiv@quotient,f
  2393  03A4  0DA6               	rlf	___lwdiv@quotient+1,f
  2394  03A5  3EFF               	addlw	-1
  2395  03A6  1D03               	skipz
  2396  03A7  2BA2               	goto	u1485
  2397  03A8  0821               	movf	___lwdiv@divisor+1,w
  2398  03A9  0223               	subwf	___lwdiv@dividend+1,w
  2399  03AA  1D03               	skipz
  2400  03AB  2BAE               	goto	u1495
  2401  03AC  0820               	movf	___lwdiv@divisor,w
  2402  03AD  0222               	subwf	___lwdiv@dividend,w
  2403  03AE                     u1495:
  2404  03AE  1C03               	skipc
  2405  03AF  2BB1               	goto	u1491
  2406  03B0  2BB2               	goto	u1490
  2407  03B1                     u1491:
  2408  03B1  2BB9               	goto	l1950
  2409  03B2                     u1490:
  2410  03B2                     l1946:
  2411  03B2  0820               	movf	___lwdiv@divisor,w
  2412  03B3  02A2               	subwf	___lwdiv@dividend,f
  2413  03B4  0821               	movf	___lwdiv@divisor+1,w
  2414  03B5  1C03               	skipc
  2415  03B6  03A3               	decf	___lwdiv@dividend+1,f
  2416  03B7  02A3               	subwf	___lwdiv@dividend+1,f
  2417  03B8                     l1948:
  2418  03B8  1425               	bsf	___lwdiv@quotient,0
  2419  03B9                     l1950:
  2420  03B9  3001               	movlw	1
  2421  03BA                     u1505:
  2422  03BA  1003               	clrc
  2423  03BB  0CA1               	rrf	___lwdiv@divisor+1,f
  2424  03BC  0CA0               	rrf	___lwdiv@divisor,f
  2425  03BD  3EFF               	addlw	-1
  2426  03BE  1D03               	skipz
  2427  03BF  2BBA               	goto	u1505
  2428  03C0                     l1952:
  2429  03C0  3001               	movlw	1
  2430  03C1  02A4               	subwf	___lwdiv@counter,f
  2431  03C2  1D03               	btfss	3,2
  2432  03C3  2BC5               	goto	u1511
  2433  03C4  2BC6               	goto	u1510
  2434  03C5                     u1511:
  2435  03C5  2BA1               	goto	l1944
  2436  03C6                     u1510:
  2437  03C6                     l1954:
  2438  03C6  0826               	movf	___lwdiv@quotient+1,w
  2439  03C7  00A1               	movwf	?___lwdiv+1
  2440  03C8  0825               	movf	___lwdiv@quotient,w
  2441  03C9  00A0               	movwf	?___lwdiv
  2442  03CA                     l629:
  2443  03CA  0008               	return
  2444  03CB                     __end_of___lwdiv:
  2445                           
  2446                           	psect	text14
  2447  04EA                     __ptext14:	
  2448 ;; *************** function _config *****************
  2449 ;; Defined at:
  2450 ;;		line 37 in file "microproyecto2.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0, pclath, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2464 ;;      Params:         0       0       0       0       0
  2465 ;;      Locals:         0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0
  2467 ;;      Totals:         0       0       0       0       0
  2468 ;;Total ram usage:        0 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    2
  2471 ;; This function calls:
  2472 ;;		_eusart_enable_rx_isr
  2473 ;;		_eusart_enable_tx_isr
  2474 ;;		_eusart_init_rx
  2475 ;;		_eusart_init_tx
  2476 ;; This function is called by:
  2477 ;;		_main
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           
  2482                           ;psect for function _config
  2483  04EA                     _config:
  2484  04EA                     l1784:	
  2485                           ;incstack = 0
  2486                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  2487                           
  2488                           
  2489                           ;microproyecto2.c: 39:     ANSEL = 0x03;
  2490  04EA  3003               	movlw	3
  2491  04EB  1683               	bsf	3,5	;RP0=1, select bank3
  2492  04EC  1703               	bsf	3,6	;RP1=1, select bank3
  2493  04ED  0088               	movwf	8	;volatile
  2494  04EE                     l1786:
  2495                           
  2496                           ;microproyecto2.c: 40:     ANSELH = 0x00;
  2497  04EE  0189               	clrf	9	;volatile
  2498  04EF                     l1788:
  2499                           
  2500                           ;microproyecto2.c: 42:     TRISCbits.TRISC7 = 1;
  2501  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2502  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  2503  04F1  1787               	bsf	7,7	;volatile
  2504  04F2                     l1790:
  2505                           
  2506                           ;microproyecto2.c: 43:     TRISCbits.TRISC6 = 1;
  2507  04F2  1707               	bsf	7,6	;volatile
  2508  04F3                     l1792:
  2509                           
  2510                           ;microproyecto2.c: 44:     TRISE = 0b000;
  2511  04F3  0189               	clrf	9	;volatile
  2512  04F4                     l1794:
  2513                           
  2514                           ;microproyecto2.c: 46:     PORTC = 0;
  2515  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2516  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2517  04F6  0187               	clrf	7	;volatile
  2518  04F7                     l1796:
  2519                           
  2520                           ;microproyecto2.c: 47:     PORTE = 0;
  2521  04F7  0189               	clrf	9	;volatile
  2522                           
  2523                           ;microproyecto2.c: 48:     OSCCON = 0b01100001;
  2524  04F8  3061               	movlw	97
  2525  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  2526  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  2527  04FB  008F               	movwf	15	;volatile
  2528  04FC                     l1798:
  2529                           
  2530                           ;microproyecto2.c: 51:     eusart_init_tx();
  2531  04FC  120A  118A  25F7  120A  118A  	fcall	_eusart_init_tx
  2532                           
  2533                           ;microproyecto2.c: 52:     eusart_enable_tx_isr();
  2534  0501  120A  118A  2646  120A  118A  	fcall	_eusart_enable_tx_isr
  2535  0506                     l1800:
  2536                           
  2537                           ;microproyecto2.c: 54:     eusart_init_rx();
  2538  0506  120A  118A  25D6  120A  118A  	fcall	_eusart_init_rx
  2539  050B                     l1802:
  2540                           
  2541                           ;microproyecto2.c: 55:     eusart_enable_rx_isr();
  2542  050B  120A  118A  264C  120A  118A  	fcall	_eusart_enable_rx_isr
  2543  0510                     l212:
  2544  0510  0008               	return
  2545  0511                     __end_of_config:
  2546                           
  2547                           	psect	text15
  2548  05F7                     __ptext15:	
  2549 ;; *************** function _eusart_init_tx *****************
  2550 ;; Defined at:
  2551 ;;		line 14 in file "./usart.h"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;		None
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;		None
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, status,2
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2565 ;;      Params:         0       0       0       0       0
  2566 ;;      Locals:         0       0       0       0       0
  2567 ;;      Temps:          0       0       0       0       0
  2568 ;;      Totals:         0       0       0       0       0
  2569 ;;Total ram usage:        0 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    1
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_config
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           
  2580                           ;psect for function _eusart_init_tx
  2581  05F7                     _eusart_init_tx:
  2582  05F7                     l1510:	
  2583                           ;incstack = 0
  2584                           ; Regs used in _eusart_init_tx: [wreg+status,2]
  2585                           
  2586                           
  2587                           ;./usart.h: 16:     SPBRGH = 0;
  2588  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  2589  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  2590  05F9  019A               	clrf	26	;volatile
  2591  05FA                     l1512:
  2592                           
  2593                           ;./usart.h: 17:     SPBRG = 25;
  2594  05FA  3019               	movlw	25
  2595  05FB  0099               	movwf	25	;volatile
  2596  05FC                     l1514:
  2597                           
  2598                           ;./usart.h: 18:     TXSTAbits.BRGH = 1;
  2599  05FC  1518               	bsf	24,2	;volatile
  2600  05FD                     l1516:
  2601                           
  2602                           ;./usart.h: 20:     TXSTAbits.SYNC = 0;
  2603  05FD  1218               	bcf	24,4	;volatile
  2604  05FE                     l1518:
  2605                           
  2606                           ;./usart.h: 21:     RCSTAbits.SPEN = 1;
  2607  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  2608  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  2609  0600  1798               	bsf	24,7	;volatile
  2610  0601                     l1520:
  2611                           
  2612                           ;./usart.h: 23:     TXSTAbits.TX9 = 0;
  2613  0601  1683               	bsf	3,5	;RP0=1, select bank1
  2614  0602  1303               	bcf	3,6	;RP1=0, select bank1
  2615  0603  1318               	bcf	24,6	;volatile
  2616  0604                     l1522:
  2617                           
  2618                           ;./usart.h: 24:     TXSTAbits.TXEN = 1;
  2619  0604  1698               	bsf	24,5	;volatile
  2620  0605                     l182:
  2621  0605  0008               	return
  2622  0606                     __end_of_eusart_init_tx:
  2623                           
  2624                           	psect	text16
  2625  05D6                     __ptext16:	
  2626 ;; *************** function _eusart_init_rx *****************
  2627 ;; Defined at:
  2628 ;;		line 39 in file "./usart.h"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;		None
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2642 ;;      Params:         0       0       0       0       0
  2643 ;;      Locals:         0       0       0       0       0
  2644 ;;      Temps:          0       0       0       0       0
  2645 ;;      Totals:         0       0       0       0       0
  2646 ;;Total ram usage:        0 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    1
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_config
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           
  2657                           ;psect for function _eusart_init_rx
  2658  05D6                     _eusart_init_rx:
  2659  05D6                     l1526:	
  2660                           ;incstack = 0
  2661                           ; Regs used in _eusart_init_rx: [wreg+status,2]
  2662                           
  2663                           
  2664                           ;./usart.h: 41:     SPBRGH = 0;
  2665  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  2666  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  2667  05D8  019A               	clrf	26	;volatile
  2668  05D9                     l1528:
  2669                           
  2670                           ;./usart.h: 42:     SPBRG = 25;
  2671  05D9  3019               	movlw	25
  2672  05DA  0099               	movwf	25	;volatile
  2673  05DB                     l1530:
  2674                           
  2675                           ;./usart.h: 43:     TXSTAbits.BRGH = 1;
  2676  05DB  1518               	bsf	24,2	;volatile
  2677  05DC                     l1532:
  2678                           
  2679                           ;./usart.h: 45:     TXSTAbits.SYNC = 0;
  2680  05DC  1218               	bcf	24,4	;volatile
  2681  05DD                     l1534:
  2682                           
  2683                           ;./usart.h: 46:     RCSTAbits.SPEN = 1;
  2684  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2685  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2686  05DF  1798               	bsf	24,7	;volatile
  2687  05E0                     l1536:
  2688                           
  2689                           ;./usart.h: 48:     TXSTAbits.TX9 = 0;
  2690  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  2691  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  2692  05E2  1318               	bcf	24,6	;volatile
  2693  05E3                     l1538:
  2694                           
  2695                           ;./usart.h: 49:     RCSTAbits.CREN = 1;
  2696  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  2697  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  2698  05E5  1618               	bsf	24,4	;volatile
  2699  05E6                     l191:
  2700  05E6  0008               	return
  2701  05E7                     __end_of_eusart_init_rx:
  2702                           
  2703                           	psect	text17
  2704  0646                     __ptext17:	
  2705 ;; *************** function _eusart_enable_tx_isr *****************
  2706 ;; Defined at:
  2707 ;;		line 27 in file "./usart.h"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		None
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2721 ;;      Params:         0       0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0
  2724 ;;      Totals:         0       0       0       0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    1
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_config
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           
  2736                           ;psect for function _eusart_enable_tx_isr
  2737  0646                     _eusart_enable_tx_isr:
  2738  0646                     l1524:	
  2739                           ;incstack = 0
  2740                           ; Regs used in _eusart_enable_tx_isr: []
  2741                           
  2742                           
  2743                           ;./usart.h: 29:     INTCONbits.GIE = 1;
  2744  0646  178B               	bsf	11,7	;volatile
  2745                           
  2746                           ;./usart.h: 30:     INTCONbits.PEIE = 1;
  2747  0647  170B               	bsf	11,6	;volatile
  2748                           
  2749                           ;./usart.h: 31:     PIE1bits.TXIE = 1;
  2750  0648  1683               	bsf	3,5	;RP0=1, select bank1
  2751  0649  1303               	bcf	3,6	;RP1=0, select bank1
  2752  064A  160C               	bsf	12,4	;volatile
  2753  064B                     l185:
  2754  064B  0008               	return
  2755  064C                     __end_of_eusart_enable_tx_isr:
  2756                           
  2757                           	psect	text18
  2758  064C                     __ptext18:	
  2759 ;; *************** function _eusart_enable_rx_isr *****************
  2760 ;; Defined at:
  2761 ;;		line 52 in file "./usart.h"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		None
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2775 ;;      Params:         0       0       0       0       0
  2776 ;;      Locals:         0       0       0       0       0
  2777 ;;      Temps:          0       0       0       0       0
  2778 ;;      Totals:         0       0       0       0       0
  2779 ;;Total ram usage:        0 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:    1
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_config
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function _eusart_enable_rx_isr
  2791  064C                     _eusart_enable_rx_isr:
  2792  064C                     l1540:	
  2793                           ;incstack = 0
  2794                           ; Regs used in _eusart_enable_rx_isr: []
  2795                           
  2796                           
  2797                           ;./usart.h: 54:     INTCONbits.GIE = 1;
  2798  064C  178B               	bsf	11,7	;volatile
  2799                           
  2800                           ;./usart.h: 55:     INTCONbits.PEIE = 1;
  2801  064D  170B               	bsf	11,6	;volatile
  2802                           
  2803                           ;./usart.h: 56:     PIE1bits.RCIE = 1;
  2804  064E  1683               	bsf	3,5	;RP0=1, select bank1
  2805  064F  1303               	bcf	3,6	;RP1=0, select bank1
  2806  0650  168C               	bsf	12,5	;volatile
  2807  0651                     l194:
  2808  0651  0008               	return
  2809  0652                     __end_of_eusart_enable_rx_isr:
  2810                           
  2811                           	psect	text19
  2812  049A                     __ptext19:	
  2813 ;; *************** function _Lcd_Write_String *****************
  2814 ;; Defined at:
  2815 ;;		line 58 in file "./LCD.h"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  a               1    wreg     PTR unsigned char 
  2818 ;;		 -> STR_2(7), STR_1(12), 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2821 ;;		 -> STR_2(7), STR_1(12), 
  2822 ;;  i               2    0[BANK0 ] int 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2832 ;;      Params:         0       0       0       0       0
  2833 ;;      Locals:         0       3       0       0       0
  2834 ;;      Temps:          0       0       0       0       0
  2835 ;;      Totals:         0       3       0       0       0
  2836 ;;Total ram usage:        3 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    2
  2839 ;; This function calls:
  2840 ;;		_Lcd_Write_Char
  2841 ;; This function is called by:
  2842 ;;		_main
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function _Lcd_Write_String
  2848  049A                     _Lcd_Write_String:
  2849                           
  2850                           ;incstack = 0
  2851                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2852                           ;Lcd_Write_String@a stored from wreg
  2853  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2854  049B  1303               	bcf	3,6	;RP1=0, select bank0
  2855  049C  00A2               	movwf	Lcd_Write_String@a
  2856  049D                     l2180:
  2857                           
  2858                           ;./LCD.h: 58: void Lcd_Write_String(char *a);./LCD.h: 59: {;./LCD.h: 60:  int i;;./LCD.h
      +                          : 61:  for(i=0;a[i]!='\0';i++)
  2859  049D  01A0               	clrf	Lcd_Write_String@i
  2860  049E  01A1               	clrf	Lcd_Write_String@i+1
  2861  049F  2CB5               	goto	l2186
  2862  04A0                     l2182:
  2863                           
  2864                           ;./LCD.h: 62:      Lcd_Write_Char(a[i]);
  2865  04A0  0820               	movf	Lcd_Write_String@i,w
  2866  04A1  0722               	addwf	Lcd_Write_String@a,w
  2867  04A2  0084               	movwf	4
  2868  04A3  120A  118A  2471  120A  118A  	fcall	stringdir
  2869  04A8  120A  118A  25E7  120A  118A  	fcall	_Lcd_Write_Char
  2870  04AD                     l2184:
  2871  04AD  3001               	movlw	1
  2872  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2873  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2874  04B0  07A0               	addwf	Lcd_Write_String@i,f
  2875  04B1  1803               	skipnc
  2876  04B2  0AA1               	incf	Lcd_Write_String@i+1,f
  2877  04B3  3000               	movlw	0
  2878  04B4  07A1               	addwf	Lcd_Write_String@i+1,f
  2879  04B5                     l2186:
  2880  04B5  0820               	movf	Lcd_Write_String@i,w
  2881  04B6  0722               	addwf	Lcd_Write_String@a,w
  2882  04B7  0084               	movwf	4
  2883  04B8  120A  118A  2471  120A  118A  	fcall	stringdir
  2884  04BD  3A00               	xorlw	0
  2885  04BE  1D03               	skipz
  2886  04BF  2CC1               	goto	u1871
  2887  04C0  2CC2               	goto	u1870
  2888  04C1                     u1871:
  2889  04C1  2CA0               	goto	l2182
  2890  04C2                     u1870:
  2891  04C2                     l158:
  2892  04C2  0008               	return
  2893  04C3                     __end_of_Lcd_Write_String:
  2894                           
  2895                           	psect	text20
  2896  05E7                     __ptext20:	
  2897 ;; *************** function _Lcd_Write_Char *****************
  2898 ;; Defined at:
  2899 ;;		line 50 in file "./LCD.h"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  a               1    wreg     unsigned char 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  a               1    5[COMMON] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2913 ;;      Params:         0       0       0       0       0
  2914 ;;      Locals:         1       0       0       0       0
  2915 ;;      Temps:          1       0       0       0       0
  2916 ;;      Totals:         2       0       0       0       0
  2917 ;;Total ram usage:        2 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    1
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_Lcd_Write_String
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function _Lcd_Write_Char
  2929  05E7                     _Lcd_Write_Char:
  2930                           
  2931                           ;incstack = 0
  2932                           ; Regs used in _Lcd_Write_Char: [wreg]
  2933                           ;Lcd_Write_Char@a stored from wreg
  2934  05E7  00F5               	movwf	Lcd_Write_Char@a
  2935  05E8                     l1966:
  2936                           
  2937                           ;./LCD.h: 51:     PORTDbits.RD2 = 1;
  2938  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  2939  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  2940  05EA  1508               	bsf	8,2	;volatile
  2941  05EB                     l1968:
  2942                           
  2943                           ;./LCD.h: 52:     PORTB = a;
  2944  05EB  0875               	movf	Lcd_Write_Char@a,w
  2945  05EC  0086               	movwf	6	;volatile
  2946  05ED                     l1970:
  2947                           
  2948                           ;./LCD.h: 53:     PORTDbits.RD3=1;
  2949  05ED  1588               	bsf	8,3	;volatile
  2950                           
  2951                           ;./LCD.h: 54:     _delay((unsigned long)((40)*(9000000/4000000.0)));
  2952  05EE  301D               	movlw	29
  2953  05EF  00F4               	movwf	??_Lcd_Write_Char
  2954  05F0                     u1887:
  2955  05F0  0BF4               	decfsz	??_Lcd_Write_Char,f
  2956  05F1  2DF0               	goto	u1887
  2957  05F2  2DF3               	nop2
  2958  05F3                     l1972:
  2959                           
  2960                           ;./LCD.h: 55:     PORTDbits.RD3=0;
  2961  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  2962  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  2963  05F5  1188               	bcf	8,3	;volatile
  2964  05F6                     l152:
  2965  05F6  0008               	return
  2966  05F7                     __end_of_Lcd_Write_Char:
  2967                           
  2968                           	psect	text21
  2969  0511                     __ptext21:	
  2970 ;; *************** function _Lcd_Set_Cursor *****************
  2971 ;; Defined at:
  2972 ;;		line 29 in file "./LCD.h"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  a               1    wreg     unsigned char 
  2975 ;;  b               1    1[BANK0 ] unsigned char 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  a               1    3[BANK0 ] unsigned char 
  2978 ;;  temp            1    4[BANK0 ] unsigned char 
  2979 ;;  y               1    0        unsigned char 
  2980 ;;  z               1    0        unsigned char 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0, pclath, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2990 ;;      Params:         0       1       0       0       0
  2991 ;;      Locals:         0       2       0       0       0
  2992 ;;      Temps:          0       1       0       0       0
  2993 ;;      Totals:         0       4       0       0       0
  2994 ;;Total ram usage:        4 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    2
  2997 ;; This function calls:
  2998 ;;		_Lcd_Cmd
  2999 ;; This function is called by:
  3000 ;;		_main
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           
  3005                           ;psect for function _Lcd_Set_Cursor
  3006  0511                     _Lcd_Set_Cursor:
  3007                           
  3008                           ;incstack = 0
  3009                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3010                           ;Lcd_Set_Cursor@a stored from wreg
  3011  0511  1283               	bcf	3,5	;RP0=0, select bank0
  3012  0512  1303               	bcf	3,6	;RP1=0, select bank0
  3013  0513  00A3               	movwf	Lcd_Set_Cursor@a
  3014  0514                     l2168:
  3015                           
  3016                           ;./LCD.h: 29: void Lcd_Set_Cursor(char a, char b);./LCD.h: 30: {;./LCD.h: 31:  char temp
      +                          ,z,y;;./LCD.h: 32:  if(a == 1)
  3017  0514  0323               	decf	Lcd_Set_Cursor@a,w
  3018  0515  1D03               	btfss	3,2
  3019  0516  2D18               	goto	u1851
  3020  0517  2D19               	goto	u1850
  3021  0518                     u1851:
  3022  0518  2D25               	goto	l2174
  3023  0519                     u1850:
  3024  0519                     l2170:
  3025                           
  3026                           ;./LCD.h: 33:  {;./LCD.h: 34:    temp = 0x80 + b - 1;
  3027  0519  0821               	movf	Lcd_Set_Cursor@b,w
  3028  051A  3E7F               	addlw	127
  3029  051B  00A2               	movwf	??_Lcd_Set_Cursor
  3030  051C  0822               	movf	??_Lcd_Set_Cursor,w
  3031  051D  00A4               	movwf	Lcd_Set_Cursor@temp
  3032  051E                     l2172:
  3033                           
  3034                           ;./LCD.h: 37:   Lcd_Cmd(temp);
  3035  051E  0824               	movf	Lcd_Set_Cursor@temp,w
  3036  051F  120A  118A  25A0  120A  118A  	fcall	_Lcd_Cmd
  3037                           
  3038                           ;./LCD.h: 39:  }
  3039  0524  2D36               	goto	l149
  3040  0525                     l2174:
  3041  0525  3002               	movlw	2
  3042  0526  0623               	xorwf	Lcd_Set_Cursor@a,w
  3043  0527  1D03               	btfss	3,2
  3044  0528  2D2A               	goto	u1861
  3045  0529  2D2B               	goto	u1860
  3046  052A                     u1861:
  3047  052A  2D36               	goto	l149
  3048  052B                     u1860:
  3049  052B                     l2176:
  3050                           
  3051                           ;./LCD.h: 41:  {;./LCD.h: 42:   temp = 0xC0 + b - 1;
  3052  052B  0821               	movf	Lcd_Set_Cursor@b,w
  3053  052C  3EBF               	addlw	191
  3054  052D  00A2               	movwf	??_Lcd_Set_Cursor
  3055  052E  0822               	movf	??_Lcd_Set_Cursor,w
  3056  052F  00A4               	movwf	Lcd_Set_Cursor@temp
  3057  0530                     l2178:
  3058                           
  3059                           ;./LCD.h: 45:   Lcd_Cmd(temp);
  3060  0530  0824               	movf	Lcd_Set_Cursor@temp,w
  3061  0531  120A  118A  25A0  120A  118A  	fcall	_Lcd_Cmd
  3062  0536                     l149:
  3063  0536  0008               	return
  3064  0537                     __end_of_Lcd_Set_Cursor:
  3065                           
  3066                           	psect	text22
  3067  05A0                     __ptext22:	
  3068 ;; *************** function _Lcd_Cmd *****************
  3069 ;; Defined at:
  3070 ;;		line 15 in file "./LCD.h"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  a               1    wreg     unsigned char 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  a               1    0[BANK0 ] unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3084 ;;      Params:         0       0       0       0       0
  3085 ;;      Locals:         0       1       0       0       0
  3086 ;;      Temps:          2       0       0       0       0
  3087 ;;      Totals:         2       1       0       0       0
  3088 ;;Total ram usage:        3 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    1
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_Lcd_Set_Cursor
  3095 ;;		_Lcd_Clear
  3096 ;;		_Lcd_Init
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           
  3101                           ;psect for function _Lcd_Cmd
  3102  05A0                     _Lcd_Cmd:
  3103                           
  3104                           ;incstack = 0
  3105                           ; Regs used in _Lcd_Cmd: [wreg]
  3106                           ;Lcd_Cmd@a stored from wreg
  3107  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3108  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  3109  05A2  00A0               	movwf	Lcd_Cmd@a
  3110  05A3                     l1958:
  3111                           
  3112                           ;./LCD.h: 16:  PORTDbits.RD2 =0;
  3113  05A3  1108               	bcf	8,2	;volatile
  3114  05A4                     l1960:
  3115                           
  3116                           ;./LCD.h: 17:  PORTB=a;
  3117  05A4  0820               	movf	Lcd_Cmd@a,w
  3118  05A5  0086               	movwf	6	;volatile
  3119  05A6                     l1962:
  3120                           
  3121                           ;./LCD.h: 18:     PORTDbits.RD3=1;
  3122  05A6  1588               	bsf	8,3	;volatile
  3123                           
  3124                           ;./LCD.h: 19:     _delay((unsigned long)((4)*(9000000/4000.0)));
  3125  05A7  300C               	movlw	12
  3126  05A8  00F5               	movwf	??_Lcd_Cmd+1
  3127  05A9  30AF               	movlw	175
  3128  05AA  00F4               	movwf	??_Lcd_Cmd
  3129  05AB                     u1897:
  3130  05AB  0BF4               	decfsz	??_Lcd_Cmd,f
  3131  05AC  2DAB               	goto	u1897
  3132  05AD  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3133  05AE  2DAB               	goto	u1897
  3134  05AF                     l1964:
  3135                           
  3136                           ;./LCD.h: 20:     PORTDbits.RD3=0;
  3137  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  3138  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  3139  05B1  1188               	bcf	8,3	;volatile
  3140  05B2                     l140:
  3141  05B2  0008               	return
  3142  05B3                     __end_of_Lcd_Cmd:
  3143                           
  3144                           	psect	text23
  3145  0445                     __ptext23:	
  3146 ;; *************** function _LCD_init *****************
  3147 ;; Defined at:
  3148 ;;		line 13 in file "./LCD2.h"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3162 ;;      Params:         0       0       0       0       0
  3163 ;;      Locals:         0       0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0
  3165 ;;      Totals:         0       0       0       0       0
  3166 ;;Total ram usage:        0 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    3
  3169 ;; This function calls:
  3170 ;;		_LCD_cmd
  3171 ;;		_delay
  3172 ;; This function is called by:
  3173 ;;		_main
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           
  3178                           ;psect for function _LCD_init
  3179  0445                     _LCD_init:
  3180  0445                     l2188:	
  3181                           ;incstack = 0
  3182                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  3183                           
  3184                           
  3185                           ;./LCD2.h: 15:  TRISB = 0x00;
  3186  0445  1683               	bsf	3,5	;RP0=1, select bank1
  3187  0446  1303               	bcf	3,6	;RP1=0, select bank1
  3188  0447  0186               	clrf	6	;volatile
  3189                           
  3190                           ;./LCD2.h: 16:  PORTB = 0x00;
  3191  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0449  1303               	bcf	3,6	;RP1=0, select bank0
  3193  044A  0186               	clrf	6	;volatile
  3194  044B                     l2190:
  3195                           
  3196                           ;./LCD2.h: 17:  TRISD2 = 0;
  3197  044B  1683               	bsf	3,5	;RP0=1, select bank1
  3198  044C  1303               	bcf	3,6	;RP1=0, select bank1
  3199  044D  1108               	bcf	8,2	;volatile
  3200  044E                     l2192:
  3201                           
  3202                           ;./LCD2.h: 18:  TRISD3 = 0;
  3203  044E  1188               	bcf	8,3	;volatile
  3204  044F                     l2194:
  3205                           
  3206                           ;./LCD2.h: 19:  delay(200);
  3207  044F  30C8               	movlw	200
  3208  0450  00F4               	movwf	delay@x
  3209  0451  3000               	movlw	0
  3210  0452  00F5               	movwf	delay@x+1
  3211  0453  120A  118A  2606  120A  118A  	fcall	_delay
  3212  0458                     l2196:
  3213                           
  3214                           ;./LCD2.h: 20:  LCD_cmd(0x0c);
  3215  0458  300C               	movlw	12
  3216  0459  120A  118A  2555  120A  118A  	fcall	_LCD_cmd
  3217  045E                     l2198:
  3218                           
  3219                           ;./LCD2.h: 21:  LCD_cmd(0x06);
  3220  045E  3006               	movlw	6
  3221  045F  120A  118A  2555  120A  118A  	fcall	_LCD_cmd
  3222  0464                     l2200:
  3223                           
  3224                           ;./LCD2.h: 22:  LCD_cmd(0x38);
  3225  0464  3038               	movlw	56
  3226  0465  120A  118A  2555  120A  118A  	fcall	_LCD_cmd
  3227  046A                     l2202:
  3228                           
  3229                           ;./LCD2.h: 23:  LCD_cmd(0x80);
  3230  046A  3080               	movlw	128
  3231  046B  120A  118A  2555  120A  118A  	fcall	_LCD_cmd
  3232  0470                     l170:
  3233  0470  0008               	return
  3234  0471                     __end_of_LCD_init:
  3235                           
  3236                           	psect	text24
  3237  0555                     __ptext24:	
  3238 ;; *************** function _LCD_cmd *****************
  3239 ;; Defined at:
  3240 ;;		line 35 in file "./LCD2.h"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  y               1    wreg     unsigned char 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  y               1    0[BANK0 ] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3254 ;;      Params:         0       0       0       0       0
  3255 ;;      Locals:         0       1       0       0       0
  3256 ;;      Temps:          0       0       0       0       0
  3257 ;;      Totals:         0       1       0       0       0
  3258 ;;Total ram usage:        1 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    2
  3261 ;; This function calls:
  3262 ;;		_delay
  3263 ;; This function is called by:
  3264 ;;		_LCD_init
  3265 ;;		_main
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           
  3270                           ;psect for function _LCD_cmd
  3271  0555                     _LCD_cmd:
  3272                           
  3273                           ;incstack = 0
  3274                           ; Regs used in _LCD_cmd: [wreg+status,2+status,0+pclath+cstack]
  3275                           ;LCD_cmd@y stored from wreg
  3276  0555  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0556  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0557  00A0               	movwf	LCD_cmd@y
  3279  0558                     l1974:
  3280                           
  3281                           ;./LCD2.h: 35: void LCD_cmd(char y);./LCD2.h: 36: {;./LCD2.h: 37:  RD2 = 0;
  3282  0558  1108               	bcf	8,2	;volatile
  3283                           
  3284                           ;./LCD2.h: 38:  RD3 = 1;
  3285  0559  1588               	bsf	8,3	;volatile
  3286  055A                     l1976:
  3287                           
  3288                           ;./LCD2.h: 39:  PORTB = y;
  3289  055A  0820               	movf	LCD_cmd@y,w
  3290  055B  0086               	movwf	6	;volatile
  3291  055C                     l1978:
  3292                           
  3293                           ;./LCD2.h: 40:  delay(100);
  3294  055C  3064               	movlw	100
  3295  055D  00F4               	movwf	delay@x
  3296  055E  3000               	movlw	0
  3297  055F  00F5               	movwf	delay@x+1
  3298  0560  120A  118A  2606  120A  118A  	fcall	_delay
  3299  0565                     l1980:
  3300                           
  3301                           ;./LCD2.h: 41:     RD3 = 0;
  3302  0565  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0566  1303               	bcf	3,6	;RP1=0, select bank0
  3304  0567  1188               	bcf	8,3	;volatile
  3305  0568                     l1982:
  3306                           
  3307                           ;./LCD2.h: 42:     delay(100);
  3308  0568  3064               	movlw	100
  3309  0569  00F4               	movwf	delay@x
  3310  056A  3000               	movlw	0
  3311  056B  00F5               	movwf	delay@x+1
  3312  056C  120A  118A  2606  120A  118A  	fcall	_delay
  3313  0571                     l176:
  3314  0571  0008               	return
  3315  0572                     __end_of_LCD_cmd:
  3316                           
  3317                           	psect	text25
  3318  0335                     __ptext25:	
  3319 ;; *************** function _LCD_disp *****************
  3320 ;; Defined at:
  3321 ;;		line 25 in file "./LCD2.h"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  y               1    wreg     unsigned char 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  y               1   10[BANK0 ] unsigned char 
  3326 ;;  temp            2   11[BANK0 ] int 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0, pclath, cstack
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3336 ;;      Params:         0       0       0       0       0
  3337 ;;      Locals:         0       3       0       0       0
  3338 ;;      Temps:          0       2       0       0       0
  3339 ;;      Totals:         0       5       0       0       0
  3340 ;;Total ram usage:        5 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    3
  3343 ;; This function calls:
  3344 ;;		_LCD_data
  3345 ;;		___awdiv
  3346 ;;		___awmod
  3347 ;;		_delay
  3348 ;; This function is called by:
  3349 ;;		_main
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           
  3354                           ;psect for function _LCD_disp
  3355  0335                     _LCD_disp:
  3356                           
  3357                           ;incstack = 0
  3358                           ; Regs used in _LCD_disp: [wreg+status,2+status,0+pclath+cstack]
  3359                           ;LCD_disp@y stored from wreg
  3360  0335  1283               	bcf	3,5	;RP0=0, select bank0
  3361  0336  1303               	bcf	3,6	;RP1=0, select bank0
  3362  0337  00AA               	movwf	LCD_disp@y
  3363  0338                     l2204:
  3364                           
  3365                           ;./LCD2.h: 25: void LCD_disp(unsigned char y);./LCD2.h: 26: {;./LCD2.h: 27:  int temp = 
      +                          y/10;
  3366  0338  300A               	movlw	10
  3367  0339  00A0               	movwf	___awdiv@divisor
  3368  033A  3000               	movlw	0
  3369  033B  00A1               	movwf	___awdiv@divisor+1
  3370  033C  082A               	movf	LCD_disp@y,w
  3371  033D  00A8               	movwf	??_LCD_disp
  3372  033E  01A9               	clrf	??_LCD_disp+1
  3373  033F  0828               	movf	??_LCD_disp,w
  3374  0340  00A2               	movwf	___awdiv@dividend
  3375  0341  0829               	movf	??_LCD_disp+1,w
  3376  0342  00A3               	movwf	___awdiv@dividend+1
  3377  0343  120A  118A  2271  120A  118A  	fcall	___awdiv
  3378  0348  1283               	bcf	3,5	;RP0=0, select bank0
  3379  0349  1303               	bcf	3,6	;RP1=0, select bank0
  3380  034A  0821               	movf	?___awdiv+1,w
  3381  034B  00AC               	movwf	LCD_disp@temp+1
  3382  034C  0820               	movf	?___awdiv,w
  3383  034D  00AB               	movwf	LCD_disp@temp
  3384                           
  3385                           ;./LCD2.h: 28:  LCD_data(temp);
  3386  034E  082B               	movf	LCD_disp@temp,w
  3387  034F  120A  118A  2537  120A  118A  	fcall	_LCD_data
  3388                           
  3389                           ;./LCD2.h: 29:  delay(100);
  3390  0354  3064               	movlw	100
  3391  0355  00F4               	movwf	delay@x
  3392  0356  3000               	movlw	0
  3393  0357  00F5               	movwf	delay@x+1
  3394  0358  120A  118A  2606  120A  118A  	fcall	_delay
  3395                           
  3396                           ;./LCD2.h: 30:  temp = y%10;
  3397  035D  300A               	movlw	10
  3398  035E  1283               	bcf	3,5	;RP0=0, select bank0
  3399  035F  1303               	bcf	3,6	;RP1=0, select bank0
  3400  0360  00A0               	movwf	___awmod@divisor
  3401  0361  3000               	movlw	0
  3402  0362  00A1               	movwf	___awmod@divisor+1
  3403  0363  082A               	movf	LCD_disp@y,w
  3404  0364  00A8               	movwf	??_LCD_disp
  3405  0365  01A9               	clrf	??_LCD_disp+1
  3406  0366  0828               	movf	??_LCD_disp,w
  3407  0367  00A2               	movwf	___awmod@dividend
  3408  0368  0829               	movf	??_LCD_disp+1,w
  3409  0369  00A3               	movwf	___awmod@dividend+1
  3410  036A  120A  118A  22DA  120A  118A  	fcall	___awmod
  3411  036F  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0370  1303               	bcf	3,6	;RP1=0, select bank0
  3413  0371  0821               	movf	?___awmod+1,w
  3414  0372  00AC               	movwf	LCD_disp@temp+1
  3415  0373  0820               	movf	?___awmod,w
  3416  0374  00AB               	movwf	LCD_disp@temp
  3417                           
  3418                           ;./LCD2.h: 31:  LCD_data(temp);
  3419  0375  082B               	movf	LCD_disp@temp,w
  3420  0376  120A  118A  2537  120A  118A  	fcall	_LCD_data
  3421                           
  3422                           ;./LCD2.h: 32:  delay(100);
  3423  037B  3064               	movlw	100
  3424  037C  00F4               	movwf	delay@x
  3425  037D  3000               	movlw	0
  3426  037E  00F5               	movwf	delay@x+1
  3427  037F  120A  118A  2606  120A  118A  	fcall	_delay
  3428  0384                     l173:
  3429  0384  0008               	return
  3430  0385                     __end_of_LCD_disp:
  3431                           
  3432                           	psect	text26
  3433  02DA                     __ptext26:	
  3434 ;; *************** function ___awmod *****************
  3435 ;; Defined at:
  3436 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  divisor         2    0[BANK0 ] int 
  3439 ;;  dividend        2    2[BANK0 ] int 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  sign            1    5[BANK0 ] unsigned char 
  3442 ;;  counter         1    4[BANK0 ] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  2    0[BANK0 ] int 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3452 ;;      Params:         0       4       0       0       0
  3453 ;;      Locals:         0       2       0       0       0
  3454 ;;      Temps:          1       0       0       0       0
  3455 ;;      Totals:         1       6       0       0       0
  3456 ;;Total ram usage:        7 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    1
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_LCD_disp
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           
  3467                           ;psect for function ___awmod
  3468  02DA                     ___awmod:
  3469  02DA                     l2130:	
  3470                           ;incstack = 0
  3471                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3472                           
  3473  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3474  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3475  02DC  01A5               	clrf	___awmod@sign
  3476  02DD                     l2132:
  3477  02DD  1FA3               	btfss	___awmod@dividend+1,7
  3478  02DE  2AE0               	goto	u1761
  3479  02DF  2AE1               	goto	u1760
  3480  02E0                     u1761:
  3481  02E0  2AE8               	goto	l2138
  3482  02E1                     u1760:
  3483  02E1                     l2134:
  3484  02E1  09A2               	comf	___awmod@dividend,f
  3485  02E2  09A3               	comf	___awmod@dividend+1,f
  3486  02E3  0AA2               	incf	___awmod@dividend,f
  3487  02E4  1903               	skipnz
  3488  02E5  0AA3               	incf	___awmod@dividend+1,f
  3489  02E6                     l2136:
  3490  02E6  01A5               	clrf	___awmod@sign
  3491  02E7  0AA5               	incf	___awmod@sign,f
  3492  02E8                     l2138:
  3493  02E8  1FA1               	btfss	___awmod@divisor+1,7
  3494  02E9  2AEB               	goto	u1771
  3495  02EA  2AEC               	goto	u1770
  3496  02EB                     u1771:
  3497  02EB  2AF1               	goto	l2142
  3498  02EC                     u1770:
  3499  02EC                     l2140:
  3500  02EC  09A0               	comf	___awmod@divisor,f
  3501  02ED  09A1               	comf	___awmod@divisor+1,f
  3502  02EE  0AA0               	incf	___awmod@divisor,f
  3503  02EF  1903               	skipnz
  3504  02F0  0AA1               	incf	___awmod@divisor+1,f
  3505  02F1                     l2142:
  3506  02F1  0820               	movf	___awmod@divisor,w
  3507  02F2  0421               	iorwf	___awmod@divisor+1,w
  3508  02F3  1903               	btfsc	3,2
  3509  02F4  2AF6               	goto	u1781
  3510  02F5  2AF7               	goto	u1780
  3511  02F6                     u1781:
  3512  02F6  2B26               	goto	l2160
  3513  02F7                     u1780:
  3514  02F7                     l2144:
  3515  02F7  01A4               	clrf	___awmod@counter
  3516  02F8  0AA4               	incf	___awmod@counter,f
  3517  02F9  2B05               	goto	l2150
  3518  02FA                     l2146:
  3519  02FA  3001               	movlw	1
  3520  02FB                     u1795:
  3521  02FB  1003               	clrc
  3522  02FC  0DA0               	rlf	___awmod@divisor,f
  3523  02FD  0DA1               	rlf	___awmod@divisor+1,f
  3524  02FE  3EFF               	addlw	-1
  3525  02FF  1D03               	skipz
  3526  0300  2AFB               	goto	u1795
  3527  0301                     l2148:
  3528  0301  3001               	movlw	1
  3529  0302  00F4               	movwf	??___awmod
  3530  0303  0874               	movf	??___awmod,w
  3531  0304  07A4               	addwf	___awmod@counter,f
  3532  0305                     l2150:
  3533  0305  1FA1               	btfss	___awmod@divisor+1,7
  3534  0306  2B08               	goto	u1801
  3535  0307  2B09               	goto	u1800
  3536  0308                     u1801:
  3537  0308  2AFA               	goto	l2146
  3538  0309                     u1800:
  3539  0309                     l2152:
  3540  0309  0821               	movf	___awmod@divisor+1,w
  3541  030A  0223               	subwf	___awmod@dividend+1,w
  3542  030B  1D03               	skipz
  3543  030C  2B0F               	goto	u1815
  3544  030D  0820               	movf	___awmod@divisor,w
  3545  030E  0222               	subwf	___awmod@dividend,w
  3546  030F                     u1815:
  3547  030F  1C03               	skipc
  3548  0310  2B12               	goto	u1811
  3549  0311  2B13               	goto	u1810
  3550  0312                     u1811:
  3551  0312  2B19               	goto	l2156
  3552  0313                     u1810:
  3553  0313                     l2154:
  3554  0313  0820               	movf	___awmod@divisor,w
  3555  0314  02A2               	subwf	___awmod@dividend,f
  3556  0315  0821               	movf	___awmod@divisor+1,w
  3557  0316  1C03               	skipc
  3558  0317  03A3               	decf	___awmod@dividend+1,f
  3559  0318  02A3               	subwf	___awmod@dividend+1,f
  3560  0319                     l2156:
  3561  0319  3001               	movlw	1
  3562  031A                     u1825:
  3563  031A  1003               	clrc
  3564  031B  0CA1               	rrf	___awmod@divisor+1,f
  3565  031C  0CA0               	rrf	___awmod@divisor,f
  3566  031D  3EFF               	addlw	-1
  3567  031E  1D03               	skipz
  3568  031F  2B1A               	goto	u1825
  3569  0320                     l2158:
  3570  0320  3001               	movlw	1
  3571  0321  02A4               	subwf	___awmod@counter,f
  3572  0322  1D03               	btfss	3,2
  3573  0323  2B25               	goto	u1831
  3574  0324  2B26               	goto	u1830
  3575  0325                     u1831:
  3576  0325  2B09               	goto	l2152
  3577  0326                     u1830:
  3578  0326                     l2160:
  3579  0326  0825               	movf	___awmod@sign,w
  3580  0327  1903               	btfsc	3,2
  3581  0328  2B2A               	goto	u1841
  3582  0329  2B2B               	goto	u1840
  3583  032A                     u1841:
  3584  032A  2B30               	goto	l2164
  3585  032B                     u1840:
  3586  032B                     l2162:
  3587  032B  09A2               	comf	___awmod@dividend,f
  3588  032C  09A3               	comf	___awmod@dividend+1,f
  3589  032D  0AA2               	incf	___awmod@dividend,f
  3590  032E  1903               	skipnz
  3591  032F  0AA3               	incf	___awmod@dividend+1,f
  3592  0330                     l2164:
  3593  0330  0823               	movf	___awmod@dividend+1,w
  3594  0331  00A1               	movwf	?___awmod+1
  3595  0332  0822               	movf	___awmod@dividend,w
  3596  0333  00A0               	movwf	?___awmod
  3597  0334                     l523:
  3598  0334  0008               	return
  3599  0335                     __end_of___awmod:
  3600                           
  3601                           	psect	text27
  3602  0271                     __ptext27:	
  3603 ;; *************** function ___awdiv *****************
  3604 ;; Defined at:
  3605 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;  divisor         2    0[BANK0 ] int 
  3608 ;;  dividend        2    2[BANK0 ] int 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  quotient        2    6[BANK0 ] int 
  3611 ;;  sign            1    5[BANK0 ] unsigned char 
  3612 ;;  counter         1    4[BANK0 ] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  2    0[BANK0 ] int 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3622 ;;      Params:         0       4       0       0       0
  3623 ;;      Locals:         0       4       0       0       0
  3624 ;;      Temps:          1       0       0       0       0
  3625 ;;      Totals:         1       8       0       0       0
  3626 ;;Total ram usage:        9 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    1
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_LCD_disp
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           
  3637                           ;psect for function ___awdiv
  3638  0271                     ___awdiv:
  3639  0271                     l2086:	
  3640                           ;incstack = 0
  3641                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3642                           
  3643  0271  1283               	bcf	3,5	;RP0=0, select bank0
  3644  0272  1303               	bcf	3,6	;RP1=0, select bank0
  3645  0273  01A5               	clrf	___awdiv@sign
  3646  0274                     l2088:
  3647  0274  1FA1               	btfss	___awdiv@divisor+1,7
  3648  0275  2A77               	goto	u1661
  3649  0276  2A78               	goto	u1660
  3650  0277                     u1661:
  3651  0277  2A7F               	goto	l2094
  3652  0278                     u1660:
  3653  0278                     l2090:
  3654  0278  09A0               	comf	___awdiv@divisor,f
  3655  0279  09A1               	comf	___awdiv@divisor+1,f
  3656  027A  0AA0               	incf	___awdiv@divisor,f
  3657  027B  1903               	skipnz
  3658  027C  0AA1               	incf	___awdiv@divisor+1,f
  3659  027D                     l2092:
  3660  027D  01A5               	clrf	___awdiv@sign
  3661  027E  0AA5               	incf	___awdiv@sign,f
  3662  027F                     l2094:
  3663  027F  1FA3               	btfss	___awdiv@dividend+1,7
  3664  0280  2A82               	goto	u1671
  3665  0281  2A83               	goto	u1670
  3666  0282                     u1671:
  3667  0282  2A8C               	goto	l2100
  3668  0283                     u1670:
  3669  0283                     l2096:
  3670  0283  09A2               	comf	___awdiv@dividend,f
  3671  0284  09A3               	comf	___awdiv@dividend+1,f
  3672  0285  0AA2               	incf	___awdiv@dividend,f
  3673  0286  1903               	skipnz
  3674  0287  0AA3               	incf	___awdiv@dividend+1,f
  3675  0288                     l2098:
  3676  0288  3001               	movlw	1
  3677  0289  00F4               	movwf	??___awdiv
  3678  028A  0874               	movf	??___awdiv,w
  3679  028B  06A5               	xorwf	___awdiv@sign,f
  3680  028C                     l2100:
  3681  028C  01A6               	clrf	___awdiv@quotient
  3682  028D  01A7               	clrf	___awdiv@quotient+1
  3683  028E                     l2102:
  3684  028E  0820               	movf	___awdiv@divisor,w
  3685  028F  0421               	iorwf	___awdiv@divisor+1,w
  3686  0290  1903               	btfsc	3,2
  3687  0291  2A93               	goto	u1681
  3688  0292  2A94               	goto	u1680
  3689  0293                     u1681:
  3690  0293  2ACB               	goto	l2122
  3691  0294                     u1680:
  3692  0294                     l2104:
  3693  0294  01A4               	clrf	___awdiv@counter
  3694  0295  0AA4               	incf	___awdiv@counter,f
  3695  0296  2AA2               	goto	l2110
  3696  0297                     l2106:
  3697  0297  3001               	movlw	1
  3698  0298                     u1695:
  3699  0298  1003               	clrc
  3700  0299  0DA0               	rlf	___awdiv@divisor,f
  3701  029A  0DA1               	rlf	___awdiv@divisor+1,f
  3702  029B  3EFF               	addlw	-1
  3703  029C  1D03               	skipz
  3704  029D  2A98               	goto	u1695
  3705  029E                     l2108:
  3706  029E  3001               	movlw	1
  3707  029F  00F4               	movwf	??___awdiv
  3708  02A0  0874               	movf	??___awdiv,w
  3709  02A1  07A4               	addwf	___awdiv@counter,f
  3710  02A2                     l2110:
  3711  02A2  1FA1               	btfss	___awdiv@divisor+1,7
  3712  02A3  2AA5               	goto	u1701
  3713  02A4  2AA6               	goto	u1700
  3714  02A5                     u1701:
  3715  02A5  2A97               	goto	l2106
  3716  02A6                     u1700:
  3717  02A6                     l2112:
  3718  02A6  3001               	movlw	1
  3719  02A7                     u1715:
  3720  02A7  1003               	clrc
  3721  02A8  0DA6               	rlf	___awdiv@quotient,f
  3722  02A9  0DA7               	rlf	___awdiv@quotient+1,f
  3723  02AA  3EFF               	addlw	-1
  3724  02AB  1D03               	skipz
  3725  02AC  2AA7               	goto	u1715
  3726  02AD  0821               	movf	___awdiv@divisor+1,w
  3727  02AE  0223               	subwf	___awdiv@dividend+1,w
  3728  02AF  1D03               	skipz
  3729  02B0  2AB3               	goto	u1725
  3730  02B1  0820               	movf	___awdiv@divisor,w
  3731  02B2  0222               	subwf	___awdiv@dividend,w
  3732  02B3                     u1725:
  3733  02B3  1C03               	skipc
  3734  02B4  2AB6               	goto	u1721
  3735  02B5  2AB7               	goto	u1720
  3736  02B6                     u1721:
  3737  02B6  2ABE               	goto	l2118
  3738  02B7                     u1720:
  3739  02B7                     l2114:
  3740  02B7  0820               	movf	___awdiv@divisor,w
  3741  02B8  02A2               	subwf	___awdiv@dividend,f
  3742  02B9  0821               	movf	___awdiv@divisor+1,w
  3743  02BA  1C03               	skipc
  3744  02BB  03A3               	decf	___awdiv@dividend+1,f
  3745  02BC  02A3               	subwf	___awdiv@dividend+1,f
  3746  02BD                     l2116:
  3747  02BD  1426               	bsf	___awdiv@quotient,0
  3748  02BE                     l2118:
  3749  02BE  3001               	movlw	1
  3750  02BF                     u1735:
  3751  02BF  1003               	clrc
  3752  02C0  0CA1               	rrf	___awdiv@divisor+1,f
  3753  02C1  0CA0               	rrf	___awdiv@divisor,f
  3754  02C2  3EFF               	addlw	-1
  3755  02C3  1D03               	skipz
  3756  02C4  2ABF               	goto	u1735
  3757  02C5                     l2120:
  3758  02C5  3001               	movlw	1
  3759  02C6  02A4               	subwf	___awdiv@counter,f
  3760  02C7  1D03               	btfss	3,2
  3761  02C8  2ACA               	goto	u1741
  3762  02C9  2ACB               	goto	u1740
  3763  02CA                     u1741:
  3764  02CA  2AA6               	goto	l2112
  3765  02CB                     u1740:
  3766  02CB                     l2122:
  3767  02CB  0825               	movf	___awdiv@sign,w
  3768  02CC  1903               	btfsc	3,2
  3769  02CD  2ACF               	goto	u1751
  3770  02CE  2AD0               	goto	u1750
  3771  02CF                     u1751:
  3772  02CF  2AD5               	goto	l2126
  3773  02D0                     u1750:
  3774  02D0                     l2124:
  3775  02D0  09A6               	comf	___awdiv@quotient,f
  3776  02D1  09A7               	comf	___awdiv@quotient+1,f
  3777  02D2  0AA6               	incf	___awdiv@quotient,f
  3778  02D3  1903               	skipnz
  3779  02D4  0AA7               	incf	___awdiv@quotient+1,f
  3780  02D5                     l2126:
  3781  02D5  0827               	movf	___awdiv@quotient+1,w
  3782  02D6  00A1               	movwf	?___awdiv+1
  3783  02D7  0826               	movf	___awdiv@quotient,w
  3784  02D8  00A0               	movwf	?___awdiv
  3785  02D9                     l510:
  3786  02D9  0008               	return
  3787  02DA                     __end_of___awdiv:
  3788                           
  3789                           	psect	text28
  3790  0537                     __ptext28:	
  3791 ;; *************** function _LCD_data *****************
  3792 ;; Defined at:
  3793 ;;		line 45 in file "./LCD2.h"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  y               1    wreg     unsigned char 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  y               1    0[BANK0 ] unsigned char 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0, pclath, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3807 ;;      Params:         0       0       0       0       0
  3808 ;;      Locals:         0       1       0       0       0
  3809 ;;      Temps:          0       0       0       0       0
  3810 ;;      Totals:         0       1       0       0       0
  3811 ;;Total ram usage:        1 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    2
  3814 ;; This function calls:
  3815 ;;		_delay
  3816 ;; This function is called by:
  3817 ;;		_LCD_disp
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           
  3822                           ;psect for function _LCD_data
  3823  0537                     _LCD_data:
  3824                           
  3825                           ;incstack = 0
  3826                           ; Regs used in _LCD_data: [wreg+status,2+status,0+pclath+cstack]
  3827                           ;LCD_data@y stored from wreg
  3828  0537  1283               	bcf	3,5	;RP0=0, select bank0
  3829  0538  1303               	bcf	3,6	;RP1=0, select bank0
  3830  0539  00A0               	movwf	LCD_data@y
  3831  053A                     l1984:
  3832                           
  3833                           ;./LCD2.h: 45: void LCD_data(char y);./LCD2.h: 46: {;./LCD2.h: 47:  RD2 = 1;
  3834  053A  1508               	bsf	8,2	;volatile
  3835                           
  3836                           ;./LCD2.h: 48:  RD3 = 1;
  3837  053B  1588               	bsf	8,3	;volatile
  3838  053C                     l1986:
  3839                           
  3840                           ;./LCD2.h: 49:  PORTB = y + 48;
  3841  053C  0820               	movf	LCD_data@y,w
  3842  053D  3E30               	addlw	48
  3843  053E  0086               	movwf	6	;volatile
  3844  053F                     l1988:
  3845                           
  3846                           ;./LCD2.h: 50:  delay(100);
  3847  053F  3064               	movlw	100
  3848  0540  00F4               	movwf	delay@x
  3849  0541  3000               	movlw	0
  3850  0542  00F5               	movwf	delay@x+1
  3851  0543  120A  118A  2606  120A  118A  	fcall	_delay
  3852  0548                     l1990:
  3853                           
  3854                           ;./LCD2.h: 51:  RD3 = 0;
  3855  0548  1283               	bcf	3,5	;RP0=0, select bank0
  3856  0549  1303               	bcf	3,6	;RP1=0, select bank0
  3857  054A  1188               	bcf	8,3	;volatile
  3858  054B                     l1992:
  3859                           
  3860                           ;./LCD2.h: 52:  delay(200);
  3861  054B  30C8               	movlw	200
  3862  054C  00F4               	movwf	delay@x
  3863  054D  3000               	movlw	0
  3864  054E  00F5               	movwf	delay@x+1
  3865  054F  120A  118A  2606  120A  118A  	fcall	_delay
  3866  0554                     l179:
  3867  0554  0008               	return
  3868  0555                     __end_of_LCD_data:
  3869                           
  3870                           	psect	text29
  3871  0606                     __ptext29:	
  3872 ;; *************** function _delay *****************
  3873 ;; Defined at:
  3874 ;;		line 8 in file "./LCD2.h"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  x               2    4[COMMON] unsigned int 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;		None
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3888 ;;      Params:         2       0       0       0       0
  3889 ;;      Locals:         0       0       0       0       0
  3890 ;;      Temps:          0       0       0       0       0
  3891 ;;      Totals:         2       0       0       0       0
  3892 ;;Total ram usage:        2 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:    1
  3895 ;; This function calls:
  3896 ;;		Nothing
  3897 ;; This function is called by:
  3898 ;;		_LCD_init
  3899 ;;		_LCD_disp
  3900 ;;		_LCD_cmd
  3901 ;;		_LCD_data
  3902 ;;		_main
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           
  3907                           ;psect for function _delay
  3908  0606                     _delay:
  3909  0606                     l1914:	
  3910                           ;incstack = 0
  3911                           ; Regs used in _delay: [wreg+status,2+status,0]
  3912                           
  3913  0606                     l1916:	
  3914                           ;./LCD2.h: 8:  void delay(unsigned int x);./LCD2.h: 9: {;./LCD2.h: 10:  while(x--);
  3915                           
  3916  0606  3001               	movlw	1
  3917  0607  02F4               	subwf	delay@x,f
  3918  0608  3000               	movlw	0
  3919  0609  1C03               	skipc
  3920  060A  03F5               	decf	delay@x+1,f
  3921  060B  02F5               	subwf	delay@x+1,f
  3922  060C  0A74               	incf	delay@x,w
  3923  060D  1D03               	skipz
  3924  060E  2E13               	goto	u1401
  3925  060F  0A75               	incf	delay@x+1,w
  3926  0610  1D03               	btfss	3,2
  3927  0611  2E13               	goto	u1401
  3928  0612  2E14               	goto	u1400
  3929  0613                     u1401:
  3930  0613  2E06               	goto	l1916
  3931  0614                     u1400:
  3932  0614                     l167:
  3933  0614  0008               	return
  3934  0615                     __end_of_delay:
  3935                           
  3936                           	psect	text30
  3937  03CB                     __ptext30:	
  3938 ;; *************** function _isr *****************
  3939 ;; Defined at:
  3940 ;;		line 61 in file "microproyecto2.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;		None
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;		None
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      void 
  3947 ;; Registers used:
  3948 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3954 ;;      Params:         0       0       0       0       0
  3955 ;;      Locals:         0       0       0       0       0
  3956 ;;      Temps:          4       0       0       0       0
  3957 ;;      Totals:         4       0       0       0       0
  3958 ;;Total ram usage:        4 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; This function calls:
  3961 ;;		Nothing
  3962 ;; This function is called by:
  3963 ;;		Interrupt level 1
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           
  3968                           ;psect for function _isr
  3969  03CB                     _isr:
  3970  03CB                     i1l1826:
  3971                           
  3972                           ;microproyecto2.c: 64:     if (PIE1bits.TXIE && PIR1bits.TXIF)
  3973  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  3974  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  3975  03CD  1E0C               	btfss	12,4	;volatile
  3976  03CE  2BD0               	goto	u133_21
  3977  03CF  2BD1               	goto	u133_20
  3978  03D0                     u133_21:
  3979  03D0  2BF7               	goto	i1l1842
  3980  03D1                     u133_20:
  3981  03D1                     i1l1828:
  3982  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3983  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3984  03D3  1E0C               	btfss	12,4	;volatile
  3985  03D4  2BD6               	goto	u134_21
  3986  03D5  2BD7               	goto	u134_20
  3987  03D6                     u134_21:
  3988  03D6  2BF7               	goto	i1l1842
  3989  03D7                     u134_20:
  3990  03D7                     i1l1830:
  3991                           
  3992                           ;microproyecto2.c: 65:     {;microproyecto2.c: 66:         if (eusart_flag)
  3993  03D7  0876               	movf	_eusart_flag,w
  3994  03D8  1903               	btfsc	3,2
  3995  03D9  2BDB               	goto	u135_21
  3996  03DA  2BDC               	goto	u135_20
  3997  03DB                     u135_21:
  3998  03DB  2BE2               	goto	i1l1834
  3999  03DC                     u135_20:
  4000  03DC                     i1l1832:
  4001                           
  4002                           ;microproyecto2.c: 67:         {;microproyecto2.c: 68:             TXREG = datos[str_pos
      +                          ];
  4003  03DC  0877               	movf	_str_pos,w
  4004  03DD  3E47               	addlw	(low (_datos| 0))& (0+255)
  4005  03DE  0084               	movwf	4
  4006  03DF  1383               	bcf	3,7	;select IRP bank0
  4007  03E0  0800               	movf	0,w
  4008  03E1  0099               	movwf	25	;volatile
  4009  03E2                     i1l1834:
  4010                           
  4011                           ;microproyecto2.c: 70:         str_pos++;
  4012  03E2  3001               	movlw	1
  4013  03E3  00F0               	movwf	??_isr
  4014  03E4  0870               	movf	??_isr,w
  4015  03E5  07F7               	addwf	_str_pos,f
  4016  03E6                     i1l1836:
  4017                           
  4018                           ;microproyecto2.c: 71:         if (str_pos == 5)
  4019  03E6  3005               	movlw	5
  4020  03E7  0677               	xorwf	_str_pos,w
  4021  03E8  1D03               	btfss	3,2
  4022  03E9  2BEB               	goto	u136_21
  4023  03EA  2BEC               	goto	u136_20
  4024  03EB                     u136_21:
  4025  03EB  2BF7               	goto	i1l1842
  4026  03EC                     u136_20:
  4027  03EC                     i1l1838:
  4028                           
  4029                           ;microproyecto2.c: 72:         {;microproyecto2.c: 73:             eusart_flag = !eusart
      +                          _flag;
  4030  03EC  0876               	movf	_eusart_flag,w
  4031  03ED  1903               	btfsc	3,2
  4032  03EE  2BF0               	goto	u137_21
  4033  03EF  2BF2               	goto	u137_20
  4034  03F0                     u137_21:
  4035  03F0  3001               	movlw	1
  4036  03F1  2BF3               	goto	u138_20
  4037  03F2                     u137_20:
  4038  03F2  3000               	movlw	0
  4039  03F3                     u138_20:
  4040  03F3  00F0               	movwf	??_isr
  4041  03F4  0870               	movf	??_isr,w
  4042  03F5  00F6               	movwf	_eusart_flag
  4043  03F6                     i1l1840:
  4044                           
  4045                           ;microproyecto2.c: 74:             str_pos = 0;
  4046  03F6  01F7               	clrf	_str_pos
  4047  03F7                     i1l1842:
  4048                           
  4049                           ;microproyecto2.c: 77:     if (PIR1bits.RCIF)
  4050  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  4051  03F8  1E8C               	btfss	12,5	;volatile
  4052  03F9  2BFB               	goto	u139_21
  4053  03FA  2BFC               	goto	u139_20
  4054  03FB                     u139_21:
  4055  03FB  2C00               	goto	i1l221
  4056  03FC                     u139_20:
  4057  03FC                     i1l1844:
  4058                           
  4059                           ;microproyecto2.c: 78:     {;microproyecto2.c: 79:         uart_data = RCREG;
  4060  03FC  081A               	movf	26,w	;volatile
  4061  03FD  00F0               	movwf	??_isr
  4062  03FE  0870               	movf	??_isr,w
  4063  03FF  00F8               	movwf	_uart_data
  4064  0400                     i1l221:
  4065  0400  0873               	movf	??_isr+3,w
  4066  0401  008A               	movwf	10
  4067  0402  0872               	movf	??_isr+2,w
  4068  0403  0084               	movwf	4
  4069  0404  0E71               	swapf	??_isr+1,w
  4070  0405  0083               	movwf	3
  4071  0406  0EFE               	swapf	btemp,f
  4072  0407  0E7E               	swapf	btemp,w
  4073  0408  0009               	retfie
  4074  0409                     __end_of_isr:
  4075  007E                     btemp	set	126	;btemp
  4076  007E                     wtemp0	set	126
  4077                           
  4078                           	psect	intentry
  4079  0004                     __pintentry:	
  4080                           ;incstack = 0
  4081                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  4082                           
  4083  0004                     interrupt_function:
  4084  007E                     saved_w	set	btemp
  4085  0004  00FE               	movwf	btemp
  4086  0005  0E03               	swapf	3,w
  4087  0006  00F1               	movwf	??_isr+1
  4088  0007  0804               	movf	4,w
  4089  0008  00F2               	movwf	??_isr+2
  4090  0009  080A               	movf	10,w
  4091  000A  00F3               	movwf	??_isr+3
  4092  000B  120A  118A  2BCB   	ljmp	_isr
  4093                           
  4094                           	psect	config
  4095                           
  4096                           ;Config register CONFIG1 @ 0x2007
  4097                           ;	Oscillator Selection bits
  4098                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4099                           ;	Watchdog Timer Enable bit
  4100                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4101                           ;	Power-up Timer Enable bit
  4102                           ;	PWRTE = OFF, PWRT disabled
  4103                           ;	RE3/MCLR pin function select bit
  4104                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4105                           ;	Code Protection bit
  4106                           ;	CP = OFF, Program memory code protection is disabled
  4107                           ;	Data Code Protection bit
  4108                           ;	CPD = OFF, Data memory code protection is disabled
  4109                           ;	Brown Out Reset Selection bits
  4110                           ;	BOREN = OFF, BOR disabled
  4111                           ;	Internal External Switchover bit
  4112                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4113                           ;	Fail-Safe Clock Monitor Enabled bit
  4114                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4115                           ;	Low Voltage Programming Enable bit
  4116                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4117                           ;	In-Circuit Debugger Mode bit
  4118                           ;	DEBUG = 0x1, unprogrammed default
  4119  2007                     	org	8199
  4120  2007  20F4               	dw	8436
  4121                           
  4122                           ;Config register CONFIG2 @ 0x2008
  4123                           ;	Brown-out Reset Selection bit
  4124                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4125                           ;	Flash Program Memory Self Write Enable bits
  4126                           ;	WRT = OFF, Write protection off
  4127  2008                     	org	8200
  4128  2008  3FFF               	dw	16383

Data Sizes:
    Strings     25
    Constant    10
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     31      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> datos(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    datos	PTR unsigned char [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 12
		 -> STR_2(CODE[7]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_delay
    _sprintf->___lwmod
    _sprintf->___wmul
    _sprintf->_isdigit
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _LCD_init->_delay
    _LCD_cmd->_delay
    _LCD_disp->_delay
    _LCD_data->_delay

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_conversion
    _conversion->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Set_Cursor->_Lcd_Cmd
    _LCD_init->_LCD_cmd
    _LCD_disp->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   12402
                                             30 BANK0      1     1      0
                            _LCD_cmd
                           _LCD_disp
                           _LCD_init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _config
                         _conversion
                              _delay
                           _i2c_NACK
                           _i2c_init
                      _i2c_rep_start
                             _i2c_rx
                           _i2c_send
                           _i2c_stop
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (1) _i2c_stop                                             0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (1) _i2c_send                                             1     1      0      22
                                              4 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (1) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_rx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_rep_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conversion                                           3     3      0    2447
                                             27 BANK0      3     3      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    20      3    2447
                                             12 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     426
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
               _eusart_enable_rx_isr
               _eusart_enable_tx_isr
                     _eusart_init_rx
                     _eusart_init_tx
 ---------------------------------------------------------------------------------
 (2) _eusart_init_tx                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_init_rx                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_enable_tx_isr                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eusart_enable_rx_isr                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     233
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     493
                                              1 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      31
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0    2613
                            _LCD_cmd
                              _delay
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0    1322
                                              0 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_disp                                             5     5      0    3981
                                              8 BANK0      5     5      0
                           _LCD_data
                            ___awdiv
                            ___awmod
                              _delay
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_data                                             1     1      0    1322
                                              0 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     0      2    1291
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_cmd
     _delay
   _LCD_disp
     _LCD_data
       _delay
     ___awdiv
     ___awmod
     _delay
   _LCD_init
     _LCD_cmd
       _delay
     _delay
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _config
     _eusart_enable_rx_isr
     _eusart_enable_tx_isr
     _eusart_init_rx
     _eusart_init_tx
   _conversion
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _delay
   _i2c_NACK
   _i2c_init
   _i2c_rep_start
   _i2c_rx
   _i2c_send
     _i2c_wait
   _i2c_stop
     _i2c_wait
   _i2c_wait

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      32       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      28       5       50.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      32      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 23:07:34 2021

                            _r 0046                              pc 0002                             _BF 04A0  
                           l89 058B                             l98 0636                   ___awdiv@sign 0025  
                           _cc 0043                             fsr 0004            ___wmul@multiplicand 0022  
                          l100 063C                            l101 063D                            l110 0631  
                          l104 0641                            l113 0635                            l122 0625  
                          l107 0645                            l131 05D5                            l140 05B2  
                          l212 0510                            l116 061D                            l125 062C  
                          l119 0621                            l152 05F6                            l232 059F  
                          l128 05CA                            l170 0470                            l173 0384  
                          l149 0536                            l510 02D9                            l158 04C2  
                          l182 0605                            l342 0103                            l167 0614  
                          l191 05E6                            l176 0571                            l185 064B  
                          l353 01AB                            l194 0651                            l179 0554  
                          l523 0334                            l357 04D1                            l359 04E9  
                          l810 05C4                            l629 03CA                            l639 0444  
                          _RD2 0042                            _RD3 0043                            _PEN 048A  
                          u720 05BB                            u721 05BA                            u730 05C1  
                          u731 05C0                            u900 0440                            _SEN 0488  
                          u901 043F                            u910 063C                            u911 063B  
                          u850 0411                            u851 0410                            u870 0423  
                          u871 0422                            u880 042D                            u881 042C  
                          u865 0415                            u885 0429                            u895 0434  
                          _isr 03CB                            fsr0 0004                            indf 0000  
                 ___awmod@sign 0025                __end_of_LCD_cmd 0572                           l2000 0039  
                         l2010 006A                           l2002 003E                           l2100 028C  
                         l2020 00B0                           l2012 007D                           l2004 0041  
                         l2110 02A2                           l2102 028E                           l2030 00C9  
                         l2022 00B8                           l2014 0081                           l2006 0051  
                         l2120 02C5                           l2112 02A6                           l2104 0294  
                         l2200 0464                           l1400 05B5                           l2040 00E7  
                         l2024 00BC                           l2008 0055                           l2114 02B7  
                         l2106 0297                           l2122 02CB                           l2130 02DA  
                         l2202 046A                           l1402 05BB                           l2050 011A  
                         l2042 00F1                           l2026 00C0                           l2018 0091  
                         l2124 02D0                           l2116 02BD                           l2108 029E  
                         l2140 02EC                           l2132 02DD                           l2204 0338  
                         l1404 05C1                           l2060 013B                           l2052 011E  
                         l2044 00F7                           l2036 00CB                           l2028 00C4  
                         l2126 02D5                           l2118 02BE                           l2150 0305  
                         l2142 02F1                           l2134 02E1                           l1510 05F7  
                         l1406 05C3                           l2070 0181                           l2062 0141  
                         l2054 0124                           l2046 00FD                           l2206 058C  
                         l2230 01C6                           l2152 0309                           l2144 02F7  
                         l2160 0326                           l2136 02E6                           l1520 0601  
                         l1512 05FA                           l2072 0188                           l2064 0148  
                         l2056 012B                           l2048 010E                           l2240 01F5  
                         l2232 01D8                           l2090 0278                           l2162 032B  
                         l2154 0313                           l2146 02FA                           l2138 02E8  
                         l2170 0519                           l1530 05DB                           l1522 0604  
                         l1514 05FC                           l1450 0409                           l2074 018C  
                         l2066 014C                           l2058 012F                           l2250 0217  
                         l2242 01FA                           l2234 01E1                           l2226 01AC  
                         l2092 027D                           l2164 0330                           l2156 0319  
                         l2148 0301                           l2172 051E                           l2180 049D  
                         l1540 064C                           l1524 0646                           l1532 05DC  
                         l1516 05FD                           l1460 0423                           l1452 0411  
                         l2068 0151                           l2076 0195                           l2260 0238  
                         l2252 021B                           l2244 0203                           l2236 01E6  
                         l2228 01C0                           l2094 027F                           l2086 0271  
                         l2158 0320                           l2190 044B                           l2174 0525  
                         l2182 04A0                           l1534 05DD                           l1526 05D6  
                         l1518 05FE                           l1462 042D                           l1454 0414  
                         l2078 01A7                           l2270 0260                           l2262 023D  
                         l2254 0220                           l2246 0209                           l2238 01EF  
                         l2096 0283                           l2088 0274                           l2192 044E  
                         l2176 052B                           l2168 0514                           l2184 04AD  
                         l1536 05E0                           l1528 05D9                           l1800 0506  
                         l1464 0433                           l1456 041B                           l1720 0579  
                         l1472 0636                           l2272 0268                           l2264 0246  
                         l2256 0229                           l2248 020E                           l2098 0288  
                         l2194 044F                           l2178 0530                           l2186 04B5  
                         l1538 05E3                           l1802 050B                           l1466 043A  
                         l1458 041F                           l1730 062D                           l1722 057D  
                         l2266 024B                           l2258 0233                           l2196 0458  
                         l2188 0445                           l1468 0440                           l1724 0584  
                         l1716 0572                           l1732 0615                           l2268 0254  
                         l2198 045E                           l1398 05B4                           l2294 00A5  
                         l1726 0587                           l1718 0576                           l1742 05C6  
                         l1734 061A                           l1920 04C5                           l1728 063E  
                         l1736 0622                           l1744 05D0                           l1914 0606  
                         l1922 04CB                           l1738 0629                           l1916 0606  
                         l1940 0399                           l1932 0385                           l1924 04D8  
                         l1790 04F2                           l1950 03B9                           l1942 039D  
                         l1934 0389                           l1926 04DF                           l1918 04C3  
                         l1960 05A4                           l1792 04F3                           l1784 04EA  
                         l1952 03C0                           l1944 03A1                           l1936 038F  
                         l1928 04E5                           l1962 05A6                           l1970 05ED  
                         l1794 04F4                           l1786 04EE                           l1946 03B2  
                         l1938 0392                           l1954 03C6                           l1980 0565  
                         l1964 05AF                           l1972 05F3                           l1796 04F7  
                         l1788 04EF                           l1948 03B8                           l1990 0548  
                         l1982 0568                           l1974 0558                           l1958 05A3  
                         l1966 05E8                           l1798 04FC                           l1992 054B  
                         l1984 053A                           l1976 055A                           l1968 05EB  
                         l1986 053C                           l1978 055C                           l1994 0027  
                         l1988 053F                           l1996 002C                           l1998 0032  
                         ?_isr 0070                           STR_1 0481                           STR_2 048D  
                         STR_3 0494                           u1400 0614                           u1401 0613  
                         u1410 04CB                           u1250 0645                           u1411 04CA  
                         u1251 0644                           u1260 0635                           u1261 0634  
                         u1510 03C6                           u1270 0621                           u1511 03C5  
                         u1271 0620                           u1440 04E5                           u1600 010E  
                         u1520 0032                           u1280 0629                           u1505 03BA  
                         u1441 04E4                           u1425 04D2                           u1601 010D  
                         u1521 0031                           u1281 0628                           u1450 038F  
                         u1610 0124                           u1530 0051                           u1290 05D0  
                         u1451 038E                           u1435 04D9                           u1611 0123  
                         u1531 0050                           u1291 05CF                           u1700 02A6  
                         u1620 013B                           u1540 0091                           u1701 02A5  
                         u1621 013A                           u1605 010A                           u1541 0090  
                         u1470 03A1                           u1630 0141                           u1550 00C0  
                         u1471 03A0                           u1631 0140                           u1551 00BF  
                         u1720 02B7                           u1800 0309                           u1640 0195  
                         u1560 00E6                           u1721 02B6                           u1801 0308  
                         u1465 0393                           u1641 0194                           u1561 00E5  
                         u1810 0313                           u1490 03B2                           u1650 01A7  
                         u1570 00F1                           u1715 02A7                           u1811 0312  
                         u1491 03B1                           u1651 01A6                           u1571 00F0  
                         u1740 02CB                           u1660 0278                           u1580 00F7  
                         u1741 02CA                           u1725 02B3                           u1661 0277  
                         u1485 03A2                           u1581 00F6                           u1565 00E2  
                         u1750 02D0                           u1670 0283                           u1830 0326  
                         u1590 00FD                           u1751 02CF                           u1735 02BF  
                         u1671 0282                           u1831 0325                           u1815 030F  
                         u1495 03AE                           u1591 00FC                           u1680 0294  
                         u1840 032B                           u1760 02E1                           u1681 0293  
                         u1841 032A                           u1825 031A                           u1761 02E0  
                         u1770 02EC                           u1850 0519                           u1771 02EB  
                         u1851 0518                           u1780 02F7                           u1860 052B  
                         u1781 02F6                           u1861 052A                           u1870 04C2  
                         u1695 0298                           u1871 04C1                           u1795 02FB  
                         u1887 05F0                           u1897 05AB                           _RCEN 048B  
                         _RSEN 0489              ?_Lcd_Write_String 0070                           _main 01AC  
                         _temp 003F                           btemp 007E                           start 000E  
           ??_Lcd_Write_String 0076                __end_of_Lcd_Cmd 05B3                  _i2c_rep_start 063E  
                        ??_isr 0070               __end_of_LCD_data 0555               __end_of_LCD_disp 0385  
             __end_of_LCD_init 0471                          ?_main 0070                          _ACKEN 048C  
                        _ACKDT 048D                __end_of___awdiv 02DA                __end_of___awmod 0335  
                        _ANSEL 0188                ___awdiv@divisor 0020                __end_of___lwdiv 03CB  
                        i1l221 0400                __end_of___lwmod 0445                ___awdiv@counter 0024  
                        _RCREG 001A                          _SPBRG 0099                          _PORTB 0006  
                        _PORTC 0007                          _PORTE 0009        __size_of_Lcd_Set_Cursor 0026  
                        _TRISB 0086                          _TRISE 0089                          _SSPIF 0063  
                        _TXREG 0019                          _delay 0606                          _datos 0047  
              __end_of_dpowers 0481                __end_of_isdigit 05C5                          pclath 000A  
                        status 0003                          wtemp0 007E                __end_of_sprintf 01AC  
             ??_eusart_init_rx 0074               ??_eusart_init_tx 0074                __initialization 0011  
               ?_i2c_rep_start 0070               __end_of_i2c_NACK 0636   __end_of_eusart_enable_rx_isr 0652  
 __end_of_eusart_enable_tx_isr 064C                   __end_of_main 0271               __end_of_i2c_init 058C  
             __end_of_i2c_send 05D6               __end_of_i2c_wait 063E               __end_of_i2c_stop 0622  
                       ??_main 003E                      ??_LCD_cmd 0076                         ?_delay 0074  
             ___awdiv@dividend 0022                         _ANSELH 0189                         i1l1830 03D7  
                       i1l1840 03F6                         i1l1832 03DC                         i1l1834 03E2  
                       i1l1842 03F7                         i1l1826 03CB                         i1l1844 03FC  
                       i1l1836 03E6                         i1l1828 03D1                         i1l1838 03EC  
                       u133_20 03D1                         u133_21 03D0                         u134_20 03D7  
                       u134_21 03D6                         u135_20 03DC                         u135_21 03DB  
                       u136_20 03EC                         u136_21 03EB                         u137_20 03F2  
                       u137_21 03F0                         u138_20 03F3                         u139_20 03FC  
                       u139_21 03FB                         _OSCCON 008F                      ??_Lcd_Cmd 0074  
                       _SPBRGH 009A        __size_of_Lcd_Write_Char 0010                         _SSPADD 0093  
                       _TRISC3 043B                         _TRISC4 043C                         _TRISD2 0442  
                       _TRISD3 0443                         _SSPBUF 0013                         _SSPCON 0014  
                       _i2c_rx 0622                         ___wmul 04C3                      ??___awdiv 0074  
                    ??___awmod 0074                      ??___lwdiv 0074                      ??___lwmod 0075  
                       _config 04EA                         delay@x 0074               ___awdiv@quotient 0026  
              ___awmod@divisor 0020                ___awmod@counter 0024                      ??_isdigit 0074  
                       saved_w 007E                      ??_sprintf 002F                   LCD_disp@temp 002B  
              Lcd_Set_Cursor@a 0023                Lcd_Set_Cursor@b 0021        __end_of__initialization 0020  
                    ?_LCD_data 0070                      ?_LCD_disp 0070                      ?_LCD_init 0070  
              ??_i2c_rep_start 0074                 __pcstackCOMMON 0070                  __end_of_delay 0615  
                    LCD_data@y 0020                      LCD_disp@y 002A                 _Lcd_Set_Cursor 0511  
                      ??_delay 0076                      ?_i2c_NACK 0070           _eusart_enable_rx_isr 064C  
         _eusart_enable_tx_isr 0646                   sprintf@width 0038                     __pbssBANK0 003F  
                    ?_i2c_init 0070                      ?_i2c_send 0070                      ?_i2c_wait 0070  
                    ?_i2c_stop 0070                     ??_LCD_data 0076                     ??_LCD_disp 0028  
                   ??_LCD_init 0076                        ?_i2c_rx 0070                     __pmaintext 01AC  
                      ?___wmul 0020                     __pintentry 0004                        ?_config 0070  
    __size_of_Lcd_Write_String 0029         __end_of_Lcd_Set_Cursor 0537                        _LCD_cmd 0555  
        ?_eusart_enable_rx_isr 0070          ?_eusart_enable_tx_isr 0070                        _SSPCON2 0091  
                   ??_i2c_NACK 0074                        _SSPSTAT 0094                     __stringtab 0471  
                   ??_i2c_init 0074                     ??_i2c_send 0074                     ??_i2c_wait 0074  
               _Lcd_Write_Char 05E7                        _Lcd_Cmd 05A0                     ??_i2c_stop 0074  
                   _conversion 058C                __size_of_i2c_rx 000B                        ___awdiv 0271  
                      ___awmod 02DA                __size_of___wmul 0027                        ___lwdiv 0385  
                      ___lwmod 0409                __size_of_config 0027                ?_Lcd_Set_Cursor 0021  
                      __ptext1 0615                        __ptext2 05C5                        __ptext3 0636  
                      __ptext4 0622                        __ptext5 063E                        __ptext6 0572  
                      __ptext7 062D                        __ptext8 058C                        __ptext9 0024  
                      _bufferr 0079                        _dpowers 0477                        _isdigit 05B3  
                 __size_of_isr 003E               ___awmod@dividend 0022                        _sprintf 0024  
                      _str_pos 0077         __end_of_Lcd_Write_Char 05F7           end_of_initialization 0020  
                    _RCSTAbits 0018                      _PORTDbits 0008                      _TRISCbits 0087  
       ??_eusart_enable_rx_isr 0074         ??_eusart_enable_tx_isr 0074                ?_Lcd_Write_Char 0070  
            Lcd_Write_String@a 0022              Lcd_Write_String@i 0020                    ?_conversion 0070  
                    _TXSTAbits 0098                      i2c_send@c 0074              __size_of_LCD_data 001E  
            __size_of_LCD_disp 0050              __size_of_LCD_init 002C                 __end_of_i2c_rx 062D  
               __end_of___wmul 04EA               _Lcd_Write_String 049A        __size_of_eusart_init_rx 0011  
      __size_of_eusart_init_tx 000F                 __end_of_config 0511            start_initialization 0011  
                  __end_of_isr 0409              __size_of_i2c_NACK 0009              __size_of_i2c_init 001A  
            __size_of_i2c_send 0011              __size_of_i2c_wait 0008              __size_of_i2c_stop 000D  
                     ??_i2c_rx 0074          __end_of_i2c_rep_start 0646                       ??___wmul 0074  
                     ??_config 0074                Lcd_Write_Char@a 0075            __size_of_conversion 0014  
                     ?_LCD_cmd 0070                    __pbssCOMMON 0076                      ___latbits 0002  
                __pcstackBANK0 0020                       LCD_cmd@y 0020                       ?_Lcd_Cmd 0070  
                  sprintf@flag 0034                    sprintf@prec 0033               ___lwdiv@dividend 0022  
             ??_Lcd_Set_Cursor 0022                       ?___awdiv 0020                       ?___awmod 0020  
                     ?___lwdiv 0020                       ?___lwmod 0027                      __pstrings 0471  
                     ?_isdigit 0070               ___lwdiv@quotient 0025                 __size_of_delay 000F  
                     ?_sprintf 002C              interrupt_function 0004                 ___wmul@product 0074  
                     _LCD_data 0537                       _LCD_disp 0335                       _LCD_init 0445  
                     _PIE1bits 008C                       Lcd_Cmd@a 0020                       _PIR1bits 000C  
                    _uart_data 0078                      _uart_cont 0045                 _eusart_init_rx 05D6  
               _eusart_init_tx 05F7                    __stringbase 0476              ___wmul@multiplier 0020  
             ??_Lcd_Write_Char 0074               __size_of_LCD_cmd 001D                       _i2c_NACK 062D  
     __end_of_Lcd_Write_String 04C3                       _i2c_init 0572                       _i2c_send 05C5  
                     _i2c_wait 0636                       _i2c_stop 0615                   ??_conversion 003B  
             __size_of_Lcd_Cmd 0013         __end_of_eusart_init_rx 05E7         __end_of_eusart_init_tx 0606  
             __size_of___awdiv 0069               __size_of___awmod 005B               __size_of___lwdiv 0046  
             __size_of___lwmod 003C             __end_of__stringtab 0477                    _isdigit$862 0074  
                   sprintf@val 0035             __end_of_conversion 05A0               __size_of_isdigit 0012  
              ___lwdiv@divisor 0020                ___lwdiv@counter 0024                       __ptext10 05B3  
                     __ptext11 04C3                       __ptext20 05E7                       __ptext12 0409  
                     __ptext21 0511                       __ptext13 0385                       __ptext30 03CB  
                     __ptext22 05A0                       __ptext14 04EA                       __ptext23 0445  
                     __ptext15 05F7                       __ptext24 0555                       __ptext16 05D6  
                     __ptext25 0335                       __ptext17 0646                       __ptext26 02DA  
                     __ptext18 064C                       __ptext27 0271                       __ptext19 049A  
                     __ptext28 0537                       __ptext29 0606  __size_of_eusart_enable_rx_isr 0006  
__size_of_eusart_enable_tx_isr 0006                    _eusart_flag 0076               __size_of_sprintf 0188  
                __size_of_main 00C5                ?_eusart_init_rx 0070                ?_eusart_init_tx 0070  
                   _INTCONbits 000B                       isdigit@c 0075                       intlevel1 0000  
                    sprintf@ap 0032                      sprintf@sp 0037               ___lwmod@dividend 0029  
                    stringcode 0471             Lcd_Set_Cursor@temp 0024                       sprintf@c 003A  
                     sprintf@f 002C                ___lwmod@divisor 0027                ___lwmod@counter 002B  
                     stringdir 0471                       stringtab 0471         __size_of_i2c_rep_start 0008  
