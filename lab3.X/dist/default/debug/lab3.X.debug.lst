

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 11 22:47:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236                           
   237                           	psect	strings
   238  1000                     __pstrings:
   239  1000                     stringtab:
   240  1000                     __stringtab:
   241                           
   242                           ;	String table - string pointers are 1 byte each
   243  1000  1BFF               	btfsc	btemp+1,7
   244  1001  280A               	ljmp	stringcode
   245  1002  1383               	bcf	3,7
   246  1003  187F               	btfsc	btemp+1,0
   247  1004  1783               	bsf	3,7
   248  1005  0800               	movf	0,w
   249  1006  0A84               	incf	4,f
   250  1007  1903               	skipnz
   251  1008  0AFF               	incf	btemp+1,f
   252  1009  0008               	return
   253  100A                     stringcode:
   254  100A                     stringdir:
   255  100A  3010               	movlw	high stringdir
   256  100B  008A               	movwf	10
   257  100C  0804               	movf	4,w
   258  100D  0A84               	incf	4,f
   259  100E  0782               	addwf	2,f
   260  100F                     __stringbase:
   261  100F  3400               	retlw	0
   262  1010                     __end_of__stringtab:
   263  1010                     __powers_:
   264  1010  3400               	retlw	0
   265  1011  3400               	retlw	0
   266  1012  3480               	retlw	128
   267  1013  343F               	retlw	63
   268  1014  3400               	retlw	0
   269  1015  3400               	retlw	0
   270  1016  3420               	retlw	32
   271  1017  3441               	retlw	65
   272  1018  3400               	retlw	0
   273  1019  3400               	retlw	0
   274  101A  34C8               	retlw	200
   275  101B  3442               	retlw	66
   276  101C  3400               	retlw	0
   277  101D  3400               	retlw	0
   278  101E  347A               	retlw	122
   279  101F  3444               	retlw	68
   280  1020  3400               	retlw	0
   281  1021  3440               	retlw	64
   282  1022  341C               	retlw	28
   283  1023  3446               	retlw	70
   284  1024  3400               	retlw	0
   285  1025  3450               	retlw	80
   286  1026  34C3               	retlw	195
   287  1027  3447               	retlw	71
   288  1028  3400               	retlw	0
   289  1029  3424               	retlw	36
   290  102A  3474               	retlw	116
   291  102B  3449               	retlw	73
   292  102C  3480               	retlw	128
   293  102D  3496               	retlw	150
   294  102E  3418               	retlw	24
   295  102F  344B               	retlw	75
   296  1030  3420               	retlw	32
   297  1031  34BC               	retlw	188
   298  1032  34BE               	retlw	190
   299  1033  344C               	retlw	76
   300  1034  3428               	retlw	40
   301  1035  346B               	retlw	107
   302  1036  346E               	retlw	110
   303  1037  344E               	retlw	78
   304  1038  34F9               	retlw	249
   305  1039  3402               	retlw	2
   306  103A  3415               	retlw	21
   307  103B  3450               	retlw	80
   308  103C  34EC               	retlw	236
   309  103D  3478               	retlw	120
   310  103E  34AD               	retlw	173
   311  103F  3460               	retlw	96
   312  1040  34CA               	retlw	202
   313  1041  34F2               	retlw	242
   314  1042  3449               	retlw	73
   315  1043  3471               	retlw	113
   316  1044                     __end_of__powers_:
   317  1044                     __npowers_:
   318  1044  3400               	retlw	0
   319  1045  3400               	retlw	0
   320  1046  3480               	retlw	128
   321  1047  343F               	retlw	63
   322  1048  34CD               	retlw	205
   323  1049  34CC               	retlw	204
   324  104A  34CC               	retlw	204
   325  104B  343D               	retlw	61
   326  104C  340A               	retlw	10
   327  104D  34D7               	retlw	215
   328  104E  3423               	retlw	35
   329  104F  343C               	retlw	60
   330  1050  346F               	retlw	111
   331  1051  3412               	retlw	18
   332  1052  3483               	retlw	131
   333  1053  343A               	retlw	58
   334  1054  3417               	retlw	23
   335  1055  34B7               	retlw	183
   336  1056  34D1               	retlw	209
   337  1057  3438               	retlw	56
   338  1058  34AC               	retlw	172
   339  1059  34C5               	retlw	197
   340  105A  3427               	retlw	39
   341  105B  3437               	retlw	55
   342  105C  34BD               	retlw	189
   343  105D  3437               	retlw	55
   344  105E  3486               	retlw	134
   345  105F  3435               	retlw	53
   346  1060  3495               	retlw	149
   347  1061  34BF               	retlw	191
   348  1062  34D6               	retlw	214
   349  1063  3433               	retlw	51
   350  1064  3477               	retlw	119
   351  1065  34CC               	retlw	204
   352  1066  342B               	retlw	43
   353  1067  3432               	retlw	50
   354  1068  345F               	retlw	95
   355  1069  3470               	retlw	112
   356  106A  3489               	retlw	137
   357  106B  3430               	retlw	48
   358  106C  34FF               	retlw	255
   359  106D  34E6               	retlw	230
   360  106E  34DB               	retlw	219
   361  106F  342E               	retlw	46
   362  1070  3408               	retlw	8
   363  1071  34E5               	retlw	229
   364  1072  343C               	retlw	60
   365  1073  341E               	retlw	30
   366  1074  3460               	retlw	96
   367  1075  3442               	retlw	66
   368  1076  34A2               	retlw	162
   369  1077  340D               	retlw	13
   370  1078                     __end_of__npowers_:
   371  1078                     _dpowers:
   372  1078  3401               	retlw	1
   373  1079  3400               	retlw	0
   374  107A  3400               	retlw	0
   375  107B  3400               	retlw	0
   376  107C  340A               	retlw	10
   377  107D  3400               	retlw	0
   378  107E  3400               	retlw	0
   379  107F  3400               	retlw	0
   380  1080  3464               	retlw	100
   381  1081  3400               	retlw	0
   382  1082  3400               	retlw	0
   383  1083  3400               	retlw	0
   384  1084  34E8               	retlw	232
   385  1085  3403               	retlw	3
   386  1086  3400               	retlw	0
   387  1087  3400               	retlw	0
   388  1088  3410               	retlw	16
   389  1089  3427               	retlw	39
   390  108A  3400               	retlw	0
   391  108B  3400               	retlw	0
   392  108C  34A0               	retlw	160
   393  108D  3486               	retlw	134
   394  108E  3401               	retlw	1
   395  108F  3400               	retlw	0
   396  1090  3440               	retlw	64
   397  1091  3442               	retlw	66
   398  1092  340F               	retlw	15
   399  1093  3400               	retlw	0
   400  1094  3480               	retlw	128
   401  1095  3496               	retlw	150
   402  1096  3498               	retlw	152
   403  1097  3400               	retlw	0
   404  1098  3400               	retlw	0
   405  1099  34E1               	retlw	225
   406  109A  34F5               	retlw	245
   407  109B  3405               	retlw	5
   408  109C  3400               	retlw	0
   409  109D  34CA               	retlw	202
   410  109E  349A               	retlw	154
   411  109F  343B               	retlw	59
   412  10A0                     __end_of_dpowers:
   413  001E                     _ADRESH	set	30
   414  0006                     _PORTB	set	6
   415  0008                     _PORTDbits	set	8
   416  000C                     _PIR1bits	set	12
   417  000B                     _INTCONbits	set	11
   418  001F                     _ADCON0bits	set	31
   419  008C                     _PIE1bits	set	140
   420  009F                     _ADCON1bits	set	159
   421  0088                     _TRISD	set	136
   422  0086                     _TRISB	set	134
   423  0085                     _TRISA	set	133
   424  0188                     _ANSELbits	set	392
   425  0189                     _ANSELH	set	393
   426  0188                     _ANSEL	set	392
   427  10A0                     STR_2:
   428  10A0  3446               	retlw	70	;'F'
   429  10A1  3465               	retlw	101	;'e'
   430  10A2  3472               	retlw	114	;'r'
   431  10A3  346E               	retlw	110	;'n'
   432  10A4  3461               	retlw	97	;'a'
   433  10A5  346E               	retlw	110	;'n'
   434  10A6  3464               	retlw	100	;'d'
   435  10A7  346F               	retlw	111	;'o'
   436  10A8  3446               	retlw	70	;'F'
   437  10A9  3469               	retlw	105	;'i'
   438  10AA  3467               	retlw	103	;'g'
   439  10AB  3475               	retlw	117	;'u'
   440  10AC  3465               	retlw	101	;'e'
   441  10AD  3472               	retlw	114	;'r'
   442  10AE  346F               	retlw	111	;'o'
   443  10AF  3461               	retlw	97	;'a'
   444  10B0  3400               	retlw	0
   445  10B1                     STR_1:
   446  10B1  3444               	retlw	68	;'D'
   447  10B2  3449               	retlw	73	;'I'
   448  10B3  3447               	retlw	71	;'G'
   449  10B4  3449               	retlw	73	;'I'
   450  10B5  3454               	retlw	84	;'T'
   451  10B6  3441               	retlw	65	;'A'
   452  10B7  344C               	retlw	76	;'L'
   453  10B8  3420               	retlw	32	;' '
   454  10B9  3432               	retlw	50	;'2'
   455  10BA  3400               	retlw	0
   456  10BB                     STR_3:
   457  10BB  3456               	retlw	86	;'V'
   458  10BC  346F               	retlw	111	;'o'
   459  10BD  346C               	retlw	108	;'l'
   460  10BE  3474               	retlw	116	;'t'
   461  10BF  3431               	retlw	49	;'1'
   462  10C0  3400               	retlw	0
   463  10C1                     STR_4:
   464  10C1  3456               	retlw	86	;'V'
   465  10C2  346F               	retlw	111	;'o'
   466  10C3  346C               	retlw	108	;'l'
   467  10C4  3474               	retlw	116	;'t'
   468  10C5  3432               	retlw	50	;'2'
   469  10C6  3400               	retlw	0
   470  10C7                     STR_5:
   471  10C7  3425               	retlw	37	;'%'
   472  10C8  342E               	retlw	46	;'.'
   473  10C9  3433               	retlw	51	;'3'
   474  10CA  3466               	retlw	102	;'f'
   475  10CB  3400               	retlw	0
   476  10C7                     
   477                           	psect	cinit
   478  000F                     start_initialization:	
   479                           ; #config settings
   480                           
   481  000F                     __initialization:
   482                           
   483                           ; Clear objects allocated to BANK1
   484  000F  1683               	bsf	3,5	;RP0=1, select bank1
   485  0010  1303               	bcf	3,6	;RP1=0, select bank1
   486  0011  01CE               	clrf	__pbssBANK1& (0+127)
   487  0012  01CF               	clrf	(__pbssBANK1+1)& (0+127)
   488  0013  01D0               	clrf	(__pbssBANK1+2)& (0+127)
   489  0014  01D1               	clrf	(__pbssBANK1+3)& (0+127)
   490  0015  01D2               	clrf	(__pbssBANK1+4)& (0+127)
   491  0016  01D3               	clrf	(__pbssBANK1+5)& (0+127)
   492  0017  01D4               	clrf	(__pbssBANK1+6)& (0+127)
   493  0018  01D5               	clrf	(__pbssBANK1+7)& (0+127)
   494  0019  01D6               	clrf	(__pbssBANK1+8)& (0+127)
   495  001A  01D7               	clrf	(__pbssBANK1+9)& (0+127)
   496  001B  01D8               	clrf	(__pbssBANK1+10)& (0+127)
   497  001C  01D9               	clrf	(__pbssBANK1+11)& (0+127)
   498  001D  01DA               	clrf	(__pbssBANK1+12)& (0+127)
   499  001E                     end_of_initialization:	
   500                           ;End of C runtime variable initialization code
   501                           
   502  001E                     __end_of__initialization:
   503  001E  0183               	clrf	3
   504  001F  160A  158A  2E6B   	ljmp	_main	;jump to C main() function
   505                           
   506                           	psect	bssBANK1
   507  00CE                     __pbssBANK1:
   508  00CE                     _vpot2:
   509  00CE                     	ds	4
   510  00D2                     _vpot1:
   511  00D2                     	ds	4
   512  00D6                     _b:
   513  00D6                     	ds	2
   514  00D8                     _c:
   515  00D8                     	ds	2
   516  00DA                     _buffer:
   517  00DA                     	ds	1
   518                           
   519                           	psect	cstackBANK1
   520  00A0                     __pcstackBANK1:
   521  00A0                     ?___flsub:
   522  00A0                     ___flsub@a:	
   523                           ; 4 bytes @ 0x0
   524                           
   525                           
   526                           ; 4 bytes @ 0x0
   527  00A0                     	ds	4
   528  00A4                     ___flsub@b:
   529                           
   530                           ; 4 bytes @ 0x4
   531  00A4                     	ds	4
   532  00A8                     ?_sprintf:
   533  00A8                     sprintf@f:	
   534                           ; 2 bytes @ 0x8
   535                           
   536                           
   537                           ; 1 bytes @ 0x8
   538  00A8                     	ds	5
   539  00AD                     ??_sprintf:
   540                           
   541                           ; 1 bytes @ 0xD
   542  00AD                     	ds	5
   543  00B2                     _sprintf$988:
   544                           
   545                           ; 4 bytes @ 0x12
   546  00B2                     	ds	4
   547  00B6                     sprintf@ap:
   548                           
   549                           ; 1 bytes @ 0x16
   550  00B6                     	ds	1
   551  00B7                     sprintf@flag:
   552                           
   553                           ; 2 bytes @ 0x17
   554  00B7                     	ds	2
   555  00B9                     sprintf@val:
   556                           
   557                           ; 4 bytes @ 0x19
   558  00B9                     	ds	4
   559  00BD                     sprintf@eexp:
   560                           
   561                           ; 2 bytes @ 0x1D
   562  00BD                     	ds	2
   563  00BF                     sprintf@tmpval:
   564                           
   565                           ; 4 bytes @ 0x1F
   566  00BF                     	ds	4
   567  00C3                     sprintf@sp:
   568                           
   569                           ; 1 bytes @ 0x23
   570  00C3                     	ds	1
   571  00C4                     sprintf@prec:
   572                           
   573                           ; 2 bytes @ 0x24
   574  00C4                     	ds	2
   575  00C6                     sprintf@fval:
   576                           
   577                           ; 4 bytes @ 0x26
   578  00C6                     	ds	4
   579  00CA                     sprintf@c:
   580                           
   581                           ; 1 bytes @ 0x2A
   582  00CA                     	ds	1
   583  00CB                     ??_main:
   584                           
   585                           ; 1 bytes @ 0x2B
   586  00CB                     	ds	3
   587                           
   588                           	psect	cstackCOMMON
   589  0070                     __pcstackCOMMON:
   590  0070                     ?_isdigit:
   591  0070                     ?_conversion:	
   592                           ; 1 bit 
   593                           
   594  0070                     ?_config:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_Lcd_Cmd:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_Lcd_Write_Char:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_Lcd_Init:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_ISR:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ??_ISR:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_main:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_Lcd_Clear:	
   616                           ; 1 bytes @ 0x0
   617                           
   618                           
   619                           ; 2 bytes @ 0x0
   620  0070                     	ds	4
   621  0074                     ??_isdigit:
   622  0074                     ??__tdiv_to_l_:	
   623                           ; 1 bytes @ 0x4
   624                           
   625  0074                     ??__div_to_l_:	
   626                           ; 1 bytes @ 0x4
   627                           
   628  0074                     ??_config:	
   629                           ; 1 bytes @ 0x4
   630                           
   631  0074                     ??_Lcd_Cmd:	
   632                           ; 1 bytes @ 0x4
   633                           
   634  0074                     ??_Lcd_Write_Char:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0074                     ??___lldiv:	
   638                           ; 1 bytes @ 0x4
   639                           
   640  0074                     ??___fleq:	
   641                           ; 1 bytes @ 0x4
   642                           
   643  0074                     ??___flge:	
   644                           ; 1 bytes @ 0x4
   645                           
   646  0074                     ??___llmod:	
   647                           ; 1 bytes @ 0x4
   648                           
   649  0074                     ?__Umul8_16:	
   650                           ; 1 bytes @ 0x4
   651                           
   652  0074                     ?___wmul:	
   653                           ; 2 bytes @ 0x4
   654                           
   655  0074                     ?___awmod:	
   656                           ; 2 bytes @ 0x4
   657                           
   658  0074                     ?___lwmod:	
   659                           ; 2 bytes @ 0x4
   660                           
   661  0074                     ?___flneg:	
   662                           ; 2 bytes @ 0x4
   663                           
   664  0074                     __Umul8_16@multiplicand:	
   665                           ; 4 bytes @ 0x4
   666                           
   667  0074                     _isdigit$802:	
   668                           ; 1 bytes @ 0x4
   669                           
   670  0074                     ___wmul@multiplier:	
   671                           ; 1 bytes @ 0x4
   672                           
   673  0074                     ___awmod@divisor:	
   674                           ; 2 bytes @ 0x4
   675                           
   676  0074                     ___lwmod@divisor:	
   677                           ; 2 bytes @ 0x4
   678                           
   679  0074                     ___flneg@f1:	
   680                           ; 2 bytes @ 0x4
   681                           
   682                           
   683                           ; 4 bytes @ 0x4
   684  0074                     	ds	1
   685  0075                     Lcd_Write_Char@a:
   686  0075                     ___llmod@counter:	
   687                           ; 1 bytes @ 0x5
   688                           
   689  0075                     isdigit@c:	
   690                           ; 1 bytes @ 0x5
   691                           
   692  0075                     ___lldiv@quotient:	
   693                           ; 1 bytes @ 0x5
   694                           
   695                           
   696                           ; 4 bytes @ 0x5
   697  0075                     	ds	1
   698  0076                     ??__Umul8_16:
   699  0076                     ?_Lcd_Write_String:	
   700                           ; 1 bytes @ 0x6
   701                           
   702  0076                     Lcd_Cmd@a:	
   703                           ; 1 bytes @ 0x6
   704                           
   705  0076                     Lcd_Write_String@a:	
   706                           ; 1 bytes @ 0x6
   707                           
   708  0076                     ___wmul@multiplicand:	
   709                           ; 2 bytes @ 0x6
   710                           
   711  0076                     ___awmod@dividend:	
   712                           ; 2 bytes @ 0x6
   713                           
   714  0076                     ___lwmod@dividend:	
   715                           ; 2 bytes @ 0x6
   716                           
   717                           
   718                           ; 2 bytes @ 0x6
   719  0076                     	ds	1
   720  0077                     ??_Lcd_Clear:
   721  0077                     ?_Lcd_Set_Cursor:	
   722                           ; 1 bytes @ 0x7
   723                           
   724  0077                     ??_Lcd_Init:	
   725                           ; 1 bytes @ 0x7
   726                           
   727  0077                     Lcd_Set_Cursor@b:	
   728                           ; 1 bytes @ 0x7
   729                           
   730                           
   731                           ; 1 bytes @ 0x7
   732  0077                     	ds	1
   733  0078                     ??_Lcd_Set_Cursor:
   734  0078                     ??___wmul:	
   735                           ; 1 bytes @ 0x8
   736                           
   737  0078                     ??___awmod:	
   738                           ; 1 bytes @ 0x8
   739                           
   740  0078                     ??___flneg:	
   741                           ; 1 bytes @ 0x8
   742                           
   743  0078                     ??___lwmod:	
   744                           ; 1 bytes @ 0x8
   745                           
   746  0078                     Lcd_Write_String@i:	
   747                           ; 1 bytes @ 0x8
   748                           
   749  0078                     ___wmul@product:	
   750                           ; 2 bytes @ 0x8
   751                           
   752                           
   753                           ; 2 bytes @ 0x8
   754  0078                     	ds	1
   755  0079                     ___lldiv@counter:
   756  0079                     ___lwmod@counter:	
   757                           ; 1 bytes @ 0x9
   758                           
   759                           
   760                           ; 1 bytes @ 0x9
   761  0079                     	ds	1
   762  007A                     ??___flsub:
   763                           
   764                           	psect	cstackBANK0
   765  0020                     __pcstackBANK0:	
   766                           ; 1 bytes @ 0xA
   767                           
   768  0020                     ?___fleq:
   769  0020                     ?___flge:	
   770                           ; 1 bit 
   771                           
   772  0020                     ??_Lcd_Write_String:	
   773                           ; 1 bit 
   774                           
   775  0020                     ?___lwdiv:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0020                     ?__tdiv_to_l_:	
   779                           ; 2 bytes @ 0x0
   780                           
   781  0020                     ?__div_to_l_:	
   782                           ; 4 bytes @ 0x0
   783                           
   784  0020                     ?___lldiv:	
   785                           ; 4 bytes @ 0x0
   786                           
   787  0020                     ?___llmod:	
   788                           ; 4 bytes @ 0x0
   789                           
   790  0020                     Lcd_Set_Cursor@a:	
   791                           ; 4 bytes @ 0x0
   792                           
   793  0020                     ___awmod@counter:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0020                     ___lwdiv@divisor:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0020                     __Umul8_16@product:	
   800                           ; 2 bytes @ 0x0
   801                           
   802  0020                     ___lldiv@divisor:	
   803                           ; 2 bytes @ 0x0
   804                           
   805  0020                     __div_to_l_@f1:	
   806                           ; 4 bytes @ 0x0
   807                           
   808  0020                     ___fleq@ff1:	
   809                           ; 4 bytes @ 0x0
   810                           
   811  0020                     ___flge@ff1:	
   812                           ; 4 bytes @ 0x0
   813                           
   814  0020                     __tdiv_to_l_@f1:	
   815                           ; 4 bytes @ 0x0
   816                           
   817  0020                     ___llmod@divisor:	
   818                           ; 4 bytes @ 0x0
   819                           
   820                           
   821                           ; 4 bytes @ 0x0
   822  0020                     	ds	1
   823  0021                     Lcd_Set_Cursor@temp:
   824  0021                     ___awmod@sign:	
   825                           ; 1 bytes @ 0x1
   826                           
   827                           
   828                           ; 1 bytes @ 0x1
   829  0021                     	ds	1
   830  0022                     ?___awdiv:
   831  0022                     ___awdiv@divisor:	
   832                           ; 2 bytes @ 0x2
   833                           
   834  0022                     ___lwdiv@dividend:	
   835                           ; 2 bytes @ 0x2
   836                           
   837  0022                     __Umul8_16@word_mpld:	
   838                           ; 2 bytes @ 0x2
   839                           
   840                           
   841                           ; 2 bytes @ 0x2
   842  0022                     	ds	2
   843  0024                     ??___lwdiv:
   844  0024                     __Umul8_16@multiplier:	
   845                           ; 1 bytes @ 0x4
   846                           
   847  0024                     ___awdiv@dividend:	
   848                           ; 1 bytes @ 0x4
   849                           
   850  0024                     ___lldiv@dividend:	
   851                           ; 2 bytes @ 0x4
   852                           
   853  0024                     __div_to_l_@f2:	
   854                           ; 4 bytes @ 0x4
   855                           
   856  0024                     ___fleq@ff2:	
   857                           ; 4 bytes @ 0x4
   858                           
   859  0024                     ___flge@ff2:	
   860                           ; 4 bytes @ 0x4
   861                           
   862  0024                     __tdiv_to_l_@f2:	
   863                           ; 4 bytes @ 0x4
   864                           
   865  0024                     ___llmod@dividend:	
   866                           ; 4 bytes @ 0x4
   867                           
   868                           
   869                           ; 4 bytes @ 0x4
   870  0024                     	ds	1
   871  0025                     ___lwdiv@quotient:
   872                           
   873                           ; 2 bytes @ 0x5
   874  0025                     	ds	1
   875  0026                     ??___awdiv:
   876                           
   877                           ; 1 bytes @ 0x6
   878  0026                     	ds	1
   879  0027                     ___awdiv@counter:
   880  0027                     ___lwdiv@counter:	
   881                           ; 1 bytes @ 0x7
   882                           
   883                           
   884                           ; 1 bytes @ 0x7
   885  0027                     	ds	1
   886  0028                     ___awdiv@sign:
   887  0028                     __div_to_l_@quot:	
   888                           ; 1 bytes @ 0x8
   889                           
   890  0028                     __tdiv_to_l_@quot:	
   891                           ; 4 bytes @ 0x8
   892                           
   893                           
   894                           ; 4 bytes @ 0x8
   895  0028                     	ds	1
   896  0029                     ___awdiv@quotient:
   897                           
   898                           ; 2 bytes @ 0x9
   899  0029                     	ds	2
   900  002B                     ?___flmul:
   901  002B                     ?___xxtofl:	
   902                           ; 4 bytes @ 0xB
   903                           
   904  002B                     ___flmul@b:	
   905                           ; 4 bytes @ 0xB
   906                           
   907  002B                     ___xxtofl@val:	
   908                           ; 4 bytes @ 0xB
   909                           
   910                           
   911                           ; 4 bytes @ 0xB
   912  002B                     	ds	1
   913  002C                     __div_to_l_@cntr:
   914  002C                     __tdiv_to_l_@cntr:	
   915                           ; 1 bytes @ 0xC
   916                           
   917                           
   918                           ; 1 bytes @ 0xC
   919  002C                     	ds	1
   920  002D                     __div_to_l_@exp1:
   921  002D                     __tdiv_to_l_@exp1:	
   922                           ; 1 bytes @ 0xD
   923                           
   924                           
   925                           ; 1 bytes @ 0xD
   926  002D                     	ds	2
   927  002F                     ??___xxtofl:
   928  002F                     ___flmul@a:	
   929                           ; 1 bytes @ 0xF
   930                           
   931                           
   932                           ; 4 bytes @ 0xF
   933  002F                     	ds	4
   934  0033                     ??___flmul:
   935  0033                     ___xxtofl@sign:	
   936                           ; 1 bytes @ 0x13
   937                           
   938                           
   939                           ; 1 bytes @ 0x13
   940  0033                     	ds	1
   941  0034                     ___xxtofl@exp:
   942                           
   943                           ; 1 bytes @ 0x14
   944  0034                     	ds	1
   945  0035                     ___xxtofl@arg:
   946                           
   947                           ; 4 bytes @ 0x15
   948  0035                     	ds	3
   949  0038                     ___flmul@sign:
   950                           
   951                           ; 1 bytes @ 0x18
   952  0038                     	ds	1
   953  0039                     ___flmul@grs:
   954                           
   955                           ; 4 bytes @ 0x19
   956  0039                     	ds	4
   957  003D                     ___flmul@aexp:
   958                           
   959                           ; 1 bytes @ 0x1D
   960  003D                     	ds	1
   961  003E                     ___flmul@bexp:
   962                           
   963                           ; 1 bytes @ 0x1E
   964  003E                     	ds	1
   965  003F                     ___flmul@prod:
   966                           
   967                           ; 4 bytes @ 0x1F
   968  003F                     	ds	4
   969  0043                     ___flmul@temp:
   970                           
   971                           ; 2 bytes @ 0x23
   972  0043                     	ds	2
   973  0045                     ?_fround:
   974  0045                     ?_scale:	
   975                           ; 4 bytes @ 0x25
   976                           
   977                           
   978                           ; 4 bytes @ 0x25
   979  0045                     	ds	4
   980  0049                     ??_fround:
   981  0049                     ??_scale:	
   982                           ; 1 bytes @ 0x29
   983                           
   984                           
   985                           ; 1 bytes @ 0x29
   986  0049                     	ds	7
   987  0050                     _fround$986:
   988                           
   989                           ; 4 bytes @ 0x30
   990  0050                     	ds	3
   991  0053                     _scale$987:
   992                           
   993                           ; 4 bytes @ 0x33
   994  0053                     	ds	1
   995  0054                     _fround$985:
   996                           
   997                           ; 4 bytes @ 0x34
   998  0054                     	ds	3
   999  0057                     scale@scl:
  1000                           
  1001                           ; 1 bytes @ 0x37
  1002  0057                     	ds	1
  1003  0058                     ?___fltol:
  1004  0058                     fround@prec:	
  1005                           ; 4 bytes @ 0x38
  1006                           
  1007  0058                     ___fltol@f1:	
  1008                           ; 1 bytes @ 0x38
  1009                           
  1010                           
  1011                           ; 4 bytes @ 0x38
  1012  0058                     	ds	1
  1013  0059                     ?___fladd:
  1014  0059                     ___fladd@b:	
  1015                           ; 4 bytes @ 0x39
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x39
  1019  0059                     	ds	3
  1020  005C                     ??___fltol:
  1021                           
  1022                           ; 1 bytes @ 0x3C
  1023  005C                     	ds	1
  1024  005D                     ___fladd@a:
  1025                           
  1026                           ; 4 bytes @ 0x3D
  1027  005D                     	ds	4
  1028  0061                     ??___fladd:
  1029  0061                     ___fltol@sign1:	
  1030                           ; 1 bytes @ 0x41
  1031                           
  1032                           
  1033                           ; 1 bytes @ 0x41
  1034  0061                     	ds	1
  1035  0062                     ___fltol@exp1:
  1036                           
  1037                           ; 1 bytes @ 0x42
  1038  0062                     	ds	7
  1039  0069                     ___fladd@signs:
  1040                           
  1041                           ; 1 bytes @ 0x49
  1042  0069                     	ds	1
  1043  006A                     ___fladd@aexp:
  1044                           
  1045                           ; 1 bytes @ 0x4A
  1046  006A                     	ds	1
  1047  006B                     ___fladd@bexp:
  1048                           
  1049                           ; 1 bytes @ 0x4B
  1050  006B                     	ds	1
  1051  006C                     ___fladd@grs:
  1052                           
  1053                           ; 1 bytes @ 0x4C
  1054  006C                     	ds	1
  1055  006D                     ??_conversion:
  1056                           
  1057                           ; 1 bytes @ 0x4D
  1058  006D                     	ds	1
  1059  006E                     conversion@puertoANL:
  1060                           
  1061                           ; 1 bytes @ 0x4E
  1062  006E                     	ds	1
  1063                           
  1064                           	psect	maintext
  1065  1E6B                     __pmaintext:	
  1066 ;;
  1067 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1068 ;;
  1069 ;; *************** function _main *****************
  1070 ;; Defined at:
  1071 ;;		line 46 in file "lab3.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;		None
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;		None
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : B00/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1085 ;;      Params:         0       0       0       0       0
  1086 ;;      Locals:         0       0       0       0       0
  1087 ;;      Temps:          0       0       3       0       0
  1088 ;;      Totals:         0       0       3       0       0
  1089 ;;Total ram usage:        3 bytes
  1090 ;; Hardware stack levels required when called:    6
  1091 ;; This function calls:
  1092 ;;		_Lcd_Clear
  1093 ;;		_Lcd_Init
  1094 ;;		_Lcd_Set_Cursor
  1095 ;;		_Lcd_Write_String
  1096 ;;		_config
  1097 ;;		_conversion
  1098 ;; This function is called by:
  1099 ;;		Startup code after reset
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _main
  1105  1E6B                     _main:
  1106  1E6B                     l3162:	
  1107                           ;incstack = 0
  1108                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1109                           
  1110                           
  1111                           ;lab3.c: 47:     config();
  1112  1E6B  160A  158A  2396  160A  158A  	fcall	_config
  1113                           
  1114                           ;lab3.c: 48:     Lcd_Init();
  1115  1E70  160A  158A  2447  160A  158A  	fcall	_Lcd_Init
  1116                           
  1117                           ;lab3.c: 49:     Lcd_Set_Cursor(1,1);
  1118  1E75  01F7               	clrf	Lcd_Set_Cursor@b
  1119  1E76  0AF7               	incf	Lcd_Set_Cursor@b,f
  1120  1E77  3001               	movlw	1
  1121  1E78  160A  158A  23F8  160A  158A  	fcall	_Lcd_Set_Cursor
  1122  1E7D                     l3164:
  1123                           
  1124                           ;lab3.c: 50:     Lcd_Write_String("DIGITAL 2");
  1125  1E7D  30A2               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1126  1E7E  00F6               	movwf	Lcd_Write_String@a
  1127  1E7F  3080               	movlw	128
  1128  1E80  00F7               	movwf	Lcd_Write_String@a+1
  1129  1E81  160A  158A  247D  160A  158A  	fcall	_Lcd_Write_String
  1130  1E86                     l3166:
  1131                           
  1132                           ;lab3.c: 51:     Lcd_Set_Cursor(2,1);
  1133  1E86  01F7               	clrf	Lcd_Set_Cursor@b
  1134  1E87  0AF7               	incf	Lcd_Set_Cursor@b,f
  1135  1E88  3002               	movlw	2
  1136  1E89  160A  158A  23F8  160A  158A  	fcall	_Lcd_Set_Cursor
  1137                           
  1138                           ;lab3.c: 52:     Lcd_Write_String("FernandoFigueroa");
  1139  1E8E  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1140  1E8F  00F6               	movwf	Lcd_Write_String@a
  1141  1E90  3080               	movlw	128
  1142  1E91  00F7               	movwf	Lcd_Write_String@a+1
  1143  1E92  160A  158A  247D  160A  158A  	fcall	_Lcd_Write_String
  1144  1E97                     l3168:
  1145                           
  1146                           ;lab3.c: 53:     _delay((unsigned long)((100)*(9000000/4000.0)));
  1147  1E97  3002               	movlw	2
  1148  1E98  1683               	bsf	3,5	;RP0=1, select bank1
  1149  1E99  1303               	bcf	3,6	;RP1=0, select bank1
  1150  1E9A  00CD               	movwf	(??_main^(0+128)+2)
  1151  1E9B  3025               	movlw	37
  1152  1E9C  00CC               	movwf	(??_main^(0+128)+1)
  1153  1E9D  3031               	movlw	49
  1154  1E9E  00CB               	movwf	??_main^(0+128)
  1155  1E9F                     u5337:
  1156  1E9F  0BCB               	decfsz	??_main^(0+128),f
  1157  1EA0  2E9F               	goto	u5337
  1158  1EA1  0BCC               	decfsz	(??_main^(0+128)+1),f
  1159  1EA2  2E9F               	goto	u5337
  1160  1EA3  0BCD               	decfsz	(??_main^(0+128)+2),f
  1161  1EA4  2E9F               	goto	u5337
  1162  1EA5                     l3170:
  1163                           
  1164                           ;lab3.c: 54:     Lcd_Clear();
  1165  1EA5  160A  158A  2354  160A  158A  	fcall	_Lcd_Clear
  1166  1EAA                     l3172:
  1167                           
  1168                           ;lab3.c: 56:      Lcd_Set_Cursor(1,1);
  1169  1EAA  01F7               	clrf	Lcd_Set_Cursor@b
  1170  1EAB  0AF7               	incf	Lcd_Set_Cursor@b,f
  1171  1EAC  3001               	movlw	1
  1172  1EAD  160A  158A  23F8  160A  158A  	fcall	_Lcd_Set_Cursor
  1173  1EB2                     l3174:
  1174                           
  1175                           ;lab3.c: 57:      Lcd_Write_String("Volt1");
  1176  1EB2  30AC               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1177  1EB3  00F6               	movwf	Lcd_Write_String@a
  1178  1EB4  3080               	movlw	128
  1179  1EB5  00F7               	movwf	Lcd_Write_String@a+1
  1180  1EB6  160A  158A  247D  160A  158A  	fcall	_Lcd_Write_String
  1181  1EBB                     l3176:
  1182                           
  1183                           ;lab3.c: 58:      Lcd_Set_Cursor(1,7);
  1184  1EBB  3007               	movlw	7
  1185  1EBC  1683               	bsf	3,5	;RP0=1, select bank1
  1186  1EBD  1303               	bcf	3,6	;RP1=0, select bank1
  1187  1EBE  00CB               	movwf	??_main^(0+128)
  1188  1EBF  084B               	movf	??_main^(0+128),w
  1189  1EC0  00F7               	movwf	Lcd_Set_Cursor@b
  1190  1EC1  3001               	movlw	1
  1191  1EC2  160A  158A  23F8  160A  158A  	fcall	_Lcd_Set_Cursor
  1192  1EC7                     l3178:
  1193                           
  1194                           ;lab3.c: 59:      Lcd_Write_String("Volt2");
  1195  1EC7  30B2               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1196  1EC8  00F6               	movwf	Lcd_Write_String@a
  1197  1EC9  3080               	movlw	128
  1198  1ECA  00F7               	movwf	Lcd_Write_String@a+1
  1199  1ECB  160A  158A  247D  160A  158A  	fcall	_Lcd_Write_String
  1200  1ED0                     l3180:
  1201                           
  1202                           ;lab3.c: 63:         conversion(1);
  1203  1ED0  3001               	movlw	1
  1204  1ED1  120A  158A  203F  160A  158A  	fcall	_conversion
  1205  1ED6                     l3182:
  1206                           
  1207                           ;lab3.c: 64:         conversion(0);
  1208  1ED6  3000               	movlw	0
  1209  1ED7  120A  158A  203F  160A  158A  	fcall	_conversion
  1210  1EDC  2ED0               	goto	l3180
  1211  1EDD  120A  118A  280C   	ljmp	start
  1212  1EE0                     __end_of_main:
  1213                           
  1214                           	psect	text1
  1215  083F                     __ptext1:	
  1216 ;; *************** function _conversion *****************
  1217 ;; Defined at:
  1218 ;;		line 70 in file "lab3.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  puertoANL       1    wreg     unsigned char 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  puertoANL       1   78[BANK0 ] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1232 ;;      Params:         0       0       0       0       0
  1233 ;;      Locals:         0       1       0       0       0
  1234 ;;      Temps:          0       1       0       0       0
  1235 ;;      Totals:         0       2       0       0       0
  1236 ;;Total ram usage:        2 bytes
  1237 ;; Hardware stack levels used:    1
  1238 ;; Hardware stack levels required when called:    5
  1239 ;; This function calls:
  1240 ;;		_Lcd_Set_Cursor
  1241 ;;		_Lcd_Write_String
  1242 ;;		___awdiv
  1243 ;;		___wmul
  1244 ;;		___xxtofl
  1245 ;;		_sprintf
  1246 ;; This function is called by:
  1247 ;;		_main
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           
  1252                           ;psect for function _conversion
  1253  083F                     _conversion:
  1254                           
  1255                           ;incstack = 0
  1256                           ; Regs used in _conversion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1257                           ;conversion@puertoANL stored from wreg
  1258  083F  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0840  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0841  00EE               	movwf	conversion@puertoANL
  1261  0842                     l3134:
  1262                           
  1263                           ;lab3.c: 72:     ADCON0bits.CHS = puertoANL;
  1264  0842  086E               	movf	conversion@puertoANL,w
  1265  0843  00ED               	movwf	??_conversion
  1266  0844  0DED               	rlf	??_conversion,f
  1267  0845  0DED               	rlf	??_conversion,f
  1268  0846  081F               	movf	31,w	;volatile
  1269  0847  066D               	xorwf	??_conversion,w
  1270  0848  39C3               	andlw	-61
  1271  0849  066D               	xorwf	??_conversion,w
  1272  084A  009F               	movwf	31	;volatile
  1273  084B                     l3136:
  1274                           
  1275                           ;lab3.c: 73:     if (ADCON0bits.GO_DONE==0 && puertoANL ==0){
  1276  084B  189F               	btfsc	31,1	;volatile
  1277  084C  284E               	goto	u5301
  1278  084D  284F               	goto	u5300
  1279  084E                     u5301:
  1280  084E  28C6               	goto	l3148
  1281  084F                     u5300:
  1282  084F                     l3138:
  1283  084F  086E               	movf	conversion@puertoANL,w
  1284  0850  1D03               	btfss	3,2
  1285  0851  2853               	goto	u5311
  1286  0852  2854               	goto	u5310
  1287  0853                     u5311:
  1288  0853  28C6               	goto	l3148
  1289  0854                     u5310:
  1290  0854                     l3140:
  1291                           
  1292                           ;lab3.c: 75:         vpot1 = (5*c)/255;
  1293  0854  3005               	movlw	5
  1294  0855  00F6               	movwf	___wmul@multiplicand
  1295  0856  3000               	movlw	0
  1296  0857  00F7               	movwf	___wmul@multiplicand+1
  1297  0858  1683               	bsf	3,5	;RP0=1, select bank1
  1298  0859  1303               	bcf	3,6	;RP1=0, select bank1
  1299  085A  0859               	movf	(_c+1)^(0+128),w
  1300  085B  00F5               	movwf	___wmul@multiplier+1
  1301  085C  0858               	movf	_c^(0+128),w
  1302  085D  00F4               	movwf	___wmul@multiplier
  1303  085E  160A  158A  23D3  120A  158A  	fcall	___wmul
  1304  0863  0875               	movf	?___wmul+1,w
  1305  0864  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0865  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0866  00A5               	movwf	___awdiv@dividend+1
  1308  0867  0874               	movf	?___wmul,w
  1309  0868  00A4               	movwf	___awdiv@dividend
  1310  0869  30FF               	movlw	255
  1311  086A  00A2               	movwf	___awdiv@divisor
  1312  086B  3000               	movlw	0
  1313  086C  00A3               	movwf	___awdiv@divisor+1
  1314  086D  160A  158A  2602  120A  158A  	fcall	___awdiv
  1315  0872  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0873  1303               	bcf	3,6	;RP1=0, select bank0
  1317  0874  0822               	movf	?___awdiv,w
  1318  0875  00AB               	movwf	___xxtofl@val
  1319  0876  0823               	movf	?___awdiv+1,w
  1320  0877  00AC               	movwf	___xxtofl@val+1
  1321  0878  3000               	movlw	0
  1322  0879  1BAC               	btfsc	___xxtofl@val+1,7
  1323  087A  30FF               	movlw	255
  1324  087B  00AD               	movwf	___xxtofl@val+2
  1325  087C  00AE               	movwf	___xxtofl@val+3
  1326  087D  3001               	movlw	1
  1327  087E  160A  118A  2134  120A  158A  	fcall	___xxtofl
  1328  0883  1283               	bcf	3,5	;RP0=0, select bank0
  1329  0884  1303               	bcf	3,6	;RP1=0, select bank0
  1330  0885  082E               	movf	?___xxtofl+3,w
  1331  0886  1683               	bsf	3,5	;RP0=1, select bank1
  1332  0887  1303               	bcf	3,6	;RP1=0, select bank1
  1333  0888  00D5               	movwf	(_vpot1+3)^(0+128)
  1334  0889  1283               	bcf	3,5	;RP0=0, select bank0
  1335  088A  1303               	bcf	3,6	;RP1=0, select bank0
  1336  088B  082D               	movf	?___xxtofl+2,w
  1337  088C  1683               	bsf	3,5	;RP0=1, select bank1
  1338  088D  1303               	bcf	3,6	;RP1=0, select bank1
  1339  088E  00D4               	movwf	(_vpot1+2)^(0+128)
  1340  088F  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0890  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0891  082C               	movf	?___xxtofl+1,w
  1343  0892  1683               	bsf	3,5	;RP0=1, select bank1
  1344  0893  1303               	bcf	3,6	;RP1=0, select bank1
  1345  0894  00D3               	movwf	(_vpot1+1)^(0+128)
  1346  0895  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0896  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0897  082B               	movf	?___xxtofl,w
  1349  0898  1683               	bsf	3,5	;RP0=1, select bank1
  1350  0899  1303               	bcf	3,6	;RP1=0, select bank1
  1351  089A  00D2               	movwf	_vpot1^(0+128)
  1352  089B                     l3142:
  1353                           
  1354                           ;lab3.c: 76:         sprintf(buffer, "%.3f", vpot1);
  1355  089B  30B8               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1356  089C  1283               	bcf	3,5	;RP0=0, select bank0
  1357  089D  1303               	bcf	3,6	;RP1=0, select bank0
  1358  089E  00ED               	movwf	??_conversion
  1359  089F  086D               	movf	??_conversion,w
  1360  08A0  1683               	bsf	3,5	;RP0=1, select bank1
  1361  08A1  1303               	bcf	3,6	;RP1=0, select bank1
  1362  08A2  00A8               	movwf	sprintf@f^(0+128)
  1363  08A3  0855               	movf	(_vpot1+3)^(0+128),w
  1364  08A4  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1365  08A5  0854               	movf	(_vpot1+2)^(0+128),w
  1366  08A6  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1367  08A7  0853               	movf	(_vpot1+1)^(0+128),w
  1368  08A8  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1369  08A9  0852               	movf	_vpot1^(0+128),w
  1370  08AA  00A9               	movwf	(?_sprintf^(0+128)+1)
  1371  08AB  30DA               	movlw	(low (_buffer| 0))& (0+255)
  1372  08AC  120A  118A  2022  120A  158A  	fcall	_sprintf
  1373  08B1                     l3144:
  1374                           
  1375                           ;lab3.c: 77:         Lcd_Set_Cursor(2,1);
  1376  08B1  01F7               	clrf	Lcd_Set_Cursor@b
  1377  08B2  0AF7               	incf	Lcd_Set_Cursor@b,f
  1378  08B3  3002               	movlw	2
  1379  08B4  160A  158A  23F8  120A  158A  	fcall	_Lcd_Set_Cursor
  1380                           
  1381                           ;lab3.c: 78:         Lcd_Write_String(buffer);
  1382  08B9  30DA               	movlw	(low (_buffer| 0))& (0+255)
  1383  08BA  00F6               	movwf	Lcd_Write_String@a
  1384  08BB  3000               	movlw	0
  1385  08BC  00F7               	movwf	Lcd_Write_String@a+1
  1386  08BD  160A  158A  247D  120A  158A  	fcall	_Lcd_Write_String
  1387  08C2                     l3146:
  1388                           
  1389                           ;lab3.c: 79:         ADCON0bits.GO_DONE=1;
  1390  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  1391  08C3  1303               	bcf	3,6	;RP1=0, select bank0
  1392  08C4  149F               	bsf	31,1	;volatile
  1393                           
  1394                           ;lab3.c: 80:     }
  1395  08C5  293B               	goto	l90
  1396  08C6                     l3148:
  1397                           
  1398                           ;lab3.c: 82:         vpot2 = (5*b)/255;
  1399  08C6  3005               	movlw	5
  1400  08C7  00F6               	movwf	___wmul@multiplicand
  1401  08C8  3000               	movlw	0
  1402  08C9  00F7               	movwf	___wmul@multiplicand+1
  1403  08CA  1683               	bsf	3,5	;RP0=1, select bank1
  1404  08CB  1303               	bcf	3,6	;RP1=0, select bank1
  1405  08CC  0857               	movf	(_b+1)^(0+128),w
  1406  08CD  00F5               	movwf	___wmul@multiplier+1
  1407  08CE  0856               	movf	_b^(0+128),w
  1408  08CF  00F4               	movwf	___wmul@multiplier
  1409  08D0  160A  158A  23D3  120A  158A  	fcall	___wmul
  1410  08D5  0875               	movf	?___wmul+1,w
  1411  08D6  1283               	bcf	3,5	;RP0=0, select bank0
  1412  08D7  1303               	bcf	3,6	;RP1=0, select bank0
  1413  08D8  00A5               	movwf	___awdiv@dividend+1
  1414  08D9  0874               	movf	?___wmul,w
  1415  08DA  00A4               	movwf	___awdiv@dividend
  1416  08DB  30FF               	movlw	255
  1417  08DC  00A2               	movwf	___awdiv@divisor
  1418  08DD  3000               	movlw	0
  1419  08DE  00A3               	movwf	___awdiv@divisor+1
  1420  08DF  160A  158A  2602  120A  158A  	fcall	___awdiv
  1421  08E4  1283               	bcf	3,5	;RP0=0, select bank0
  1422  08E5  1303               	bcf	3,6	;RP1=0, select bank0
  1423  08E6  0822               	movf	?___awdiv,w
  1424  08E7  00AB               	movwf	___xxtofl@val
  1425  08E8  0823               	movf	?___awdiv+1,w
  1426  08E9  00AC               	movwf	___xxtofl@val+1
  1427  08EA  3000               	movlw	0
  1428  08EB  1BAC               	btfsc	___xxtofl@val+1,7
  1429  08EC  30FF               	movlw	255
  1430  08ED  00AD               	movwf	___xxtofl@val+2
  1431  08EE  00AE               	movwf	___xxtofl@val+3
  1432  08EF  3001               	movlw	1
  1433  08F0  160A  118A  2134  120A  158A  	fcall	___xxtofl
  1434  08F5  1283               	bcf	3,5	;RP0=0, select bank0
  1435  08F6  1303               	bcf	3,6	;RP1=0, select bank0
  1436  08F7  082E               	movf	?___xxtofl+3,w
  1437  08F8  1683               	bsf	3,5	;RP0=1, select bank1
  1438  08F9  1303               	bcf	3,6	;RP1=0, select bank1
  1439  08FA  00D1               	movwf	(_vpot2+3)^(0+128)
  1440  08FB  1283               	bcf	3,5	;RP0=0, select bank0
  1441  08FC  1303               	bcf	3,6	;RP1=0, select bank0
  1442  08FD  082D               	movf	?___xxtofl+2,w
  1443  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  1444  08FF  1303               	bcf	3,6	;RP1=0, select bank1
  1445  0900  00D0               	movwf	(_vpot2+2)^(0+128)
  1446  0901  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0902  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0903  082C               	movf	?___xxtofl+1,w
  1449  0904  1683               	bsf	3,5	;RP0=1, select bank1
  1450  0905  1303               	bcf	3,6	;RP1=0, select bank1
  1451  0906  00CF               	movwf	(_vpot2+1)^(0+128)
  1452  0907  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0908  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0909  082B               	movf	?___xxtofl,w
  1455  090A  1683               	bsf	3,5	;RP0=1, select bank1
  1456  090B  1303               	bcf	3,6	;RP1=0, select bank1
  1457  090C  00CE               	movwf	_vpot2^(0+128)
  1458  090D                     l3150:
  1459                           
  1460                           ;lab3.c: 83:         sprintf(buffer, "%.3f", vpot2);
  1461  090D  30B8               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1462  090E  1283               	bcf	3,5	;RP0=0, select bank0
  1463  090F  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0910  00ED               	movwf	??_conversion
  1465  0911  086D               	movf	??_conversion,w
  1466  0912  1683               	bsf	3,5	;RP0=1, select bank1
  1467  0913  1303               	bcf	3,6	;RP1=0, select bank1
  1468  0914  00A8               	movwf	sprintf@f^(0+128)
  1469  0915  0851               	movf	(_vpot2+3)^(0+128),w
  1470  0916  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1471  0917  0850               	movf	(_vpot2+2)^(0+128),w
  1472  0918  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1473  0919  084F               	movf	(_vpot2+1)^(0+128),w
  1474  091A  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1475  091B  084E               	movf	_vpot2^(0+128),w
  1476  091C  00A9               	movwf	(?_sprintf^(0+128)+1)
  1477  091D  30DA               	movlw	(low (_buffer| 0))& (0+255)
  1478  091E  120A  118A  2022  120A  158A  	fcall	_sprintf
  1479  0923                     l3152:
  1480                           
  1481                           ;lab3.c: 84:         Lcd_Set_Cursor(2,7);
  1482  0923  3007               	movlw	7
  1483  0924  1283               	bcf	3,5	;RP0=0, select bank0
  1484  0925  1303               	bcf	3,6	;RP1=0, select bank0
  1485  0926  00ED               	movwf	??_conversion
  1486  0927  086D               	movf	??_conversion,w
  1487  0928  00F7               	movwf	Lcd_Set_Cursor@b
  1488  0929  3002               	movlw	2
  1489  092A  160A  158A  23F8  120A  158A  	fcall	_Lcd_Set_Cursor
  1490                           
  1491                           ;lab3.c: 85:         Lcd_Write_String(buffer);
  1492  092F  30DA               	movlw	(low (_buffer| 0))& (0+255)
  1493  0930  00F6               	movwf	Lcd_Write_String@a
  1494  0931  3000               	movlw	0
  1495  0932  00F7               	movwf	Lcd_Write_String@a+1
  1496  0933  160A  158A  247D  120A  158A  	fcall	_Lcd_Write_String
  1497  0938                     l3154:
  1498                           
  1499                           ;lab3.c: 86:         ADCON0bits.GO_DONE=1;
  1500  0938  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0939  1303               	bcf	3,6	;RP1=0, select bank0
  1502  093A  149F               	bsf	31,1	;volatile
  1503  093B                     l90:
  1504  093B  0008               	return
  1505  093C                     __end_of_conversion:
  1506                           
  1507                           	psect	text2
  1508  0022                     __ptext2:	
  1509 ;; *************** function _sprintf *****************
  1510 ;; Defined at:
  1511 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  sp              1    wreg     PTR unsigned char 
  1514 ;;		 -> buffer(1), 
  1515 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1516 ;;		 -> STR_6(5), STR_5(5), 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  sp              1   35[BANK1 ] PTR unsigned char 
  1519 ;;		 -> buffer(1), 
  1520 ;;  fval            4   38[BANK1 ] PTR unsigned char 
  1521 ;;  tmpval          4   31[BANK1 ] struct .
  1522 ;;  val             4   25[BANK1 ] unsigned long 
  1523 ;;  prec            2   36[BANK1 ] int 
  1524 ;;  eexp            2   29[BANK1 ] int 
  1525 ;;  flag            2   23[BANK1 ] unsigned short 
  1526 ;;  cp              2    0        PTR const unsigned char 
  1527 ;;  len             2    0        unsigned int 
  1528 ;;  width           2    0        int 
  1529 ;;  c               1   42[BANK1 ] unsigned char 
  1530 ;;  ap              1   22[BANK1 ] PTR void [1]
  1531 ;;		 -> ?_sprintf(2), 
  1532 ;;  d               1    0        unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  2    8[BANK1 ] int 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         0       0       5       0       0
  1543 ;;      Locals:         0       0      25       0       0
  1544 ;;      Temps:          0       0       5       0       0
  1545 ;;      Totals:         0       0      35       0       0
  1546 ;;Total ram usage:       35 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    4
  1549 ;; This function calls:
  1550 ;;		___awdiv
  1551 ;;		___fladd
  1552 ;;		___fleq
  1553 ;;		___flge
  1554 ;;		___flmul
  1555 ;;		___flneg
  1556 ;;		___flsub
  1557 ;;		___fltol
  1558 ;;		___lldiv
  1559 ;;		___llmod
  1560 ;;		___wmul
  1561 ;;		___xxtofl
  1562 ;;		__div_to_l_
  1563 ;;		__tdiv_to_l_
  1564 ;;		_fround
  1565 ;;		_isdigit
  1566 ;;		_scale
  1567 ;; This function is called by:
  1568 ;;		_conversion
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _sprintf
  1574  0022                     _sprintf:
  1575                           
  1576                           ;incstack = 0
  1577                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1578                           ;sprintf@sp stored from wreg
  1579  0022  1683               	bsf	3,5	;RP0=1, select bank1
  1580  0023  1303               	bcf	3,6	;RP1=0, select bank1
  1581  0024  00C3               	movwf	sprintf@sp^(0+128)
  1582  0025                     l2910:
  1583                           
  1584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1585  0025  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1586  0026  00AD               	movwf	??_sprintf^(0+128)
  1587  0027  082D               	movf	??_sprintf^(0+128),w
  1588  0028  00B6               	movwf	sprintf@ap^(0+128)
  1589                           
  1590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1591  0029  2F91               	goto	l3104
  1592  002A                     l2912:
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1595  002A  3025               	movlw	37
  1596  002B  064A               	xorwf	sprintf@c^(0+128),w
  1597  002C  1903               	btfsc	3,2
  1598  002D  282F               	goto	u4951
  1599  002E  2830               	goto	u4950
  1600  002F                     u4951:
  1601  002F  283C               	goto	l2918
  1602  0030                     u4950:
  1603  0030                     l2914:
  1604                           
  1605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1606  0030  084A               	movf	sprintf@c^(0+128),w
  1607  0031  00AD               	movwf	??_sprintf^(0+128)
  1608  0032  0843               	movf	sprintf@sp^(0+128),w
  1609  0033  0084               	movwf	4
  1610  0034  082D               	movf	??_sprintf^(0+128),w
  1611  0035  1383               	bcf	3,7	;select IRP bank0
  1612  0036  0080               	movwf	0
  1613  0037                     l2916:
  1614  0037  3001               	movlw	1
  1615  0038  00AD               	movwf	??_sprintf^(0+128)
  1616  0039  082D               	movf	??_sprintf^(0+128),w
  1617  003A  07C3               	addwf	sprintf@sp^(0+128),f
  1618                           
  1619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1620  003B  2F91               	goto	l3104
  1621  003C                     l2918:
  1622                           
  1623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1624  003C  01B7               	clrf	sprintf@flag^(0+128)
  1625  003D  01B8               	clrf	(sprintf@flag+1)^(0+128)
  1626  003E                     l2920:
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1629  003E  0828               	movf	sprintf@f^(0+128),w
  1630  003F  0084               	movwf	4
  1631  0040  160A  118A  200A  120A  118A  	fcall	stringdir
  1632  0045  3A2E               	xorlw	46
  1633  0046  1D03               	skipz
  1634  0047  2849               	goto	u4961
  1635  0048  284A               	goto	u4960
  1636  0049                     u4961:
  1637  0049  288F               	goto	l2936
  1638  004A                     u4960:
  1639  004A                     l2922:
  1640                           
  1641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1642  004A  1738               	bsf	(sprintf@flag^(0+128)+1),6
  1643  004B                     l2924:
  1644                           
  1645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1646  004B  3001               	movlw	1
  1647  004C  00AD               	movwf	??_sprintf^(0+128)
  1648  004D  082D               	movf	??_sprintf^(0+128),w
  1649  004E  07A8               	addwf	sprintf@f^(0+128),f
  1650  004F                     l2926:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1653  004F  01C4               	clrf	sprintf@prec^(0+128)
  1654  0050  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1657  0051  287E               	goto	l2934
  1658  0052                     l2928:
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1661  0052  300A               	movlw	10
  1662  0053  00F4               	movwf	___wmul@multiplier
  1663  0054  3000               	movlw	0
  1664  0055  00F5               	movwf	___wmul@multiplier+1
  1665  0056  1683               	bsf	3,5	;RP0=1, select bank1
  1666  0057  1303               	bcf	3,6	;RP1=0, select bank1
  1667  0058  0845               	movf	(sprintf@prec+1)^(0+128),w
  1668  0059  00F7               	movwf	___wmul@multiplicand+1
  1669  005A  0844               	movf	sprintf@prec^(0+128),w
  1670  005B  00F6               	movwf	___wmul@multiplicand
  1671  005C  160A  158A  23D3  120A  118A  	fcall	___wmul
  1672  0061  0875               	movf	?___wmul+1,w
  1673  0062  1683               	bsf	3,5	;RP0=1, select bank1
  1674  0063  1303               	bcf	3,6	;RP1=0, select bank1
  1675  0064  00C5               	movwf	(sprintf@prec+1)^(0+128)
  1676  0065  0874               	movf	?___wmul,w
  1677  0066  00C4               	movwf	sprintf@prec^(0+128)
  1678  0067                     l2930:
  1679                           
  1680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1681  0067  0828               	movf	sprintf@f^(0+128),w
  1682  0068  0084               	movwf	4
  1683  0069  160A  118A  200A  120A  118A  	fcall	stringdir
  1684  006E  3ED0               	addlw	208
  1685  006F  00AD               	movwf	??_sprintf^(0+128)
  1686  0070  30FF               	movlw	255
  1687  0071  1803               	skipnc
  1688  0072  3000               	movlw	0
  1689  0073  00AE               	movwf	(??_sprintf^(0+128)+1)
  1690  0074  082D               	movf	??_sprintf^(0+128),w
  1691  0075  07C4               	addwf	sprintf@prec^(0+128),f
  1692  0076  1803               	skipnc
  1693  0077  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  1694  0078  082E               	movf	(??_sprintf+1)^(0+128),w
  1695  0079  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  1696  007A                     l2932:
  1697  007A  3001               	movlw	1
  1698  007B  00AD               	movwf	??_sprintf^(0+128)
  1699  007C  082D               	movf	??_sprintf^(0+128),w
  1700  007D  07A8               	addwf	sprintf@f^(0+128),f
  1701  007E                     l2934:
  1702                           
  1703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1704  007E  0828               	movf	sprintf@f^(0+128),w
  1705  007F  0084               	movwf	4
  1706  0080  160A  118A  200A  120A  118A  	fcall	stringdir
  1707  0085  160A  158A  2371  120A  118A  	fcall	_isdigit
  1708  008A  1803               	btfsc	3,0
  1709  008B  288D               	goto	u4971
  1710  008C  288E               	goto	u4970
  1711  008D                     u4971:
  1712  008D  2852               	goto	l2928
  1713  008E                     u4970:
  1714  008E  2895               	goto	l2942
  1715  008F                     l2936:
  1716                           
  1717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1718  008F  01C4               	clrf	sprintf@prec^(0+128)
  1719  0090  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1720  0091                     l2938:
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1723  0091  1638               	bsf	(sprintf@flag^(0+128)+1),4
  1724  0092  2895               	goto	l2942
  1725  0093                     l218:	
  1726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1727                           
  1728                           
  1729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1730  0093  1538               	bsf	(sprintf@flag^(0+128)+1),2
  1731                           
  1732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1733  0094  28B1               	goto	l2944
  1734  0095                     l2942:
  1735  0095  3001               	movlw	1
  1736  0096  1683               	bsf	3,5	;RP0=1, select bank1
  1737  0097  1303               	bcf	3,6	;RP1=0, select bank1
  1738  0098  07A8               	addwf	sprintf@f^(0+128),f
  1739  0099  30FF               	movlw	-1
  1740  009A  0728               	addwf	sprintf@f^(0+128),w
  1741  009B  0084               	movwf	4
  1742  009C  160A  118A  200A  120A  118A  	fcall	stringdir
  1743  00A1  00CA               	movwf	sprintf@c^(0+128)
  1744  00A2  00AD               	movwf	??_sprintf^(0+128)
  1745  00A3  01AE               	clrf	(??_sprintf^(0+128)+1)
  1746                           
  1747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1748                           ; Switch size 1, requested type "simple"
  1749                           ; Number of cases is 1, Range of values is 0 to 0
  1750                           ; switch strategies available:
  1751                           ; Name         Instructions Cycles
  1752                           ; simple_byte            4     3 (average)
  1753                           ; direct_byte           11     8 (fixed)
  1754                           ; jumptable            260     6 (fixed)
  1755                           ;	Chosen strategy is simple_byte
  1756  00A4  082E               	movf	(??_sprintf+1)^(0+128),w
  1757  00A5  3A00               	xorlw	0	; case 0
  1758  00A6  1903               	skipnz
  1759  00A7  28A9               	goto	l3214
  1760  00A8  2F91               	goto	l3104
  1761  00A9                     l3214:
  1762                           
  1763                           ; Switch size 1, requested type "simple"
  1764                           ; Number of cases is 2, Range of values is 0 to 102
  1765                           ; switch strategies available:
  1766                           ; Name         Instructions Cycles
  1767                           ; simple_byte            7     4 (average)
  1768                           ; jumptable            260     6 (fixed)
  1769                           ;	Chosen strategy is simple_byte
  1770  00A9  082D               	movf	??_sprintf^(0+128),w
  1771  00AA  3A00               	xorlw	0	; case 0
  1772  00AB  1903               	skipnz
  1773  00AC  2FA3               	goto	l3106
  1774  00AD  3A66               	xorlw	102	; case 102
  1775  00AE  1903               	skipnz
  1776  00AF  2893               	goto	l218
  1777  00B0  2F91               	goto	l3104
  1778  00B1                     l2944:
  1779                           
  1780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1781  00B1  3000               	movlw	0
  1782  00B2  0537               	andwf	sprintf@flag^(0+128),w
  1783  00B3  00AD               	movwf	??_sprintf^(0+128)
  1784  00B4  3007               	movlw	7
  1785  00B5  0538               	andwf	(sprintf@flag+1)^(0+128),w
  1786  00B6  00AE               	movwf	(??_sprintf+1)^(0+128)
  1787  00B7  082D               	movf	??_sprintf^(0+128),w
  1788  00B8  042E               	iorwf	(??_sprintf^(0+128)+1),w
  1789  00B9  1903               	btfsc	3,2
  1790  00BA  28BC               	goto	u4981
  1791  00BB  28BD               	goto	u4980
  1792  00BC                     u4981:
  1793  00BC  2F4C               	goto	l3086
  1794  00BD                     u4980:
  1795  00BD                     l2946:
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1798  00BD  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  1799  00BE  28C0               	goto	u4991
  1800  00BF  28C1               	goto	u4990
  1801  00C0                     u4991:
  1802  00C0  28C5               	goto	l2950
  1803  00C1                     u4990:
  1804  00C1                     l2948:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1807  00C1  3006               	movlw	6
  1808  00C2  00C4               	movwf	sprintf@prec^(0+128)
  1809  00C3  3000               	movlw	0
  1810  00C4  00C5               	movwf	(sprintf@prec^(0+128)+1)
  1811  00C5                     l2950:
  1812                           
  1813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1814  00C5  0836               	movf	sprintf@ap^(0+128),w
  1815  00C6  0084               	movwf	4
  1816  00C7  1383               	bcf	3,7	;select IRP bank0
  1817  00C8  0800               	movf	0,w
  1818  00C9  00C6               	movwf	sprintf@fval^(0+128)
  1819  00CA  0A84               	incf	4,f
  1820  00CB  0800               	movf	0,w
  1821  00CC  00C7               	movwf	(sprintf@fval+1)^(0+128)
  1822  00CD  0A84               	incf	4,f
  1823  00CE  0800               	movf	0,w
  1824  00CF  00C8               	movwf	(sprintf@fval+2)^(0+128)
  1825  00D0  0A84               	incf	4,f
  1826  00D1  0800               	movf	0,w
  1827  00D2  00C9               	movwf	(sprintf@fval+3)^(0+128)
  1828  00D3                     l2952:
  1829  00D3  3004               	movlw	4
  1830  00D4  00AD               	movwf	??_sprintf^(0+128)
  1831  00D5  082D               	movf	??_sprintf^(0+128),w
  1832  00D6  07B6               	addwf	sprintf@ap^(0+128),f
  1833  00D7                     l2954:
  1834                           
  1835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1836  00D7  0849               	movf	(sprintf@fval+3)^(0+128),w
  1837  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1838  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1839  00DA  00A3               	movwf	___flge@ff1+3
  1840  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  1841  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  1842  00DD  0848               	movf	(sprintf@fval+2)^(0+128),w
  1843  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1844  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1845  00E0  00A2               	movwf	___flge@ff1+2
  1846  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1847  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1848  00E3  0847               	movf	(sprintf@fval+1)^(0+128),w
  1849  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1850  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1851  00E6  00A1               	movwf	___flge@ff1+1
  1852  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1853  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1854  00E9  0846               	movf	sprintf@fval^(0+128),w
  1855  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1856  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1857  00EC  00A0               	movwf	___flge@ff1
  1858  00ED  3000               	movlw	0
  1859  00EE  00A7               	movwf	___flge@ff2+3
  1860  00EF  3000               	movlw	0
  1861  00F0  00A6               	movwf	___flge@ff2+2
  1862  00F1  3000               	movlw	0
  1863  00F2  00A5               	movwf	___flge@ff2+1
  1864  00F3  3000               	movlw	0
  1865  00F4  00A4               	movwf	___flge@ff2
  1866  00F5  160A  158A  275C  120A  118A  	fcall	___flge
  1867  00FA  1803               	btfsc	3,0
  1868  00FB  28FD               	goto	u5001
  1869  00FC  28FE               	goto	u5000
  1870  00FD                     u5001:
  1871  00FD  291B               	goto	l2960
  1872  00FE                     u5000:
  1873  00FE                     l2956:
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1876  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  1877  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  1878  0100  0849               	movf	(sprintf@fval+3)^(0+128),w
  1879  0101  00F7               	movwf	___flneg@f1+3
  1880  0102  0848               	movf	(sprintf@fval+2)^(0+128),w
  1881  0103  00F6               	movwf	___flneg@f1+2
  1882  0104  0847               	movf	(sprintf@fval+1)^(0+128),w
  1883  0105  00F5               	movwf	___flneg@f1+1
  1884  0106  0846               	movf	sprintf@fval^(0+128),w
  1885  0107  00F4               	movwf	___flneg@f1
  1886  0108  160A  158A  2349  120A  118A  	fcall	___flneg
  1887  010D  0877               	movf	?___flneg+3,w
  1888  010E  1683               	bsf	3,5	;RP0=1, select bank1
  1889  010F  1303               	bcf	3,6	;RP1=0, select bank1
  1890  0110  00C9               	movwf	(sprintf@fval+3)^(0+128)
  1891  0111  0876               	movf	?___flneg+2,w
  1892  0112  00C8               	movwf	(sprintf@fval+2)^(0+128)
  1893  0113  0875               	movf	?___flneg+1,w
  1894  0114  00C7               	movwf	(sprintf@fval+1)^(0+128)
  1895  0115  0874               	movf	?___flneg,w
  1896  0116  00C6               	movwf	sprintf@fval^(0+128)
  1897  0117                     l2958:
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1900  0117  3003               	movlw	3
  1901  0118  04B7               	iorwf	sprintf@flag^(0+128),f
  1902  0119  3000               	movlw	0
  1903  011A  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  1904  011B                     l2960:
  1905                           
  1906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1907  011B  1683               	bsf	3,5	;RP0=1, select bank1
  1908  011C  1303               	bcf	3,6	;RP1=0, select bank1
  1909  011D  01BD               	clrf	sprintf@eexp^(0+128)
  1910  011E  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  1911  011F                     l2962:
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1914  011F  0849               	movf	(sprintf@fval+3)^(0+128),w
  1915  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0122  00A3               	movwf	___fleq@ff1+3
  1918  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1919  0124  1303               	bcf	3,6	;RP1=0, select bank1
  1920  0125  0848               	movf	(sprintf@fval+2)^(0+128),w
  1921  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0128  00A2               	movwf	___fleq@ff1+2
  1924  0129  1683               	bsf	3,5	;RP0=1, select bank1
  1925  012A  1303               	bcf	3,6	;RP1=0, select bank1
  1926  012B  0847               	movf	(sprintf@fval+1)^(0+128),w
  1927  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1928  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1929  012E  00A1               	movwf	___fleq@ff1+1
  1930  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1931  0130  1303               	bcf	3,6	;RP1=0, select bank1
  1932  0131  0846               	movf	sprintf@fval^(0+128),w
  1933  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1935  0134  00A0               	movwf	___fleq@ff1
  1936  0135  3000               	movlw	0
  1937  0136  00A7               	movwf	___fleq@ff2+3
  1938  0137  3000               	movlw	0
  1939  0138  00A6               	movwf	___fleq@ff2+2
  1940  0139  3000               	movlw	0
  1941  013A  00A5               	movwf	___fleq@ff2+1
  1942  013B  3000               	movlw	0
  1943  013C  00A4               	movwf	___fleq@ff2
  1944  013D  160A  158A  2507  120A  118A  	fcall	___fleq
  1945  0142  1803               	btfsc	3,0
  1946  0143  2945               	goto	u5011
  1947  0144  2946               	goto	u5010
  1948  0145                     u5011:
  1949  0145  2A62               	goto	l2988
  1950  0146                     u5010:
  1951  0146                     l2964:
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1954  0146  1003               	clrc
  1955  0147  1683               	bsf	3,5	;RP0=1, select bank1
  1956  0148  1303               	bcf	3,6	;RP1=0, select bank1
  1957  0149  0D48               	rlf	(sprintf@fval+2)^(0+128),w
  1958  014A  0D49               	rlf	(sprintf@fval+3)^(0+128),w
  1959  014B  3E82               	addlw	130
  1960  014C  00BD               	movwf	sprintf@eexp^(0+128)
  1961  014D  30FF               	movlw	255
  1962  014E  1803               	skipnc
  1963  014F  3000               	movlw	0
  1964  0150  00BE               	movwf	(sprintf@eexp^(0+128)+1)
  1965  0151                     l2966:
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1968  0151  30FF               	movlw	255
  1969  0152  07BD               	addwf	sprintf@eexp^(0+128),f
  1970  0153  1803               	skipnc
  1971  0154  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  1972  0155  30FF               	movlw	255
  1973  0156  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  1974  0157                     l2968:
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1977  0157  3003               	movlw	3
  1978  0158  00F4               	movwf	___wmul@multiplier
  1979  0159  3000               	movlw	0
  1980  015A  00F5               	movwf	___wmul@multiplier+1
  1981  015B  083E               	movf	(sprintf@eexp+1)^(0+128),w
  1982  015C  00F7               	movwf	___wmul@multiplicand+1
  1983  015D  083D               	movf	sprintf@eexp^(0+128),w
  1984  015E  00F6               	movwf	___wmul@multiplicand
  1985  015F  160A  158A  23D3  120A  118A  	fcall	___wmul
  1986  0164  0875               	movf	?___wmul+1,w
  1987  0165  1683               	bsf	3,5	;RP0=1, select bank1
  1988  0166  1303               	bcf	3,6	;RP1=0, select bank1
  1989  0167  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  1990  0168  0874               	movf	?___wmul,w
  1991  0169  00BD               	movwf	sprintf@eexp^(0+128)
  1992  016A                     l2970:
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1995  016A  300A               	movlw	10
  1996  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1997  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1998  016D  00A2               	movwf	___awdiv@divisor
  1999  016E  3000               	movlw	0
  2000  016F  00A3               	movwf	___awdiv@divisor+1
  2001  0170  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0171  1303               	bcf	3,6	;RP1=0, select bank1
  2003  0172  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2004  0173  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0174  1303               	bcf	3,6	;RP1=0, select bank0
  2006  0175  00A5               	movwf	___awdiv@dividend+1
  2007  0176  1683               	bsf	3,5	;RP0=1, select bank1
  2008  0177  1303               	bcf	3,6	;RP1=0, select bank1
  2009  0178  083D               	movf	sprintf@eexp^(0+128),w
  2010  0179  1283               	bcf	3,5	;RP0=0, select bank0
  2011  017A  1303               	bcf	3,6	;RP1=0, select bank0
  2012  017B  00A4               	movwf	___awdiv@dividend
  2013  017C  160A  158A  2602  120A  118A  	fcall	___awdiv
  2014  0181  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0182  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0183  0823               	movf	?___awdiv+1,w
  2017  0184  1683               	bsf	3,5	;RP0=1, select bank1
  2018  0185  1303               	bcf	3,6	;RP1=0, select bank1
  2019  0186  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2020  0187  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0188  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0189  0822               	movf	?___awdiv,w
  2023  018A  1683               	bsf	3,5	;RP0=1, select bank1
  2024  018B  1303               	bcf	3,6	;RP1=0, select bank1
  2025  018C  00BD               	movwf	sprintf@eexp^(0+128)
  2026  018D                     l2972:
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2029  018D  1FBE               	btfss	(sprintf@eexp+1)^(0+128),7
  2030  018E  2990               	goto	u5021
  2031  018F  2991               	goto	u5020
  2032  0190                     u5021:
  2033  0190  2997               	goto	l2976
  2034  0191                     u5020:
  2035  0191                     l2974:
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2038  0191  30FF               	movlw	255
  2039  0192  07BD               	addwf	sprintf@eexp^(0+128),f
  2040  0193  1803               	skipnc
  2041  0194  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2042  0195  30FF               	movlw	255
  2043  0196  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2044  0197                     l2976:
  2045                           
  2046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2047  0197  033D               	decf	sprintf@eexp^(0+128),w
  2048  0198  3AFF               	xorlw	255
  2049  0199  120A  158A  249D  120A  118A  	fcall	_scale
  2050  019E  1283               	bcf	3,5	;RP0=0, select bank0
  2051  019F  1303               	bcf	3,6	;RP1=0, select bank0
  2052  01A0  0848               	movf	?_scale+3,w
  2053  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  2054  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  2055  01A3  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2056  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2057  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2058  01A6  0847               	movf	?_scale+2,w
  2059  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  2060  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  2061  01A9  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2062  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2063  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2064  01AC  0846               	movf	?_scale+1,w
  2065  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2066  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  2067  01AF  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2068  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  2069  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  2070  01B2  0845               	movf	?_scale,w
  2071  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2072  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  2073  01B5  00BF               	movwf	sprintf@tmpval^(0+128)
  2074  01B6                     l2978:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2077  01B6  0849               	movf	(sprintf@fval+3)^(0+128),w
  2078  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  2079  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  2080  01B9  00AE               	movwf	___flmul@b+3
  2081  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  2082  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  2083  01BC  0848               	movf	(sprintf@fval+2)^(0+128),w
  2084  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2085  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2086  01BF  00AD               	movwf	___flmul@b+2
  2087  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  2088  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  2089  01C2  0847               	movf	(sprintf@fval+1)^(0+128),w
  2090  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2091  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2092  01C5  00AC               	movwf	___flmul@b+1
  2093  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  2094  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  2095  01C8  0846               	movf	sprintf@fval^(0+128),w
  2096  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2097  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2098  01CB  00AB               	movwf	___flmul@b
  2099  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  2100  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  2101  01CE  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2102  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2103  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2104  01D1  00B2               	movwf	___flmul@a+3
  2105  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2106  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2107  01D4  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2108  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2109  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2110  01D7  00B1               	movwf	___flmul@a+2
  2111  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2112  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2113  01DA  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2114  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2115  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2116  01DD  00B0               	movwf	___flmul@a+1
  2117  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  2118  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  2119  01E0  083F               	movf	sprintf@tmpval^(0+128),w
  2120  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2121  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  2122  01E3  00AF               	movwf	___flmul@a
  2123  01E4  120A  158A  213C  120A  118A  	fcall	___flmul
  2124  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2125  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2126  01EB  082E               	movf	?___flmul+3,w
  2127  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2128  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2129  01EE  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2130  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2131  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2132  01F1  082D               	movf	?___flmul+2,w
  2133  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  2134  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  2135  01F4  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2136  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2137  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2138  01F7  082C               	movf	?___flmul+1,w
  2139  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  2140  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  2141  01FA  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2142  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2143  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2144  01FD  082B               	movf	?___flmul,w
  2145  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  2146  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  2147  0200  00BF               	movwf	sprintf@tmpval^(0+128)
  2148  0201                     l2980:
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2151  0201  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2152  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2153  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2154  0204  00A3               	movwf	___flge@ff1+3
  2155  0205  1683               	bsf	3,5	;RP0=1, select bank1
  2156  0206  1303               	bcf	3,6	;RP1=0, select bank1
  2157  0207  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2158  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2160  020A  00A2               	movwf	___flge@ff1+2
  2161  020B  1683               	bsf	3,5	;RP0=1, select bank1
  2162  020C  1303               	bcf	3,6	;RP1=0, select bank1
  2163  020D  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2164  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2165  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0210  00A1               	movwf	___flge@ff1+1
  2167  0211  1683               	bsf	3,5	;RP0=1, select bank1
  2168  0212  1303               	bcf	3,6	;RP1=0, select bank1
  2169  0213  083F               	movf	sprintf@tmpval^(0+128),w
  2170  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0216  00A0               	movwf	___flge@ff1
  2173  0217  303F               	movlw	63
  2174  0218  00A7               	movwf	___flge@ff2+3
  2175  0219  3080               	movlw	128
  2176  021A  00A6               	movwf	___flge@ff2+2
  2177  021B  3000               	movlw	0
  2178  021C  00A5               	movwf	___flge@ff2+1
  2179  021D  3000               	movlw	0
  2180  021E  00A4               	movwf	___flge@ff2
  2181  021F  160A  158A  275C  120A  118A  	fcall	___flge
  2182  0224  1803               	btfsc	3,0
  2183  0225  2A27               	goto	u5031
  2184  0226  2A28               	goto	u5030
  2185  0227                     u5031:
  2186  0227  2A31               	goto	l2984
  2187  0228                     u5030:
  2188  0228                     l2982:
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2191  0228  30FF               	movlw	255
  2192  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2193  022A  1303               	bcf	3,6	;RP1=0, select bank1
  2194  022B  07BD               	addwf	sprintf@eexp^(0+128),f
  2195  022C  1803               	skipnc
  2196  022D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2197  022E  30FF               	movlw	255
  2198  022F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2199  0230  2A62               	goto	l2988
  2200  0231                     l2984:
  2201  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2202  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2203  0233  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2204  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2205  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2206  0236  00A3               	movwf	___flge@ff1+3
  2207  0237  1683               	bsf	3,5	;RP0=1, select bank1
  2208  0238  1303               	bcf	3,6	;RP1=0, select bank1
  2209  0239  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2210  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2211  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2212  023C  00A2               	movwf	___flge@ff1+2
  2213  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2214  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2215  023F  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2216  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2217  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2218  0242  00A1               	movwf	___flge@ff1+1
  2219  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2220  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2221  0245  083F               	movf	sprintf@tmpval^(0+128),w
  2222  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2223  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2224  0248  00A0               	movwf	___flge@ff1
  2225  0249  3041               	movlw	65
  2226  024A  00A7               	movwf	___flge@ff2+3
  2227  024B  3020               	movlw	32
  2228  024C  00A6               	movwf	___flge@ff2+2
  2229  024D  3000               	movlw	0
  2230  024E  00A5               	movwf	___flge@ff2+1
  2231  024F  3000               	movlw	0
  2232  0250  00A4               	movwf	___flge@ff2
  2233  0251  160A  158A  275C  120A  118A  	fcall	___flge
  2234  0256  1C03               	btfss	3,0
  2235  0257  2A59               	goto	u5041
  2236  0258  2A5A               	goto	u5040
  2237  0259                     u5041:
  2238  0259  2A62               	goto	l2988
  2239  025A                     u5040:
  2240  025A                     l2986:
  2241                           
  2242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2243  025A  3001               	movlw	1
  2244  025B  1683               	bsf	3,5	;RP0=1, select bank1
  2245  025C  1303               	bcf	3,6	;RP1=0, select bank1
  2246  025D  07BD               	addwf	sprintf@eexp^(0+128),f
  2247  025E  1803               	skipnc
  2248  025F  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2249  0260  3000               	movlw	0
  2250  0261  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2251  0262                     l2988:
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2254  0262  1683               	bsf	3,5	;RP0=1, select bank1
  2255  0263  1303               	bcf	3,6	;RP1=0, select bank1
  2256  0264  0845               	movf	(sprintf@prec+1)^(0+128),w
  2257  0265  3A80               	xorlw	128
  2258  0266  00FF               	movwf	btemp+1
  2259  0267  3080               	movlw	128
  2260  0268  027F               	subwf	btemp+1,w
  2261  0269  1D03               	skipz
  2262  026A  2A6D               	goto	u5055
  2263  026B  300D               	movlw	13
  2264  026C  0244               	subwf	sprintf@prec^(0+128),w
  2265  026D                     u5055:
  2266  026D  1803               	skipnc
  2267  026E  2A70               	goto	u5051
  2268  026F  2A71               	goto	u5050
  2269  0270                     u5051:
  2270  0270  2AB8               	goto	l2992
  2271  0271                     u5050:
  2272  0271                     l2990:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2275  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2276  0272  1303               	bcf	3,6	;RP1=0, select bank1
  2277  0273  0844               	movf	sprintf@prec^(0+128),w
  2278  0274  160A  118A  236B  120A  118A  	fcall	_fround
  2279  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2280  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2281  027B  0848               	movf	?_fround+3,w
  2282  027C  00DC               	movwf	___fladd@b+3
  2283  027D  0847               	movf	?_fround+2,w
  2284  027E  00DB               	movwf	___fladd@b+2
  2285  027F  0846               	movf	?_fround+1,w
  2286  0280  00DA               	movwf	___fladd@b+1
  2287  0281  0845               	movf	?_fround,w
  2288  0282  00D9               	movwf	___fladd@b
  2289  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2290  0284  1303               	bcf	3,6	;RP1=0, select bank1
  2291  0285  0849               	movf	(sprintf@fval+3)^(0+128),w
  2292  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2293  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0288  00E0               	movwf	___fladd@a+3
  2295  0289  1683               	bsf	3,5	;RP0=1, select bank1
  2296  028A  1303               	bcf	3,6	;RP1=0, select bank1
  2297  028B  0848               	movf	(sprintf@fval+2)^(0+128),w
  2298  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2299  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2300  028E  00DF               	movwf	___fladd@a+2
  2301  028F  1683               	bsf	3,5	;RP0=1, select bank1
  2302  0290  1303               	bcf	3,6	;RP1=0, select bank1
  2303  0291  0847               	movf	(sprintf@fval+1)^(0+128),w
  2304  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0294  00DE               	movwf	___fladd@a+1
  2307  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2308  0296  1303               	bcf	3,6	;RP1=0, select bank1
  2309  0297  0846               	movf	sprintf@fval^(0+128),w
  2310  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2312  029A  00DD               	movwf	___fladd@a
  2313  029B  160A  118A  2578  120A  118A  	fcall	___fladd
  2314  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2315  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2316  02A2  085C               	movf	?___fladd+3,w
  2317  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2318  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2319  02A5  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2320  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2321  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2322  02A8  085B               	movf	?___fladd+2,w
  2323  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2324  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2325  02AB  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2326  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2327  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2328  02AE  085A               	movf	?___fladd+1,w
  2329  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2330  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  2331  02B1  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2332  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2333  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  2334  02B4  0859               	movf	?___fladd,w
  2335  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  2336  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  2337  02B7  00C6               	movwf	sprintf@fval^(0+128)
  2338  02B8                     l2992:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2341  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2342  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2343  02BA  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2344  02BB  3A80               	xorlw	128
  2345  02BC  00FF               	movwf	btemp+1
  2346  02BD  3080               	movlw	128
  2347  02BE  027F               	subwf	btemp+1,w
  2348  02BF  1D03               	skipz
  2349  02C0  2AC3               	goto	u5065
  2350  02C1  300A               	movlw	10
  2351  02C2  023D               	subwf	sprintf@eexp^(0+128),w
  2352  02C3                     u5065:
  2353  02C3  1803               	skipnc
  2354  02C4  2AC6               	goto	u5061
  2355  02C5  2AC7               	goto	u5060
  2356  02C6                     u5061:
  2357  02C6  2B26               	goto	l3000
  2358  02C7                     u5060:
  2359  02C7                     l2994:
  2360  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2361  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2362  02C9  0849               	movf	(sprintf@fval+3)^(0+128),w
  2363  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2364  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2365  02CC  00A3               	movwf	___fleq@ff1+3
  2366  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  2367  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  2368  02CF  0848               	movf	(sprintf@fval+2)^(0+128),w
  2369  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2370  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2371  02D2  00A2               	movwf	___fleq@ff1+2
  2372  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2373  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2374  02D5  0847               	movf	(sprintf@fval+1)^(0+128),w
  2375  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2376  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2377  02D8  00A1               	movwf	___fleq@ff1+1
  2378  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2379  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2380  02DB  0846               	movf	sprintf@fval^(0+128),w
  2381  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2382  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2383  02DE  00A0               	movwf	___fleq@ff1
  2384  02DF  3000               	movlw	0
  2385  02E0  00A7               	movwf	___fleq@ff2+3
  2386  02E1  3000               	movlw	0
  2387  02E2  00A6               	movwf	___fleq@ff2+2
  2388  02E3  3000               	movlw	0
  2389  02E4  00A5               	movwf	___fleq@ff2+1
  2390  02E5  3000               	movlw	0
  2391  02E6  00A4               	movwf	___fleq@ff2
  2392  02E7  160A  158A  2507  120A  118A  	fcall	___fleq
  2393  02EC  1803               	btfsc	3,0
  2394  02ED  2AEF               	goto	u5071
  2395  02EE  2AF0               	goto	u5070
  2396  02EF                     u5071:
  2397  02EF  2BD2               	goto	l3014
  2398  02F0                     u5070:
  2399  02F0                     l2996:
  2400  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2401  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2402  02F2  0849               	movf	(sprintf@fval+3)^(0+128),w
  2403  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2404  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2405  02F5  00DB               	movwf	___fltol@f1+3
  2406  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  2407  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  2408  02F8  0848               	movf	(sprintf@fval+2)^(0+128),w
  2409  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2410  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2411  02FB  00DA               	movwf	___fltol@f1+2
  2412  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  2413  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  2414  02FE  0847               	movf	(sprintf@fval+1)^(0+128),w
  2415  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0301  00D9               	movwf	___fltol@f1+1
  2418  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2420  0304  0846               	movf	sprintf@fval^(0+128),w
  2421  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2423  0307  00D8               	movwf	___fltol@f1
  2424  0308  160A  158A  26E0  120A  118A  	fcall	___fltol
  2425  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2426  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2427  030F  085B               	movf	?___fltol+3,w
  2428  0310  045A               	iorwf	?___fltol+2,w
  2429  0311  0459               	iorwf	?___fltol+1,w
  2430  0312  0458               	iorwf	?___fltol,w
  2431  0313  1D03               	skipz
  2432  0314  2B16               	goto	u5081
  2433  0315  2B17               	goto	u5080
  2434  0316                     u5081:
  2435  0316  2BD2               	goto	l3014
  2436  0317                     u5080:
  2437  0317                     l2998:
  2438  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2439  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2440  0319  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2441  031A  3A80               	xorlw	128
  2442  031B  00FF               	movwf	btemp+1
  2443  031C  3080               	movlw	128
  2444  031D  027F               	subwf	btemp+1,w
  2445  031E  1D03               	skipz
  2446  031F  2B22               	goto	u5095
  2447  0320  3002               	movlw	2
  2448  0321  023D               	subwf	sprintf@eexp^(0+128),w
  2449  0322                     u5095:
  2450  0322  1C03               	skipc
  2451  0323  2B25               	goto	u5091
  2452  0324  2B26               	goto	u5090
  2453  0325                     u5091:
  2454  0325  2BD2               	goto	l3014
  2455  0326                     u5090:
  2456  0326                     l3000:
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2459  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2460  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2461  0328  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2462  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2463  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2464  032B  00A3               	movwf	___flge@ff1+3
  2465  032C  1683               	bsf	3,5	;RP0=1, select bank1
  2466  032D  1303               	bcf	3,6	;RP1=0, select bank1
  2467  032E  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2468  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2470  0331  00A2               	movwf	___flge@ff1+2
  2471  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2472  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2473  0334  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2474  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2476  0337  00A1               	movwf	___flge@ff1+1
  2477  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2478  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2479  033A  083F               	movf	sprintf@tmpval^(0+128),w
  2480  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2481  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2482  033D  00A0               	movwf	___flge@ff1
  2483  033E  3040               	movlw	64
  2484  033F  00A7               	movwf	___flge@ff2+3
  2485  0340  3089               	movlw	137
  2486  0341  00A6               	movwf	___flge@ff2+2
  2487  0342  3070               	movlw	112
  2488  0343  00A5               	movwf	___flge@ff2+1
  2489  0344  305F               	movlw	95
  2490  0345  00A4               	movwf	___flge@ff2
  2491  0346  160A  158A  275C  120A  118A  	fcall	___flge
  2492  034B  1803               	btfsc	3,0
  2493  034C  2B4E               	goto	u5101
  2494  034D  2B4F               	goto	u5100
  2495  034E                     u5101:
  2496  034E  2B58               	goto	l3004
  2497  034F                     u5100:
  2498  034F                     l3002:
  2499                           
  2500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2501  034F  30F7               	movlw	247
  2502  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2503  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2504  0352  07BD               	addwf	sprintf@eexp^(0+128),f
  2505  0353  1803               	skipnc
  2506  0354  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2507  0355  30FF               	movlw	255
  2508  0356  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2509                           
  2510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2511  0357  2B60               	goto	l3006
  2512  0358                     l3004:
  2513                           
  2514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2515  0358  30F8               	movlw	248
  2516  0359  1683               	bsf	3,5	;RP0=1, select bank1
  2517  035A  1303               	bcf	3,6	;RP1=0, select bank1
  2518  035B  07BD               	addwf	sprintf@eexp^(0+128),f
  2519  035C  1803               	skipnc
  2520  035D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2521  035E  30FF               	movlw	255
  2522  035F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2523  0360                     l3006:
  2524                           
  2525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2526  0360  083D               	movf	sprintf@eexp^(0+128),w
  2527  0361  120A  158A  249D  120A  118A  	fcall	_scale
  2528  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2529  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2530  0368  0848               	movf	?_scale+3,w
  2531  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2532  036A  1303               	bcf	3,6	;RP1=0, select bank1
  2533  036B  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2534  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2535  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2536  036E  0847               	movf	?_scale+2,w
  2537  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2538  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2539  0371  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2540  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2542  0374  0846               	movf	?_scale+1,w
  2543  0375  1683               	bsf	3,5	;RP0=1, select bank1
  2544  0376  1303               	bcf	3,6	;RP1=0, select bank1
  2545  0377  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2546  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2548  037A  0845               	movf	?_scale,w
  2549  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2550  037C  1303               	bcf	3,6	;RP1=0, select bank1
  2551  037D  00BF               	movwf	sprintf@tmpval^(0+128)
  2552  037E                     l3008:
  2553  037E  0849               	movf	(sprintf@fval+3)^(0+128),w
  2554  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0381  00A3               	movwf	__div_to_l_@f1+3
  2557  0382  1683               	bsf	3,5	;RP0=1, select bank1
  2558  0383  1303               	bcf	3,6	;RP1=0, select bank1
  2559  0384  0848               	movf	(sprintf@fval+2)^(0+128),w
  2560  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0387  00A2               	movwf	__div_to_l_@f1+2
  2563  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2564  0389  1303               	bcf	3,6	;RP1=0, select bank1
  2565  038A  0847               	movf	(sprintf@fval+1)^(0+128),w
  2566  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2567  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2568  038D  00A1               	movwf	__div_to_l_@f1+1
  2569  038E  1683               	bsf	3,5	;RP0=1, select bank1
  2570  038F  1303               	bcf	3,6	;RP1=0, select bank1
  2571  0390  0846               	movf	sprintf@fval^(0+128),w
  2572  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0393  00A0               	movwf	__div_to_l_@f1
  2575  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2576  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2577  0396  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2578  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2579  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2580  0399  00A7               	movwf	__div_to_l_@f2+3
  2581  039A  1683               	bsf	3,5	;RP0=1, select bank1
  2582  039B  1303               	bcf	3,6	;RP1=0, select bank1
  2583  039C  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2584  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2585  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2586  039F  00A6               	movwf	__div_to_l_@f2+2
  2587  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2588  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2589  03A2  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2590  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2591  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2592  03A5  00A5               	movwf	__div_to_l_@f2+1
  2593  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2594  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2595  03A8  083F               	movf	sprintf@tmpval^(0+128),w
  2596  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2597  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2598  03AB  00A4               	movwf	__div_to_l_@f2
  2599  03AC  160A  118A  22AD  120A  118A  	fcall	__div_to_l_
  2600  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2601  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2602  03B3  0823               	movf	?__div_to_l_+3,w
  2603  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2604  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2605  03B6  00BC               	movwf	(sprintf@val+3)^(0+128)
  2606  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2607  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2608  03B9  0822               	movf	?__div_to_l_+2,w
  2609  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2610  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  2611  03BC  00BB               	movwf	(sprintf@val+2)^(0+128)
  2612  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2613  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2614  03BF  0821               	movf	?__div_to_l_+1,w
  2615  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  2616  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  2617  03C2  00BA               	movwf	(sprintf@val+1)^(0+128)
  2618  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2619  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2620  03C5  0820               	movf	?__div_to_l_,w
  2621  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2622  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  2623  03C8  00B9               	movwf	sprintf@val^(0+128)
  2624  03C9                     l3012:
  2625                           
  2626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2627  03C9  3000               	movlw	0
  2628  03CA  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2629  03CB  3000               	movlw	0
  2630  03CC  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2631  03CD  3000               	movlw	0
  2632  03CE  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2633  03CF  3000               	movlw	0
  2634  03D0  00C6               	movwf	sprintf@fval^(0+128)
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2637  03D1  2C54               	goto	l3020
  2638  03D2                     l3014:
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2641  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2642  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  2643  03D4  0849               	movf	(sprintf@fval+3)^(0+128),w
  2644  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2645  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2646  03D7  00DB               	movwf	___fltol@f1+3
  2647  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2648  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  2649  03DA  0848               	movf	(sprintf@fval+2)^(0+128),w
  2650  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2651  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2652  03DD  00DA               	movwf	___fltol@f1+2
  2653  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  2654  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  2655  03E0  0847               	movf	(sprintf@fval+1)^(0+128),w
  2656  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2657  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2658  03E3  00D9               	movwf	___fltol@f1+1
  2659  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2660  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  2661  03E6  0846               	movf	sprintf@fval^(0+128),w
  2662  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2663  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2664  03E9  00D8               	movwf	___fltol@f1
  2665  03EA  160A  158A  26E0  120A  118A  	fcall	___fltol
  2666  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2667  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2668  03F1  085B               	movf	?___fltol+3,w
  2669  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2670  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2671  03F4  00BC               	movwf	(sprintf@val+3)^(0+128)
  2672  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2673  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2674  03F7  085A               	movf	?___fltol+2,w
  2675  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2676  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2677  03FA  00BB               	movwf	(sprintf@val+2)^(0+128)
  2678  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2679  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2680  03FD  0859               	movf	?___fltol+1,w
  2681  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2682  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0400  00BA               	movwf	(sprintf@val+1)^(0+128)
  2684  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2685  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2686  0403  0858               	movf	?___fltol,w
  2687  0404  1683               	bsf	3,5	;RP0=1, select bank1
  2688  0405  1303               	bcf	3,6	;RP1=0, select bank1
  2689  0406  00B9               	movwf	sprintf@val^(0+128)
  2690  0407                     l3016:
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2693  0407  083C               	movf	(sprintf@val+3)^(0+128),w
  2694  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2696  040A  00AE               	movwf	___xxtofl@val+3
  2697  040B  1683               	bsf	3,5	;RP0=1, select bank1
  2698  040C  1303               	bcf	3,6	;RP1=0, select bank1
  2699  040D  083B               	movf	(sprintf@val+2)^(0+128),w
  2700  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2701  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2702  0410  00AD               	movwf	___xxtofl@val+2
  2703  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2704  0412  1303               	bcf	3,6	;RP1=0, select bank1
  2705  0413  083A               	movf	(sprintf@val+1)^(0+128),w
  2706  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2707  0415  1303               	bcf	3,6	;RP1=0, select bank0
  2708  0416  00AC               	movwf	___xxtofl@val+1
  2709  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2710  0418  1303               	bcf	3,6	;RP1=0, select bank1
  2711  0419  0839               	movf	sprintf@val^(0+128),w
  2712  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2713  041B  1303               	bcf	3,6	;RP1=0, select bank0
  2714  041C  00AB               	movwf	___xxtofl@val
  2715  041D  3000               	movlw	0
  2716  041E  160A  118A  2134  120A  118A  	fcall	___xxtofl
  2717  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0425  082E               	movf	?___xxtofl+3,w
  2720  0426  1683               	bsf	3,5	;RP0=1, select bank1
  2721  0427  1303               	bcf	3,6	;RP1=0, select bank1
  2722  0428  00A3               	movwf	(___flsub@a+3)^(0+128)
  2723  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2724  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2725  042B  082D               	movf	?___xxtofl+2,w
  2726  042C  1683               	bsf	3,5	;RP0=1, select bank1
  2727  042D  1303               	bcf	3,6	;RP1=0, select bank1
  2728  042E  00A2               	movwf	(___flsub@a+2)^(0+128)
  2729  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2731  0431  082C               	movf	?___xxtofl+1,w
  2732  0432  1683               	bsf	3,5	;RP0=1, select bank1
  2733  0433  1303               	bcf	3,6	;RP1=0, select bank1
  2734  0434  00A1               	movwf	(___flsub@a+1)^(0+128)
  2735  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2737  0437  082B               	movf	?___xxtofl,w
  2738  0438  1683               	bsf	3,5	;RP0=1, select bank1
  2739  0439  1303               	bcf	3,6	;RP1=0, select bank1
  2740  043A  00A0               	movwf	___flsub@a^(0+128)
  2741  043B  0849               	movf	(sprintf@fval+3)^(0+128),w
  2742  043C  00A7               	movwf	(___flsub@b+3)^(0+128)
  2743  043D  0848               	movf	(sprintf@fval+2)^(0+128),w
  2744  043E  00A6               	movwf	(___flsub@b+2)^(0+128)
  2745  043F  0847               	movf	(sprintf@fval+1)^(0+128),w
  2746  0440  00A5               	movwf	(___flsub@b+1)^(0+128)
  2747  0441  0846               	movf	sprintf@fval^(0+128),w
  2748  0442  00A4               	movwf	___flsub@b^(0+128)
  2749  0443  160A  158A  2557  120A  118A  	fcall	___flsub
  2750  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2751  0449  1303               	bcf	3,6	;RP1=0, select bank1
  2752  044A  0823               	movf	(?___flsub+3)^(0+128),w
  2753  044B  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2754  044C  0822               	movf	(?___flsub+2)^(0+128),w
  2755  044D  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2756  044E  0821               	movf	(?___flsub+1)^(0+128),w
  2757  044F  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2758  0450  0820               	movf	?___flsub^(0+128),w
  2759  0451  00C6               	movwf	sprintf@fval^(0+128)
  2760  0452                     l3018:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2763  0452  01BD               	clrf	sprintf@eexp^(0+128)
  2764  0453  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2765  0454                     l3020:
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2768  0454  01CA               	clrf	sprintf@c^(0+128)
  2769  0455  0ACA               	incf	sprintf@c^(0+128),f
  2770  0456                     l3026:
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2773  0456  084A               	movf	sprintf@c^(0+128),w
  2774  0457  00AD               	movwf	??_sprintf^(0+128)
  2775  0458  3001               	movlw	1
  2776  0459                     u5115:
  2777  0459  1003               	clrc
  2778  045A  0DAD               	rlf	??_sprintf^(0+128),f
  2779  045B  3EFF               	addlw	-1
  2780  045C  1D03               	skipz
  2781  045D  2C59               	goto	u5115
  2782  045E  1003               	clrc
  2783  045F  0D2D               	rlf	??_sprintf^(0+128),w
  2784  0460  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2785  0461  0084               	movwf	4
  2786  0462  160A  118A  200A  120A  118A  	fcall	stringdir
  2787  0467  00AE               	movwf	(??_sprintf+1)^(0+128)
  2788  0468  160A  118A  200A  120A  118A  	fcall	stringdir
  2789  046D  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
  2790  046E  160A  118A  200A  120A  118A  	fcall	stringdir
  2791  0473  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
  2792  0474  160A  118A  200A  120A  118A  	fcall	stringdir
  2793  0479  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
  2794  047A  0831               	movf	(??_sprintf+4)^(0+128),w
  2795  047B  023C               	subwf	(sprintf@val+3)^(0+128),w
  2796  047C  1D03               	skipz
  2797  047D  2C88               	goto	u5125
  2798  047E  0830               	movf	(??_sprintf+3)^(0+128),w
  2799  047F  023B               	subwf	(sprintf@val+2)^(0+128),w
  2800  0480  1D03               	skipz
  2801  0481  2C88               	goto	u5125
  2802  0482  082F               	movf	(??_sprintf+2)^(0+128),w
  2803  0483  023A               	subwf	(sprintf@val+1)^(0+128),w
  2804  0484  1D03               	skipz
  2805  0485  2C88               	goto	u5125
  2806  0486  082E               	movf	(??_sprintf+1)^(0+128),w
  2807  0487  0239               	subwf	sprintf@val^(0+128),w
  2808  0488                     u5125:
  2809  0488  1803               	skipnc
  2810  0489  2C8B               	goto	u5121
  2811  048A  2C8C               	goto	u5120
  2812  048B                     u5121:
  2813  048B  2C8D               	goto	l3030
  2814  048C                     u5120:
  2815  048C  2C97               	goto	l3032
  2816  048D                     l3030:
  2817  048D  3001               	movlw	1
  2818  048E  00AD               	movwf	??_sprintf^(0+128)
  2819  048F  082D               	movf	??_sprintf^(0+128),w
  2820  0490  07CA               	addwf	sprintf@c^(0+128),f
  2821  0491  300A               	movlw	10
  2822  0492  064A               	xorwf	sprintf@c^(0+128),w
  2823  0493  1D03               	btfss	3,2
  2824  0494  2C96               	goto	u5131
  2825  0495  2C97               	goto	u5130
  2826  0496                     u5131:
  2827  0496  2C56               	goto	l3026
  2828  0497                     u5130:
  2829  0497                     l3032:
  2830                           
  2831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2832  0497  3003               	movlw	3
  2833  0498  0537               	andwf	sprintf@flag^(0+128),w
  2834  0499  00AD               	movwf	??_sprintf^(0+128)
  2835  049A  3000               	movlw	0
  2836  049B  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2837  049C  00AE               	movwf	(??_sprintf+1)^(0+128)
  2838  049D  082D               	movf	??_sprintf^(0+128),w
  2839  049E  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2840  049F  1903               	btfsc	3,2
  2841  04A0  2CA2               	goto	u5141
  2842  04A1  2CA3               	goto	u5140
  2843  04A2                     u5141:
  2844  04A2  2D55               	goto	l244
  2845  04A3                     u5140:
  2846  04A3                     l3034:
  2847                           
  2848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2849  04A3  302D               	movlw	45
  2850  04A4  00AD               	movwf	??_sprintf^(0+128)
  2851  04A5  0843               	movf	sprintf@sp^(0+128),w
  2852  04A6  0084               	movwf	4
  2853  04A7  082D               	movf	??_sprintf^(0+128),w
  2854  04A8  1383               	bcf	3,7	;select IRP bank0
  2855  04A9  0080               	movwf	0
  2856  04AA                     l3036:
  2857  04AA  3001               	movlw	1
  2858  04AB  00AD               	movwf	??_sprintf^(0+128)
  2859  04AC  082D               	movf	??_sprintf^(0+128),w
  2860  04AD  07C3               	addwf	sprintf@sp^(0+128),f
  2861  04AE  2D55               	goto	l244
  2862  04AF                     l3038:
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2865  04AF  084A               	movf	sprintf@c^(0+128),w
  2866  04B0  00AD               	movwf	??_sprintf^(0+128)
  2867  04B1  3001               	movlw	1
  2868  04B2                     u5155:
  2869  04B2  1003               	clrc
  2870  04B3  0DAD               	rlf	??_sprintf^(0+128),f
  2871  04B4  3EFF               	addlw	-1
  2872  04B5  1D03               	skipz
  2873  04B6  2CB2               	goto	u5155
  2874  04B7  1003               	clrc
  2875  04B8  0D2D               	rlf	??_sprintf^(0+128),w
  2876  04B9  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2877  04BA  0084               	movwf	4
  2878  04BB  160A  118A  200A  120A  118A  	fcall	stringdir
  2879  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2880  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2881  04C2  00A0               	movwf	___lldiv@divisor
  2882  04C3  160A  118A  200A  120A  118A  	fcall	stringdir
  2883  04C8  00A1               	movwf	___lldiv@divisor+1
  2884  04C9  160A  118A  200A  120A  118A  	fcall	stringdir
  2885  04CE  00A2               	movwf	___lldiv@divisor+2
  2886  04CF  160A  118A  200A  120A  118A  	fcall	stringdir
  2887  04D4  00A3               	movwf	___lldiv@divisor+3
  2888  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2889  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2890  04D7  083C               	movf	(sprintf@val+3)^(0+128),w
  2891  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2892  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2893  04DA  00A7               	movwf	___lldiv@dividend+3
  2894  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  2895  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  2896  04DD  083B               	movf	(sprintf@val+2)^(0+128),w
  2897  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2898  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2899  04E0  00A6               	movwf	___lldiv@dividend+2
  2900  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  2901  04E2  1303               	bcf	3,6	;RP1=0, select bank1
  2902  04E3  083A               	movf	(sprintf@val+1)^(0+128),w
  2903  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2904  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2905  04E6  00A5               	movwf	___lldiv@dividend+1
  2906  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  2907  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  2908  04E9  0839               	movf	sprintf@val^(0+128),w
  2909  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2910  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2911  04EC  00A4               	movwf	___lldiv@dividend
  2912  04ED  160A  118A  20CC  120A  118A  	fcall	___lldiv
  2913  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2914  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2915  04F4  0823               	movf	?___lldiv+3,w
  2916  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  2917  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  2918  04F7  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2919  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2920  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2921  04FA  0822               	movf	?___lldiv+2,w
  2922  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  2923  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  2924  04FD  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2925  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2926  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2927  0500  0821               	movf	?___lldiv+1,w
  2928  0501  1683               	bsf	3,5	;RP0=1, select bank1
  2929  0502  1303               	bcf	3,6	;RP1=0, select bank1
  2930  0503  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2931  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0505  1303               	bcf	3,6	;RP1=0, select bank0
  2933  0506  0820               	movf	?___lldiv,w
  2934  0507  1683               	bsf	3,5	;RP0=1, select bank1
  2935  0508  1303               	bcf	3,6	;RP1=0, select bank1
  2936  0509  00BF               	movwf	sprintf@tmpval^(0+128)
  2937  050A                     l3040:
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2940  050A  3000               	movlw	0
  2941  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2942  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2943  050D  00A3               	movwf	___llmod@divisor+3
  2944  050E  3000               	movlw	0
  2945  050F  00A2               	movwf	___llmod@divisor+2
  2946  0510  3000               	movlw	0
  2947  0511  00A1               	movwf	___llmod@divisor+1
  2948  0512  300A               	movlw	10
  2949  0513  00A0               	movwf	___llmod@divisor
  2950  0514  1683               	bsf	3,5	;RP0=1, select bank1
  2951  0515  1303               	bcf	3,6	;RP1=0, select bank1
  2952  0516  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2953  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2954  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2955  0519  00A7               	movwf	___llmod@dividend+3
  2956  051A  1683               	bsf	3,5	;RP0=1, select bank1
  2957  051B  1303               	bcf	3,6	;RP1=0, select bank1
  2958  051C  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2959  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2960  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2961  051F  00A6               	movwf	___llmod@dividend+2
  2962  0520  1683               	bsf	3,5	;RP0=1, select bank1
  2963  0521  1303               	bcf	3,6	;RP1=0, select bank1
  2964  0522  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2965  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0525  00A5               	movwf	___llmod@dividend+1
  2968  0526  1683               	bsf	3,5	;RP0=1, select bank1
  2969  0527  1303               	bcf	3,6	;RP1=0, select bank1
  2970  0528  083F               	movf	sprintf@tmpval^(0+128),w
  2971  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2972  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2973  052B  00A4               	movwf	___llmod@dividend
  2974  052C  120A  118A  27A8  120A  118A  	fcall	___llmod
  2975  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2977  0533  0823               	movf	?___llmod+3,w
  2978  0534  1683               	bsf	3,5	;RP0=1, select bank1
  2979  0535  1303               	bcf	3,6	;RP1=0, select bank1
  2980  0536  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2981  0537  1283               	bcf	3,5	;RP0=0, select bank0
  2982  0538  1303               	bcf	3,6	;RP1=0, select bank0
  2983  0539  0822               	movf	?___llmod+2,w
  2984  053A  1683               	bsf	3,5	;RP0=1, select bank1
  2985  053B  1303               	bcf	3,6	;RP1=0, select bank1
  2986  053C  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2987  053D  1283               	bcf	3,5	;RP0=0, select bank0
  2988  053E  1303               	bcf	3,6	;RP1=0, select bank0
  2989  053F  0821               	movf	?___llmod+1,w
  2990  0540  1683               	bsf	3,5	;RP0=1, select bank1
  2991  0541  1303               	bcf	3,6	;RP1=0, select bank1
  2992  0542  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2993  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2994  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2995  0545  0820               	movf	?___llmod,w
  2996  0546  1683               	bsf	3,5	;RP0=1, select bank1
  2997  0547  1303               	bcf	3,6	;RP1=0, select bank1
  2998  0548  00BF               	movwf	sprintf@tmpval^(0+128)
  2999  0549                     l3042:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3002  0549  083F               	movf	sprintf@tmpval^(0+128),w
  3003  054A  3E30               	addlw	48
  3004  054B  00AD               	movwf	??_sprintf^(0+128)
  3005  054C  0843               	movf	sprintf@sp^(0+128),w
  3006  054D  0084               	movwf	4
  3007  054E  082D               	movf	??_sprintf^(0+128),w
  3008  054F  1383               	bcf	3,7	;select IRP bank0
  3009  0550  0080               	movwf	0
  3010  0551  3001               	movlw	1
  3011  0552  00AD               	movwf	??_sprintf^(0+128)
  3012  0553  082D               	movf	??_sprintf^(0+128),w
  3013  0554  07C3               	addwf	sprintf@sp^(0+128),f
  3014  0555                     l244:	
  3015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3016                           
  3017                           
  3018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3019  0555  3001               	movlw	1
  3020  0556  02CA               	subwf	sprintf@c^(0+128),f
  3021  0557  0A4A               	incf	sprintf@c^(0+128),w
  3022  0558  1D03               	btfss	3,2
  3023  0559  2D5B               	goto	u5161
  3024  055A  2D5C               	goto	u5160
  3025  055B                     u5161:
  3026  055B  2CAF               	goto	l3038
  3027  055C                     u5160:
  3028  055C  2D70               	goto	l3050
  3029  055D                     l3044:
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3032  055D  3030               	movlw	48
  3033  055E  1683               	bsf	3,5	;RP0=1, select bank1
  3034  055F  1303               	bcf	3,6	;RP1=0, select bank1
  3035  0560  00AD               	movwf	??_sprintf^(0+128)
  3036  0561  0843               	movf	sprintf@sp^(0+128),w
  3037  0562  0084               	movwf	4
  3038  0563  082D               	movf	??_sprintf^(0+128),w
  3039  0564  1383               	bcf	3,7	;select IRP bank0
  3040  0565  0080               	movwf	0
  3041  0566                     l3046:
  3042  0566  3001               	movlw	1
  3043  0567  00AD               	movwf	??_sprintf^(0+128)
  3044  0568  082D               	movf	??_sprintf^(0+128),w
  3045  0569  07C3               	addwf	sprintf@sp^(0+128),f
  3046  056A                     l3048:
  3047                           
  3048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3049  056A  30FF               	movlw	255
  3050  056B  07BD               	addwf	sprintf@eexp^(0+128),f
  3051  056C  1803               	skipnc
  3052  056D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  3053  056E  30FF               	movlw	255
  3054  056F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  3055  0570                     l3050:
  3056                           
  3057                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3058  0570  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3059  0571  3A80               	xorlw	128
  3060  0572  00FF               	movwf	btemp+1
  3061  0573  3080               	movlw	128
  3062  0574  027F               	subwf	btemp+1,w
  3063  0575  1D03               	skipz
  3064  0576  2D79               	goto	u5175
  3065  0577  3001               	movlw	1
  3066  0578  023D               	subwf	sprintf@eexp^(0+128),w
  3067  0579                     u5175:
  3068  0579  1803               	skipnc
  3069  057A  2D7C               	goto	u5171
  3070  057B  2D7D               	goto	u5170
  3071  057C                     u5171:
  3072  057C  2D5D               	goto	l3044
  3073  057D                     u5170:
  3074  057D                     l3052:
  3075                           
  3076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3077  057D  1683               	bsf	3,5	;RP0=1, select bank1
  3078  057E  1303               	bcf	3,6	;RP1=0, select bank1
  3079  057F  0845               	movf	(sprintf@prec+1)^(0+128),w
  3080  0580  3A80               	xorlw	128
  3081  0581  00FF               	movwf	btemp+1
  3082  0582  3080               	movlw	128
  3083  0583  027F               	subwf	btemp+1,w
  3084  0584  1D03               	skipz
  3085  0585  2D88               	goto	u5185
  3086  0586  3009               	movlw	9
  3087  0587  0244               	subwf	sprintf@prec^(0+128),w
  3088  0588                     u5185:
  3089  0588  1C03               	skipc
  3090  0589  2D8B               	goto	u5181
  3091  058A  2D8C               	goto	u5180
  3092  058B                     u5181:
  3093  058B  2D93               	goto	l3056
  3094  058C                     u5180:
  3095  058C                     l3054:
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3098  058C  3008               	movlw	8
  3099  058D  1683               	bsf	3,5	;RP0=1, select bank1
  3100  058E  1303               	bcf	3,6	;RP1=0, select bank1
  3101  058F  00AD               	movwf	??_sprintf^(0+128)
  3102  0590  082D               	movf	??_sprintf^(0+128),w
  3103  0591  00CA               	movwf	sprintf@c^(0+128)
  3104  0592  2D99               	goto	l251
  3105  0593                     l3056:
  3106                           
  3107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3108  0593  1683               	bsf	3,5	;RP0=1, select bank1
  3109  0594  1303               	bcf	3,6	;RP1=0, select bank1
  3110  0595  0844               	movf	sprintf@prec^(0+128),w
  3111  0596  00AD               	movwf	??_sprintf^(0+128)
  3112  0597  082D               	movf	??_sprintf^(0+128),w
  3113  0598  00CA               	movwf	sprintf@c^(0+128)
  3114  0599                     l251:
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3117  0599  084A               	movf	sprintf@c^(0+128),w
  3118  059A  00AD               	movwf	??_sprintf^(0+128)
  3119  059B  01AE               	clrf	(??_sprintf^(0+128)+1)
  3120  059C  082D               	movf	??_sprintf^(0+128),w
  3121  059D  02C4               	subwf	sprintf@prec^(0+128),f
  3122  059E  082E               	movf	(??_sprintf+1)^(0+128),w
  3123  059F  1C03               	skipc
  3124  05A0  03C5               	decf	(sprintf@prec+1)^(0+128),f
  3125  05A1  02C5               	subwf	(sprintf@prec+1)^(0+128),f
  3126  05A2                     l3058:
  3127                           
  3128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3129  05A2  084A               	movf	sprintf@c^(0+128),w
  3130  05A3  1903               	btfsc	3,2
  3131  05A4  2DA6               	goto	u5191
  3132  05A5  2DA7               	goto	u5190
  3133  05A6                     u5191:
  3134  05A6  2DB2               	goto	l3064
  3135  05A7                     u5190:
  3136  05A7                     l3060:
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3139  05A7  302E               	movlw	46
  3140  05A8  00AD               	movwf	??_sprintf^(0+128)
  3141  05A9  0843               	movf	sprintf@sp^(0+128),w
  3142  05AA  0084               	movwf	4
  3143  05AB  082D               	movf	??_sprintf^(0+128),w
  3144  05AC  1383               	bcf	3,7	;select IRP bank0
  3145  05AD  0080               	movwf	0
  3146  05AE                     l3062:
  3147  05AE  3001               	movlw	1
  3148  05AF  00AD               	movwf	??_sprintf^(0+128)
  3149  05B0  082D               	movf	??_sprintf^(0+128),w
  3150  05B1  07C3               	addwf	sprintf@sp^(0+128),f
  3151  05B2                     l3064:
  3152                           
  3153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3154  05B2  084A               	movf	sprintf@c^(0+128),w
  3155  05B3  120A  158A  249D  120A  118A  	fcall	_scale
  3156  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3157  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3158  05BA  0848               	movf	?_scale+3,w
  3159  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  3160  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  3161  05BD  00B5               	movwf	(_sprintf$988+3)^(0+128)
  3162  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  3163  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  3164  05C0  0847               	movf	?_scale+2,w
  3165  05C1  1683               	bsf	3,5	;RP0=1, select bank1
  3166  05C2  1303               	bcf	3,6	;RP1=0, select bank1
  3167  05C3  00B4               	movwf	(_sprintf$988+2)^(0+128)
  3168  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3169  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  3170  05C6  0846               	movf	?_scale+1,w
  3171  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  3172  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  3173  05C9  00B3               	movwf	(_sprintf$988+1)^(0+128)
  3174  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  3175  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  3176  05CC  0845               	movf	?_scale,w
  3177  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  3178  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  3179  05CF  00B2               	movwf	_sprintf$988^(0+128)
  3180  05D0                     l3066:
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3183  05D0  0835               	movf	(_sprintf$988+3)^(0+128),w
  3184  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3185  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3186  05D3  00B2               	movwf	___flmul@a+3
  3187  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3188  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  3189  05D6  0834               	movf	(_sprintf$988+2)^(0+128),w
  3190  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  3191  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  3192  05D9  00B1               	movwf	___flmul@a+2
  3193  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3194  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  3195  05DC  0833               	movf	(_sprintf$988+1)^(0+128),w
  3196  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3197  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3198  05DF  00B0               	movwf	___flmul@a+1
  3199  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  3200  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  3201  05E2  0832               	movf	_sprintf$988^(0+128),w
  3202  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3203  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3204  05E5  00AF               	movwf	___flmul@a
  3205  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  3206  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  3207  05E8  0849               	movf	(sprintf@fval+3)^(0+128),w
  3208  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  3209  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  3210  05EB  00AE               	movwf	___flmul@b+3
  3211  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  3212  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  3213  05EE  0848               	movf	(sprintf@fval+2)^(0+128),w
  3214  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3215  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3216  05F1  00AD               	movwf	___flmul@b+2
  3217  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  3218  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  3219  05F4  0847               	movf	(sprintf@fval+1)^(0+128),w
  3220  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3221  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  3222  05F7  00AC               	movwf	___flmul@b+1
  3223  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  3224  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  3225  05FA  0846               	movf	sprintf@fval^(0+128),w
  3226  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3227  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  3228  05FD  00AB               	movwf	___flmul@b
  3229  05FE  120A  158A  213C  120A  118A  	fcall	___flmul
  3230  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3231  0604  1303               	bcf	3,6	;RP1=0, select bank0
  3232  0605  082E               	movf	?___flmul+3,w
  3233  0606  00DB               	movwf	___fltol@f1+3
  3234  0607  082D               	movf	?___flmul+2,w
  3235  0608  00DA               	movwf	___fltol@f1+2
  3236  0609  082C               	movf	?___flmul+1,w
  3237  060A  00D9               	movwf	___fltol@f1+1
  3238  060B  082B               	movf	?___flmul,w
  3239  060C  00D8               	movwf	___fltol@f1
  3240  060D  160A  158A  26E0  120A  118A  	fcall	___fltol
  3241  0612  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0613  1303               	bcf	3,6	;RP1=0, select bank0
  3243  0614  085B               	movf	?___fltol+3,w
  3244  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3245  0616  1303               	bcf	3,6	;RP1=0, select bank1
  3246  0617  00BC               	movwf	(sprintf@val+3)^(0+128)
  3247  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3248  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3249  061A  085A               	movf	?___fltol+2,w
  3250  061B  1683               	bsf	3,5	;RP0=1, select bank1
  3251  061C  1303               	bcf	3,6	;RP1=0, select bank1
  3252  061D  00BB               	movwf	(sprintf@val+2)^(0+128)
  3253  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3254  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3255  0620  0859               	movf	?___fltol+1,w
  3256  0621  1683               	bsf	3,5	;RP0=1, select bank1
  3257  0622  1303               	bcf	3,6	;RP1=0, select bank1
  3258  0623  00BA               	movwf	(sprintf@val+1)^(0+128)
  3259  0624  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0625  1303               	bcf	3,6	;RP1=0, select bank0
  3261  0626  0858               	movf	?___fltol,w
  3262  0627  1683               	bsf	3,5	;RP0=1, select bank1
  3263  0628  1303               	bcf	3,6	;RP1=0, select bank1
  3264  0629  00B9               	movwf	sprintf@val^(0+128)
  3265                           
  3266                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3267  062A  2F2C               	goto	l3076
  3268  062B                     l3068:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3271  062B  084A               	movf	sprintf@c^(0+128),w
  3272  062C  00AD               	movwf	??_sprintf^(0+128)
  3273  062D  3001               	movlw	1
  3274  062E                     u5205:
  3275  062E  1003               	clrc
  3276  062F  0DAD               	rlf	??_sprintf^(0+128),f
  3277  0630  3EFF               	addlw	-1
  3278  0631  1D03               	skipz
  3279  0632  2E2E               	goto	u5205
  3280  0633  1003               	clrc
  3281  0634  0D2D               	rlf	??_sprintf^(0+128),w
  3282  0635  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3283  0636  0084               	movwf	4
  3284  0637  160A  118A  200A  120A  118A  	fcall	stringdir
  3285  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3286  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3287  063E  00A0               	movwf	___lldiv@divisor
  3288  063F  160A  118A  200A  120A  118A  	fcall	stringdir
  3289  0644  00A1               	movwf	___lldiv@divisor+1
  3290  0645  160A  118A  200A  120A  118A  	fcall	stringdir
  3291  064A  00A2               	movwf	___lldiv@divisor+2
  3292  064B  160A  118A  200A  120A  118A  	fcall	stringdir
  3293  0650  00A3               	movwf	___lldiv@divisor+3
  3294  0651  1683               	bsf	3,5	;RP0=1, select bank1
  3295  0652  1303               	bcf	3,6	;RP1=0, select bank1
  3296  0653  083C               	movf	(sprintf@val+3)^(0+128),w
  3297  0654  1283               	bcf	3,5	;RP0=0, select bank0
  3298  0655  1303               	bcf	3,6	;RP1=0, select bank0
  3299  0656  00A7               	movwf	___lldiv@dividend+3
  3300  0657  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0658  1303               	bcf	3,6	;RP1=0, select bank1
  3302  0659  083B               	movf	(sprintf@val+2)^(0+128),w
  3303  065A  1283               	bcf	3,5	;RP0=0, select bank0
  3304  065B  1303               	bcf	3,6	;RP1=0, select bank0
  3305  065C  00A6               	movwf	___lldiv@dividend+2
  3306  065D  1683               	bsf	3,5	;RP0=1, select bank1
  3307  065E  1303               	bcf	3,6	;RP1=0, select bank1
  3308  065F  083A               	movf	(sprintf@val+1)^(0+128),w
  3309  0660  1283               	bcf	3,5	;RP0=0, select bank0
  3310  0661  1303               	bcf	3,6	;RP1=0, select bank0
  3311  0662  00A5               	movwf	___lldiv@dividend+1
  3312  0663  1683               	bsf	3,5	;RP0=1, select bank1
  3313  0664  1303               	bcf	3,6	;RP1=0, select bank1
  3314  0665  0839               	movf	sprintf@val^(0+128),w
  3315  0666  1283               	bcf	3,5	;RP0=0, select bank0
  3316  0667  1303               	bcf	3,6	;RP1=0, select bank0
  3317  0668  00A4               	movwf	___lldiv@dividend
  3318  0669  160A  118A  20CC  120A  118A  	fcall	___lldiv
  3319  066E  1283               	bcf	3,5	;RP0=0, select bank0
  3320  066F  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0670  0823               	movf	?___lldiv+3,w
  3322  0671  1683               	bsf	3,5	;RP0=1, select bank1
  3323  0672  1303               	bcf	3,6	;RP1=0, select bank1
  3324  0673  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3325  0674  1283               	bcf	3,5	;RP0=0, select bank0
  3326  0675  1303               	bcf	3,6	;RP1=0, select bank0
  3327  0676  0822               	movf	?___lldiv+2,w
  3328  0677  1683               	bsf	3,5	;RP0=1, select bank1
  3329  0678  1303               	bcf	3,6	;RP1=0, select bank1
  3330  0679  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3331  067A  1283               	bcf	3,5	;RP0=0, select bank0
  3332  067B  1303               	bcf	3,6	;RP1=0, select bank0
  3333  067C  0821               	movf	?___lldiv+1,w
  3334  067D  1683               	bsf	3,5	;RP0=1, select bank1
  3335  067E  1303               	bcf	3,6	;RP1=0, select bank1
  3336  067F  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3337  0680  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0681  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0682  0820               	movf	?___lldiv,w
  3340  0683  1683               	bsf	3,5	;RP0=1, select bank1
  3341  0684  1303               	bcf	3,6	;RP1=0, select bank1
  3342  0685  00BF               	movwf	sprintf@tmpval^(0+128)
  3343  0686                     l3070:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3346  0686  3000               	movlw	0
  3347  0687  1283               	bcf	3,5	;RP0=0, select bank0
  3348  0688  1303               	bcf	3,6	;RP1=0, select bank0
  3349  0689  00A3               	movwf	___llmod@divisor+3
  3350  068A  3000               	movlw	0
  3351  068B  00A2               	movwf	___llmod@divisor+2
  3352  068C  3000               	movlw	0
  3353  068D  00A1               	movwf	___llmod@divisor+1
  3354  068E  300A               	movlw	10
  3355  068F  00A0               	movwf	___llmod@divisor
  3356  0690  1683               	bsf	3,5	;RP0=1, select bank1
  3357  0691  1303               	bcf	3,6	;RP1=0, select bank1
  3358  0692  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  3359  0693  1283               	bcf	3,5	;RP0=0, select bank0
  3360  0694  1303               	bcf	3,6	;RP1=0, select bank0
  3361  0695  00A7               	movwf	___llmod@dividend+3
  3362  0696  1683               	bsf	3,5	;RP0=1, select bank1
  3363  0697  1303               	bcf	3,6	;RP1=0, select bank1
  3364  0698  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  3365  0699  1283               	bcf	3,5	;RP0=0, select bank0
  3366  069A  1303               	bcf	3,6	;RP1=0, select bank0
  3367  069B  00A6               	movwf	___llmod@dividend+2
  3368  069C  1683               	bsf	3,5	;RP0=1, select bank1
  3369  069D  1303               	bcf	3,6	;RP1=0, select bank1
  3370  069E  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  3371  069F  1283               	bcf	3,5	;RP0=0, select bank0
  3372  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3373  06A1  00A5               	movwf	___llmod@dividend+1
  3374  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3375  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3376  06A4  083F               	movf	sprintf@tmpval^(0+128),w
  3377  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3378  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3379  06A7  00A4               	movwf	___llmod@dividend
  3380  06A8  120A  118A  27A8  120A  118A  	fcall	___llmod
  3381  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3382  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3383  06AF  0823               	movf	?___llmod+3,w
  3384  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  3385  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  3386  06B2  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3387  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  3388  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  3389  06B5  0822               	movf	?___llmod+2,w
  3390  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  3391  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  3392  06B8  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3393  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3394  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3395  06BB  0821               	movf	?___llmod+1,w
  3396  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  3397  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  3398  06BE  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3399  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  3400  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  3401  06C1  0820               	movf	?___llmod,w
  3402  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  3403  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  3404  06C4  00BF               	movwf	sprintf@tmpval^(0+128)
  3405  06C5                     l3072:
  3406                           
  3407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3408  06C5  083F               	movf	sprintf@tmpval^(0+128),w
  3409  06C6  3E30               	addlw	48
  3410  06C7  00AD               	movwf	??_sprintf^(0+128)
  3411  06C8  0843               	movf	sprintf@sp^(0+128),w
  3412  06C9  0084               	movwf	4
  3413  06CA  082D               	movf	??_sprintf^(0+128),w
  3414  06CB  1383               	bcf	3,7	;select IRP bank0
  3415  06CC  0080               	movwf	0
  3416  06CD  3001               	movlw	1
  3417  06CE  00AD               	movwf	??_sprintf^(0+128)
  3418  06CF  082D               	movf	??_sprintf^(0+128),w
  3419  06D0  07C3               	addwf	sprintf@sp^(0+128),f
  3420  06D1                     l3074:
  3421                           
  3422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3423  06D1  084A               	movf	sprintf@c^(0+128),w
  3424  06D2  00AD               	movwf	??_sprintf^(0+128)
  3425  06D3  3001               	movlw	1
  3426  06D4                     u5215:
  3427  06D4  1003               	clrc
  3428  06D5  0DAD               	rlf	??_sprintf^(0+128),f
  3429  06D6  3EFF               	addlw	-1
  3430  06D7  1D03               	skipz
  3431  06D8  2ED4               	goto	u5215
  3432  06D9  1003               	clrc
  3433  06DA  0D2D               	rlf	??_sprintf^(0+128),w
  3434  06DB  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3435  06DC  0084               	movwf	4
  3436  06DD  160A  118A  200A  120A  118A  	fcall	stringdir
  3437  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  3438  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  3439  06E4  00A0               	movwf	___llmod@divisor
  3440  06E5  160A  118A  200A  120A  118A  	fcall	stringdir
  3441  06EA  00A1               	movwf	___llmod@divisor+1
  3442  06EB  160A  118A  200A  120A  118A  	fcall	stringdir
  3443  06F0  00A2               	movwf	___llmod@divisor+2
  3444  06F1  160A  118A  200A  120A  118A  	fcall	stringdir
  3445  06F6  00A3               	movwf	___llmod@divisor+3
  3446  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  3447  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  3448  06F9  083C               	movf	(sprintf@val+3)^(0+128),w
  3449  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  3450  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  3451  06FC  00A7               	movwf	___llmod@dividend+3
  3452  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  3453  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  3454  06FF  083B               	movf	(sprintf@val+2)^(0+128),w
  3455  0700  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0701  1303               	bcf	3,6	;RP1=0, select bank0
  3457  0702  00A6               	movwf	___llmod@dividend+2
  3458  0703  1683               	bsf	3,5	;RP0=1, select bank1
  3459  0704  1303               	bcf	3,6	;RP1=0, select bank1
  3460  0705  083A               	movf	(sprintf@val+1)^(0+128),w
  3461  0706  1283               	bcf	3,5	;RP0=0, select bank0
  3462  0707  1303               	bcf	3,6	;RP1=0, select bank0
  3463  0708  00A5               	movwf	___llmod@dividend+1
  3464  0709  1683               	bsf	3,5	;RP0=1, select bank1
  3465  070A  1303               	bcf	3,6	;RP1=0, select bank1
  3466  070B  0839               	movf	sprintf@val^(0+128),w
  3467  070C  1283               	bcf	3,5	;RP0=0, select bank0
  3468  070D  1303               	bcf	3,6	;RP1=0, select bank0
  3469  070E  00A4               	movwf	___llmod@dividend
  3470  070F  120A  118A  27A8  120A  118A  	fcall	___llmod
  3471  0714  1283               	bcf	3,5	;RP0=0, select bank0
  3472  0715  1303               	bcf	3,6	;RP1=0, select bank0
  3473  0716  0823               	movf	?___llmod+3,w
  3474  0717  1683               	bsf	3,5	;RP0=1, select bank1
  3475  0718  1303               	bcf	3,6	;RP1=0, select bank1
  3476  0719  00BC               	movwf	(sprintf@val+3)^(0+128)
  3477  071A  1283               	bcf	3,5	;RP0=0, select bank0
  3478  071B  1303               	bcf	3,6	;RP1=0, select bank0
  3479  071C  0822               	movf	?___llmod+2,w
  3480  071D  1683               	bsf	3,5	;RP0=1, select bank1
  3481  071E  1303               	bcf	3,6	;RP1=0, select bank1
  3482  071F  00BB               	movwf	(sprintf@val+2)^(0+128)
  3483  0720  1283               	bcf	3,5	;RP0=0, select bank0
  3484  0721  1303               	bcf	3,6	;RP1=0, select bank0
  3485  0722  0821               	movf	?___llmod+1,w
  3486  0723  1683               	bsf	3,5	;RP0=1, select bank1
  3487  0724  1303               	bcf	3,6	;RP1=0, select bank1
  3488  0725  00BA               	movwf	(sprintf@val+1)^(0+128)
  3489  0726  1283               	bcf	3,5	;RP0=0, select bank0
  3490  0727  1303               	bcf	3,6	;RP1=0, select bank0
  3491  0728  0820               	movf	?___llmod,w
  3492  0729  1683               	bsf	3,5	;RP0=1, select bank1
  3493  072A  1303               	bcf	3,6	;RP1=0, select bank1
  3494  072B  00B9               	movwf	sprintf@val^(0+128)
  3495  072C                     l3076:
  3496                           
  3497                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3498  072C  3001               	movlw	1
  3499  072D  02CA               	subwf	sprintf@c^(0+128),f
  3500  072E  0A4A               	incf	sprintf@c^(0+128),w
  3501  072F  1D03               	btfss	3,2
  3502  0730  2F32               	goto	u5221
  3503  0731  2F33               	goto	u5220
  3504  0732                     u5221:
  3505  0732  2E2B               	goto	l3068
  3506  0733                     u5220:
  3507  0733  2F45               	goto	l3084
  3508  0734                     l3078:
  3509                           
  3510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3511  0734  3030               	movlw	48
  3512  0735  00AD               	movwf	??_sprintf^(0+128)
  3513  0736  0843               	movf	sprintf@sp^(0+128),w
  3514  0737  0084               	movwf	4
  3515  0738  082D               	movf	??_sprintf^(0+128),w
  3516  0739  1383               	bcf	3,7	;select IRP bank0
  3517  073A  0080               	movwf	0
  3518  073B                     l3080:
  3519  073B  3001               	movlw	1
  3520  073C  00AD               	movwf	??_sprintf^(0+128)
  3521  073D  082D               	movf	??_sprintf^(0+128),w
  3522  073E  07C3               	addwf	sprintf@sp^(0+128),f
  3523  073F                     l3082:
  3524                           
  3525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3526  073F  30FF               	movlw	255
  3527  0740  07C4               	addwf	sprintf@prec^(0+128),f
  3528  0741  1803               	skipnc
  3529  0742  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  3530  0743  30FF               	movlw	255
  3531  0744  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  3532  0745                     l3084:
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3535  0745  0844               	movf	sprintf@prec^(0+128),w
  3536  0746  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3537  0747  1D03               	btfss	3,2
  3538  0748  2F4A               	goto	u5231
  3539  0749  2F4B               	goto	u5230
  3540  074A                     u5231:
  3541  074A  2F34               	goto	l3078
  3542  074B                     u5230:
  3543  074B  2F91               	goto	l3104
  3544  074C                     l3086:
  3545                           
  3546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3547  074C  0844               	movf	sprintf@prec^(0+128),w
  3548  074D  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3549  074E  1D03               	btfss	3,2
  3550  074F  2F51               	goto	u5241
  3551  0750  2F52               	goto	u5240
  3552  0751                     u5241:
  3553  0751  2F60               	goto	l259
  3554  0752                     u5240:
  3555  0752                     l3088:
  3556  0752  083C               	movf	(sprintf@val+3)^(0+128),w
  3557  0753  043B               	iorwf	(sprintf@val+2)^(0+128),w
  3558  0754  043A               	iorwf	(sprintf@val+1)^(0+128),w
  3559  0755  0439               	iorwf	sprintf@val^(0+128),w
  3560  0756  1D03               	skipz
  3561  0757  2F59               	goto	u5251
  3562  0758  2F5A               	goto	u5250
  3563  0759                     u5251:
  3564  0759  2F60               	goto	l259
  3565  075A                     u5250:
  3566  075A                     l3090:
  3567                           
  3568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3569  075A  3001               	movlw	1
  3570  075B  07C4               	addwf	sprintf@prec^(0+128),f
  3571  075C  1803               	skipnc
  3572  075D  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  3573  075E  3000               	movlw	0
  3574  075F  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  3575  0760                     l259:
  3576                           
  3577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3578  0760  0845               	movf	(sprintf@prec+1)^(0+128),w
  3579  0761  3A80               	xorlw	128
  3580  0762  3C80               	sublw	128
  3581  0763  1D03               	skipz
  3582  0764  2F67               	goto	u5265
  3583  0765  0844               	movf	sprintf@prec^(0+128),w
  3584  0766  024A               	subwf	sprintf@c^(0+128),w
  3585  0767                     u5265:
  3586  0767  1803               	skipnc
  3587  0768  2F6A               	goto	u5261
  3588  0769  2F6B               	goto	u5260
  3589  076A                     u5261:
  3590  076A  2F6C               	goto	l3094
  3591  076B                     u5260:
  3592  076B                     l3092:
  3593  076B  2F7B               	goto	l3098
  3594  076C                     l3094:
  3595  076C  1683               	bsf	3,5	;RP0=1, select bank1
  3596  076D  1303               	bcf	3,6	;RP1=0, select bank1
  3597  076E  0845               	movf	(sprintf@prec+1)^(0+128),w
  3598  076F  3A80               	xorlw	128
  3599  0770  00AD               	movwf	??_sprintf^(0+128)
  3600  0771  3080               	movlw	128
  3601  0772  022D               	subwf	??_sprintf^(0+128),w
  3602  0773  1D03               	skipz
  3603  0774  2F77               	goto	u5275
  3604  0775  084A               	movf	sprintf@c^(0+128),w
  3605  0776  0244               	subwf	sprintf@prec^(0+128),w
  3606  0777                     u5275:
  3607  0777  1803               	skipnc
  3608  0778  2F7A               	goto	u5271
  3609  0779  2F7B               	goto	u5270
  3610  077A                     u5271:
  3611  077A  2F7B               	goto	l3098
  3612  077B                     u5270:
  3613  077B                     l3096:
  3614  077B                     l3098:
  3615                           
  3616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3617  077B  3003               	movlw	3
  3618  077C  1683               	bsf	3,5	;RP0=1, select bank1
  3619  077D  1303               	bcf	3,6	;RP1=0, select bank1
  3620  077E  0537               	andwf	sprintf@flag^(0+128),w
  3621  077F  00AD               	movwf	??_sprintf^(0+128)
  3622  0780  3000               	movlw	0
  3623  0781  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3624  0782  00AE               	movwf	(??_sprintf+1)^(0+128)
  3625  0783  082D               	movf	??_sprintf^(0+128),w
  3626  0784  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3627  0785  1903               	btfsc	3,2
  3628  0786  2F88               	goto	u5281
  3629  0787  2F89               	goto	u5280
  3630  0788                     u5281:
  3631  0788  2F91               	goto	l3104
  3632  0789                     u5280:
  3633  0789                     l3100:
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3636  0789  302D               	movlw	45
  3637  078A  00AD               	movwf	??_sprintf^(0+128)
  3638  078B  0843               	movf	sprintf@sp^(0+128),w
  3639  078C  0084               	movwf	4
  3640  078D  082D               	movf	??_sprintf^(0+128),w
  3641  078E  1383               	bcf	3,7	;select IRP bank0
  3642  078F  0080               	movwf	0
  3643  0790  2837               	goto	l2916
  3644  0791                     l3104:
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3647  0791  3001               	movlw	1
  3648  0792  07A8               	addwf	sprintf@f^(0+128),f
  3649  0793  30FF               	movlw	-1
  3650  0794  0728               	addwf	sprintf@f^(0+128),w
  3651  0795  0084               	movwf	4
  3652  0796  160A  118A  200A  120A  118A  	fcall	stringdir
  3653  079B  00AD               	movwf	??_sprintf^(0+128)
  3654  079C  082D               	movf	??_sprintf^(0+128),w
  3655  079D  00CA               	movwf	sprintf@c^(0+128)
  3656  079E  084A               	movf	sprintf@c^(0+128),w
  3657  079F  1D03               	btfss	3,2
  3658  07A0  2FA2               	goto	u5291
  3659  07A1  2FA3               	goto	u5290
  3660  07A2                     u5291:
  3661  07A2  282A               	goto	l2912
  3662  07A3                     u5290:
  3663  07A3                     l3106:
  3664                           
  3665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3666  07A3  0843               	movf	sprintf@sp^(0+128),w
  3667  07A4  0084               	movwf	4
  3668  07A5  1383               	bcf	3,7	;select IRP bank0
  3669  07A6  0180               	clrf	0
  3670  07A7                     l265:
  3671  07A7  0008               	return
  3672  07A8                     __end_of_sprintf:
  3673                           
  3674                           	psect	text3
  3675  0C9D                     __ptext3:	
  3676 ;; *************** function _scale *****************
  3677 ;; Defined at:
  3678 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  scl             1    wreg     char 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  scl             1   55[BANK0 ] char 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  4   37[BANK0 ] char 
  3685 ;; Registers used:
  3686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3692 ;;      Params:         0       4       0       0       0
  3693 ;;      Locals:         0       5       0       0       0
  3694 ;;      Temps:          0      10       0       0       0
  3695 ;;      Totals:         0      19       0       0       0
  3696 ;;Total ram usage:       19 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    3
  3699 ;; This function calls:
  3700 ;;		___awdiv
  3701 ;;		___awmod
  3702 ;;		___flmul
  3703 ;; This function is called by:
  3704 ;;		_sprintf
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           
  3709                           ;psect for function _scale
  3710  0C9D                     _scale:
  3711                           
  3712                           ;incstack = 0
  3713                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3714                           ;scale@scl stored from wreg
  3715  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3716  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3717  0C9F  00D7               	movwf	scale@scl
  3718  0CA0                     l2550:
  3719                           
  3720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3721  0CA0  1FD7               	btfss	scale@scl,7
  3722  0CA1  2CA3               	goto	u3931
  3723  0CA2  2CA4               	goto	u3930
  3724  0CA3                     u3931:
  3725  0CA3  2E53               	goto	l2572
  3726  0CA4                     u3930:
  3727  0CA4                     l2552:
  3728                           
  3729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3730  0CA4  09D7               	comf	scale@scl,f
  3731  0CA5  0AD7               	incf	scale@scl,f
  3732  0CA6                     l2554:
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3735  0CA6  0857               	movf	scale@scl,w
  3736  0CA7  3A80               	xorlw	128
  3737  0CA8  3E12               	addlw	-238
  3738  0CA9  1C03               	skipc
  3739  0CAA  2CAC               	goto	u3941
  3740  0CAB  2CAD               	goto	u3940
  3741  0CAC                     u3941:
  3742  0CAC  2D97               	goto	l2562
  3743  0CAD                     u3940:
  3744  0CAD                     l2556:
  3745                           
  3746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3747  0CAD  300A               	movlw	10
  3748  0CAE  00A2               	movwf	___awdiv@divisor
  3749  0CAF  3000               	movlw	0
  3750  0CB0  00A3               	movwf	___awdiv@divisor+1
  3751  0CB1  0857               	movf	scale@scl,w
  3752  0CB2  00F6               	movwf	___awmod@dividend
  3753  0CB3  01F7               	clrf	___awmod@dividend+1
  3754  0CB4  1BF6               	btfsc	___awmod@dividend,7
  3755  0CB5  03F7               	decf	___awmod@dividend+1,f
  3756  0CB6  3064               	movlw	100
  3757  0CB7  00F4               	movwf	___awmod@divisor
  3758  0CB8  3000               	movlw	0
  3759  0CB9  00F5               	movwf	___awmod@divisor+1
  3760  0CBA  160A  158A  25A7  120A  158A  	fcall	___awmod
  3761  0CBF  0875               	movf	?___awmod+1,w
  3762  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3763  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3764  0CC2  00A5               	movwf	___awdiv@dividend+1
  3765  0CC3  0874               	movf	?___awmod,w
  3766  0CC4  00A4               	movwf	___awdiv@dividend
  3767  0CC5  160A  158A  2602  120A  158A  	fcall	___awdiv
  3768  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3769  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3770  0CCC  0822               	movf	?___awdiv,w
  3771  0CCD  00C9               	movwf	??_scale
  3772  0CCE  3001               	movlw	1
  3773  0CCF                     u3955:
  3774  0CCF  1003               	clrc
  3775  0CD0  0DC9               	rlf	??_scale,f
  3776  0CD1  3EFF               	addlw	-1
  3777  0CD2  1D03               	skipz
  3778  0CD3  2CCF               	goto	u3955
  3779  0CD4  1003               	clrc
  3780  0CD5  0D49               	rlf	??_scale,w
  3781  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3782  0CD7  0084               	movwf	4
  3783  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  3784  0CDD  00CA               	movwf	??_scale+1
  3785  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  3786  0CE3  00CB               	movwf	??_scale+2
  3787  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  3788  0CE9  00CC               	movwf	??_scale+3
  3789  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  3790  0CEF  00CD               	movwf	??_scale+4
  3791  0CF0  084D               	movf	??_scale+4,w
  3792  0CF1  00AE               	movwf	___flmul@b+3
  3793  0CF2  084C               	movf	??_scale+3,w
  3794  0CF3  00AD               	movwf	___flmul@b+2
  3795  0CF4  084B               	movf	??_scale+2,w
  3796  0CF5  00AC               	movwf	___flmul@b+1
  3797  0CF6  084A               	movf	??_scale+1,w
  3798  0CF7  00AB               	movwf	___flmul@b
  3799  0CF8  3064               	movlw	100
  3800  0CF9  00A2               	movwf	___awdiv@divisor
  3801  0CFA  3000               	movlw	0
  3802  0CFB  00A3               	movwf	___awdiv@divisor+1
  3803  0CFC  0857               	movf	scale@scl,w
  3804  0CFD  00A4               	movwf	___awdiv@dividend
  3805  0CFE  01A5               	clrf	___awdiv@dividend+1
  3806  0CFF  1BA4               	btfsc	___awdiv@dividend,7
  3807  0D00  03A5               	decf	___awdiv@dividend+1,f
  3808  0D01  160A  158A  2602  120A  158A  	fcall	___awdiv
  3809  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3810  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3811  0D08  0822               	movf	?___awdiv,w
  3812  0D09  00CE               	movwf	??_scale+5
  3813  0D0A  3001               	movlw	1
  3814  0D0B                     u3965:
  3815  0D0B  1003               	clrc
  3816  0D0C  0DCE               	rlf	??_scale+5,f
  3817  0D0D  3EFF               	addlw	-1
  3818  0D0E  1D03               	skipz
  3819  0D0F  2D0B               	goto	u3965
  3820  0D10  1003               	clrc
  3821  0D11  0D4E               	rlf	??_scale+5,w
  3822  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3823  0D13  0084               	movwf	4
  3824  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  3825  0D19  00CF               	movwf	??_scale+6
  3826  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  3827  0D1F  00D0               	movwf	??_scale+7
  3828  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  3829  0D25  00D1               	movwf	??_scale+8
  3830  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  3831  0D2B  00D2               	movwf	??_scale+9
  3832  0D2C  0852               	movf	??_scale+9,w
  3833  0D2D  00B2               	movwf	___flmul@a+3
  3834  0D2E  0851               	movf	??_scale+8,w
  3835  0D2F  00B1               	movwf	___flmul@a+2
  3836  0D30  0850               	movf	??_scale+7,w
  3837  0D31  00B0               	movwf	___flmul@a+1
  3838  0D32  084F               	movf	??_scale+6,w
  3839  0D33  00AF               	movwf	___flmul@a
  3840  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3841  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3842  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3843  0D3B  082E               	movf	?___flmul+3,w
  3844  0D3C  00D6               	movwf	_scale$987+3
  3845  0D3D  082D               	movf	?___flmul+2,w
  3846  0D3E  00D5               	movwf	_scale$987+2
  3847  0D3F  082C               	movf	?___flmul+1,w
  3848  0D40  00D4               	movwf	_scale$987+1
  3849  0D41  082B               	movf	?___flmul,w
  3850  0D42  00D3               	movwf	_scale$987
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3853  0D43  300A               	movlw	10
  3854  0D44  00F4               	movwf	___awmod@divisor
  3855  0D45  3000               	movlw	0
  3856  0D46  00F5               	movwf	___awmod@divisor+1
  3857  0D47  0857               	movf	scale@scl,w
  3858  0D48  00F6               	movwf	___awmod@dividend
  3859  0D49  01F7               	clrf	___awmod@dividend+1
  3860  0D4A  1BF6               	btfsc	___awmod@dividend,7
  3861  0D4B  03F7               	decf	___awmod@dividend+1,f
  3862  0D4C  160A  158A  25A7  120A  158A  	fcall	___awmod
  3863  0D51  0874               	movf	?___awmod,w
  3864  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3865  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3866  0D54  00C9               	movwf	??_scale
  3867  0D55  3001               	movlw	1
  3868  0D56                     u3975:
  3869  0D56  1003               	clrc
  3870  0D57  0DC9               	rlf	??_scale,f
  3871  0D58  3EFF               	addlw	-1
  3872  0D59  1D03               	skipz
  3873  0D5A  2D56               	goto	u3975
  3874  0D5B  1003               	clrc
  3875  0D5C  0D49               	rlf	??_scale,w
  3876  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3877  0D5E  0084               	movwf	4
  3878  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  3879  0D64  00CA               	movwf	??_scale+1
  3880  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  3881  0D6A  00CB               	movwf	??_scale+2
  3882  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  3883  0D70  00CC               	movwf	??_scale+3
  3884  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  3885  0D76  00CD               	movwf	??_scale+4
  3886  0D77  084D               	movf	??_scale+4,w
  3887  0D78  00AE               	movwf	___flmul@b+3
  3888  0D79  084C               	movf	??_scale+3,w
  3889  0D7A  00AD               	movwf	___flmul@b+2
  3890  0D7B  084B               	movf	??_scale+2,w
  3891  0D7C  00AC               	movwf	___flmul@b+1
  3892  0D7D  084A               	movf	??_scale+1,w
  3893  0D7E  00AB               	movwf	___flmul@b
  3894  0D7F  0856               	movf	_scale$987+3,w
  3895  0D80  00B2               	movwf	___flmul@a+3
  3896  0D81  0855               	movf	_scale$987+2,w
  3897  0D82  00B1               	movwf	___flmul@a+2
  3898  0D83  0854               	movf	_scale$987+1,w
  3899  0D84  00B0               	movwf	___flmul@a+1
  3900  0D85  0853               	movf	_scale$987,w
  3901  0D86  00AF               	movwf	___flmul@a
  3902  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3903  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3904  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3905  0D8E  082E               	movf	?___flmul+3,w
  3906  0D8F  00C8               	movwf	?_scale+3
  3907  0D90  082D               	movf	?___flmul+2,w
  3908  0D91  00C7               	movwf	?_scale+2
  3909  0D92  082C               	movf	?___flmul+1,w
  3910  0D93  00C6               	movwf	?_scale+1
  3911  0D94  082B               	movf	?___flmul,w
  3912  0D95  00C5               	movwf	?_scale
  3913  0D96  2FFF               	goto	l199
  3914  0D97                     l2562:
  3915  0D97  0857               	movf	scale@scl,w
  3916  0D98  3A80               	xorlw	128
  3917  0D99  3E75               	addlw	-139
  3918  0D9A  1C03               	skipc
  3919  0D9B  2D9D               	goto	u3981
  3920  0D9C  2D9E               	goto	u3980
  3921  0D9D                     u3981:
  3922  0D9D  2E26               	goto	l2568
  3923  0D9E                     u3980:
  3924  0D9E                     l2564:
  3925                           
  3926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3927  0D9E  300A               	movlw	10
  3928  0D9F  00F4               	movwf	___awmod@divisor
  3929  0DA0  3000               	movlw	0
  3930  0DA1  00F5               	movwf	___awmod@divisor+1
  3931  0DA2  0857               	movf	scale@scl,w
  3932  0DA3  00F6               	movwf	___awmod@dividend
  3933  0DA4  01F7               	clrf	___awmod@dividend+1
  3934  0DA5  1BF6               	btfsc	___awmod@dividend,7
  3935  0DA6  03F7               	decf	___awmod@dividend+1,f
  3936  0DA7  160A  158A  25A7  120A  158A  	fcall	___awmod
  3937  0DAC  0874               	movf	?___awmod,w
  3938  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3939  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3940  0DAF  00C9               	movwf	??_scale
  3941  0DB0  3001               	movlw	1
  3942  0DB1                     u3995:
  3943  0DB1  1003               	clrc
  3944  0DB2  0DC9               	rlf	??_scale,f
  3945  0DB3  3EFF               	addlw	-1
  3946  0DB4  1D03               	skipz
  3947  0DB5  2DB1               	goto	u3995
  3948  0DB6  1003               	clrc
  3949  0DB7  0D49               	rlf	??_scale,w
  3950  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3951  0DB9  0084               	movwf	4
  3952  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  3953  0DBF  00CA               	movwf	??_scale+1
  3954  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  3955  0DC5  00CB               	movwf	??_scale+2
  3956  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  3957  0DCB  00CC               	movwf	??_scale+3
  3958  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  3959  0DD1  00CD               	movwf	??_scale+4
  3960  0DD2  084D               	movf	??_scale+4,w
  3961  0DD3  00AE               	movwf	___flmul@b+3
  3962  0DD4  084C               	movf	??_scale+3,w
  3963  0DD5  00AD               	movwf	___flmul@b+2
  3964  0DD6  084B               	movf	??_scale+2,w
  3965  0DD7  00AC               	movwf	___flmul@b+1
  3966  0DD8  084A               	movf	??_scale+1,w
  3967  0DD9  00AB               	movwf	___flmul@b
  3968  0DDA  300A               	movlw	10
  3969  0DDB  00A2               	movwf	___awdiv@divisor
  3970  0DDC  3000               	movlw	0
  3971  0DDD  00A3               	movwf	___awdiv@divisor+1
  3972  0DDE  0857               	movf	scale@scl,w
  3973  0DDF  00A4               	movwf	___awdiv@dividend
  3974  0DE0  01A5               	clrf	___awdiv@dividend+1
  3975  0DE1  1BA4               	btfsc	___awdiv@dividend,7
  3976  0DE2  03A5               	decf	___awdiv@dividend+1,f
  3977  0DE3  160A  158A  2602  120A  158A  	fcall	___awdiv
  3978  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3979  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3980  0DEA  0822               	movf	?___awdiv,w
  3981  0DEB  00CE               	movwf	??_scale+5
  3982  0DEC  3001               	movlw	1
  3983  0DED                     u4005:
  3984  0DED  1003               	clrc
  3985  0DEE  0DCE               	rlf	??_scale+5,f
  3986  0DEF  3EFF               	addlw	-1
  3987  0DF0  1D03               	skipz
  3988  0DF1  2DED               	goto	u4005
  3989  0DF2  1003               	clrc
  3990  0DF3  0D4E               	rlf	??_scale+5,w
  3991  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3992  0DF5  0084               	movwf	4
  3993  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  3994  0DFB  00CF               	movwf	??_scale+6
  3995  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  3996  0E01  00D0               	movwf	??_scale+7
  3997  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  3998  0E07  00D1               	movwf	??_scale+8
  3999  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  4000  0E0D  00D2               	movwf	??_scale+9
  4001  0E0E  0852               	movf	??_scale+9,w
  4002  0E0F  00B2               	movwf	___flmul@a+3
  4003  0E10  0851               	movf	??_scale+8,w
  4004  0E11  00B1               	movwf	___flmul@a+2
  4005  0E12  0850               	movf	??_scale+7,w
  4006  0E13  00B0               	movwf	___flmul@a+1
  4007  0E14  084F               	movf	??_scale+6,w
  4008  0E15  00AF               	movwf	___flmul@a
  4009  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  4010  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4011  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4012  0E1D  082E               	movf	?___flmul+3,w
  4013  0E1E  00C8               	movwf	?_scale+3
  4014  0E1F  082D               	movf	?___flmul+2,w
  4015  0E20  00C7               	movwf	?_scale+2
  4016  0E21  082C               	movf	?___flmul+1,w
  4017  0E22  00C6               	movwf	?_scale+1
  4018  0E23  082B               	movf	?___flmul,w
  4019  0E24  00C5               	movwf	?_scale
  4020  0E25  2FFF               	goto	l199
  4021  0E26                     l2568:
  4022                           
  4023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4024  0E26  0857               	movf	scale@scl,w
  4025  0E27  00C9               	movwf	??_scale
  4026  0E28  3001               	movlw	1
  4027  0E29                     u4015:
  4028  0E29  1003               	clrc
  4029  0E2A  0DC9               	rlf	??_scale,f
  4030  0E2B  3EFF               	addlw	-1
  4031  0E2C  1D03               	skipz
  4032  0E2D  2E29               	goto	u4015
  4033  0E2E  1003               	clrc
  4034  0E2F  0D49               	rlf	??_scale,w
  4035  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4036  0E31  0084               	movwf	4
  4037  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  4038  0E37  00CA               	movwf	??_scale+1
  4039  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  4040  0E3D  00CB               	movwf	??_scale+2
  4041  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  4042  0E43  00CC               	movwf	??_scale+3
  4043  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  4044  0E49  00CD               	movwf	??_scale+4
  4045  0E4A  084D               	movf	??_scale+4,w
  4046  0E4B  00C8               	movwf	?_scale+3
  4047  0E4C  084C               	movf	??_scale+3,w
  4048  0E4D  00C7               	movwf	?_scale+2
  4049  0E4E  084B               	movf	??_scale+2,w
  4050  0E4F  00C6               	movwf	?_scale+1
  4051  0E50  084A               	movf	??_scale+1,w
  4052  0E51  00C5               	movwf	?_scale
  4053  0E52  2FFF               	goto	l199
  4054  0E53                     l2572:
  4055                           
  4056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4057  0E53  0857               	movf	scale@scl,w
  4058  0E54  3A80               	xorlw	128
  4059  0E55  3E12               	addlw	-238
  4060  0E56  1C03               	skipc
  4061  0E57  2E59               	goto	u4021
  4062  0E58  2E5A               	goto	u4020
  4063  0E59                     u4021:
  4064  0E59  2F44               	goto	l2580
  4065  0E5A                     u4020:
  4066  0E5A                     l2574:
  4067                           
  4068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4069  0E5A  300A               	movlw	10
  4070  0E5B  00A2               	movwf	___awdiv@divisor
  4071  0E5C  3000               	movlw	0
  4072  0E5D  00A3               	movwf	___awdiv@divisor+1
  4073  0E5E  0857               	movf	scale@scl,w
  4074  0E5F  00F6               	movwf	___awmod@dividend
  4075  0E60  01F7               	clrf	___awmod@dividend+1
  4076  0E61  1BF6               	btfsc	___awmod@dividend,7
  4077  0E62  03F7               	decf	___awmod@dividend+1,f
  4078  0E63  3064               	movlw	100
  4079  0E64  00F4               	movwf	___awmod@divisor
  4080  0E65  3000               	movlw	0
  4081  0E66  00F5               	movwf	___awmod@divisor+1
  4082  0E67  160A  158A  25A7  120A  158A  	fcall	___awmod
  4083  0E6C  0875               	movf	?___awmod+1,w
  4084  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4085  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4086  0E6F  00A5               	movwf	___awdiv@dividend+1
  4087  0E70  0874               	movf	?___awmod,w
  4088  0E71  00A4               	movwf	___awdiv@dividend
  4089  0E72  160A  158A  2602  120A  158A  	fcall	___awdiv
  4090  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4091  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4092  0E79  0822               	movf	?___awdiv,w
  4093  0E7A  00C9               	movwf	??_scale
  4094  0E7B  3001               	movlw	1
  4095  0E7C                     u4035:
  4096  0E7C  1003               	clrc
  4097  0E7D  0DC9               	rlf	??_scale,f
  4098  0E7E  3EFF               	addlw	-1
  4099  0E7F  1D03               	skipz
  4100  0E80  2E7C               	goto	u4035
  4101  0E81  1003               	clrc
  4102  0E82  0D49               	rlf	??_scale,w
  4103  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4104  0E84  0084               	movwf	4
  4105  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  4106  0E8A  00CA               	movwf	??_scale+1
  4107  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  4108  0E90  00CB               	movwf	??_scale+2
  4109  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  4110  0E96  00CC               	movwf	??_scale+3
  4111  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  4112  0E9C  00CD               	movwf	??_scale+4
  4113  0E9D  084D               	movf	??_scale+4,w
  4114  0E9E  00AE               	movwf	___flmul@b+3
  4115  0E9F  084C               	movf	??_scale+3,w
  4116  0EA0  00AD               	movwf	___flmul@b+2
  4117  0EA1  084B               	movf	??_scale+2,w
  4118  0EA2  00AC               	movwf	___flmul@b+1
  4119  0EA3  084A               	movf	??_scale+1,w
  4120  0EA4  00AB               	movwf	___flmul@b
  4121  0EA5  3064               	movlw	100
  4122  0EA6  00A2               	movwf	___awdiv@divisor
  4123  0EA7  3000               	movlw	0
  4124  0EA8  00A3               	movwf	___awdiv@divisor+1
  4125  0EA9  0857               	movf	scale@scl,w
  4126  0EAA  00A4               	movwf	___awdiv@dividend
  4127  0EAB  01A5               	clrf	___awdiv@dividend+1
  4128  0EAC  1BA4               	btfsc	___awdiv@dividend,7
  4129  0EAD  03A5               	decf	___awdiv@dividend+1,f
  4130  0EAE  160A  158A  2602  120A  158A  	fcall	___awdiv
  4131  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4132  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4133  0EB5  0822               	movf	?___awdiv,w
  4134  0EB6  00CE               	movwf	??_scale+5
  4135  0EB7  3001               	movlw	1
  4136  0EB8                     u4045:
  4137  0EB8  1003               	clrc
  4138  0EB9  0DCE               	rlf	??_scale+5,f
  4139  0EBA  3EFF               	addlw	-1
  4140  0EBB  1D03               	skipz
  4141  0EBC  2EB8               	goto	u4045
  4142  0EBD  1003               	clrc
  4143  0EBE  0D4E               	rlf	??_scale+5,w
  4144  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4145  0EC0  0084               	movwf	4
  4146  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  4147  0EC6  00CF               	movwf	??_scale+6
  4148  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  4149  0ECC  00D0               	movwf	??_scale+7
  4150  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  4151  0ED2  00D1               	movwf	??_scale+8
  4152  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  4153  0ED8  00D2               	movwf	??_scale+9
  4154  0ED9  0852               	movf	??_scale+9,w
  4155  0EDA  00B2               	movwf	___flmul@a+3
  4156  0EDB  0851               	movf	??_scale+8,w
  4157  0EDC  00B1               	movwf	___flmul@a+2
  4158  0EDD  0850               	movf	??_scale+7,w
  4159  0EDE  00B0               	movwf	___flmul@a+1
  4160  0EDF  084F               	movf	??_scale+6,w
  4161  0EE0  00AF               	movwf	___flmul@a
  4162  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4163  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4164  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4165  0EE8  082E               	movf	?___flmul+3,w
  4166  0EE9  00D6               	movwf	_scale$987+3
  4167  0EEA  082D               	movf	?___flmul+2,w
  4168  0EEB  00D5               	movwf	_scale$987+2
  4169  0EEC  082C               	movf	?___flmul+1,w
  4170  0EED  00D4               	movwf	_scale$987+1
  4171  0EEE  082B               	movf	?___flmul,w
  4172  0EEF  00D3               	movwf	_scale$987
  4173                           
  4174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4175  0EF0  300A               	movlw	10
  4176  0EF1  00F4               	movwf	___awmod@divisor
  4177  0EF2  3000               	movlw	0
  4178  0EF3  00F5               	movwf	___awmod@divisor+1
  4179  0EF4  0857               	movf	scale@scl,w
  4180  0EF5  00F6               	movwf	___awmod@dividend
  4181  0EF6  01F7               	clrf	___awmod@dividend+1
  4182  0EF7  1BF6               	btfsc	___awmod@dividend,7
  4183  0EF8  03F7               	decf	___awmod@dividend+1,f
  4184  0EF9  160A  158A  25A7  120A  158A  	fcall	___awmod
  4185  0EFE  0874               	movf	?___awmod,w
  4186  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4187  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4188  0F01  00C9               	movwf	??_scale
  4189  0F02  3001               	movlw	1
  4190  0F03                     u4055:
  4191  0F03  1003               	clrc
  4192  0F04  0DC9               	rlf	??_scale,f
  4193  0F05  3EFF               	addlw	-1
  4194  0F06  1D03               	skipz
  4195  0F07  2F03               	goto	u4055
  4196  0F08  1003               	clrc
  4197  0F09  0D49               	rlf	??_scale,w
  4198  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4199  0F0B  0084               	movwf	4
  4200  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4201  0F11  00CA               	movwf	??_scale+1
  4202  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  4203  0F17  00CB               	movwf	??_scale+2
  4204  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  4205  0F1D  00CC               	movwf	??_scale+3
  4206  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  4207  0F23  00CD               	movwf	??_scale+4
  4208  0F24  084D               	movf	??_scale+4,w
  4209  0F25  00AE               	movwf	___flmul@b+3
  4210  0F26  084C               	movf	??_scale+3,w
  4211  0F27  00AD               	movwf	___flmul@b+2
  4212  0F28  084B               	movf	??_scale+2,w
  4213  0F29  00AC               	movwf	___flmul@b+1
  4214  0F2A  084A               	movf	??_scale+1,w
  4215  0F2B  00AB               	movwf	___flmul@b
  4216  0F2C  0856               	movf	_scale$987+3,w
  4217  0F2D  00B2               	movwf	___flmul@a+3
  4218  0F2E  0855               	movf	_scale$987+2,w
  4219  0F2F  00B1               	movwf	___flmul@a+2
  4220  0F30  0854               	movf	_scale$987+1,w
  4221  0F31  00B0               	movwf	___flmul@a+1
  4222  0F32  0853               	movf	_scale$987,w
  4223  0F33  00AF               	movwf	___flmul@a
  4224  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4225  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4226  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4227  0F3B  082E               	movf	?___flmul+3,w
  4228  0F3C  00C8               	movwf	?_scale+3
  4229  0F3D  082D               	movf	?___flmul+2,w
  4230  0F3E  00C7               	movwf	?_scale+2
  4231  0F3F  082C               	movf	?___flmul+1,w
  4232  0F40  00C6               	movwf	?_scale+1
  4233  0F41  082B               	movf	?___flmul,w
  4234  0F42  00C5               	movwf	?_scale
  4235  0F43  2FFF               	goto	l199
  4236  0F44                     l2580:
  4237  0F44  0857               	movf	scale@scl,w
  4238  0F45  3A80               	xorlw	128
  4239  0F46  3E75               	addlw	-139
  4240  0F47  1C03               	skipc
  4241  0F48  2F4A               	goto	u4061
  4242  0F49  2F4B               	goto	u4060
  4243  0F4A                     u4061:
  4244  0F4A  2FD3               	goto	l2586
  4245  0F4B                     u4060:
  4246  0F4B                     l2582:
  4247                           
  4248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4249  0F4B  300A               	movlw	10
  4250  0F4C  00F4               	movwf	___awmod@divisor
  4251  0F4D  3000               	movlw	0
  4252  0F4E  00F5               	movwf	___awmod@divisor+1
  4253  0F4F  0857               	movf	scale@scl,w
  4254  0F50  00F6               	movwf	___awmod@dividend
  4255  0F51  01F7               	clrf	___awmod@dividend+1
  4256  0F52  1BF6               	btfsc	___awmod@dividend,7
  4257  0F53  03F7               	decf	___awmod@dividend+1,f
  4258  0F54  160A  158A  25A7  120A  158A  	fcall	___awmod
  4259  0F59  0874               	movf	?___awmod,w
  4260  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4261  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4262  0F5C  00C9               	movwf	??_scale
  4263  0F5D  3001               	movlw	1
  4264  0F5E                     u4075:
  4265  0F5E  1003               	clrc
  4266  0F5F  0DC9               	rlf	??_scale,f
  4267  0F60  3EFF               	addlw	-1
  4268  0F61  1D03               	skipz
  4269  0F62  2F5E               	goto	u4075
  4270  0F63  1003               	clrc
  4271  0F64  0D49               	rlf	??_scale,w
  4272  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4273  0F66  0084               	movwf	4
  4274  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  4275  0F6C  00CA               	movwf	??_scale+1
  4276  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4277  0F72  00CB               	movwf	??_scale+2
  4278  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  4279  0F78  00CC               	movwf	??_scale+3
  4280  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  4281  0F7E  00CD               	movwf	??_scale+4
  4282  0F7F  084D               	movf	??_scale+4,w
  4283  0F80  00AE               	movwf	___flmul@b+3
  4284  0F81  084C               	movf	??_scale+3,w
  4285  0F82  00AD               	movwf	___flmul@b+2
  4286  0F83  084B               	movf	??_scale+2,w
  4287  0F84  00AC               	movwf	___flmul@b+1
  4288  0F85  084A               	movf	??_scale+1,w
  4289  0F86  00AB               	movwf	___flmul@b
  4290  0F87  300A               	movlw	10
  4291  0F88  00A2               	movwf	___awdiv@divisor
  4292  0F89  3000               	movlw	0
  4293  0F8A  00A3               	movwf	___awdiv@divisor+1
  4294  0F8B  0857               	movf	scale@scl,w
  4295  0F8C  00A4               	movwf	___awdiv@dividend
  4296  0F8D  01A5               	clrf	___awdiv@dividend+1
  4297  0F8E  1BA4               	btfsc	___awdiv@dividend,7
  4298  0F8F  03A5               	decf	___awdiv@dividend+1,f
  4299  0F90  160A  158A  2602  120A  158A  	fcall	___awdiv
  4300  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4301  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4302  0F97  0822               	movf	?___awdiv,w
  4303  0F98  00CE               	movwf	??_scale+5
  4304  0F99  3001               	movlw	1
  4305  0F9A                     u4085:
  4306  0F9A  1003               	clrc
  4307  0F9B  0DCE               	rlf	??_scale+5,f
  4308  0F9C  3EFF               	addlw	-1
  4309  0F9D  1D03               	skipz
  4310  0F9E  2F9A               	goto	u4085
  4311  0F9F  1003               	clrc
  4312  0FA0  0D4E               	rlf	??_scale+5,w
  4313  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4314  0FA2  0084               	movwf	4
  4315  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4316  0FA8  00CF               	movwf	??_scale+6
  4317  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4318  0FAE  00D0               	movwf	??_scale+7
  4319  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4320  0FB4  00D1               	movwf	??_scale+8
  4321  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4322  0FBA  00D2               	movwf	??_scale+9
  4323  0FBB  0852               	movf	??_scale+9,w
  4324  0FBC  00B2               	movwf	___flmul@a+3
  4325  0FBD  0851               	movf	??_scale+8,w
  4326  0FBE  00B1               	movwf	___flmul@a+2
  4327  0FBF  0850               	movf	??_scale+7,w
  4328  0FC0  00B0               	movwf	___flmul@a+1
  4329  0FC1  084F               	movf	??_scale+6,w
  4330  0FC2  00AF               	movwf	___flmul@a
  4331  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4332  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4333  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4334  0FCA  082E               	movf	?___flmul+3,w
  4335  0FCB  00C8               	movwf	?_scale+3
  4336  0FCC  082D               	movf	?___flmul+2,w
  4337  0FCD  00C7               	movwf	?_scale+2
  4338  0FCE  082C               	movf	?___flmul+1,w
  4339  0FCF  00C6               	movwf	?_scale+1
  4340  0FD0  082B               	movf	?___flmul,w
  4341  0FD1  00C5               	movwf	?_scale
  4342  0FD2  2FFF               	goto	l199
  4343  0FD3                     l2586:
  4344                           
  4345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4346  0FD3  0857               	movf	scale@scl,w
  4347  0FD4  00C9               	movwf	??_scale
  4348  0FD5  3001               	movlw	1
  4349  0FD6                     u4095:
  4350  0FD6  1003               	clrc
  4351  0FD7  0DC9               	rlf	??_scale,f
  4352  0FD8  3EFF               	addlw	-1
  4353  0FD9  1D03               	skipz
  4354  0FDA  2FD6               	goto	u4095
  4355  0FDB  1003               	clrc
  4356  0FDC  0D49               	rlf	??_scale,w
  4357  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4358  0FDE  0084               	movwf	4
  4359  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  4360  0FE4  00CA               	movwf	??_scale+1
  4361  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4362  0FEA  00CB               	movwf	??_scale+2
  4363  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  4364  0FF0  00CC               	movwf	??_scale+3
  4365  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4366  0FF6  00CD               	movwf	??_scale+4
  4367  0FF7  084D               	movf	??_scale+4,w
  4368  0FF8  00C8               	movwf	?_scale+3
  4369  0FF9  084C               	movf	??_scale+3,w
  4370  0FFA  00C7               	movwf	?_scale+2
  4371  0FFB  084B               	movf	??_scale+2,w
  4372  0FFC  00C6               	movwf	?_scale+1
  4373  0FFD  084A               	movf	??_scale+1,w
  4374  0FFE  00C5               	movwf	?_scale
  4375  0FFF                     l199:
  4376  0FFF  0008               	return
  4377  1000                     __end_of_scale:
  4378                           
  4379                           	psect	text4
  4380  1DA7                     __ptext4:	
  4381 ;; *************** function ___awmod *****************
  4382 ;; Defined at:
  4383 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  divisor         2    4[COMMON] int 
  4386 ;;  dividend        2    6[COMMON] int 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;  sign            1    1[BANK0 ] unsigned char 
  4389 ;;  counter         1    0[BANK0 ] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  2    4[COMMON] int 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4399 ;;      Params:         4       0       0       0       0
  4400 ;;      Locals:         0       2       0       0       0
  4401 ;;      Temps:          1       0       0       0       0
  4402 ;;      Totals:         5       2       0       0       0
  4403 ;;Total ram usage:        7 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    1
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_scale
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           
  4414                           ;psect for function ___awmod
  4415  1DA7                     ___awmod:
  4416  1DA7                     l2096:	
  4417                           ;incstack = 0
  4418                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4419                           
  4420  1DA7  1283               	bcf	3,5	;RP0=0, select bank0
  4421  1DA8  1303               	bcf	3,6	;RP1=0, select bank0
  4422  1DA9  01A1               	clrf	___awmod@sign
  4423  1DAA                     l2098:
  4424  1DAA  1FF7               	btfss	___awmod@dividend+1,7
  4425  1DAB  2DAD               	goto	u2801
  4426  1DAC  2DAE               	goto	u2800
  4427  1DAD                     u2801:
  4428  1DAD  2DB5               	goto	l2104
  4429  1DAE                     u2800:
  4430  1DAE                     l2100:
  4431  1DAE  09F6               	comf	___awmod@dividend,f
  4432  1DAF  09F7               	comf	___awmod@dividend+1,f
  4433  1DB0  0AF6               	incf	___awmod@dividend,f
  4434  1DB1  1903               	skipnz
  4435  1DB2  0AF7               	incf	___awmod@dividend+1,f
  4436  1DB3                     l2102:
  4437  1DB3  01A1               	clrf	___awmod@sign
  4438  1DB4  0AA1               	incf	___awmod@sign,f
  4439  1DB5                     l2104:
  4440  1DB5  1FF5               	btfss	___awmod@divisor+1,7
  4441  1DB6  2DB8               	goto	u2811
  4442  1DB7  2DB9               	goto	u2810
  4443  1DB8                     u2811:
  4444  1DB8  2DBE               	goto	l2108
  4445  1DB9                     u2810:
  4446  1DB9                     l2106:
  4447  1DB9  09F4               	comf	___awmod@divisor,f
  4448  1DBA  09F5               	comf	___awmod@divisor+1,f
  4449  1DBB  0AF4               	incf	___awmod@divisor,f
  4450  1DBC  1903               	skipnz
  4451  1DBD  0AF5               	incf	___awmod@divisor+1,f
  4452  1DBE                     l2108:
  4453  1DBE  0874               	movf	___awmod@divisor,w
  4454  1DBF  0475               	iorwf	___awmod@divisor+1,w
  4455  1DC0  1903               	btfsc	3,2
  4456  1DC1  2DC3               	goto	u2821
  4457  1DC2  2DC4               	goto	u2820
  4458  1DC3                     u2821:
  4459  1DC3  2DF3               	goto	l2126
  4460  1DC4                     u2820:
  4461  1DC4                     l2110:
  4462  1DC4  01A0               	clrf	___awmod@counter
  4463  1DC5  0AA0               	incf	___awmod@counter,f
  4464  1DC6  2DD2               	goto	l2116
  4465  1DC7                     l2112:
  4466  1DC7  3001               	movlw	1
  4467  1DC8                     u2835:
  4468  1DC8  1003               	clrc
  4469  1DC9  0DF4               	rlf	___awmod@divisor,f
  4470  1DCA  0DF5               	rlf	___awmod@divisor+1,f
  4471  1DCB  3EFF               	addlw	-1
  4472  1DCC  1D03               	skipz
  4473  1DCD  2DC8               	goto	u2835
  4474  1DCE                     l2114:
  4475  1DCE  3001               	movlw	1
  4476  1DCF  00F8               	movwf	??___awmod
  4477  1DD0  0878               	movf	??___awmod,w
  4478  1DD1  07A0               	addwf	___awmod@counter,f
  4479  1DD2                     l2116:
  4480  1DD2  1FF5               	btfss	___awmod@divisor+1,7
  4481  1DD3  2DD5               	goto	u2841
  4482  1DD4  2DD6               	goto	u2840
  4483  1DD5                     u2841:
  4484  1DD5  2DC7               	goto	l2112
  4485  1DD6                     u2840:
  4486  1DD6                     l2118:
  4487  1DD6  0875               	movf	___awmod@divisor+1,w
  4488  1DD7  0277               	subwf	___awmod@dividend+1,w
  4489  1DD8  1D03               	skipz
  4490  1DD9  2DDC               	goto	u2855
  4491  1DDA  0874               	movf	___awmod@divisor,w
  4492  1DDB  0276               	subwf	___awmod@dividend,w
  4493  1DDC                     u2855:
  4494  1DDC  1C03               	skipc
  4495  1DDD  2DDF               	goto	u2851
  4496  1DDE  2DE0               	goto	u2850
  4497  1DDF                     u2851:
  4498  1DDF  2DE6               	goto	l2122
  4499  1DE0                     u2850:
  4500  1DE0                     l2120:
  4501  1DE0  0874               	movf	___awmod@divisor,w
  4502  1DE1  02F6               	subwf	___awmod@dividend,f
  4503  1DE2  0875               	movf	___awmod@divisor+1,w
  4504  1DE3  1C03               	skipc
  4505  1DE4  03F7               	decf	___awmod@dividend+1,f
  4506  1DE5  02F7               	subwf	___awmod@dividend+1,f
  4507  1DE6                     l2122:
  4508  1DE6  3001               	movlw	1
  4509  1DE7                     u2865:
  4510  1DE7  1003               	clrc
  4511  1DE8  0CF5               	rrf	___awmod@divisor+1,f
  4512  1DE9  0CF4               	rrf	___awmod@divisor,f
  4513  1DEA  3EFF               	addlw	-1
  4514  1DEB  1D03               	skipz
  4515  1DEC  2DE7               	goto	u2865
  4516  1DED                     l2124:
  4517  1DED  3001               	movlw	1
  4518  1DEE  02A0               	subwf	___awmod@counter,f
  4519  1DEF  1D03               	btfss	3,2
  4520  1DF0  2DF2               	goto	u2871
  4521  1DF1  2DF3               	goto	u2870
  4522  1DF2                     u2871:
  4523  1DF2  2DD6               	goto	l2118
  4524  1DF3                     u2870:
  4525  1DF3                     l2126:
  4526  1DF3  0821               	movf	___awmod@sign,w
  4527  1DF4  1903               	btfsc	3,2
  4528  1DF5  2DF7               	goto	u2881
  4529  1DF6  2DF8               	goto	u2880
  4530  1DF7                     u2881:
  4531  1DF7  2DFD               	goto	l2130
  4532  1DF8                     u2880:
  4533  1DF8                     l2128:
  4534  1DF8  09F6               	comf	___awmod@dividend,f
  4535  1DF9  09F7               	comf	___awmod@dividend+1,f
  4536  1DFA  0AF6               	incf	___awmod@dividend,f
  4537  1DFB  1903               	skipnz
  4538  1DFC  0AF7               	incf	___awmod@dividend+1,f
  4539  1DFD                     l2130:
  4540  1DFD  0877               	movf	___awmod@dividend+1,w
  4541  1DFE  00F5               	movwf	?___awmod+1
  4542  1DFF  0876               	movf	___awmod@dividend,w
  4543  1E00  00F4               	movwf	?___awmod
  4544  1E01                     l435:
  4545  1E01  0008               	return
  4546  1E02                     __end_of___awmod:
  4547                           
  4548                           	psect	text5
  4549  1E02                     __ptext5:	
  4550 ;; *************** function ___awdiv *****************
  4551 ;; Defined at:
  4552 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  divisor         2    2[BANK0 ] int 
  4555 ;;  dividend        2    4[BANK0 ] int 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  quotient        2    9[BANK0 ] int 
  4558 ;;  sign            1    8[BANK0 ] unsigned char 
  4559 ;;  counter         1    7[BANK0 ] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  2    2[BANK0 ] int 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4569 ;;      Params:         0       4       0       0       0
  4570 ;;      Locals:         0       4       0       0       0
  4571 ;;      Temps:          0       1       0       0       0
  4572 ;;      Totals:         0       9       0       0       0
  4573 ;;Total ram usage:        9 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    1
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_conversion
  4580 ;;		_scale
  4581 ;;		_sprintf
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           
  4586                           ;psect for function ___awdiv
  4587  1E02                     ___awdiv:
  4588  1E02                     l2052:	
  4589                           ;incstack = 0
  4590                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4591                           
  4592  1E02  1283               	bcf	3,5	;RP0=0, select bank0
  4593  1E03  1303               	bcf	3,6	;RP1=0, select bank0
  4594  1E04  01A8               	clrf	___awdiv@sign
  4595  1E05                     l2054:
  4596  1E05  1FA3               	btfss	___awdiv@divisor+1,7
  4597  1E06  2E08               	goto	u2701
  4598  1E07  2E09               	goto	u2700
  4599  1E08                     u2701:
  4600  1E08  2E10               	goto	l2060
  4601  1E09                     u2700:
  4602  1E09                     l2056:
  4603  1E09  09A2               	comf	___awdiv@divisor,f
  4604  1E0A  09A3               	comf	___awdiv@divisor+1,f
  4605  1E0B  0AA2               	incf	___awdiv@divisor,f
  4606  1E0C  1903               	skipnz
  4607  1E0D  0AA3               	incf	___awdiv@divisor+1,f
  4608  1E0E                     l2058:
  4609  1E0E  01A8               	clrf	___awdiv@sign
  4610  1E0F  0AA8               	incf	___awdiv@sign,f
  4611  1E10                     l2060:
  4612  1E10  1FA5               	btfss	___awdiv@dividend+1,7
  4613  1E11  2E13               	goto	u2711
  4614  1E12  2E14               	goto	u2710
  4615  1E13                     u2711:
  4616  1E13  2E1D               	goto	l2066
  4617  1E14                     u2710:
  4618  1E14                     l2062:
  4619  1E14  09A4               	comf	___awdiv@dividend,f
  4620  1E15  09A5               	comf	___awdiv@dividend+1,f
  4621  1E16  0AA4               	incf	___awdiv@dividend,f
  4622  1E17  1903               	skipnz
  4623  1E18  0AA5               	incf	___awdiv@dividend+1,f
  4624  1E19                     l2064:
  4625  1E19  3001               	movlw	1
  4626  1E1A  00A6               	movwf	??___awdiv
  4627  1E1B  0826               	movf	??___awdiv,w
  4628  1E1C  06A8               	xorwf	___awdiv@sign,f
  4629  1E1D                     l2066:
  4630  1E1D  01A9               	clrf	___awdiv@quotient
  4631  1E1E  01AA               	clrf	___awdiv@quotient+1
  4632  1E1F                     l2068:
  4633  1E1F  0822               	movf	___awdiv@divisor,w
  4634  1E20  0423               	iorwf	___awdiv@divisor+1,w
  4635  1E21  1903               	btfsc	3,2
  4636  1E22  2E24               	goto	u2721
  4637  1E23  2E25               	goto	u2720
  4638  1E24                     u2721:
  4639  1E24  2E5C               	goto	l2088
  4640  1E25                     u2720:
  4641  1E25                     l2070:
  4642  1E25  01A7               	clrf	___awdiv@counter
  4643  1E26  0AA7               	incf	___awdiv@counter,f
  4644  1E27  2E33               	goto	l2076
  4645  1E28                     l2072:
  4646  1E28  3001               	movlw	1
  4647  1E29                     u2735:
  4648  1E29  1003               	clrc
  4649  1E2A  0DA2               	rlf	___awdiv@divisor,f
  4650  1E2B  0DA3               	rlf	___awdiv@divisor+1,f
  4651  1E2C  3EFF               	addlw	-1
  4652  1E2D  1D03               	skipz
  4653  1E2E  2E29               	goto	u2735
  4654  1E2F                     l2074:
  4655  1E2F  3001               	movlw	1
  4656  1E30  00A6               	movwf	??___awdiv
  4657  1E31  0826               	movf	??___awdiv,w
  4658  1E32  07A7               	addwf	___awdiv@counter,f
  4659  1E33                     l2076:
  4660  1E33  1FA3               	btfss	___awdiv@divisor+1,7
  4661  1E34  2E36               	goto	u2741
  4662  1E35  2E37               	goto	u2740
  4663  1E36                     u2741:
  4664  1E36  2E28               	goto	l2072
  4665  1E37                     u2740:
  4666  1E37                     l2078:
  4667  1E37  3001               	movlw	1
  4668  1E38                     u2755:
  4669  1E38  1003               	clrc
  4670  1E39  0DA9               	rlf	___awdiv@quotient,f
  4671  1E3A  0DAA               	rlf	___awdiv@quotient+1,f
  4672  1E3B  3EFF               	addlw	-1
  4673  1E3C  1D03               	skipz
  4674  1E3D  2E38               	goto	u2755
  4675  1E3E  0823               	movf	___awdiv@divisor+1,w
  4676  1E3F  0225               	subwf	___awdiv@dividend+1,w
  4677  1E40  1D03               	skipz
  4678  1E41  2E44               	goto	u2765
  4679  1E42  0822               	movf	___awdiv@divisor,w
  4680  1E43  0224               	subwf	___awdiv@dividend,w
  4681  1E44                     u2765:
  4682  1E44  1C03               	skipc
  4683  1E45  2E47               	goto	u2761
  4684  1E46  2E48               	goto	u2760
  4685  1E47                     u2761:
  4686  1E47  2E4F               	goto	l2084
  4687  1E48                     u2760:
  4688  1E48                     l2080:
  4689  1E48  0822               	movf	___awdiv@divisor,w
  4690  1E49  02A4               	subwf	___awdiv@dividend,f
  4691  1E4A  0823               	movf	___awdiv@divisor+1,w
  4692  1E4B  1C03               	skipc
  4693  1E4C  03A5               	decf	___awdiv@dividend+1,f
  4694  1E4D  02A5               	subwf	___awdiv@dividend+1,f
  4695  1E4E                     l2082:
  4696  1E4E  1429               	bsf	___awdiv@quotient,0
  4697  1E4F                     l2084:
  4698  1E4F  3001               	movlw	1
  4699  1E50                     u2775:
  4700  1E50  1003               	clrc
  4701  1E51  0CA3               	rrf	___awdiv@divisor+1,f
  4702  1E52  0CA2               	rrf	___awdiv@divisor,f
  4703  1E53  3EFF               	addlw	-1
  4704  1E54  1D03               	skipz
  4705  1E55  2E50               	goto	u2775
  4706  1E56                     l2086:
  4707  1E56  3001               	movlw	1
  4708  1E57  02A7               	subwf	___awdiv@counter,f
  4709  1E58  1D03               	btfss	3,2
  4710  1E59  2E5B               	goto	u2781
  4711  1E5A  2E5C               	goto	u2780
  4712  1E5B                     u2781:
  4713  1E5B  2E37               	goto	l2078
  4714  1E5C                     u2780:
  4715  1E5C                     l2088:
  4716  1E5C  0828               	movf	___awdiv@sign,w
  4717  1E5D  1903               	btfsc	3,2
  4718  1E5E  2E60               	goto	u2791
  4719  1E5F  2E61               	goto	u2790
  4720  1E60                     u2791:
  4721  1E60  2E66               	goto	l2092
  4722  1E61                     u2790:
  4723  1E61                     l2090:
  4724  1E61  09A9               	comf	___awdiv@quotient,f
  4725  1E62  09AA               	comf	___awdiv@quotient+1,f
  4726  1E63  0AA9               	incf	___awdiv@quotient,f
  4727  1E64  1903               	skipnz
  4728  1E65  0AAA               	incf	___awdiv@quotient+1,f
  4729  1E66                     l2092:
  4730  1E66  082A               	movf	___awdiv@quotient+1,w
  4731  1E67  00A3               	movwf	?___awdiv+1
  4732  1E68  0829               	movf	___awdiv@quotient,w
  4733  1E69  00A2               	movwf	?___awdiv
  4734  1E6A                     l422:
  4735  1E6A  0008               	return
  4736  1E6B                     __end_of___awdiv:
  4737                           
  4738                           	psect	text6
  4739  1B71                     __ptext6:	
  4740 ;; *************** function _isdigit *****************
  4741 ;; Defined at:
  4742 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  c               1    wreg     unsigned char 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  c               1    5[COMMON] unsigned char 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;		None               void
  4749 ;; Registers used:
  4750 ;;		wreg, status,2, status,0
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4756 ;;      Params:         0       0       0       0       0
  4757 ;;      Locals:         2       0       0       0       0
  4758 ;;      Temps:          0       0       0       0       0
  4759 ;;      Totals:         2       0       0       0       0
  4760 ;;Total ram usage:        2 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; Hardware stack levels required when called:    1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_sprintf
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           
  4771                           ;psect for function _isdigit
  4772  1B71                     _isdigit:
  4773                           
  4774                           ;incstack = 0
  4775                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4776                           ;isdigit@c stored from wreg
  4777  1B71  00F5               	movwf	isdigit@c
  4778  1B72                     l2590:
  4779  1B72  01F4               	clrf	_isdigit$802
  4780  1B73                     l2592:
  4781  1B73  303A               	movlw	58
  4782  1B74  0275               	subwf	isdigit@c,w
  4783  1B75  1803               	skipnc
  4784  1B76  2B78               	goto	u4101
  4785  1B77  2B79               	goto	u4100
  4786  1B78                     u4101:
  4787  1B78  2B81               	goto	l2598
  4788  1B79                     u4100:
  4789  1B79                     l2594:
  4790  1B79  3030               	movlw	48
  4791  1B7A  0275               	subwf	isdigit@c,w
  4792  1B7B  1C03               	skipc
  4793  1B7C  2B7E               	goto	u4111
  4794  1B7D  2B7F               	goto	u4110
  4795  1B7E                     u4111:
  4796  1B7E  2B81               	goto	l2598
  4797  1B7F                     u4110:
  4798  1B7F                     l2596:
  4799  1B7F  01F4               	clrf	_isdigit$802
  4800  1B80  0AF4               	incf	_isdigit$802,f
  4801  1B81                     l2598:
  4802  1B81  0C74               	rrf	_isdigit$802,w
  4803  1B82                     l756:
  4804  1B82  0008               	return
  4805  1B83                     __end_of_isdigit:
  4806                           
  4807                           	psect	text7
  4808  136B                     __ptext7:	
  4809 ;; *************** function _fround *****************
  4810 ;; Defined at:
  4811 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  prec            1    wreg     unsigned char 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  prec            1   56[BANK0 ] unsigned char 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  4   37[BANK0 ] unsigned char 
  4818 ;; Registers used:
  4819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4825 ;;      Params:         0       4       0       0       0
  4826 ;;      Locals:         0       9       0       0       0
  4827 ;;      Temps:          0       7       0       0       0
  4828 ;;      Totals:         0      20       0       0       0
  4829 ;;Total ram usage:       20 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    3
  4832 ;; This function calls:
  4833 ;;		___flmul
  4834 ;;		___lwdiv
  4835 ;;		___lwmod
  4836 ;; This function is called by:
  4837 ;;		_sprintf
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           
  4842                           ;psect for function _fround
  4843  136B                     _fround:
  4844                           
  4845                           ;incstack = 0
  4846                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4847                           ;fround@prec stored from wreg
  4848  136B  1283               	bcf	3,5	;RP0=0, select bank0
  4849  136C  1303               	bcf	3,6	;RP1=0, select bank0
  4850  136D  00D8               	movwf	fround@prec
  4851  136E                     l2532:
  4852                           
  4853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4854  136E  306E               	movlw	110
  4855  136F  0258               	subwf	fround@prec,w
  4856  1370  1C03               	skipc
  4857  1371  2B73               	goto	u3851
  4858  1372  2B74               	goto	u3850
  4859  1373                     u3851:
  4860  1373  2C83               	goto	l2540
  4861  1374                     u3850:
  4862  1374                     l2534:
  4863                           
  4864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4865  1374  303F               	movlw	63
  4866  1375  00AE               	movwf	___flmul@b+3
  4867  1376  3000               	movlw	0
  4868  1377  00AD               	movwf	___flmul@b+2
  4869  1378  3000               	movlw	0
  4870  1379  00AC               	movwf	___flmul@b+1
  4871  137A  3000               	movlw	0
  4872  137B  00AB               	movwf	___flmul@b
  4873  137C  3064               	movlw	100
  4874  137D  00A0               	movwf	___lwdiv@divisor
  4875  137E  3000               	movlw	0
  4876  137F  00A1               	movwf	___lwdiv@divisor+1
  4877  1380  0858               	movf	fround@prec,w
  4878  1381  00C9               	movwf	??_fround
  4879  1382  01CA               	clrf	??_fround+1
  4880  1383  0849               	movf	??_fround,w
  4881  1384  00A2               	movwf	___lwdiv@dividend
  4882  1385  084A               	movf	??_fround+1,w
  4883  1386  00A3               	movwf	___lwdiv@dividend+1
  4884  1387  160A  158A  24C1  160A  118A  	fcall	___lwdiv
  4885  138C  1283               	bcf	3,5	;RP0=0, select bank0
  4886  138D  1303               	bcf	3,6	;RP1=0, select bank0
  4887  138E  0820               	movf	?___lwdiv,w
  4888  138F  00CB               	movwf	??_fround+2
  4889  1390  3001               	movlw	1
  4890  1391                     u3865:
  4891  1391  1003               	clrc
  4892  1392  0DCB               	rlf	??_fround+2,f
  4893  1393  3EFF               	addlw	-1
  4894  1394  1D03               	skipz
  4895  1395  2B91               	goto	u3865
  4896  1396  1003               	clrc
  4897  1397  0D4B               	rlf	??_fround+2,w
  4898  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4899  1399  0084               	movwf	4
  4900  139A  160A  118A  200A  160A  118A  	fcall	stringdir
  4901  139F  00CC               	movwf	??_fround+3
  4902  13A0  160A  118A  200A  160A  118A  	fcall	stringdir
  4903  13A5  00CD               	movwf	??_fround+4
  4904  13A6  160A  118A  200A  160A  118A  	fcall	stringdir
  4905  13AB  00CE               	movwf	??_fround+5
  4906  13AC  160A  118A  200A  160A  118A  	fcall	stringdir
  4907  13B1  00CF               	movwf	??_fround+6
  4908  13B2  084F               	movf	??_fround+6,w
  4909  13B3  00B2               	movwf	___flmul@a+3
  4910  13B4  084E               	movf	??_fround+5,w
  4911  13B5  00B1               	movwf	___flmul@a+2
  4912  13B6  084D               	movf	??_fround+4,w
  4913  13B7  00B0               	movwf	___flmul@a+1
  4914  13B8  084C               	movf	??_fround+3,w
  4915  13B9  00AF               	movwf	___flmul@a
  4916  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  4917  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4918  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4919  13C1  082E               	movf	?___flmul+3,w
  4920  13C2  00D7               	movwf	_fround$985+3
  4921  13C3  082D               	movf	?___flmul+2,w
  4922  13C4  00D6               	movwf	_fround$985+2
  4923  13C5  082C               	movf	?___flmul+1,w
  4924  13C6  00D5               	movwf	_fround$985+1
  4925  13C7  082B               	movf	?___flmul,w
  4926  13C8  00D4               	movwf	_fround$985
  4927                           
  4928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4929  13C9  300A               	movlw	10
  4930  13CA  00A0               	movwf	___lwdiv@divisor
  4931  13CB  3000               	movlw	0
  4932  13CC  00A1               	movwf	___lwdiv@divisor+1
  4933  13CD  0858               	movf	fround@prec,w
  4934  13CE  00C9               	movwf	??_fround
  4935  13CF  01CA               	clrf	??_fround+1
  4936  13D0  0849               	movf	??_fround,w
  4937  13D1  00F6               	movwf	___lwmod@dividend
  4938  13D2  084A               	movf	??_fround+1,w
  4939  13D3  00F7               	movwf	___lwmod@dividend+1
  4940  13D4  3064               	movlw	100
  4941  13D5  00F4               	movwf	___lwmod@divisor
  4942  13D6  3000               	movlw	0
  4943  13D7  00F5               	movwf	___lwmod@divisor+1
  4944  13D8  120A  158A  2005  160A  118A  	fcall	___lwmod
  4945  13DD  0875               	movf	?___lwmod+1,w
  4946  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  4947  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  4948  13E0  00A3               	movwf	___lwdiv@dividend+1
  4949  13E1  0874               	movf	?___lwmod,w
  4950  13E2  00A2               	movwf	___lwdiv@dividend
  4951  13E3  160A  158A  24C1  160A  118A  	fcall	___lwdiv
  4952  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  4953  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  4954  13EA  0820               	movf	?___lwdiv,w
  4955  13EB  00CB               	movwf	??_fround+2
  4956  13EC  3001               	movlw	1
  4957  13ED                     u3875:
  4958  13ED  1003               	clrc
  4959  13EE  0DCB               	rlf	??_fround+2,f
  4960  13EF  3EFF               	addlw	-1
  4961  13F0  1D03               	skipz
  4962  13F1  2BED               	goto	u3875
  4963  13F2  1003               	clrc
  4964  13F3  0D4B               	rlf	??_fround+2,w
  4965  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4966  13F5  0084               	movwf	4
  4967  13F6  160A  118A  200A  160A  118A  	fcall	stringdir
  4968  13FB  00CC               	movwf	??_fround+3
  4969  13FC  160A  118A  200A  160A  118A  	fcall	stringdir
  4970  1401  00CD               	movwf	??_fround+4
  4971  1402  160A  118A  200A  160A  118A  	fcall	stringdir
  4972  1407  00CE               	movwf	??_fround+5
  4973  1408  160A  118A  200A  160A  118A  	fcall	stringdir
  4974  140D  00CF               	movwf	??_fround+6
  4975  140E  084F               	movf	??_fround+6,w
  4976  140F  00AE               	movwf	___flmul@b+3
  4977  1410  084E               	movf	??_fround+5,w
  4978  1411  00AD               	movwf	___flmul@b+2
  4979  1412  084D               	movf	??_fround+4,w
  4980  1413  00AC               	movwf	___flmul@b+1
  4981  1414  084C               	movf	??_fround+3,w
  4982  1415  00AB               	movwf	___flmul@b
  4983  1416  0857               	movf	_fround$985+3,w
  4984  1417  00B2               	movwf	___flmul@a+3
  4985  1418  0856               	movf	_fround$985+2,w
  4986  1419  00B1               	movwf	___flmul@a+2
  4987  141A  0855               	movf	_fround$985+1,w
  4988  141B  00B0               	movwf	___flmul@a+1
  4989  141C  0854               	movf	_fround$985,w
  4990  141D  00AF               	movwf	___flmul@a
  4991  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  4992  1423  1283               	bcf	3,5	;RP0=0, select bank0
  4993  1424  1303               	bcf	3,6	;RP1=0, select bank0
  4994  1425  082E               	movf	?___flmul+3,w
  4995  1426  00D3               	movwf	_fround$986+3
  4996  1427  082D               	movf	?___flmul+2,w
  4997  1428  00D2               	movwf	_fround$986+2
  4998  1429  082C               	movf	?___flmul+1,w
  4999  142A  00D1               	movwf	_fround$986+1
  5000  142B  082B               	movf	?___flmul,w
  5001  142C  00D0               	movwf	_fround$986
  5002                           
  5003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5004  142D  300A               	movlw	10
  5005  142E  00F4               	movwf	___lwmod@divisor
  5006  142F  3000               	movlw	0
  5007  1430  00F5               	movwf	___lwmod@divisor+1
  5008  1431  0858               	movf	fround@prec,w
  5009  1432  00C9               	movwf	??_fround
  5010  1433  01CA               	clrf	??_fround+1
  5011  1434  0849               	movf	??_fround,w
  5012  1435  00F6               	movwf	___lwmod@dividend
  5013  1436  084A               	movf	??_fround+1,w
  5014  1437  00F7               	movwf	___lwmod@dividend+1
  5015  1438  120A  158A  2005  160A  118A  	fcall	___lwmod
  5016  143D  0874               	movf	?___lwmod,w
  5017  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5018  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5019  1440  00CB               	movwf	??_fround+2
  5020  1441  3001               	movlw	1
  5021  1442                     u3885:
  5022  1442  1003               	clrc
  5023  1443  0DCB               	rlf	??_fround+2,f
  5024  1444  3EFF               	addlw	-1
  5025  1445  1D03               	skipz
  5026  1446  2C42               	goto	u3885
  5027  1447  1003               	clrc
  5028  1448  0D4B               	rlf	??_fround+2,w
  5029  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5030  144A  0084               	movwf	4
  5031  144B  160A  118A  200A  160A  118A  	fcall	stringdir
  5032  1450  00CC               	movwf	??_fround+3
  5033  1451  160A  118A  200A  160A  118A  	fcall	stringdir
  5034  1456  00CD               	movwf	??_fround+4
  5035  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  5036  145C  00CE               	movwf	??_fround+5
  5037  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  5038  1462  00CF               	movwf	??_fround+6
  5039  1463  084F               	movf	??_fround+6,w
  5040  1464  00AE               	movwf	___flmul@b+3
  5041  1465  084E               	movf	??_fround+5,w
  5042  1466  00AD               	movwf	___flmul@b+2
  5043  1467  084D               	movf	??_fround+4,w
  5044  1468  00AC               	movwf	___flmul@b+1
  5045  1469  084C               	movf	??_fround+3,w
  5046  146A  00AB               	movwf	___flmul@b
  5047  146B  0853               	movf	_fround$986+3,w
  5048  146C  00B2               	movwf	___flmul@a+3
  5049  146D  0852               	movf	_fround$986+2,w
  5050  146E  00B1               	movwf	___flmul@a+2
  5051  146F  0851               	movf	_fround$986+1,w
  5052  1470  00B0               	movwf	___flmul@a+1
  5053  1471  0850               	movf	_fround$986,w
  5054  1472  00AF               	movwf	___flmul@a
  5055  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  5056  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5057  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5058  147A  082E               	movf	?___flmul+3,w
  5059  147B  00C8               	movwf	?_fround+3
  5060  147C  082D               	movf	?___flmul+2,w
  5061  147D  00C7               	movwf	?_fround+2
  5062  147E  082C               	movf	?___flmul+1,w
  5063  147F  00C6               	movwf	?_fround+1
  5064  1480  082B               	movf	?___flmul,w
  5065  1481  00C5               	movwf	?_fround
  5066  1482  2D77               	goto	l192
  5067  1483                     l2540:
  5068  1483  300B               	movlw	11
  5069  1484  0258               	subwf	fround@prec,w
  5070  1485  1C03               	skipc
  5071  1486  2C88               	goto	u3891
  5072  1487  2C89               	goto	u3890
  5073  1488                     u3891:
  5074  1488  2D34               	goto	l2546
  5075  1489                     u3890:
  5076  1489                     l2542:
  5077                           
  5078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5079  1489  303F               	movlw	63
  5080  148A  00AE               	movwf	___flmul@b+3
  5081  148B  3000               	movlw	0
  5082  148C  00AD               	movwf	___flmul@b+2
  5083  148D  3000               	movlw	0
  5084  148E  00AC               	movwf	___flmul@b+1
  5085  148F  3000               	movlw	0
  5086  1490  00AB               	movwf	___flmul@b
  5087  1491  300A               	movlw	10
  5088  1492  00A0               	movwf	___lwdiv@divisor
  5089  1493  3000               	movlw	0
  5090  1494  00A1               	movwf	___lwdiv@divisor+1
  5091  1495  0858               	movf	fround@prec,w
  5092  1496  00C9               	movwf	??_fround
  5093  1497  01CA               	clrf	??_fround+1
  5094  1498  0849               	movf	??_fround,w
  5095  1499  00A2               	movwf	___lwdiv@dividend
  5096  149A  084A               	movf	??_fround+1,w
  5097  149B  00A3               	movwf	___lwdiv@dividend+1
  5098  149C  160A  158A  24C1  160A  118A  	fcall	___lwdiv
  5099  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  5100  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  5101  14A3  0820               	movf	?___lwdiv,w
  5102  14A4  00CB               	movwf	??_fround+2
  5103  14A5  3001               	movlw	1
  5104  14A6                     u3905:
  5105  14A6  1003               	clrc
  5106  14A7  0DCB               	rlf	??_fround+2,f
  5107  14A8  3EFF               	addlw	-1
  5108  14A9  1D03               	skipz
  5109  14AA  2CA6               	goto	u3905
  5110  14AB  1003               	clrc
  5111  14AC  0D4B               	rlf	??_fround+2,w
  5112  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5113  14AE  0084               	movwf	4
  5114  14AF  160A  118A  200A  160A  118A  	fcall	stringdir
  5115  14B4  00CC               	movwf	??_fround+3
  5116  14B5  160A  118A  200A  160A  118A  	fcall	stringdir
  5117  14BA  00CD               	movwf	??_fround+4
  5118  14BB  160A  118A  200A  160A  118A  	fcall	stringdir
  5119  14C0  00CE               	movwf	??_fround+5
  5120  14C1  160A  118A  200A  160A  118A  	fcall	stringdir
  5121  14C6  00CF               	movwf	??_fround+6
  5122  14C7  084F               	movf	??_fround+6,w
  5123  14C8  00B2               	movwf	___flmul@a+3
  5124  14C9  084E               	movf	??_fround+5,w
  5125  14CA  00B1               	movwf	___flmul@a+2
  5126  14CB  084D               	movf	??_fround+4,w
  5127  14CC  00B0               	movwf	___flmul@a+1
  5128  14CD  084C               	movf	??_fround+3,w
  5129  14CE  00AF               	movwf	___flmul@a
  5130  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  5131  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5132  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5133  14D6  082E               	movf	?___flmul+3,w
  5134  14D7  00D7               	movwf	_fround$985+3
  5135  14D8  082D               	movf	?___flmul+2,w
  5136  14D9  00D6               	movwf	_fround$985+2
  5137  14DA  082C               	movf	?___flmul+1,w
  5138  14DB  00D5               	movwf	_fround$985+1
  5139  14DC  082B               	movf	?___flmul,w
  5140  14DD  00D4               	movwf	_fround$985
  5141                           
  5142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5143  14DE  300A               	movlw	10
  5144  14DF  00F4               	movwf	___lwmod@divisor
  5145  14E0  3000               	movlw	0
  5146  14E1  00F5               	movwf	___lwmod@divisor+1
  5147  14E2  0858               	movf	fround@prec,w
  5148  14E3  00C9               	movwf	??_fround
  5149  14E4  01CA               	clrf	??_fround+1
  5150  14E5  0849               	movf	??_fround,w
  5151  14E6  00F6               	movwf	___lwmod@dividend
  5152  14E7  084A               	movf	??_fround+1,w
  5153  14E8  00F7               	movwf	___lwmod@dividend+1
  5154  14E9  120A  158A  2005  160A  118A  	fcall	___lwmod
  5155  14EE  0874               	movf	?___lwmod,w
  5156  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5157  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5158  14F1  00CB               	movwf	??_fround+2
  5159  14F2  3001               	movlw	1
  5160  14F3                     u3915:
  5161  14F3  1003               	clrc
  5162  14F4  0DCB               	rlf	??_fround+2,f
  5163  14F5  3EFF               	addlw	-1
  5164  14F6  1D03               	skipz
  5165  14F7  2CF3               	goto	u3915
  5166  14F8  1003               	clrc
  5167  14F9  0D4B               	rlf	??_fround+2,w
  5168  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5169  14FB  0084               	movwf	4
  5170  14FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5171  1501  00CC               	movwf	??_fround+3
  5172  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  5173  1507  00CD               	movwf	??_fround+4
  5174  1508  160A  118A  200A  160A  118A  	fcall	stringdir
  5175  150D  00CE               	movwf	??_fround+5
  5176  150E  160A  118A  200A  160A  118A  	fcall	stringdir
  5177  1513  00CF               	movwf	??_fround+6
  5178  1514  084F               	movf	??_fround+6,w
  5179  1515  00AE               	movwf	___flmul@b+3
  5180  1516  084E               	movf	??_fround+5,w
  5181  1517  00AD               	movwf	___flmul@b+2
  5182  1518  084D               	movf	??_fround+4,w
  5183  1519  00AC               	movwf	___flmul@b+1
  5184  151A  084C               	movf	??_fround+3,w
  5185  151B  00AB               	movwf	___flmul@b
  5186  151C  0857               	movf	_fround$985+3,w
  5187  151D  00B2               	movwf	___flmul@a+3
  5188  151E  0856               	movf	_fround$985+2,w
  5189  151F  00B1               	movwf	___flmul@a+2
  5190  1520  0855               	movf	_fround$985+1,w
  5191  1521  00B0               	movwf	___flmul@a+1
  5192  1522  0854               	movf	_fround$985,w
  5193  1523  00AF               	movwf	___flmul@a
  5194  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  5195  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5196  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5197  152B  082E               	movf	?___flmul+3,w
  5198  152C  00C8               	movwf	?_fround+3
  5199  152D  082D               	movf	?___flmul+2,w
  5200  152E  00C7               	movwf	?_fround+2
  5201  152F  082C               	movf	?___flmul+1,w
  5202  1530  00C6               	movwf	?_fround+1
  5203  1531  082B               	movf	?___flmul,w
  5204  1532  00C5               	movwf	?_fround
  5205  1533  2D77               	goto	l192
  5206  1534                     l2546:
  5207                           
  5208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5209  1534  303F               	movlw	63
  5210  1535  00AE               	movwf	___flmul@b+3
  5211  1536  3000               	movlw	0
  5212  1537  00AD               	movwf	___flmul@b+2
  5213  1538  3000               	movlw	0
  5214  1539  00AC               	movwf	___flmul@b+1
  5215  153A  3000               	movlw	0
  5216  153B  00AB               	movwf	___flmul@b
  5217  153C  0858               	movf	fround@prec,w
  5218  153D  00C9               	movwf	??_fround
  5219  153E  3001               	movlw	1
  5220  153F                     u3925:
  5221  153F  1003               	clrc
  5222  1540  0DC9               	rlf	??_fround,f
  5223  1541  3EFF               	addlw	-1
  5224  1542  1D03               	skipz
  5225  1543  2D3F               	goto	u3925
  5226  1544  1003               	clrc
  5227  1545  0D49               	rlf	??_fround,w
  5228  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5229  1547  0084               	movwf	4
  5230  1548  160A  118A  200A  160A  118A  	fcall	stringdir
  5231  154D  00CA               	movwf	??_fround+1
  5232  154E  160A  118A  200A  160A  118A  	fcall	stringdir
  5233  1553  00CB               	movwf	??_fround+2
  5234  1554  160A  118A  200A  160A  118A  	fcall	stringdir
  5235  1559  00CC               	movwf	??_fround+3
  5236  155A  160A  118A  200A  160A  118A  	fcall	stringdir
  5237  155F  00CD               	movwf	??_fround+4
  5238  1560  084D               	movf	??_fround+4,w
  5239  1561  00B2               	movwf	___flmul@a+3
  5240  1562  084C               	movf	??_fround+3,w
  5241  1563  00B1               	movwf	___flmul@a+2
  5242  1564  084B               	movf	??_fround+2,w
  5243  1565  00B0               	movwf	___flmul@a+1
  5244  1566  084A               	movf	??_fround+1,w
  5245  1567  00AF               	movwf	___flmul@a
  5246  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  5247  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5248  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5249  156F  082E               	movf	?___flmul+3,w
  5250  1570  00C8               	movwf	?_fround+3
  5251  1571  082D               	movf	?___flmul+2,w
  5252  1572  00C7               	movwf	?_fround+2
  5253  1573  082C               	movf	?___flmul+1,w
  5254  1574  00C6               	movwf	?_fround+1
  5255  1575  082B               	movf	?___flmul,w
  5256  1576  00C5               	movwf	?_fround
  5257  1577                     l192:
  5258  1577  0008               	return
  5259  1578                     __end_of_fround:
  5260                           
  5261                           	psect	text8
  5262  0805                     __ptext8:	
  5263 ;; *************** function ___lwmod *****************
  5264 ;; Defined at:
  5265 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  divisor         2    4[COMMON] unsigned int 
  5268 ;;  dividend        2    6[COMMON] unsigned int 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  counter         1    9[COMMON] unsigned char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  2    4[COMMON] unsigned int 
  5273 ;; Registers used:
  5274 ;;		wreg, status,2, status,0
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5280 ;;      Params:         4       0       0       0       0
  5281 ;;      Locals:         1       0       0       0       0
  5282 ;;      Temps:          1       0       0       0       0
  5283 ;;      Totals:         6       0       0       0       0
  5284 ;;Total ram usage:        6 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    1
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_fround
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           
  5295                           ;psect for function ___lwmod
  5296  0805                     ___lwmod:
  5297  0805                     l2160:	
  5298                           ;incstack = 0
  5299                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5300                           
  5301  0805  0874               	movf	___lwmod@divisor,w
  5302  0806  0475               	iorwf	___lwmod@divisor+1,w
  5303  0807  1903               	btfsc	3,2
  5304  0808  280A               	goto	u2961
  5305  0809  280B               	goto	u2960
  5306  080A                     u2961:
  5307  080A  283A               	goto	l2178
  5308  080B                     u2960:
  5309  080B                     l2162:
  5310  080B  01F9               	clrf	___lwmod@counter
  5311  080C  0AF9               	incf	___lwmod@counter,f
  5312  080D  2819               	goto	l2168
  5313  080E                     l2164:
  5314  080E  3001               	movlw	1
  5315  080F                     u2975:
  5316  080F  1003               	clrc
  5317  0810  0DF4               	rlf	___lwmod@divisor,f
  5318  0811  0DF5               	rlf	___lwmod@divisor+1,f
  5319  0812  3EFF               	addlw	-1
  5320  0813  1D03               	skipz
  5321  0814  280F               	goto	u2975
  5322  0815                     l2166:
  5323  0815  3001               	movlw	1
  5324  0816  00F8               	movwf	??___lwmod
  5325  0817  0878               	movf	??___lwmod,w
  5326  0818  07F9               	addwf	___lwmod@counter,f
  5327  0819                     l2168:
  5328  0819  1FF5               	btfss	___lwmod@divisor+1,7
  5329  081A  281C               	goto	u2981
  5330  081B  281D               	goto	u2980
  5331  081C                     u2981:
  5332  081C  280E               	goto	l2164
  5333  081D                     u2980:
  5334  081D                     l2170:
  5335  081D  0875               	movf	___lwmod@divisor+1,w
  5336  081E  0277               	subwf	___lwmod@dividend+1,w
  5337  081F  1D03               	skipz
  5338  0820  2823               	goto	u2995
  5339  0821  0874               	movf	___lwmod@divisor,w
  5340  0822  0276               	subwf	___lwmod@dividend,w
  5341  0823                     u2995:
  5342  0823  1C03               	skipc
  5343  0824  2826               	goto	u2991
  5344  0825  2827               	goto	u2990
  5345  0826                     u2991:
  5346  0826  282D               	goto	l2174
  5347  0827                     u2990:
  5348  0827                     l2172:
  5349  0827  0874               	movf	___lwmod@divisor,w
  5350  0828  02F6               	subwf	___lwmod@dividend,f
  5351  0829  0875               	movf	___lwmod@divisor+1,w
  5352  082A  1C03               	skipc
  5353  082B  03F7               	decf	___lwmod@dividend+1,f
  5354  082C  02F7               	subwf	___lwmod@dividend+1,f
  5355  082D                     l2174:
  5356  082D  3001               	movlw	1
  5357  082E                     u3005:
  5358  082E  1003               	clrc
  5359  082F  0CF5               	rrf	___lwmod@divisor+1,f
  5360  0830  0CF4               	rrf	___lwmod@divisor,f
  5361  0831  3EFF               	addlw	-1
  5362  0832  1D03               	skipz
  5363  0833  282E               	goto	u3005
  5364  0834                     l2176:
  5365  0834  3001               	movlw	1
  5366  0835  02F9               	subwf	___lwmod@counter,f
  5367  0836  1D03               	btfss	3,2
  5368  0837  2839               	goto	u3011
  5369  0838  283A               	goto	u3010
  5370  0839                     u3011:
  5371  0839  281D               	goto	l2170
  5372  083A                     u3010:
  5373  083A                     l2178:
  5374  083A  0877               	movf	___lwmod@dividend+1,w
  5375  083B  00F5               	movwf	?___lwmod+1
  5376  083C  0876               	movf	___lwmod@dividend,w
  5377  083D  00F4               	movwf	?___lwmod
  5378  083E                     l585:
  5379  083E  0008               	return
  5380  083F                     __end_of___lwmod:
  5381                           
  5382                           	psect	text9
  5383  1CC1                     __ptext9:	
  5384 ;; *************** function ___lwdiv *****************
  5385 ;; Defined at:
  5386 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  divisor         2    0[BANK0 ] unsigned int 
  5389 ;;  dividend        2    2[BANK0 ] unsigned int 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  quotient        2    5[BANK0 ] unsigned int 
  5392 ;;  counter         1    7[BANK0 ] unsigned char 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  2    0[BANK0 ] unsigned int 
  5395 ;; Registers used:
  5396 ;;		wreg, status,2, status,0
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5402 ;;      Params:         0       4       0       0       0
  5403 ;;      Locals:         0       3       0       0       0
  5404 ;;      Temps:          0       1       0       0       0
  5405 ;;      Totals:         0       8       0       0       0
  5406 ;;Total ram usage:        8 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:    1
  5409 ;; This function calls:
  5410 ;;		Nothing
  5411 ;; This function is called by:
  5412 ;;		_fround
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           
  5417                           ;psect for function ___lwdiv
  5418  1CC1                     ___lwdiv:
  5419  1CC1                     l2134:	
  5420                           ;incstack = 0
  5421                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5422                           
  5423  1CC1  1283               	bcf	3,5	;RP0=0, select bank0
  5424  1CC2  1303               	bcf	3,6	;RP1=0, select bank0
  5425  1CC3  01A5               	clrf	___lwdiv@quotient
  5426  1CC4  01A6               	clrf	___lwdiv@quotient+1
  5427  1CC5                     l2136:
  5428  1CC5  0820               	movf	___lwdiv@divisor,w
  5429  1CC6  0421               	iorwf	___lwdiv@divisor+1,w
  5430  1CC7  1903               	btfsc	3,2
  5431  1CC8  2CCA               	goto	u2891
  5432  1CC9  2CCB               	goto	u2890
  5433  1CCA                     u2891:
  5434  1CCA  2D02               	goto	l2156
  5435  1CCB                     u2890:
  5436  1CCB                     l2138:
  5437  1CCB  01A7               	clrf	___lwdiv@counter
  5438  1CCC  0AA7               	incf	___lwdiv@counter,f
  5439  1CCD  2CD9               	goto	l2144
  5440  1CCE                     l2140:
  5441  1CCE  3001               	movlw	1
  5442  1CCF                     u2905:
  5443  1CCF  1003               	clrc
  5444  1CD0  0DA0               	rlf	___lwdiv@divisor,f
  5445  1CD1  0DA1               	rlf	___lwdiv@divisor+1,f
  5446  1CD2  3EFF               	addlw	-1
  5447  1CD3  1D03               	skipz
  5448  1CD4  2CCF               	goto	u2905
  5449  1CD5                     l2142:
  5450  1CD5  3001               	movlw	1
  5451  1CD6  00A4               	movwf	??___lwdiv
  5452  1CD7  0824               	movf	??___lwdiv,w
  5453  1CD8  07A7               	addwf	___lwdiv@counter,f
  5454  1CD9                     l2144:
  5455  1CD9  1FA1               	btfss	___lwdiv@divisor+1,7
  5456  1CDA  2CDC               	goto	u2911
  5457  1CDB  2CDD               	goto	u2910
  5458  1CDC                     u2911:
  5459  1CDC  2CCE               	goto	l2140
  5460  1CDD                     u2910:
  5461  1CDD                     l2146:
  5462  1CDD  3001               	movlw	1
  5463  1CDE                     u2925:
  5464  1CDE  1003               	clrc
  5465  1CDF  0DA5               	rlf	___lwdiv@quotient,f
  5466  1CE0  0DA6               	rlf	___lwdiv@quotient+1,f
  5467  1CE1  3EFF               	addlw	-1
  5468  1CE2  1D03               	skipz
  5469  1CE3  2CDE               	goto	u2925
  5470  1CE4  0821               	movf	___lwdiv@divisor+1,w
  5471  1CE5  0223               	subwf	___lwdiv@dividend+1,w
  5472  1CE6  1D03               	skipz
  5473  1CE7  2CEA               	goto	u2935
  5474  1CE8  0820               	movf	___lwdiv@divisor,w
  5475  1CE9  0222               	subwf	___lwdiv@dividend,w
  5476  1CEA                     u2935:
  5477  1CEA  1C03               	skipc
  5478  1CEB  2CED               	goto	u2931
  5479  1CEC  2CEE               	goto	u2930
  5480  1CED                     u2931:
  5481  1CED  2CF5               	goto	l2152
  5482  1CEE                     u2930:
  5483  1CEE                     l2148:
  5484  1CEE  0820               	movf	___lwdiv@divisor,w
  5485  1CEF  02A2               	subwf	___lwdiv@dividend,f
  5486  1CF0  0821               	movf	___lwdiv@divisor+1,w
  5487  1CF1  1C03               	skipc
  5488  1CF2  03A3               	decf	___lwdiv@dividend+1,f
  5489  1CF3  02A3               	subwf	___lwdiv@dividend+1,f
  5490  1CF4                     l2150:
  5491  1CF4  1425               	bsf	___lwdiv@quotient,0
  5492  1CF5                     l2152:
  5493  1CF5  3001               	movlw	1
  5494  1CF6                     u2945:
  5495  1CF6  1003               	clrc
  5496  1CF7  0CA1               	rrf	___lwdiv@divisor+1,f
  5497  1CF8  0CA0               	rrf	___lwdiv@divisor,f
  5498  1CF9  3EFF               	addlw	-1
  5499  1CFA  1D03               	skipz
  5500  1CFB  2CF6               	goto	u2945
  5501  1CFC                     l2154:
  5502  1CFC  3001               	movlw	1
  5503  1CFD  02A7               	subwf	___lwdiv@counter,f
  5504  1CFE  1D03               	btfss	3,2
  5505  1CFF  2D01               	goto	u2951
  5506  1D00  2D02               	goto	u2950
  5507  1D01                     u2951:
  5508  1D01  2CDD               	goto	l2146
  5509  1D02                     u2950:
  5510  1D02                     l2156:
  5511  1D02  0826               	movf	___lwdiv@quotient+1,w
  5512  1D03  00A1               	movwf	?___lwdiv+1
  5513  1D04  0825               	movf	___lwdiv@quotient,w
  5514  1D05  00A0               	movwf	?___lwdiv
  5515  1D06                     l575:
  5516  1D06  0008               	return
  5517  1D07                     __end_of___lwdiv:
  5518                           
  5519                           	psect	text10
  5520  093C                     __ptext10:	
  5521 ;; *************** function ___flmul *****************
  5522 ;; Defined at:
  5523 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  b               4   11[BANK0 ] unsigned int 
  5526 ;;  a               4   15[BANK0 ] unsigned int 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;  prod            4   31[BANK0 ] struct .
  5529 ;;  grs             4   25[BANK0 ] unsigned long 
  5530 ;;  temp            2   35[BANK0 ] struct .
  5531 ;;  bexp            1   30[BANK0 ] unsigned char 
  5532 ;;  aexp            1   29[BANK0 ] unsigned char 
  5533 ;;  sign            1   24[BANK0 ] unsigned char 
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  4   11[BANK0 ] unsigned char 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5543 ;;      Params:         0       8       0       0       0
  5544 ;;      Locals:         0      13       0       0       0
  5545 ;;      Temps:          0       5       0       0       0
  5546 ;;      Totals:         0      26       0       0       0
  5547 ;;Total ram usage:       26 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:    2
  5550 ;; This function calls:
  5551 ;;		__Umul8_16
  5552 ;; This function is called by:
  5553 ;;		_fround
  5554 ;;		_scale
  5555 ;;		_sprintf
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           
  5560                           ;psect for function ___flmul
  5561  093C                     ___flmul:
  5562  093C                     l2376:	
  5563                           ;incstack = 0
  5564                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5565                           
  5566  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5567  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5568  093E  082E               	movf	___flmul@b+3,w
  5569  093F  3980               	andlw	128
  5570  0940  00B3               	movwf	??___flmul
  5571  0941  0833               	movf	??___flmul,w
  5572  0942  00B8               	movwf	___flmul@sign
  5573  0943                     l2378:
  5574  0943  082E               	movf	___flmul@b+3,w
  5575  0944  00B3               	movwf	??___flmul
  5576  0945  0733               	addwf	??___flmul,w
  5577  0946  00B4               	movwf	??___flmul+1
  5578  0947  0834               	movf	??___flmul+1,w
  5579  0948  00BE               	movwf	___flmul@bexp
  5580  0949                     l2380:
  5581  0949  1FAD               	btfss	___flmul@b+2,7
  5582  094A  294C               	goto	u3481
  5583  094B  294D               	goto	u3480
  5584  094C                     u3481:
  5585  094C  294E               	goto	l2384
  5586  094D                     u3480:
  5587  094D                     l2382:
  5588  094D  143E               	bsf	___flmul@bexp,0
  5589  094E                     l2384:
  5590  094E  083E               	movf	___flmul@bexp,w
  5591  094F  1903               	btfsc	3,2
  5592  0950  2952               	goto	u3491
  5593  0951  2953               	goto	u3490
  5594  0952                     u3491:
  5595  0952  2962               	goto	l2392
  5596  0953                     u3490:
  5597  0953                     l2386:
  5598  0953  0A3E               	incf	___flmul@bexp,w
  5599  0954  1D03               	btfss	3,2
  5600  0955  2957               	goto	u3501
  5601  0956  2958               	goto	u3500
  5602  0957                     u3501:
  5603  0957  2960               	goto	l2390
  5604  0958                     u3500:
  5605  0958                     l2388:
  5606  0958  3000               	movlw	0
  5607  0959  00AE               	movwf	___flmul@b+3
  5608  095A  3000               	movlw	0
  5609  095B  00AD               	movwf	___flmul@b+2
  5610  095C  3000               	movlw	0
  5611  095D  00AC               	movwf	___flmul@b+1
  5612  095E  3000               	movlw	0
  5613  095F  00AB               	movwf	___flmul@b
  5614  0960                     l2390:
  5615  0960  17AD               	bsf	___flmul@b+2,7
  5616  0961  296A               	goto	l2394
  5617  0962                     l2392:
  5618  0962  3000               	movlw	0
  5619  0963  00AE               	movwf	___flmul@b+3
  5620  0964  3000               	movlw	0
  5621  0965  00AD               	movwf	___flmul@b+2
  5622  0966  3000               	movlw	0
  5623  0967  00AC               	movwf	___flmul@b+1
  5624  0968  3000               	movlw	0
  5625  0969  00AB               	movwf	___flmul@b
  5626  096A                     l2394:
  5627  096A  0832               	movf	___flmul@a+3,w
  5628  096B  3980               	andlw	128
  5629  096C  00B3               	movwf	??___flmul
  5630  096D  0833               	movf	??___flmul,w
  5631  096E  06B8               	xorwf	___flmul@sign,f
  5632  096F                     l2396:
  5633  096F  0832               	movf	___flmul@a+3,w
  5634  0970  00B3               	movwf	??___flmul
  5635  0971  0733               	addwf	??___flmul,w
  5636  0972  00B4               	movwf	??___flmul+1
  5637  0973  0834               	movf	??___flmul+1,w
  5638  0974  00BD               	movwf	___flmul@aexp
  5639  0975                     l2398:
  5640  0975  1FB1               	btfss	___flmul@a+2,7
  5641  0976  2978               	goto	u3511
  5642  0977  2979               	goto	u3510
  5643  0978                     u3511:
  5644  0978  297A               	goto	l2402
  5645  0979                     u3510:
  5646  0979                     l2400:
  5647  0979  143D               	bsf	___flmul@aexp,0
  5648  097A                     l2402:
  5649  097A  083D               	movf	___flmul@aexp,w
  5650  097B  1903               	btfsc	3,2
  5651  097C  297E               	goto	u3521
  5652  097D  297F               	goto	u3520
  5653  097E                     u3521:
  5654  097E  298E               	goto	l2410
  5655  097F                     u3520:
  5656  097F                     l2404:
  5657  097F  0A3D               	incf	___flmul@aexp,w
  5658  0980  1D03               	btfss	3,2
  5659  0981  2983               	goto	u3531
  5660  0982  2984               	goto	u3530
  5661  0983                     u3531:
  5662  0983  298C               	goto	l2408
  5663  0984                     u3530:
  5664  0984                     l2406:
  5665  0984  3000               	movlw	0
  5666  0985  00B2               	movwf	___flmul@a+3
  5667  0986  3000               	movlw	0
  5668  0987  00B1               	movwf	___flmul@a+2
  5669  0988  3000               	movlw	0
  5670  0989  00B0               	movwf	___flmul@a+1
  5671  098A  3000               	movlw	0
  5672  098B  00AF               	movwf	___flmul@a
  5673  098C                     l2408:
  5674  098C  17B1               	bsf	___flmul@a+2,7
  5675  098D  2996               	goto	l2412
  5676  098E                     l2410:
  5677  098E  3000               	movlw	0
  5678  098F  00B2               	movwf	___flmul@a+3
  5679  0990  3000               	movlw	0
  5680  0991  00B1               	movwf	___flmul@a+2
  5681  0992  3000               	movlw	0
  5682  0993  00B0               	movwf	___flmul@a+1
  5683  0994  3000               	movlw	0
  5684  0995  00AF               	movwf	___flmul@a
  5685  0996                     l2412:
  5686  0996  083D               	movf	___flmul@aexp,w
  5687  0997  1903               	btfsc	3,2
  5688  0998  299A               	goto	u3541
  5689  0999  299B               	goto	u3540
  5690  099A                     u3541:
  5691  099A  29A0               	goto	l2416
  5692  099B                     u3540:
  5693  099B                     l2414:
  5694  099B  083E               	movf	___flmul@bexp,w
  5695  099C  1D03               	btfss	3,2
  5696  099D  299F               	goto	u3551
  5697  099E  29A0               	goto	u3550
  5698  099F                     u3551:
  5699  099F  29A9               	goto	l2420
  5700  09A0                     u3550:
  5701  09A0                     l2416:
  5702  09A0  3000               	movlw	0
  5703  09A1  00AE               	movwf	?___flmul+3
  5704  09A2  3000               	movlw	0
  5705  09A3  00AD               	movwf	?___flmul+2
  5706  09A4  3000               	movlw	0
  5707  09A5  00AC               	movwf	?___flmul+1
  5708  09A6  3000               	movlw	0
  5709  09A7  00AB               	movwf	?___flmul
  5710  09A8  2C9C               	goto	l692
  5711  09A9                     l2420:
  5712  09A9  082B               	movf	___flmul@b,w
  5713  09AA  00B3               	movwf	??___flmul
  5714  09AB  0833               	movf	??___flmul,w
  5715  09AC  00F4               	movwf	__Umul8_16@multiplicand
  5716  09AD  0831               	movf	___flmul@a+2,w
  5717  09AE  160A  158A  241E  120A  158A  	fcall	__Umul8_16
  5718  09B3  0875               	movf	?__Umul8_16+1,w
  5719  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  5720  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  5721  09B6  00C4               	movwf	___flmul@temp+1
  5722  09B7  0874               	movf	?__Umul8_16,w
  5723  09B8  00C3               	movwf	___flmul@temp
  5724  09B9                     l2422:
  5725  09B9  0843               	movf	___flmul@temp,w
  5726  09BA  00B3               	movwf	??___flmul
  5727  09BB  01B4               	clrf	??___flmul+1
  5728  09BC  01B5               	clrf	??___flmul+2
  5729  09BD  01B6               	clrf	??___flmul+3
  5730  09BE  0836               	movf	??___flmul+3,w
  5731  09BF  00BC               	movwf	___flmul@grs+3
  5732  09C0  0835               	movf	??___flmul+2,w
  5733  09C1  00BB               	movwf	___flmul@grs+2
  5734  09C2  0834               	movf	??___flmul+1,w
  5735  09C3  00BA               	movwf	___flmul@grs+1
  5736  09C4  0833               	movf	??___flmul,w
  5737  09C5  00B9               	movwf	___flmul@grs
  5738  09C6                     l2424:
  5739  09C6  0844               	movf	___flmul@temp+1,w
  5740  09C7  00B3               	movwf	??___flmul
  5741  09C8  01B4               	clrf	??___flmul+1
  5742  09C9  01B5               	clrf	??___flmul+2
  5743  09CA  01B6               	clrf	??___flmul+3
  5744  09CB  0836               	movf	??___flmul+3,w
  5745  09CC  00C2               	movwf	___flmul@prod+3
  5746  09CD  0835               	movf	??___flmul+2,w
  5747  09CE  00C1               	movwf	___flmul@prod+2
  5748  09CF  0834               	movf	??___flmul+1,w
  5749  09D0  00C0               	movwf	___flmul@prod+1
  5750  09D1  0833               	movf	??___flmul,w
  5751  09D2  00BF               	movwf	___flmul@prod
  5752  09D3  082C               	movf	___flmul@b+1,w
  5753  09D4  00B3               	movwf	??___flmul
  5754  09D5  0833               	movf	??___flmul,w
  5755  09D6  00F4               	movwf	__Umul8_16@multiplicand
  5756  09D7  0830               	movf	___flmul@a+1,w
  5757  09D8  160A  158A  241E  120A  158A  	fcall	__Umul8_16
  5758  09DD  0875               	movf	?__Umul8_16+1,w
  5759  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  5760  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  5761  09E0  00C4               	movwf	___flmul@temp+1
  5762  09E1  0874               	movf	?__Umul8_16,w
  5763  09E2  00C3               	movwf	___flmul@temp
  5764  09E3                     l2426:
  5765  09E3  0843               	movf	___flmul@temp,w
  5766  09E4  00B3               	movwf	??___flmul
  5767  09E5  01B4               	clrf	??___flmul+1
  5768  09E6  01B5               	clrf	??___flmul+2
  5769  09E7  01B6               	clrf	??___flmul+3
  5770  09E8  0833               	movf	??___flmul,w
  5771  09E9  07B9               	addwf	___flmul@grs,f
  5772  09EA  0834               	movf	??___flmul+1,w
  5773  09EB  1103               	clrz
  5774  09EC  1803               	skipnc
  5775  09ED  3E01               	addlw	1
  5776  09EE  1903               	skipnz
  5777  09EF  29F1               	goto	u3561
  5778  09F0  07BA               	addwf	___flmul@grs+1,f
  5779  09F1                     u3561:
  5780  09F1  0835               	movf	??___flmul+2,w
  5781  09F2  1103               	clrz
  5782  09F3  1803               	skipnc
  5783  09F4  3E01               	addlw	1
  5784  09F5  1903               	skipnz
  5785  09F6  29F8               	goto	u3562
  5786  09F7  07BB               	addwf	___flmul@grs+2,f
  5787  09F8                     u3562:
  5788  09F8  0836               	movf	??___flmul+3,w
  5789  09F9  1103               	clrz
  5790  09FA  1803               	skipnc
  5791  09FB  3E01               	addlw	1
  5792  09FC  1903               	skipnz
  5793  09FD  29FF               	goto	u3563
  5794  09FE  07BC               	addwf	___flmul@grs+3,f
  5795  09FF                     u3563:
  5796  09FF                     l2428:
  5797  09FF  0844               	movf	___flmul@temp+1,w
  5798  0A00  00B3               	movwf	??___flmul
  5799  0A01  01B4               	clrf	??___flmul+1
  5800  0A02  01B5               	clrf	??___flmul+2
  5801  0A03  01B6               	clrf	??___flmul+3
  5802  0A04  0833               	movf	??___flmul,w
  5803  0A05  07BF               	addwf	___flmul@prod,f
  5804  0A06  0834               	movf	??___flmul+1,w
  5805  0A07  1103               	clrz
  5806  0A08  1803               	skipnc
  5807  0A09  3E01               	addlw	1
  5808  0A0A  1903               	skipnz
  5809  0A0B  2A0D               	goto	u3571
  5810  0A0C  07C0               	addwf	___flmul@prod+1,f
  5811  0A0D                     u3571:
  5812  0A0D  0835               	movf	??___flmul+2,w
  5813  0A0E  1103               	clrz
  5814  0A0F  1803               	skipnc
  5815  0A10  3E01               	addlw	1
  5816  0A11  1903               	skipnz
  5817  0A12  2A14               	goto	u3572
  5818  0A13  07C1               	addwf	___flmul@prod+2,f
  5819  0A14                     u3572:
  5820  0A14  0836               	movf	??___flmul+3,w
  5821  0A15  1103               	clrz
  5822  0A16  1803               	skipnc
  5823  0A17  3E01               	addlw	1
  5824  0A18  1903               	skipnz
  5825  0A19  2A1B               	goto	u3573
  5826  0A1A  07C2               	addwf	___flmul@prod+3,f
  5827  0A1B                     u3573:
  5828  0A1B  082D               	movf	___flmul@b+2,w
  5829  0A1C  00B3               	movwf	??___flmul
  5830  0A1D  0833               	movf	??___flmul,w
  5831  0A1E  00F4               	movwf	__Umul8_16@multiplicand
  5832  0A1F  082F               	movf	___flmul@a,w
  5833  0A20  160A  158A  241E  120A  158A  	fcall	__Umul8_16
  5834  0A25  0875               	movf	?__Umul8_16+1,w
  5835  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  5836  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  5837  0A28  00C4               	movwf	___flmul@temp+1
  5838  0A29  0874               	movf	?__Umul8_16,w
  5839  0A2A  00C3               	movwf	___flmul@temp
  5840  0A2B                     l2430:
  5841  0A2B  0843               	movf	___flmul@temp,w
  5842  0A2C  00B3               	movwf	??___flmul
  5843  0A2D  01B4               	clrf	??___flmul+1
  5844  0A2E  01B5               	clrf	??___flmul+2
  5845  0A2F  01B6               	clrf	??___flmul+3
  5846  0A30  0833               	movf	??___flmul,w
  5847  0A31  07B9               	addwf	___flmul@grs,f
  5848  0A32  0834               	movf	??___flmul+1,w
  5849  0A33  1103               	clrz
  5850  0A34  1803               	skipnc
  5851  0A35  3E01               	addlw	1
  5852  0A36  1903               	skipnz
  5853  0A37  2A39               	goto	u3581
  5854  0A38  07BA               	addwf	___flmul@grs+1,f
  5855  0A39                     u3581:
  5856  0A39  0835               	movf	??___flmul+2,w
  5857  0A3A  1103               	clrz
  5858  0A3B  1803               	skipnc
  5859  0A3C  3E01               	addlw	1
  5860  0A3D  1903               	skipnz
  5861  0A3E  2A40               	goto	u3582
  5862  0A3F  07BB               	addwf	___flmul@grs+2,f
  5863  0A40                     u3582:
  5864  0A40  0836               	movf	??___flmul+3,w
  5865  0A41  1103               	clrz
  5866  0A42  1803               	skipnc
  5867  0A43  3E01               	addlw	1
  5868  0A44  1903               	skipnz
  5869  0A45  2A47               	goto	u3583
  5870  0A46  07BC               	addwf	___flmul@grs+3,f
  5871  0A47                     u3583:
  5872  0A47                     l2432:
  5873  0A47  0844               	movf	___flmul@temp+1,w
  5874  0A48  00B3               	movwf	??___flmul
  5875  0A49  01B4               	clrf	??___flmul+1
  5876  0A4A  01B5               	clrf	??___flmul+2
  5877  0A4B  01B6               	clrf	??___flmul+3
  5878  0A4C  0833               	movf	??___flmul,w
  5879  0A4D  07BF               	addwf	___flmul@prod,f
  5880  0A4E  0834               	movf	??___flmul+1,w
  5881  0A4F  1103               	clrz
  5882  0A50  1803               	skipnc
  5883  0A51  3E01               	addlw	1
  5884  0A52  1903               	skipnz
  5885  0A53  2A55               	goto	u3591
  5886  0A54  07C0               	addwf	___flmul@prod+1,f
  5887  0A55                     u3591:
  5888  0A55  0835               	movf	??___flmul+2,w
  5889  0A56  1103               	clrz
  5890  0A57  1803               	skipnc
  5891  0A58  3E01               	addlw	1
  5892  0A59  1903               	skipnz
  5893  0A5A  2A5C               	goto	u3592
  5894  0A5B  07C1               	addwf	___flmul@prod+2,f
  5895  0A5C                     u3592:
  5896  0A5C  0836               	movf	??___flmul+3,w
  5897  0A5D  1103               	clrz
  5898  0A5E  1803               	skipnc
  5899  0A5F  3E01               	addlw	1
  5900  0A60  1903               	skipnz
  5901  0A61  2A63               	goto	u3593
  5902  0A62  07C2               	addwf	___flmul@prod+3,f
  5903  0A63                     u3593:
  5904  0A63                     l2434:
  5905  0A63  3008               	movlw	8
  5906  0A64  00B3               	movwf	??___flmul
  5907  0A65                     u3605:
  5908  0A65  1003               	clrc
  5909  0A66  0DB9               	rlf	___flmul@grs,f
  5910  0A67  0DBA               	rlf	___flmul@grs+1,f
  5911  0A68  0DBB               	rlf	___flmul@grs+2,f
  5912  0A69  0DBC               	rlf	___flmul@grs+3,f
  5913  0A6A  0BB3               	decfsz	??___flmul,f
  5914  0A6B  2A65               	goto	u3605
  5915  0A6C                     l2436:
  5916  0A6C  082C               	movf	___flmul@b+1,w
  5917  0A6D  00B3               	movwf	??___flmul
  5918  0A6E  0833               	movf	??___flmul,w
  5919  0A6F  00F4               	movwf	__Umul8_16@multiplicand
  5920  0A70  082F               	movf	___flmul@a,w
  5921  0A71  160A  158A  241E  120A  158A  	fcall	__Umul8_16
  5922  0A76  0875               	movf	?__Umul8_16+1,w
  5923  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  5924  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  5925  0A79  00C4               	movwf	___flmul@temp+1
  5926  0A7A  0874               	movf	?__Umul8_16,w
  5927  0A7B  00C3               	movwf	___flmul@temp
  5928  0A7C                     l2438:
  5929  0A7C  0843               	movf	___flmul@temp,w
  5930  0A7D  00B3               	movwf	??___flmul
  5931  0A7E  0844               	movf	___flmul@temp+1,w
  5932  0A7F  00B4               	movwf	??___flmul+1
  5933  0A80  01B5               	clrf	??___flmul+2
  5934  0A81  01B6               	clrf	??___flmul+3
  5935  0A82  0833               	movf	??___flmul,w
  5936  0A83  07B9               	addwf	___flmul@grs,f
  5937  0A84  0834               	movf	??___flmul+1,w
  5938  0A85  1103               	clrz
  5939  0A86  1803               	skipnc
  5940  0A87  3E01               	addlw	1
  5941  0A88  1903               	skipnz
  5942  0A89  2A8B               	goto	u3611
  5943  0A8A  07BA               	addwf	___flmul@grs+1,f
  5944  0A8B                     u3611:
  5945  0A8B  0835               	movf	??___flmul+2,w
  5946  0A8C  1103               	clrz
  5947  0A8D  1803               	skipnc
  5948  0A8E  3E01               	addlw	1
  5949  0A8F  1903               	skipnz
  5950  0A90  2A92               	goto	u3612
  5951  0A91  07BB               	addwf	___flmul@grs+2,f
  5952  0A92                     u3612:
  5953  0A92  0836               	movf	??___flmul+3,w
  5954  0A93  1103               	clrz
  5955  0A94  1803               	skipnc
  5956  0A95  3E01               	addlw	1
  5957  0A96  1903               	skipnz
  5958  0A97  2A99               	goto	u3613
  5959  0A98  07BC               	addwf	___flmul@grs+3,f
  5960  0A99                     u3613:
  5961  0A99                     l2440:
  5962  0A99  082B               	movf	___flmul@b,w
  5963  0A9A  00B3               	movwf	??___flmul
  5964  0A9B  0833               	movf	??___flmul,w
  5965  0A9C  00F4               	movwf	__Umul8_16@multiplicand
  5966  0A9D  0830               	movf	___flmul@a+1,w
  5967  0A9E  160A  158A  241E  120A  158A  	fcall	__Umul8_16
  5968  0AA3  0875               	movf	?__Umul8_16+1,w
  5969  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  5970  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  5971  0AA6  00C4               	movwf	___flmul@temp+1
  5972  0AA7  0874               	movf	?__Umul8_16,w
  5973  0AA8  00C3               	movwf	___flmul@temp
  5974  0AA9                     l2442:
  5975  0AA9  0843               	movf	___flmul@temp,w
  5976  0AAA  00B3               	movwf	??___flmul
  5977  0AAB  0844               	movf	___flmul@temp+1,w
  5978  0AAC  00B4               	movwf	??___flmul+1
  5979  0AAD  01B5               	clrf	??___flmul+2
  5980  0AAE  01B6               	clrf	??___flmul+3
  5981  0AAF  0833               	movf	??___flmul,w
  5982  0AB0  07B9               	addwf	___flmul@grs,f
  5983  0AB1  0834               	movf	??___flmul+1,w
  5984  0AB2  1103               	clrz
  5985  0AB3  1803               	skipnc
  5986  0AB4  3E01               	addlw	1
  5987  0AB5  1903               	skipnz
  5988  0AB6  2AB8               	goto	u3621
  5989  0AB7  07BA               	addwf	___flmul@grs+1,f
  5990  0AB8                     u3621:
  5991  0AB8  0835               	movf	??___flmul+2,w
  5992  0AB9  1103               	clrz
  5993  0ABA  1803               	skipnc
  5994  0ABB  3E01               	addlw	1
  5995  0ABC  1903               	skipnz
  5996  0ABD  2ABF               	goto	u3622
  5997  0ABE  07BB               	addwf	___flmul@grs+2,f
  5998  0ABF                     u3622:
  5999  0ABF  0836               	movf	??___flmul+3,w
  6000  0AC0  1103               	clrz
  6001  0AC1  1803               	skipnc
  6002  0AC2  3E01               	addlw	1
  6003  0AC3  1903               	skipnz
  6004  0AC4  2AC6               	goto	u3623
  6005  0AC5  07BC               	addwf	___flmul@grs+3,f
  6006  0AC6                     u3623:
  6007  0AC6                     l2444:
  6008  0AC6  3008               	movlw	8
  6009  0AC7  00B3               	movwf	??___flmul
  6010  0AC8                     u3635:
  6011  0AC8  1003               	clrc
  6012  0AC9  0DB9               	rlf	___flmul@grs,f
  6013  0ACA  0DBA               	rlf	___flmul@grs+1,f
  6014  0ACB  0DBB               	rlf	___flmul@grs+2,f
  6015  0ACC  0DBC               	rlf	___flmul@grs+3,f
  6016  0ACD  0BB3               	decfsz	??___flmul,f
  6017  0ACE  2AC8               	goto	u3635
  6018  0ACF  082B               	movf	___flmul@b,w
  6019  0AD0  00B3               	movwf	??___flmul
  6020  0AD1  0833               	movf	??___flmul,w
  6021  0AD2  00F4               	movwf	__Umul8_16@multiplicand
  6022  0AD3  082F               	movf	___flmul@a,w
  6023  0AD4  160A  158A  241E  120A  158A  	fcall	__Umul8_16
  6024  0AD9  0875               	movf	?__Umul8_16+1,w
  6025  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  6026  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  6027  0ADC  00C4               	movwf	___flmul@temp+1
  6028  0ADD  0874               	movf	?__Umul8_16,w
  6029  0ADE  00C3               	movwf	___flmul@temp
  6030  0ADF                     l2446:
  6031  0ADF  0843               	movf	___flmul@temp,w
  6032  0AE0  00B3               	movwf	??___flmul
  6033  0AE1  0844               	movf	___flmul@temp+1,w
  6034  0AE2  00B4               	movwf	??___flmul+1
  6035  0AE3  01B5               	clrf	??___flmul+2
  6036  0AE4  01B6               	clrf	??___flmul+3
  6037  0AE5  0833               	movf	??___flmul,w
  6038  0AE6  07B9               	addwf	___flmul@grs,f
  6039  0AE7  0834               	movf	??___flmul+1,w
  6040  0AE8  1103               	clrz
  6041  0AE9  1803               	skipnc
  6042  0AEA  3E01               	addlw	1
  6043  0AEB  1903               	skipnz
  6044  0AEC  2AEE               	goto	u3641
  6045  0AED  07BA               	addwf	___flmul@grs+1,f
  6046  0AEE                     u3641:
  6047  0AEE  0835               	movf	??___flmul+2,w
  6048  0AEF  1103               	clrz
  6049  0AF0  1803               	skipnc
  6050  0AF1  3E01               	addlw	1
  6051  0AF2  1903               	skipnz
  6052  0AF3  2AF5               	goto	u3642
  6053  0AF4  07BB               	addwf	___flmul@grs+2,f
  6054  0AF5                     u3642:
  6055  0AF5  0836               	movf	??___flmul+3,w
  6056  0AF6  1103               	clrz
  6057  0AF7  1803               	skipnc
  6058  0AF8  3E01               	addlw	1
  6059  0AF9  1903               	skipnz
  6060  0AFA  2AFC               	goto	u3643
  6061  0AFB  07BC               	addwf	___flmul@grs+3,f
  6062  0AFC                     u3643:
  6063  0AFC                     l2448:
  6064  0AFC  082C               	movf	___flmul@b+1,w
  6065  0AFD  00B3               	movwf	??___flmul
  6066  0AFE  0833               	movf	??___flmul,w
  6067  0AFF  00F4               	movwf	__Umul8_16@multiplicand
  6068  0B00  0831               	movf	___flmul@a+2,w
  6069  0B01  160A  158A  241E  120A  158A  	fcall	__Umul8_16
  6070  0B06  0875               	movf	?__Umul8_16+1,w
  6071  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  6072  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  6073  0B09  00C4               	movwf	___flmul@temp+1
  6074  0B0A  0874               	movf	?__Umul8_16,w
  6075  0B0B  00C3               	movwf	___flmul@temp
  6076  0B0C  0843               	movf	___flmul@temp,w
  6077  0B0D  00B3               	movwf	??___flmul
  6078  0B0E  0844               	movf	___flmul@temp+1,w
  6079  0B0F  00B4               	movwf	??___flmul+1
  6080  0B10  01B5               	clrf	??___flmul+2
  6081  0B11  01B6               	clrf	??___flmul+3
  6082  0B12  0833               	movf	??___flmul,w
  6083  0B13  07BF               	addwf	___flmul@prod,f
  6084  0B14  0834               	movf	??___flmul+1,w
  6085  0B15  1103               	clrz
  6086  0B16  1803               	skipnc
  6087  0B17  3E01               	addlw	1
  6088  0B18  1903               	skipnz
  6089  0B19  2B1B               	goto	u3651
  6090  0B1A  07C0               	addwf	___flmul@prod+1,f
  6091  0B1B                     u3651:
  6092  0B1B  0835               	movf	??___flmul+2,w
  6093  0B1C  1103               	clrz
  6094  0B1D  1803               	skipnc
  6095  0B1E  3E01               	addlw	1
  6096  0B1F  1903               	skipnz
  6097  0B20  2B22               	goto	u3652
  6098  0B21  07C1               	addwf	___flmul@prod+2,f
  6099  0B22                     u3652:
  6100  0B22  0836               	movf	??___flmul+3,w
  6101  0B23  1103               	clrz
  6102  0B24  1803               	skipnc
  6103  0B25  3E01               	addlw	1
  6104  0B26  1903               	skipnz
  6105  0B27  2B29               	goto	u3653
  6106  0B28  07C2               	addwf	___flmul@prod+3,f
  6107  0B29                     u3653:
  6108  0B29                     l2450:
  6109  0B29  082D               	movf	___flmul@b+2,w
  6110  0B2A  00B3               	movwf	??___flmul
  6111  0B2B  0833               	movf	??___flmul,w
  6112  0B2C  00F4               	movwf	__Umul8_16@multiplicand
  6113  0B2D  0830               	movf	___flmul@a+1,w
  6114  0B2E  160A  158A  241E  120A  158A  	fcall	__Umul8_16
  6115  0B33  0875               	movf	?__Umul8_16+1,w
  6116  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  6117  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  6118  0B36  00C4               	movwf	___flmul@temp+1
  6119  0B37  0874               	movf	?__Umul8_16,w
  6120  0B38  00C3               	movwf	___flmul@temp
  6121  0B39                     l2452:
  6122  0B39  0843               	movf	___flmul@temp,w
  6123  0B3A  00B3               	movwf	??___flmul
  6124  0B3B  0844               	movf	___flmul@temp+1,w
  6125  0B3C  00B4               	movwf	??___flmul+1
  6126  0B3D  01B5               	clrf	??___flmul+2
  6127  0B3E  01B6               	clrf	??___flmul+3
  6128  0B3F  0833               	movf	??___flmul,w
  6129  0B40  07BF               	addwf	___flmul@prod,f
  6130  0B41  0834               	movf	??___flmul+1,w
  6131  0B42  1103               	clrz
  6132  0B43  1803               	skipnc
  6133  0B44  3E01               	addlw	1
  6134  0B45  1903               	skipnz
  6135  0B46  2B48               	goto	u3661
  6136  0B47  07C0               	addwf	___flmul@prod+1,f
  6137  0B48                     u3661:
  6138  0B48  0835               	movf	??___flmul+2,w
  6139  0B49  1103               	clrz
  6140  0B4A  1803               	skipnc
  6141  0B4B  3E01               	addlw	1
  6142  0B4C  1903               	skipnz
  6143  0B4D  2B4F               	goto	u3662
  6144  0B4E  07C1               	addwf	___flmul@prod+2,f
  6145  0B4F                     u3662:
  6146  0B4F  0836               	movf	??___flmul+3,w
  6147  0B50  1103               	clrz
  6148  0B51  1803               	skipnc
  6149  0B52  3E01               	addlw	1
  6150  0B53  1903               	skipnz
  6151  0B54  2B56               	goto	u3663
  6152  0B55  07C2               	addwf	___flmul@prod+3,f
  6153  0B56                     u3663:
  6154  0B56  082D               	movf	___flmul@b+2,w
  6155  0B57  00B3               	movwf	??___flmul
  6156  0B58  0833               	movf	??___flmul,w
  6157  0B59  00F4               	movwf	__Umul8_16@multiplicand
  6158  0B5A  0831               	movf	___flmul@a+2,w
  6159  0B5B  160A  158A  241E  120A  158A  	fcall	__Umul8_16
  6160  0B60  0875               	movf	?__Umul8_16+1,w
  6161  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6162  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6163  0B63  00C4               	movwf	___flmul@temp+1
  6164  0B64  0874               	movf	?__Umul8_16,w
  6165  0B65  00C3               	movwf	___flmul@temp
  6166  0B66                     l2454:
  6167  0B66  0843               	movf	___flmul@temp,w
  6168  0B67  00B3               	movwf	??___flmul
  6169  0B68  0844               	movf	___flmul@temp+1,w
  6170  0B69  00B4               	movwf	??___flmul+1
  6171  0B6A  01B5               	clrf	??___flmul+2
  6172  0B6B  01B6               	clrf	??___flmul+3
  6173  0B6C  3008               	movlw	8
  6174  0B6D                     u3675:
  6175  0B6D  1003               	clrc
  6176  0B6E  0DB3               	rlf	??___flmul,f
  6177  0B6F  0DB4               	rlf	??___flmul+1,f
  6178  0B70  0DB5               	rlf	??___flmul+2,f
  6179  0B71  0DB6               	rlf	??___flmul+3,f
  6180  0B72                     u3670:
  6181  0B72  3EFF               	addlw	-1
  6182  0B73  1D03               	skipz
  6183  0B74  2B6D               	goto	u3675
  6184  0B75  0833               	movf	??___flmul,w
  6185  0B76  07BF               	addwf	___flmul@prod,f
  6186  0B77  0834               	movf	??___flmul+1,w
  6187  0B78  1103               	clrz
  6188  0B79  1803               	skipnc
  6189  0B7A  3E01               	addlw	1
  6190  0B7B  1903               	skipnz
  6191  0B7C  2B7E               	goto	u3681
  6192  0B7D  07C0               	addwf	___flmul@prod+1,f
  6193  0B7E                     u3681:
  6194  0B7E  0835               	movf	??___flmul+2,w
  6195  0B7F  1103               	clrz
  6196  0B80  1803               	skipnc
  6197  0B81  3E01               	addlw	1
  6198  0B82  1903               	skipnz
  6199  0B83  2B85               	goto	u3682
  6200  0B84  07C1               	addwf	___flmul@prod+2,f
  6201  0B85                     u3682:
  6202  0B85  0836               	movf	??___flmul+3,w
  6203  0B86  1103               	clrz
  6204  0B87  1803               	skipnc
  6205  0B88  3E01               	addlw	1
  6206  0B89  1903               	skipnz
  6207  0B8A  2B8C               	goto	u3683
  6208  0B8B  07C2               	addwf	___flmul@prod+3,f
  6209  0B8C                     u3683:
  6210  0B8C                     l2456:
  6211  0B8C  0839               	movf	___flmul@grs,w
  6212  0B8D  00B3               	movwf	??___flmul
  6213  0B8E  083A               	movf	___flmul@grs+1,w
  6214  0B8F  00B4               	movwf	??___flmul+1
  6215  0B90  083B               	movf	___flmul@grs+2,w
  6216  0B91  00B5               	movwf	??___flmul+2
  6217  0B92  083C               	movf	___flmul@grs+3,w
  6218  0B93  00B6               	movwf	??___flmul+3
  6219  0B94  3018               	movlw	24
  6220  0B95                     u3695:
  6221  0B95  1003               	clrc
  6222  0B96  0CB6               	rrf	??___flmul+3,f
  6223  0B97  0CB5               	rrf	??___flmul+2,f
  6224  0B98  0CB4               	rrf	??___flmul+1,f
  6225  0B99  0CB3               	rrf	??___flmul,f
  6226  0B9A                     u3690:
  6227  0B9A  3EFF               	addlw	-1
  6228  0B9B  1D03               	skipz
  6229  0B9C  2B95               	goto	u3695
  6230  0B9D  0833               	movf	??___flmul,w
  6231  0B9E  07BF               	addwf	___flmul@prod,f
  6232  0B9F  0834               	movf	??___flmul+1,w
  6233  0BA0  1103               	clrz
  6234  0BA1  1803               	skipnc
  6235  0BA2  3E01               	addlw	1
  6236  0BA3  1903               	skipnz
  6237  0BA4  2BA6               	goto	u3701
  6238  0BA5  07C0               	addwf	___flmul@prod+1,f
  6239  0BA6                     u3701:
  6240  0BA6  0835               	movf	??___flmul+2,w
  6241  0BA7  1103               	clrz
  6242  0BA8  1803               	skipnc
  6243  0BA9  3E01               	addlw	1
  6244  0BAA  1903               	skipnz
  6245  0BAB  2BAD               	goto	u3702
  6246  0BAC  07C1               	addwf	___flmul@prod+2,f
  6247  0BAD                     u3702:
  6248  0BAD  0836               	movf	??___flmul+3,w
  6249  0BAE  1103               	clrz
  6250  0BAF  1803               	skipnc
  6251  0BB0  3E01               	addlw	1
  6252  0BB1  1903               	skipnz
  6253  0BB2  2BB4               	goto	u3703
  6254  0BB3  07C2               	addwf	___flmul@prod+3,f
  6255  0BB4                     u3703:
  6256  0BB4                     l2458:
  6257  0BB4  3008               	movlw	8
  6258  0BB5  00B3               	movwf	??___flmul
  6259  0BB6                     u3715:
  6260  0BB6  1003               	clrc
  6261  0BB7  0DB9               	rlf	___flmul@grs,f
  6262  0BB8  0DBA               	rlf	___flmul@grs+1,f
  6263  0BB9  0DBB               	rlf	___flmul@grs+2,f
  6264  0BBA  0DBC               	rlf	___flmul@grs+3,f
  6265  0BBB  0BB3               	decfsz	??___flmul,f
  6266  0BBC  2BB6               	goto	u3715
  6267  0BBD                     l2460:
  6268  0BBD  083E               	movf	___flmul@bexp,w
  6269  0BBE  073D               	addwf	___flmul@aexp,w
  6270  0BBF  00B3               	movwf	??___flmul
  6271  0BC0  01B4               	clrf	??___flmul+1
  6272  0BC1  0DB4               	rlf	??___flmul+1,f
  6273  0BC2  0833               	movf	??___flmul,w
  6274  0BC3  3E82               	addlw	130
  6275  0BC4  00C3               	movwf	___flmul@temp
  6276  0BC5  0834               	movf	??___flmul+1,w
  6277  0BC6  1803               	skipnc
  6278  0BC7  3E01               	addlw	1
  6279  0BC8  3EFF               	addlw	255
  6280  0BC9  00C4               	movwf	___flmul@temp+1
  6281  0BCA  2BE8               	goto	l2472
  6282  0BCB                     l2462:
  6283  0BCB  3001               	movlw	1
  6284  0BCC  00B3               	movwf	??___flmul
  6285  0BCD                     u3725:
  6286  0BCD  1003               	clrc
  6287  0BCE  0DBF               	rlf	___flmul@prod,f
  6288  0BCF  0DC0               	rlf	___flmul@prod+1,f
  6289  0BD0  0DC1               	rlf	___flmul@prod+2,f
  6290  0BD1  0DC2               	rlf	___flmul@prod+3,f
  6291  0BD2  0BB3               	decfsz	??___flmul,f
  6292  0BD3  2BCD               	goto	u3725
  6293  0BD4                     l2464:
  6294  0BD4  1FBC               	btfss	___flmul@grs+3,7
  6295  0BD5  2BD7               	goto	u3731
  6296  0BD6  2BD8               	goto	u3730
  6297  0BD7                     u3731:
  6298  0BD7  2BD9               	goto	l2468
  6299  0BD8                     u3730:
  6300  0BD8                     l2466:
  6301  0BD8  143F               	bsf	___flmul@prod,0
  6302  0BD9                     l2468:
  6303  0BD9  3001               	movlw	1
  6304  0BDA  00B3               	movwf	??___flmul
  6305  0BDB                     u3745:
  6306  0BDB  1003               	clrc
  6307  0BDC  0DB9               	rlf	___flmul@grs,f
  6308  0BDD  0DBA               	rlf	___flmul@grs+1,f
  6309  0BDE  0DBB               	rlf	___flmul@grs+2,f
  6310  0BDF  0DBC               	rlf	___flmul@grs+3,f
  6311  0BE0  0BB3               	decfsz	??___flmul,f
  6312  0BE1  2BDB               	goto	u3745
  6313  0BE2                     l2470:
  6314  0BE2  30FF               	movlw	255
  6315  0BE3  07C3               	addwf	___flmul@temp,f
  6316  0BE4  1803               	skipnc
  6317  0BE5  0AC4               	incf	___flmul@temp+1,f
  6318  0BE6  30FF               	movlw	255
  6319  0BE7  07C4               	addwf	___flmul@temp+1,f
  6320  0BE8                     l2472:
  6321  0BE8  1FC1               	btfss	___flmul@prod+2,7
  6322  0BE9  2BEB               	goto	u3751
  6323  0BEA  2BEC               	goto	u3750
  6324  0BEB                     u3751:
  6325  0BEB  2BCB               	goto	l2462
  6326  0BEC                     u3750:
  6327  0BEC                     l2474:
  6328  0BEC  01BD               	clrf	___flmul@aexp
  6329  0BED                     l2476:
  6330  0BED  1FBC               	btfss	___flmul@grs+3,7
  6331  0BEE  2BF0               	goto	u3761
  6332  0BEF  2BF1               	goto	u3760
  6333  0BF0                     u3761:
  6334  0BF0  2C0D               	goto	l2484
  6335  0BF1                     u3760:
  6336  0BF1                     l2478:
  6337  0BF1  30FF               	movlw	255
  6338  0BF2  0539               	andwf	___flmul@grs,w
  6339  0BF3  00B3               	movwf	??___flmul
  6340  0BF4  30FF               	movlw	255
  6341  0BF5  053A               	andwf	___flmul@grs+1,w
  6342  0BF6  00B4               	movwf	??___flmul+1
  6343  0BF7  30FF               	movlw	255
  6344  0BF8  053B               	andwf	___flmul@grs+2,w
  6345  0BF9  00B5               	movwf	??___flmul+2
  6346  0BFA  307F               	movlw	127
  6347  0BFB  053C               	andwf	___flmul@grs+3,w
  6348  0BFC  00B6               	movwf	??___flmul+3
  6349  0BFD  0836               	movf	??___flmul+3,w
  6350  0BFE  0435               	iorwf	??___flmul+2,w
  6351  0BFF  0434               	iorwf	??___flmul+1,w
  6352  0C00  0433               	iorwf	??___flmul,w
  6353  0C01  1903               	skipnz
  6354  0C02  2C04               	goto	u3771
  6355  0C03  2C05               	goto	u3770
  6356  0C04                     u3771:
  6357  0C04  2C08               	goto	l698
  6358  0C05                     u3770:
  6359  0C05                     l2480:
  6360  0C05  01BD               	clrf	___flmul@aexp
  6361  0C06  0ABD               	incf	___flmul@aexp,f
  6362  0C07  2C0D               	goto	l2484
  6363  0C08                     l698:
  6364  0C08  1C3F               	btfss	___flmul@prod,0
  6365  0C09  2C0B               	goto	u3781
  6366  0C0A  2C0C               	goto	u3780
  6367  0C0B                     u3781:
  6368  0C0B  2C0D               	goto	l2484
  6369  0C0C                     u3780:
  6370  0C0C  2C05               	goto	l2480
  6371  0C0D                     l2484:
  6372  0C0D  083D               	movf	___flmul@aexp,w
  6373  0C0E  1903               	btfsc	3,2
  6374  0C0F  2C11               	goto	u3791
  6375  0C10  2C12               	goto	u3790
  6376  0C11                     u3791:
  6377  0C11  2C43               	goto	l2494
  6378  0C12                     u3790:
  6379  0C12                     l2486:
  6380  0C12  3001               	movlw	1
  6381  0C13  07BF               	addwf	___flmul@prod,f
  6382  0C14  3000               	movlw	0
  6383  0C15  1803               	skipnc
  6384  0C16  3001               	movlw	1
  6385  0C17  07C0               	addwf	___flmul@prod+1,f
  6386  0C18  3000               	movlw	0
  6387  0C19  1803               	skipnc
  6388  0C1A  3001               	movlw	1
  6389  0C1B  07C1               	addwf	___flmul@prod+2,f
  6390  0C1C  3000               	movlw	0
  6391  0C1D  1803               	skipnc
  6392  0C1E  3001               	movlw	1
  6393  0C1F  07C2               	addwf	___flmul@prod+3,f
  6394  0C20                     l2488:
  6395  0C20  1C42               	btfss	___flmul@prod+3,0
  6396  0C21  2C23               	goto	u3801
  6397  0C22  2C24               	goto	u3800
  6398  0C23                     u3801:
  6399  0C23  2C43               	goto	l2494
  6400  0C24                     u3800:
  6401  0C24                     l2490:
  6402  0C24  083F               	movf	___flmul@prod,w
  6403  0C25  00B3               	movwf	??___flmul
  6404  0C26  0840               	movf	___flmul@prod+1,w
  6405  0C27  00B4               	movwf	??___flmul+1
  6406  0C28  0841               	movf	___flmul@prod+2,w
  6407  0C29  00B5               	movwf	??___flmul+2
  6408  0C2A  0842               	movf	___flmul@prod+3,w
  6409  0C2B  00B6               	movwf	??___flmul+3
  6410  0C2C  3001               	movlw	1
  6411  0C2D  00B7               	movwf	??___flmul+4
  6412  0C2E                     u3815:
  6413  0C2E  0D36               	rlf	??___flmul+3,w
  6414  0C2F  0CB6               	rrf	??___flmul+3,f
  6415  0C30  0CB5               	rrf	??___flmul+2,f
  6416  0C31  0CB4               	rrf	??___flmul+1,f
  6417  0C32  0CB3               	rrf	??___flmul,f
  6418  0C33                     u3810:
  6419  0C33  0BB7               	decfsz	??___flmul+4,f
  6420  0C34  2C2E               	goto	u3815
  6421  0C35  0836               	movf	??___flmul+3,w
  6422  0C36  00C2               	movwf	___flmul@prod+3
  6423  0C37  0835               	movf	??___flmul+2,w
  6424  0C38  00C1               	movwf	___flmul@prod+2
  6425  0C39  0834               	movf	??___flmul+1,w
  6426  0C3A  00C0               	movwf	___flmul@prod+1
  6427  0C3B  0833               	movf	??___flmul,w
  6428  0C3C  00BF               	movwf	___flmul@prod
  6429  0C3D                     l2492:
  6430  0C3D  3001               	movlw	1
  6431  0C3E  07C3               	addwf	___flmul@temp,f
  6432  0C3F  1803               	skipnc
  6433  0C40  0AC4               	incf	___flmul@temp+1,f
  6434  0C41  3000               	movlw	0
  6435  0C42  07C4               	addwf	___flmul@temp+1,f
  6436  0C43                     l2494:
  6437  0C43  0844               	movf	___flmul@temp+1,w
  6438  0C44  3A80               	xorlw	128
  6439  0C45  00FF               	movwf	btemp+1
  6440  0C46  3080               	movlw	128
  6441  0C47  027F               	subwf	btemp+1,w
  6442  0C48  1D03               	skipz
  6443  0C49  2C4C               	goto	u3825
  6444  0C4A  30FF               	movlw	255
  6445  0C4B  0243               	subwf	___flmul@temp,w
  6446  0C4C                     u3825:
  6447  0C4C  1C03               	skipc
  6448  0C4D  2C4F               	goto	u3821
  6449  0C4E  2C50               	goto	u3820
  6450  0C4F                     u3821:
  6451  0C4F  2C5B               	goto	l2498
  6452  0C50                     u3820:
  6453  0C50                     l2496:
  6454  0C50  307F               	movlw	127
  6455  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6456  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6457  0C53  00C2               	movwf	___flmul@prod+3
  6458  0C54  3080               	movlw	128
  6459  0C55  00C1               	movwf	___flmul@prod+2
  6460  0C56  3000               	movlw	0
  6461  0C57  00C0               	movwf	___flmul@prod+1
  6462  0C58  3000               	movlw	0
  6463  0C59  00BF               	movwf	___flmul@prod
  6464  0C5A  2C90               	goto	l704
  6465  0C5B                     l2498:
  6466  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6467  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6468  0C5D  0844               	movf	___flmul@temp+1,w
  6469  0C5E  3A80               	xorlw	128
  6470  0C5F  00FF               	movwf	btemp+1
  6471  0C60  3080               	movlw	128
  6472  0C61  027F               	subwf	btemp+1,w
  6473  0C62  1D03               	skipz
  6474  0C63  2C66               	goto	u3835
  6475  0C64  3001               	movlw	1
  6476  0C65  0243               	subwf	___flmul@temp,w
  6477  0C66                     u3835:
  6478  0C66  1803               	skipnc
  6479  0C67  2C69               	goto	u3831
  6480  0C68  2C6A               	goto	u3830
  6481  0C69                     u3831:
  6482  0C69  2C76               	goto	l2504
  6483  0C6A                     u3830:
  6484  0C6A                     l2500:
  6485  0C6A  3000               	movlw	0
  6486  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6487  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6488  0C6D  00C2               	movwf	___flmul@prod+3
  6489  0C6E  3000               	movlw	0
  6490  0C6F  00C1               	movwf	___flmul@prod+2
  6491  0C70  3000               	movlw	0
  6492  0C71  00C0               	movwf	___flmul@prod+1
  6493  0C72  3000               	movlw	0
  6494  0C73  00BF               	movwf	___flmul@prod
  6495  0C74                     l2502:
  6496  0C74  01B8               	clrf	___flmul@sign
  6497  0C75  2C90               	goto	l704
  6498  0C76                     l2504:
  6499  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6500  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6501  0C78  0843               	movf	___flmul@temp,w
  6502  0C79  00B3               	movwf	??___flmul
  6503  0C7A  0833               	movf	??___flmul,w
  6504  0C7B  00BE               	movwf	___flmul@bexp
  6505  0C7C  30FF               	movlw	255
  6506  0C7D  05BF               	andwf	___flmul@prod,f
  6507  0C7E  30FF               	movlw	255
  6508  0C7F  05C0               	andwf	___flmul@prod+1,f
  6509  0C80  307F               	movlw	127
  6510  0C81  05C1               	andwf	___flmul@prod+2,f
  6511  0C82  3000               	movlw	0
  6512  0C83  05C2               	andwf	___flmul@prod+3,f
  6513  0C84                     l2506:
  6514  0C84  1C3E               	btfss	___flmul@bexp,0
  6515  0C85  2C87               	goto	u3841
  6516  0C86  2C88               	goto	u3840
  6517  0C87                     u3841:
  6518  0C87  2C89               	goto	l2510
  6519  0C88                     u3840:
  6520  0C88                     l2508:
  6521  0C88  17C1               	bsf	___flmul@prod+2,7
  6522  0C89                     l2510:
  6523  0C89  083E               	movf	___flmul@bexp,w
  6524  0C8A  00B3               	movwf	??___flmul
  6525  0C8B  1003               	clrc
  6526  0C8C  0C33               	rrf	??___flmul,w
  6527  0C8D  00B4               	movwf	??___flmul+1
  6528  0C8E  0834               	movf	??___flmul+1,w
  6529  0C8F  00C2               	movwf	___flmul@prod+3
  6530  0C90                     l704:
  6531  0C90  0838               	movf	___flmul@sign,w
  6532  0C91  00B3               	movwf	??___flmul
  6533  0C92  0833               	movf	??___flmul,w
  6534  0C93  04C2               	iorwf	___flmul@prod+3,f
  6535  0C94                     l2512:
  6536  0C94  0842               	movf	___flmul@prod+3,w
  6537  0C95  00AE               	movwf	?___flmul+3
  6538  0C96  0841               	movf	___flmul@prod+2,w
  6539  0C97  00AD               	movwf	?___flmul+2
  6540  0C98  0840               	movf	___flmul@prod+1,w
  6541  0C99  00AC               	movwf	?___flmul+1
  6542  0C9A  083F               	movf	___flmul@prod,w
  6543  0C9B  00AB               	movwf	?___flmul
  6544  0C9C                     l692:
  6545  0C9C  0008               	return
  6546  0C9D                     __end_of___flmul:
  6547                           
  6548                           	psect	text11
  6549  1C1E                     __ptext11:	
  6550 ;; *************** function __Umul8_16 *****************
  6551 ;; Defined at:
  6552 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  multiplier      1    wreg     unsigned char 
  6555 ;;  multiplicand    1    4[COMMON] unsigned char 
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6558 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6559 ;;  product         2    0[BANK0 ] unsigned int 
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  2    4[COMMON] unsigned int 
  6562 ;; Registers used:
  6563 ;;		wreg, status,2, status,0
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6569 ;;      Params:         2       0       0       0       0
  6570 ;;      Locals:         0       5       0       0       0
  6571 ;;      Temps:          2       0       0       0       0
  6572 ;;      Totals:         4       5       0       0       0
  6573 ;;Total ram usage:        9 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; Hardware stack levels required when called:    1
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		___flmul
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           
  6584                           ;psect for function __Umul8_16
  6585  1C1E                     __Umul8_16:
  6586                           
  6587                           ;incstack = 0
  6588                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6589                           ;__Umul8_16@multiplier stored from wreg
  6590  1C1E  1283               	bcf	3,5	;RP0=0, select bank0
  6591  1C1F  1303               	bcf	3,6	;RP1=0, select bank0
  6592  1C20  00A4               	movwf	__Umul8_16@multiplier
  6593  1C21                     l2038:
  6594  1C21  01A0               	clrf	__Umul8_16@product
  6595  1C22  01A1               	clrf	__Umul8_16@product+1
  6596  1C23                     l2040:
  6597  1C23  0874               	movf	__Umul8_16@multiplicand,w
  6598  1C24  00F6               	movwf	??__Umul8_16
  6599  1C25  01F7               	clrf	??__Umul8_16+1
  6600  1C26  0876               	movf	??__Umul8_16,w
  6601  1C27  00A2               	movwf	__Umul8_16@word_mpld
  6602  1C28  0877               	movf	??__Umul8_16+1,w
  6603  1C29  00A3               	movwf	__Umul8_16@word_mpld+1
  6604  1C2A                     l2042:
  6605  1C2A  1C24               	btfss	__Umul8_16@multiplier,0
  6606  1C2B  2C2D               	goto	u2671
  6607  1C2C  2C2E               	goto	u2670
  6608  1C2D                     u2671:
  6609  1C2D  2C34               	goto	l711
  6610  1C2E                     u2670:
  6611  1C2E                     l2044:
  6612  1C2E  0822               	movf	__Umul8_16@word_mpld,w
  6613  1C2F  07A0               	addwf	__Umul8_16@product,f
  6614  1C30  1803               	skipnc
  6615  1C31  0AA1               	incf	__Umul8_16@product+1,f
  6616  1C32  0823               	movf	__Umul8_16@word_mpld+1,w
  6617  1C33  07A1               	addwf	__Umul8_16@product+1,f
  6618  1C34                     l711:
  6619  1C34  3001               	movlw	1
  6620  1C35                     u2685:
  6621  1C35  1003               	clrc
  6622  1C36  0DA2               	rlf	__Umul8_16@word_mpld,f
  6623  1C37  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6624  1C38  3EFF               	addlw	-1
  6625  1C39  1D03               	skipz
  6626  1C3A  2C35               	goto	u2685
  6627  1C3B  1003               	clrc
  6628  1C3C  0CA4               	rrf	__Umul8_16@multiplier,f
  6629  1C3D                     l2046:
  6630  1C3D  0824               	movf	__Umul8_16@multiplier,w
  6631  1C3E  1D03               	btfss	3,2
  6632  1C3F  2C41               	goto	u2691
  6633  1C40  2C42               	goto	u2690
  6634  1C41                     u2691:
  6635  1C41  2C2A               	goto	l2042
  6636  1C42                     u2690:
  6637  1C42                     l2048:
  6638  1C42  0821               	movf	__Umul8_16@product+1,w
  6639  1C43  00F5               	movwf	?__Umul8_16+1
  6640  1C44  0820               	movf	__Umul8_16@product,w
  6641  1C45  00F4               	movwf	?__Umul8_16
  6642  1C46                     l713:
  6643  1C46  0008               	return
  6644  1C47                     __end_of__Umul8_16:
  6645                           
  6646                           	psect	text12
  6647  11F0                     __ptext12:	
  6648 ;; *************** function __tdiv_to_l_ *****************
  6649 ;; Defined at:
  6650 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;  f1              4    0[BANK0 ] float 
  6653 ;;  f2              4    4[BANK0 ] float 
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;  quot            4    8[BANK0 ] unsigned long 
  6656 ;;  exp1            1   13[BANK0 ] unsigned char 
  6657 ;;  cntr            1   12[BANK0 ] unsigned char 
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  4    0[BANK0 ] unsigned long 
  6660 ;; Registers used:
  6661 ;;		wreg, status,2, status,0
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6667 ;;      Params:         0       8       0       0       0
  6668 ;;      Locals:         0       6       0       0       0
  6669 ;;      Temps:          4       0       0       0       0
  6670 ;;      Totals:         4      14       0       0       0
  6671 ;;Total ram usage:       18 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; Hardware stack levels required when called:    1
  6674 ;; This function calls:
  6675 ;;		Nothing
  6676 ;; This function is called by:
  6677 ;;		_sprintf
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           
  6682                           ;psect for function __tdiv_to_l_
  6683  11F0                     __tdiv_to_l_:
  6684  11F0                     l2602:	
  6685                           ;incstack = 0
  6686                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6687                           
  6688  11F0  1283               	bcf	3,5	;RP0=0, select bank0
  6689  11F1  1303               	bcf	3,6	;RP1=0, select bank0
  6690  11F2  0820               	movf	__tdiv_to_l_@f1,w
  6691  11F3  00F4               	movwf	??__tdiv_to_l_
  6692  11F4  0821               	movf	__tdiv_to_l_@f1+1,w
  6693  11F5  00F5               	movwf	??__tdiv_to_l_+1
  6694  11F6  0822               	movf	__tdiv_to_l_@f1+2,w
  6695  11F7  00F6               	movwf	??__tdiv_to_l_+2
  6696  11F8  1003               	clrc
  6697  11F9  0D75               	rlf	??__tdiv_to_l_+1,w
  6698  11FA  0D76               	rlf	??__tdiv_to_l_+2,w
  6699  11FB  00F7               	movwf	??__tdiv_to_l_+3
  6700  11FC  0877               	movf	??__tdiv_to_l_+3,w
  6701  11FD  00AD               	movwf	__tdiv_to_l_@exp1
  6702  11FE  082D               	movf	__tdiv_to_l_@exp1,w
  6703  11FF  1D03               	btfss	3,2
  6704  1200  2A02               	goto	u4121
  6705  1201  2A03               	goto	u4120
  6706  1202                     u4121:
  6707  1202  2A0C               	goto	l2608
  6708  1203                     u4120:
  6709  1203                     l2604:
  6710  1203  3000               	movlw	0
  6711  1204  00A3               	movwf	?__tdiv_to_l_+3
  6712  1205  3000               	movlw	0
  6713  1206  00A2               	movwf	?__tdiv_to_l_+2
  6714  1207  3000               	movlw	0
  6715  1208  00A1               	movwf	?__tdiv_to_l_+1
  6716  1209  3000               	movlw	0
  6717  120A  00A0               	movwf	?__tdiv_to_l_
  6718  120B  2AAC               	goto	l486
  6719  120C                     l2608:
  6720  120C  0824               	movf	__tdiv_to_l_@f2,w
  6721  120D  00F4               	movwf	??__tdiv_to_l_
  6722  120E  0825               	movf	__tdiv_to_l_@f2+1,w
  6723  120F  00F5               	movwf	??__tdiv_to_l_+1
  6724  1210  0826               	movf	__tdiv_to_l_@f2+2,w
  6725  1211  00F6               	movwf	??__tdiv_to_l_+2
  6726  1212  1003               	clrc
  6727  1213  0D75               	rlf	??__tdiv_to_l_+1,w
  6728  1214  0D76               	rlf	??__tdiv_to_l_+2,w
  6729  1215  00F7               	movwf	??__tdiv_to_l_+3
  6730  1216  0877               	movf	??__tdiv_to_l_+3,w
  6731  1217  00AC               	movwf	__tdiv_to_l_@cntr
  6732  1218  082C               	movf	__tdiv_to_l_@cntr,w
  6733  1219  1D03               	btfss	3,2
  6734  121A  2A1C               	goto	u4131
  6735  121B  2A1D               	goto	u4130
  6736  121C                     u4131:
  6737  121C  2A1E               	goto	l487
  6738  121D                     u4130:
  6739  121D  2A03               	goto	l2604
  6740  121E                     l487:
  6741  121E  17A1               	bsf	__tdiv_to_l_@f1+1,7
  6742  121F                     l2614:
  6743  121F  30FF               	movlw	255
  6744  1220  05A0               	andwf	__tdiv_to_l_@f1,f
  6745  1221  30FF               	movlw	255
  6746  1222  05A1               	andwf	__tdiv_to_l_@f1+1,f
  6747  1223  3000               	movlw	0
  6748  1224  05A2               	andwf	__tdiv_to_l_@f1+2,f
  6749  1225                     l2616:
  6750  1225  17A5               	bsf	__tdiv_to_l_@f2+1,7
  6751  1226  30FF               	movlw	255
  6752  1227  05A4               	andwf	__tdiv_to_l_@f2,f
  6753  1228  30FF               	movlw	255
  6754  1229  05A5               	andwf	__tdiv_to_l_@f2+1,f
  6755  122A  3000               	movlw	0
  6756  122B  05A6               	andwf	__tdiv_to_l_@f2+2,f
  6757  122C  3000               	movlw	0
  6758  122D  00AB               	movwf	__tdiv_to_l_@quot+3
  6759  122E  3000               	movlw	0
  6760  122F  00AA               	movwf	__tdiv_to_l_@quot+2
  6761  1230  3000               	movlw	0
  6762  1231  00A9               	movwf	__tdiv_to_l_@quot+1
  6763  1232  3000               	movlw	0
  6764  1233  00A8               	movwf	__tdiv_to_l_@quot
  6765  1234                     l2618:
  6766  1234  307F               	movlw	127
  6767  1235  02AD               	subwf	__tdiv_to_l_@exp1,f
  6768  1236                     l2620:
  6769  1236  3098               	movlw	152
  6770  1237  072C               	addwf	__tdiv_to_l_@cntr,w
  6771  1238  00F4               	movwf	??__tdiv_to_l_
  6772  1239  0874               	movf	??__tdiv_to_l_,w
  6773  123A  02AD               	subwf	__tdiv_to_l_@exp1,f
  6774  123B  3018               	movlw	24
  6775  123C  00F4               	movwf	??__tdiv_to_l_
  6776  123D  0874               	movf	??__tdiv_to_l_,w
  6777  123E  00AC               	movwf	__tdiv_to_l_@cntr
  6778  123F                     l2622:
  6779  123F  3001               	movlw	1
  6780  1240  00F4               	movwf	??__tdiv_to_l_
  6781  1241                     u4145:
  6782  1241  1003               	clrc
  6783  1242  0DA8               	rlf	__tdiv_to_l_@quot,f
  6784  1243  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6785  1244  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6786  1245  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6787  1246  0BF4               	decfsz	??__tdiv_to_l_,f
  6788  1247  2A41               	goto	u4145
  6789  1248                     l2624:
  6790  1248  0826               	movf	__tdiv_to_l_@f2+2,w
  6791  1249  0222               	subwf	__tdiv_to_l_@f1+2,w
  6792  124A  1D03               	skipz
  6793  124B  2A52               	goto	u4155
  6794  124C  0825               	movf	__tdiv_to_l_@f2+1,w
  6795  124D  0221               	subwf	__tdiv_to_l_@f1+1,w
  6796  124E  1D03               	skipz
  6797  124F  2A52               	goto	u4155
  6798  1250  0824               	movf	__tdiv_to_l_@f2,w
  6799  1251  0220               	subwf	__tdiv_to_l_@f1,w
  6800  1252                     u4155:
  6801  1252  1C03               	skipc
  6802  1253  2A55               	goto	u4151
  6803  1254  2A56               	goto	u4150
  6804  1255                     u4151:
  6805  1255  2A61               	goto	l2630
  6806  1256                     u4150:
  6807  1256                     l2626:
  6808  1256  0824               	movf	__tdiv_to_l_@f2,w
  6809  1257  02A0               	subwf	__tdiv_to_l_@f1,f
  6810  1258  0825               	movf	__tdiv_to_l_@f2+1,w
  6811  1259  1C03               	skipc
  6812  125A  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  6813  125B  02A1               	subwf	__tdiv_to_l_@f1+1,f
  6814  125C  0826               	movf	__tdiv_to_l_@f2+2,w
  6815  125D  1C03               	skipc
  6816  125E  0A26               	incf	__tdiv_to_l_@f2+2,w
  6817  125F  02A2               	subwf	__tdiv_to_l_@f1+2,f
  6818  1260                     l2628:
  6819  1260  1428               	bsf	__tdiv_to_l_@quot,0
  6820  1261                     l2630:
  6821  1261  3001               	movlw	1
  6822  1262                     u4165:
  6823  1262  1003               	clrc
  6824  1263  0DA0               	rlf	__tdiv_to_l_@f1,f
  6825  1264  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  6826  1265  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  6827  1266  3EFF               	addlw	-1
  6828  1267  1D03               	skipz
  6829  1268  2A62               	goto	u4165
  6830  1269                     l2632:
  6831  1269  3001               	movlw	1
  6832  126A  02AC               	subwf	__tdiv_to_l_@cntr,f
  6833  126B  1D03               	btfss	3,2
  6834  126C  2A6E               	goto	u4171
  6835  126D  2A6F               	goto	u4170
  6836  126E                     u4171:
  6837  126E  2A3F               	goto	l2622
  6838  126F                     u4170:
  6839  126F                     l490:
  6840  126F  1FAD               	btfss	__tdiv_to_l_@exp1,7
  6841  1270  2A72               	goto	u4181
  6842  1271  2A73               	goto	u4180
  6843  1272                     u4181:
  6844  1272  2A8D               	goto	l2642
  6845  1273                     u4180:
  6846  1273                     l2634:
  6847  1273  082D               	movf	__tdiv_to_l_@exp1,w
  6848  1274  3A80               	xorlw	128
  6849  1275  3E97               	addlw	151
  6850  1276  1803               	skipnc
  6851  1277  2A79               	goto	u4191
  6852  1278  2A7A               	goto	u4190
  6853  1279                     u4191:
  6854  1279  2A7B               	goto	l2640
  6855  127A                     u4190:
  6856  127A  2A03               	goto	l2604
  6857  127B                     l2640:
  6858  127B  3001               	movlw	1
  6859  127C                     u4205:
  6860  127C  1003               	clrc
  6861  127D  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  6862  127E  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  6863  127F  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  6864  1280  0CA8               	rrf	__tdiv_to_l_@quot,f
  6865  1281  3EFF               	addlw	-1
  6866  1282  1D03               	skipz
  6867  1283  2A7C               	goto	u4205
  6868  1284  3001               	movlw	1
  6869  1285  00F4               	movwf	??__tdiv_to_l_
  6870  1286  0874               	movf	??__tdiv_to_l_,w
  6871  1287  07AD               	addwf	__tdiv_to_l_@exp1,f
  6872  1288  1D03               	btfss	3,2
  6873  1289  2A8B               	goto	u4211
  6874  128A  2A8C               	goto	u4210
  6875  128B                     u4211:
  6876  128B  2A7B               	goto	l2640
  6877  128C                     u4210:
  6878  128C  2AA4               	goto	l2650
  6879  128D                     l2642:
  6880  128D  3018               	movlw	24
  6881  128E  022D               	subwf	__tdiv_to_l_@exp1,w
  6882  128F  1C03               	skipc
  6883  1290  2A92               	goto	u4221
  6884  1291  2A93               	goto	u4220
  6885  1292                     u4221:
  6886  1292  2A9F               	goto	l497
  6887  1293                     u4220:
  6888  1293  2A03               	goto	l2604
  6889  1294                     l2648:
  6890  1294  3001               	movlw	1
  6891  1295  00F4               	movwf	??__tdiv_to_l_
  6892  1296                     u4235:
  6893  1296  1003               	clrc
  6894  1297  0DA8               	rlf	__tdiv_to_l_@quot,f
  6895  1298  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6896  1299  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6897  129A  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6898  129B  0BF4               	decfsz	??__tdiv_to_l_,f
  6899  129C  2A96               	goto	u4235
  6900  129D  3001               	movlw	1
  6901  129E  02AD               	subwf	__tdiv_to_l_@exp1,f
  6902  129F                     l497:
  6903  129F  082D               	movf	__tdiv_to_l_@exp1,w
  6904  12A0  1D03               	btfss	3,2
  6905  12A1  2AA3               	goto	u4241
  6906  12A2  2AA4               	goto	u4240
  6907  12A3                     u4241:
  6908  12A3  2A94               	goto	l2648
  6909  12A4                     u4240:
  6910  12A4                     l2650:
  6911  12A4  082B               	movf	__tdiv_to_l_@quot+3,w
  6912  12A5  00A3               	movwf	?__tdiv_to_l_+3
  6913  12A6  082A               	movf	__tdiv_to_l_@quot+2,w
  6914  12A7  00A2               	movwf	?__tdiv_to_l_+2
  6915  12A8  0829               	movf	__tdiv_to_l_@quot+1,w
  6916  12A9  00A1               	movwf	?__tdiv_to_l_+1
  6917  12AA  0828               	movf	__tdiv_to_l_@quot,w
  6918  12AB  00A0               	movwf	?__tdiv_to_l_
  6919  12AC                     l486:
  6920  12AC  0008               	return
  6921  12AD                     __end_of__tdiv_to_l_:
  6922                           
  6923                           	psect	text13
  6924  12AD                     __ptext13:	
  6925 ;; *************** function __div_to_l_ *****************
  6926 ;; Defined at:
  6927 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;  f1              4    0[BANK0 ] unsigned long 
  6930 ;;  f2              4    4[BANK0 ] unsigned long 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;  quot            4    8[BANK0 ] unsigned long 
  6933 ;;  exp1            1   13[BANK0 ] unsigned char 
  6934 ;;  cntr            1   12[BANK0 ] unsigned char 
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  4    0[BANK0 ] unsigned long 
  6937 ;; Registers used:
  6938 ;;		wreg, status,2, status,0
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6944 ;;      Params:         0       8       0       0       0
  6945 ;;      Locals:         0       6       0       0       0
  6946 ;;      Temps:          1       0       0       0       0
  6947 ;;      Totals:         1      14       0       0       0
  6948 ;;Total ram usage:       15 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; Hardware stack levels required when called:    1
  6951 ;; This function calls:
  6952 ;;		Nothing
  6953 ;; This function is called by:
  6954 ;;		_sprintf
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           
  6959                           ;psect for function __div_to_l_
  6960  12AD                     __div_to_l_:
  6961  12AD                     l2654:	
  6962                           ;incstack = 0
  6963                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6964                           
  6965  12AD  1003               	clrc
  6966  12AE  1283               	bcf	3,5	;RP0=0, select bank0
  6967  12AF  1303               	bcf	3,6	;RP1=0, select bank0
  6968  12B0  0D22               	rlf	__div_to_l_@f1+2,w
  6969  12B1  0D23               	rlf	__div_to_l_@f1+3,w
  6970  12B2  00F4               	movwf	??__div_to_l_
  6971  12B3  0874               	movf	??__div_to_l_,w
  6972  12B4  00AD               	movwf	__div_to_l_@exp1
  6973  12B5  082D               	movf	__div_to_l_@exp1,w
  6974  12B6  1D03               	btfss	3,2
  6975  12B7  2AB9               	goto	u4251
  6976  12B8  2ABA               	goto	u4250
  6977  12B9                     u4251:
  6978  12B9  2AC3               	goto	l2660
  6979  12BA                     u4250:
  6980  12BA                     l2656:
  6981  12BA  3000               	movlw	0
  6982  12BB  00A3               	movwf	?__div_to_l_+3
  6983  12BC  3000               	movlw	0
  6984  12BD  00A2               	movwf	?__div_to_l_+2
  6985  12BE  3000               	movlw	0
  6986  12BF  00A1               	movwf	?__div_to_l_+1
  6987  12C0  3000               	movlw	0
  6988  12C1  00A0               	movwf	?__div_to_l_
  6989  12C2  2B6A               	goto	l439
  6990  12C3                     l2660:
  6991  12C3  1003               	clrc
  6992  12C4  0D26               	rlf	__div_to_l_@f2+2,w
  6993  12C5  0D27               	rlf	__div_to_l_@f2+3,w
  6994  12C6  00F4               	movwf	??__div_to_l_
  6995  12C7  0874               	movf	??__div_to_l_,w
  6996  12C8  00AC               	movwf	__div_to_l_@cntr
  6997  12C9  082C               	movf	__div_to_l_@cntr,w
  6998  12CA  1D03               	btfss	3,2
  6999  12CB  2ACD               	goto	u4261
  7000  12CC  2ACE               	goto	u4260
  7001  12CD                     u4261:
  7002  12CD  2ACF               	goto	l440
  7003  12CE                     u4260:
  7004  12CE  2ABA               	goto	l2656
  7005  12CF                     l440:
  7006  12CF  17A2               	bsf	__div_to_l_@f1+2,7
  7007  12D0                     l2666:
  7008  12D0  30FF               	movlw	255
  7009  12D1  05A0               	andwf	__div_to_l_@f1,f
  7010  12D2  30FF               	movlw	255
  7011  12D3  05A1               	andwf	__div_to_l_@f1+1,f
  7012  12D4  30FF               	movlw	255
  7013  12D5  05A2               	andwf	__div_to_l_@f1+2,f
  7014  12D6  3000               	movlw	0
  7015  12D7  05A3               	andwf	__div_to_l_@f1+3,f
  7016  12D8                     l2668:
  7017  12D8  17A6               	bsf	__div_to_l_@f2+2,7
  7018  12D9  30FF               	movlw	255
  7019  12DA  05A4               	andwf	__div_to_l_@f2,f
  7020  12DB  30FF               	movlw	255
  7021  12DC  05A5               	andwf	__div_to_l_@f2+1,f
  7022  12DD  30FF               	movlw	255
  7023  12DE  05A6               	andwf	__div_to_l_@f2+2,f
  7024  12DF  3000               	movlw	0
  7025  12E0  05A7               	andwf	__div_to_l_@f2+3,f
  7026  12E1  3000               	movlw	0
  7027  12E2  00AB               	movwf	__div_to_l_@quot+3
  7028  12E3  3000               	movlw	0
  7029  12E4  00AA               	movwf	__div_to_l_@quot+2
  7030  12E5  3000               	movlw	0
  7031  12E6  00A9               	movwf	__div_to_l_@quot+1
  7032  12E7  3000               	movlw	0
  7033  12E8  00A8               	movwf	__div_to_l_@quot
  7034  12E9                     l2670:
  7035  12E9  307F               	movlw	127
  7036  12EA  02AD               	subwf	__div_to_l_@exp1,f
  7037  12EB                     l2672:
  7038  12EB  30A0               	movlw	160
  7039  12EC  072C               	addwf	__div_to_l_@cntr,w
  7040  12ED  00F4               	movwf	??__div_to_l_
  7041  12EE  0874               	movf	??__div_to_l_,w
  7042  12EF  02AD               	subwf	__div_to_l_@exp1,f
  7043  12F0  3020               	movlw	32
  7044  12F1  00F4               	movwf	??__div_to_l_
  7045  12F2  0874               	movf	??__div_to_l_,w
  7046  12F3  00AC               	movwf	__div_to_l_@cntr
  7047  12F4                     l2674:
  7048  12F4  3001               	movlw	1
  7049  12F5  00F4               	movwf	??__div_to_l_
  7050  12F6                     u4275:
  7051  12F6  1003               	clrc
  7052  12F7  0DA8               	rlf	__div_to_l_@quot,f
  7053  12F8  0DA9               	rlf	__div_to_l_@quot+1,f
  7054  12F9  0DAA               	rlf	__div_to_l_@quot+2,f
  7055  12FA  0DAB               	rlf	__div_to_l_@quot+3,f
  7056  12FB  0BF4               	decfsz	??__div_to_l_,f
  7057  12FC  2AF6               	goto	u4275
  7058  12FD                     l2676:
  7059  12FD  0827               	movf	__div_to_l_@f2+3,w
  7060  12FE  0223               	subwf	__div_to_l_@f1+3,w
  7061  12FF  1D03               	skipz
  7062  1300  2B0B               	goto	u4285
  7063  1301  0826               	movf	__div_to_l_@f2+2,w
  7064  1302  0222               	subwf	__div_to_l_@f1+2,w
  7065  1303  1D03               	skipz
  7066  1304  2B0B               	goto	u4285
  7067  1305  0825               	movf	__div_to_l_@f2+1,w
  7068  1306  0221               	subwf	__div_to_l_@f1+1,w
  7069  1307  1D03               	skipz
  7070  1308  2B0B               	goto	u4285
  7071  1309  0824               	movf	__div_to_l_@f2,w
  7072  130A  0220               	subwf	__div_to_l_@f1,w
  7073  130B                     u4285:
  7074  130B  1C03               	skipc
  7075  130C  2B0E               	goto	u4281
  7076  130D  2B0F               	goto	u4280
  7077  130E                     u4281:
  7078  130E  2B1E               	goto	l2682
  7079  130F                     u4280:
  7080  130F                     l2678:
  7081  130F  0824               	movf	__div_to_l_@f2,w
  7082  1310  02A0               	subwf	__div_to_l_@f1,f
  7083  1311  0825               	movf	__div_to_l_@f2+1,w
  7084  1312  1C03               	skipc
  7085  1313  0F25               	incfsz	__div_to_l_@f2+1,w
  7086  1314  02A1               	subwf	__div_to_l_@f1+1,f
  7087  1315  0826               	movf	__div_to_l_@f2+2,w
  7088  1316  1C03               	skipc
  7089  1317  0F26               	incfsz	__div_to_l_@f2+2,w
  7090  1318  02A2               	subwf	__div_to_l_@f1+2,f
  7091  1319  0827               	movf	__div_to_l_@f2+3,w
  7092  131A  1C03               	skipc
  7093  131B  0F27               	incfsz	__div_to_l_@f2+3,w
  7094  131C  02A3               	subwf	__div_to_l_@f1+3,f
  7095  131D                     l2680:
  7096  131D  1428               	bsf	__div_to_l_@quot,0
  7097  131E                     l2682:
  7098  131E  3001               	movlw	1
  7099  131F  00F4               	movwf	??__div_to_l_
  7100  1320                     u4295:
  7101  1320  1003               	clrc
  7102  1321  0DA0               	rlf	__div_to_l_@f1,f
  7103  1322  0DA1               	rlf	__div_to_l_@f1+1,f
  7104  1323  0DA2               	rlf	__div_to_l_@f1+2,f
  7105  1324  0DA3               	rlf	__div_to_l_@f1+3,f
  7106  1325  0BF4               	decfsz	??__div_to_l_,f
  7107  1326  2B20               	goto	u4295
  7108  1327                     l2684:
  7109  1327  3001               	movlw	1
  7110  1328  02AC               	subwf	__div_to_l_@cntr,f
  7111  1329  1D03               	btfss	3,2
  7112  132A  2B2C               	goto	u4301
  7113  132B  2B2D               	goto	u4300
  7114  132C                     u4301:
  7115  132C  2AF4               	goto	l2674
  7116  132D                     u4300:
  7117  132D                     l443:
  7118  132D  1FAD               	btfss	__div_to_l_@exp1,7
  7119  132E  2B30               	goto	u4311
  7120  132F  2B31               	goto	u4310
  7121  1330                     u4311:
  7122  1330  2B4B               	goto	l2694
  7123  1331                     u4310:
  7124  1331                     l2686:
  7125  1331  082D               	movf	__div_to_l_@exp1,w
  7126  1332  3A80               	xorlw	128
  7127  1333  3E9F               	addlw	159
  7128  1334  1803               	skipnc
  7129  1335  2B37               	goto	u4321
  7130  1336  2B38               	goto	u4320
  7131  1337                     u4321:
  7132  1337  2B39               	goto	l2692
  7133  1338                     u4320:
  7134  1338  2ABA               	goto	l2656
  7135  1339                     l2692:
  7136  1339  3001               	movlw	1
  7137  133A                     u4335:
  7138  133A  1003               	clrc
  7139  133B  0CAB               	rrf	__div_to_l_@quot+3,f
  7140  133C  0CAA               	rrf	__div_to_l_@quot+2,f
  7141  133D  0CA9               	rrf	__div_to_l_@quot+1,f
  7142  133E  0CA8               	rrf	__div_to_l_@quot,f
  7143  133F  3EFF               	addlw	-1
  7144  1340  1D03               	skipz
  7145  1341  2B3A               	goto	u4335
  7146  1342  3001               	movlw	1
  7147  1343  00F4               	movwf	??__div_to_l_
  7148  1344  0874               	movf	??__div_to_l_,w
  7149  1345  07AD               	addwf	__div_to_l_@exp1,f
  7150  1346  1D03               	btfss	3,2
  7151  1347  2B49               	goto	u4341
  7152  1348  2B4A               	goto	u4340
  7153  1349                     u4341:
  7154  1349  2B39               	goto	l2692
  7155  134A                     u4340:
  7156  134A  2B62               	goto	l2702
  7157  134B                     l2694:
  7158  134B  3020               	movlw	32
  7159  134C  022D               	subwf	__div_to_l_@exp1,w
  7160  134D  1C03               	skipc
  7161  134E  2B50               	goto	u4351
  7162  134F  2B51               	goto	u4350
  7163  1350                     u4351:
  7164  1350  2B5D               	goto	l450
  7165  1351                     u4350:
  7166  1351  2ABA               	goto	l2656
  7167  1352                     l2700:
  7168  1352  3001               	movlw	1
  7169  1353  00F4               	movwf	??__div_to_l_
  7170  1354                     u4365:
  7171  1354  1003               	clrc
  7172  1355  0DA8               	rlf	__div_to_l_@quot,f
  7173  1356  0DA9               	rlf	__div_to_l_@quot+1,f
  7174  1357  0DAA               	rlf	__div_to_l_@quot+2,f
  7175  1358  0DAB               	rlf	__div_to_l_@quot+3,f
  7176  1359  0BF4               	decfsz	??__div_to_l_,f
  7177  135A  2B54               	goto	u4365
  7178  135B  3001               	movlw	1
  7179  135C  02AD               	subwf	__div_to_l_@exp1,f
  7180  135D                     l450:
  7181  135D  082D               	movf	__div_to_l_@exp1,w
  7182  135E  1D03               	btfss	3,2
  7183  135F  2B61               	goto	u4371
  7184  1360  2B62               	goto	u4370
  7185  1361                     u4371:
  7186  1361  2B52               	goto	l2700
  7187  1362                     u4370:
  7188  1362                     l2702:
  7189  1362  082B               	movf	__div_to_l_@quot+3,w
  7190  1363  00A3               	movwf	?__div_to_l_+3
  7191  1364  082A               	movf	__div_to_l_@quot+2,w
  7192  1365  00A2               	movwf	?__div_to_l_+2
  7193  1366  0829               	movf	__div_to_l_@quot+1,w
  7194  1367  00A1               	movwf	?__div_to_l_+1
  7195  1368  0828               	movf	__div_to_l_@quot,w
  7196  1369  00A0               	movwf	?__div_to_l_
  7197  136A                     l439:
  7198  136A  0008               	return
  7199  136B                     __end_of__div_to_l_:
  7200                           
  7201                           	psect	text14
  7202  1134                     __ptext14:	
  7203 ;; *************** function ___xxtofl *****************
  7204 ;; Defined at:
  7205 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;  sign            1    wreg     unsigned char 
  7208 ;;  val             4   11[BANK0 ] long 
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;  sign            1   19[BANK0 ] unsigned char 
  7211 ;;  arg             4   21[BANK0 ] unsigned long 
  7212 ;;  exp             1   20[BANK0 ] unsigned char 
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  4   11[BANK0 ] unsigned char 
  7215 ;; Registers used:
  7216 ;;		wreg, status,2, status,0
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7222 ;;      Params:         0       4       0       0       0
  7223 ;;      Locals:         0       6       0       0       0
  7224 ;;      Temps:          0       4       0       0       0
  7225 ;;      Totals:         0      14       0       0       0
  7226 ;;Total ram usage:       14 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:    1
  7229 ;; This function calls:
  7230 ;;		Nothing
  7231 ;; This function is called by:
  7232 ;;		_conversion
  7233 ;;		_sprintf
  7234 ;; This function uses a non-reentrant model
  7235 ;;
  7236                           
  7237                           
  7238                           ;psect for function ___xxtofl
  7239  1134                     ___xxtofl:
  7240                           
  7241                           ;incstack = 0
  7242                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7243                           ;___xxtofl@sign stored from wreg
  7244  1134  1283               	bcf	3,5	;RP0=0, select bank0
  7245  1135  1303               	bcf	3,6	;RP1=0, select bank0
  7246  1136  00B3               	movwf	___xxtofl@sign
  7247  1137                     l2846:
  7248  1137  0833               	movf	___xxtofl@sign,w
  7249  1138  1903               	btfsc	3,2
  7250  1139  293B               	goto	u4761
  7251  113A  293C               	goto	u4760
  7252  113B                     u4761:
  7253  113B  2950               	goto	l2852
  7254  113C                     u4760:
  7255  113C                     l2848:
  7256  113C  1FAE               	btfss	___xxtofl@val+3,7
  7257  113D  293F               	goto	u4771
  7258  113E  2940               	goto	u4770
  7259  113F                     u4771:
  7260  113F  2950               	goto	l2852
  7261  1140                     u4770:
  7262  1140                     l2850:
  7263  1140  092B               	comf	___xxtofl@val,w
  7264  1141  00B5               	movwf	___xxtofl@arg
  7265  1142  092C               	comf	___xxtofl@val+1,w
  7266  1143  00B6               	movwf	___xxtofl@arg+1
  7267  1144  092D               	comf	___xxtofl@val+2,w
  7268  1145  00B7               	movwf	___xxtofl@arg+2
  7269  1146  092E               	comf	___xxtofl@val+3,w
  7270  1147  00B8               	movwf	___xxtofl@arg+3
  7271  1148  0AB5               	incf	___xxtofl@arg,f
  7272  1149  1903               	skipnz
  7273  114A  0AB6               	incf	___xxtofl@arg+1,f
  7274  114B  1903               	skipnz
  7275  114C  0AB7               	incf	___xxtofl@arg+2,f
  7276  114D  1903               	skipnz
  7277  114E  0AB8               	incf	___xxtofl@arg+3,f
  7278  114F  2958               	goto	l736
  7279  1150                     l2852:
  7280  1150  082E               	movf	___xxtofl@val+3,w
  7281  1151  00B8               	movwf	___xxtofl@arg+3
  7282  1152  082D               	movf	___xxtofl@val+2,w
  7283  1153  00B7               	movwf	___xxtofl@arg+2
  7284  1154  082C               	movf	___xxtofl@val+1,w
  7285  1155  00B6               	movwf	___xxtofl@arg+1
  7286  1156  082B               	movf	___xxtofl@val,w
  7287  1157  00B5               	movwf	___xxtofl@arg
  7288  1158                     l736:
  7289  1158  082E               	movf	___xxtofl@val+3,w
  7290  1159  042D               	iorwf	___xxtofl@val+2,w
  7291  115A  042C               	iorwf	___xxtofl@val+1,w
  7292  115B  042B               	iorwf	___xxtofl@val,w
  7293  115C  1D03               	skipz
  7294  115D  295F               	goto	u4781
  7295  115E  2960               	goto	u4780
  7296  115F                     u4781:
  7297  115F  2969               	goto	l2858
  7298  1160                     u4780:
  7299  1160                     l2854:
  7300  1160  3000               	movlw	0
  7301  1161  00AE               	movwf	?___xxtofl+3
  7302  1162  3000               	movlw	0
  7303  1163  00AD               	movwf	?___xxtofl+2
  7304  1164  3000               	movlw	0
  7305  1165  00AC               	movwf	?___xxtofl+1
  7306  1166  3000               	movlw	0
  7307  1167  00AB               	movwf	?___xxtofl
  7308  1168  29EF               	goto	l738
  7309  1169                     l2858:
  7310  1169  3096               	movlw	150
  7311  116A  00AF               	movwf	??___xxtofl
  7312  116B  082F               	movf	??___xxtofl,w
  7313  116C  00B4               	movwf	___xxtofl@exp
  7314  116D  297B               	goto	l2862
  7315  116E                     l2860:
  7316  116E  3001               	movlw	1
  7317  116F  00AF               	movwf	??___xxtofl
  7318  1170  082F               	movf	??___xxtofl,w
  7319  1171  07B4               	addwf	___xxtofl@exp,f
  7320  1172  3001               	movlw	1
  7321  1173                     u4795:
  7322  1173  1003               	clrc
  7323  1174  0CB8               	rrf	___xxtofl@arg+3,f
  7324  1175  0CB7               	rrf	___xxtofl@arg+2,f
  7325  1176  0CB6               	rrf	___xxtofl@arg+1,f
  7326  1177  0CB5               	rrf	___xxtofl@arg,f
  7327  1178  3EFF               	addlw	-1
  7328  1179  1D03               	skipz
  7329  117A  2973               	goto	u4795
  7330  117B                     l2862:
  7331  117B  30FE               	movlw	254
  7332  117C  0538               	andwf	___xxtofl@arg+3,w
  7333  117D  1D03               	btfss	3,2
  7334  117E  2980               	goto	u4801
  7335  117F  2981               	goto	u4800
  7336  1180                     u4801:
  7337  1180  296E               	goto	l2860
  7338  1181                     u4800:
  7339  1181  299D               	goto	l742
  7340  1182                     l2864:
  7341  1182  3001               	movlw	1
  7342  1183  00AF               	movwf	??___xxtofl
  7343  1184  082F               	movf	??___xxtofl,w
  7344  1185  07B4               	addwf	___xxtofl@exp,f
  7345  1186                     l2866:
  7346  1186  3001               	movlw	1
  7347  1187  07B5               	addwf	___xxtofl@arg,f
  7348  1188  3000               	movlw	0
  7349  1189  1803               	skipnc
  7350  118A  3001               	movlw	1
  7351  118B  07B6               	addwf	___xxtofl@arg+1,f
  7352  118C  3000               	movlw	0
  7353  118D  1803               	skipnc
  7354  118E  3001               	movlw	1
  7355  118F  07B7               	addwf	___xxtofl@arg+2,f
  7356  1190  3000               	movlw	0
  7357  1191  1803               	skipnc
  7358  1192  3001               	movlw	1
  7359  1193  07B8               	addwf	___xxtofl@arg+3,f
  7360  1194                     l2868:
  7361  1194  3001               	movlw	1
  7362  1195                     u4815:
  7363  1195  1003               	clrc
  7364  1196  0CB8               	rrf	___xxtofl@arg+3,f
  7365  1197  0CB7               	rrf	___xxtofl@arg+2,f
  7366  1198  0CB6               	rrf	___xxtofl@arg+1,f
  7367  1199  0CB5               	rrf	___xxtofl@arg,f
  7368  119A  3EFF               	addlw	-1
  7369  119B  1D03               	skipz
  7370  119C  2995               	goto	u4815
  7371  119D                     l742:
  7372  119D  30FF               	movlw	255
  7373  119E  0538               	andwf	___xxtofl@arg+3,w
  7374  119F  1D03               	btfss	3,2
  7375  11A0  29A2               	goto	u4821
  7376  11A1  29A3               	goto	u4820
  7377  11A2                     u4821:
  7378  11A2  2982               	goto	l2864
  7379  11A3                     u4820:
  7380  11A3  29AF               	goto	l2872
  7381  11A4                     l2870:
  7382  11A4  3001               	movlw	1
  7383  11A5  02B4               	subwf	___xxtofl@exp,f
  7384  11A6  3001               	movlw	1
  7385  11A7  00AF               	movwf	??___xxtofl
  7386  11A8                     u4835:
  7387  11A8  1003               	clrc
  7388  11A9  0DB5               	rlf	___xxtofl@arg,f
  7389  11AA  0DB6               	rlf	___xxtofl@arg+1,f
  7390  11AB  0DB7               	rlf	___xxtofl@arg+2,f
  7391  11AC  0DB8               	rlf	___xxtofl@arg+3,f
  7392  11AD  0BAF               	decfsz	??___xxtofl,f
  7393  11AE  29A8               	goto	u4835
  7394  11AF                     l2872:
  7395  11AF  1BB7               	btfsc	___xxtofl@arg+2,7
  7396  11B0  29B2               	goto	u4841
  7397  11B1  29B3               	goto	u4840
  7398  11B2                     u4841:
  7399  11B2  29B9               	goto	l749
  7400  11B3                     u4840:
  7401  11B3                     l2874:
  7402  11B3  3002               	movlw	2
  7403  11B4  0234               	subwf	___xxtofl@exp,w
  7404  11B5  1803               	skipnc
  7405  11B6  29B8               	goto	u4851
  7406  11B7  29B9               	goto	u4850
  7407  11B8                     u4851:
  7408  11B8  29A4               	goto	l2870
  7409  11B9                     u4850:
  7410  11B9                     l749:
  7411  11B9  1834               	btfsc	___xxtofl@exp,0
  7412  11BA  29BC               	goto	u4861
  7413  11BB  29BD               	goto	u4860
  7414  11BC                     u4861:
  7415  11BC  29C5               	goto	l750
  7416  11BD                     u4860:
  7417  11BD                     l2876:
  7418  11BD  30FF               	movlw	255
  7419  11BE  05B5               	andwf	___xxtofl@arg,f
  7420  11BF  30FF               	movlw	255
  7421  11C0  05B6               	andwf	___xxtofl@arg+1,f
  7422  11C1  307F               	movlw	127
  7423  11C2  05B7               	andwf	___xxtofl@arg+2,f
  7424  11C3  30FF               	movlw	255
  7425  11C4  05B8               	andwf	___xxtofl@arg+3,f
  7426  11C5                     l750:
  7427  11C5  1003               	clrc
  7428  11C6  0CB4               	rrf	___xxtofl@exp,f
  7429  11C7                     l2878:
  7430  11C7  0834               	movf	___xxtofl@exp,w
  7431  11C8  00AF               	movwf	??___xxtofl
  7432  11C9  01B0               	clrf	??___xxtofl+1
  7433  11CA  01B1               	clrf	??___xxtofl+2
  7434  11CB  01B2               	clrf	??___xxtofl+3
  7435  11CC  3018               	movlw	24
  7436  11CD                     u4875:
  7437  11CD  1003               	clrc
  7438  11CE  0DAF               	rlf	??___xxtofl,f
  7439  11CF  0DB0               	rlf	??___xxtofl+1,f
  7440  11D0  0DB1               	rlf	??___xxtofl+2,f
  7441  11D1  0DB2               	rlf	??___xxtofl+3,f
  7442  11D2                     u4870:
  7443  11D2  3EFF               	addlw	-1
  7444  11D3  1D03               	skipz
  7445  11D4  29CD               	goto	u4875
  7446  11D5  082F               	movf	??___xxtofl,w
  7447  11D6  04B5               	iorwf	___xxtofl@arg,f
  7448  11D7  0830               	movf	??___xxtofl+1,w
  7449  11D8  04B6               	iorwf	___xxtofl@arg+1,f
  7450  11D9  0831               	movf	??___xxtofl+2,w
  7451  11DA  04B7               	iorwf	___xxtofl@arg+2,f
  7452  11DB  0832               	movf	??___xxtofl+3,w
  7453  11DC  04B8               	iorwf	___xxtofl@arg+3,f
  7454  11DD                     l2880:
  7455  11DD  0833               	movf	___xxtofl@sign,w
  7456  11DE  1903               	btfsc	3,2
  7457  11DF  29E1               	goto	u4881
  7458  11E0  29E2               	goto	u4880
  7459  11E1                     u4881:
  7460  11E1  29E7               	goto	l2886
  7461  11E2                     u4880:
  7462  11E2                     l2882:
  7463  11E2  1FAE               	btfss	___xxtofl@val+3,7
  7464  11E3  29E5               	goto	u4891
  7465  11E4  29E6               	goto	u4890
  7466  11E5                     u4891:
  7467  11E5  29E7               	goto	l2886
  7468  11E6                     u4890:
  7469  11E6                     l2884:
  7470  11E6  17B8               	bsf	___xxtofl@arg+3,7
  7471  11E7                     l2886:
  7472  11E7  0838               	movf	___xxtofl@arg+3,w
  7473  11E8  00AE               	movwf	?___xxtofl+3
  7474  11E9  0837               	movf	___xxtofl@arg+2,w
  7475  11EA  00AD               	movwf	?___xxtofl+2
  7476  11EB  0836               	movf	___xxtofl@arg+1,w
  7477  11EC  00AC               	movwf	?___xxtofl+1
  7478  11ED  0835               	movf	___xxtofl@arg,w
  7479  11EE  00AB               	movwf	?___xxtofl
  7480  11EF                     l738:
  7481  11EF  0008               	return
  7482  11F0                     __end_of___xxtofl:
  7483                           
  7484                           	psect	text15
  7485  1BD3                     __ptext15:	
  7486 ;; *************** function ___wmul *****************
  7487 ;; Defined at:
  7488 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;  multiplier      2    4[COMMON] unsigned int 
  7491 ;;  multiplicand    2    6[COMMON] unsigned int 
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;  product         2    8[COMMON] unsigned int 
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  2    4[COMMON] unsigned int 
  7496 ;; Registers used:
  7497 ;;		wreg, status,2, status,0
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7503 ;;      Params:         4       0       0       0       0
  7504 ;;      Locals:         2       0       0       0       0
  7505 ;;      Temps:          0       0       0       0       0
  7506 ;;      Totals:         6       0       0       0       0
  7507 ;;Total ram usage:        6 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; Hardware stack levels required when called:    1
  7510 ;; This function calls:
  7511 ;;		Nothing
  7512 ;; This function is called by:
  7513 ;;		_conversion
  7514 ;;		_sprintf
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           
  7519                           ;psect for function ___wmul
  7520  1BD3                     ___wmul:
  7521  1BD3                     l2706:	
  7522                           ;incstack = 0
  7523                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7524                           
  7525  1BD3  01F8               	clrf	___wmul@product
  7526  1BD4  01F9               	clrf	___wmul@product+1
  7527  1BD5                     l2708:
  7528  1BD5  1C74               	btfss	___wmul@multiplier,0
  7529  1BD6  2BD8               	goto	u4381
  7530  1BD7  2BD9               	goto	u4380
  7531  1BD8                     u4381:
  7532  1BD8  2BDF               	goto	l269
  7533  1BD9                     u4380:
  7534  1BD9                     l2710:
  7535  1BD9  0876               	movf	___wmul@multiplicand,w
  7536  1BDA  07F8               	addwf	___wmul@product,f
  7537  1BDB  1803               	skipnc
  7538  1BDC  0AF9               	incf	___wmul@product+1,f
  7539  1BDD  0877               	movf	___wmul@multiplicand+1,w
  7540  1BDE  07F9               	addwf	___wmul@product+1,f
  7541  1BDF                     l269:
  7542  1BDF  3001               	movlw	1
  7543  1BE0                     u4395:
  7544  1BE0  1003               	clrc
  7545  1BE1  0DF6               	rlf	___wmul@multiplicand,f
  7546  1BE2  0DF7               	rlf	___wmul@multiplicand+1,f
  7547  1BE3  3EFF               	addlw	-1
  7548  1BE4  1D03               	skipz
  7549  1BE5  2BE0               	goto	u4395
  7550  1BE6                     l2712:
  7551  1BE6  3001               	movlw	1
  7552  1BE7                     u4405:
  7553  1BE7  1003               	clrc
  7554  1BE8  0CF5               	rrf	___wmul@multiplier+1,f
  7555  1BE9  0CF4               	rrf	___wmul@multiplier,f
  7556  1BEA  3EFF               	addlw	-1
  7557  1BEB  1D03               	skipz
  7558  1BEC  2BE7               	goto	u4405
  7559  1BED                     l2714:
  7560  1BED  0874               	movf	___wmul@multiplier,w
  7561  1BEE  0475               	iorwf	___wmul@multiplier+1,w
  7562  1BEF  1D03               	btfss	3,2
  7563  1BF0  2BF2               	goto	u4411
  7564  1BF1  2BF3               	goto	u4410
  7565  1BF2                     u4411:
  7566  1BF2  2BD5               	goto	l2708
  7567  1BF3                     u4410:
  7568  1BF3                     l2716:
  7569  1BF3  0879               	movf	___wmul@product+1,w
  7570  1BF4  00F5               	movwf	?___wmul+1
  7571  1BF5  0878               	movf	___wmul@product,w
  7572  1BF6  00F4               	movwf	?___wmul
  7573  1BF7                     l271:
  7574  1BF7  0008               	return
  7575  1BF8                     __end_of___wmul:
  7576                           
  7577                           	psect	text16
  7578  07A8                     __ptext16:	
  7579 ;; *************** function ___llmod *****************
  7580 ;; Defined at:
  7581 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;  divisor         4    0[BANK0 ] unsigned long 
  7584 ;;  dividend        4    4[BANK0 ] unsigned long 
  7585 ;; Auto vars:     Size  Location     Type
  7586 ;;  counter         1    5[COMMON] unsigned char 
  7587 ;; Return value:  Size  Location     Type
  7588 ;;                  4    0[BANK0 ] unsigned long 
  7589 ;; Registers used:
  7590 ;;		wreg, status,2, status,0
  7591 ;; Tracked objects:
  7592 ;;		On entry : 0/0
  7593 ;;		On exit  : 0/0
  7594 ;;		Unchanged: 0/0
  7595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7596 ;;      Params:         0       8       0       0       0
  7597 ;;      Locals:         1       0       0       0       0
  7598 ;;      Temps:          1       0       0       0       0
  7599 ;;      Totals:         2       8       0       0       0
  7600 ;;Total ram usage:       10 bytes
  7601 ;; Hardware stack levels used:    1
  7602 ;; Hardware stack levels required when called:    1
  7603 ;; This function calls:
  7604 ;;		Nothing
  7605 ;; This function is called by:
  7606 ;;		_sprintf
  7607 ;; This function uses a non-reentrant model
  7608 ;;
  7609                           
  7610                           
  7611                           ;psect for function ___llmod
  7612  07A8                     ___llmod:
  7613  07A8                     l2820:	
  7614                           ;incstack = 0
  7615                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7616                           
  7617  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  7618  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  7619  07AA  0823               	movf	___llmod@divisor+3,w
  7620  07AB  0422               	iorwf	___llmod@divisor+2,w
  7621  07AC  0421               	iorwf	___llmod@divisor+1,w
  7622  07AD  0420               	iorwf	___llmod@divisor,w
  7623  07AE  1903               	skipnz
  7624  07AF  2FB1               	goto	u4701
  7625  07B0  2FB2               	goto	u4700
  7626  07B1                     u4701:
  7627  07B1  2FF5               	goto	l2836
  7628  07B2                     u4700:
  7629  07B2                     l2822:
  7630  07B2  01F5               	clrf	___llmod@counter
  7631  07B3  0AF5               	incf	___llmod@counter,f
  7632  07B4  2FC2               	goto	l2826
  7633  07B5                     l2824:
  7634  07B5  3001               	movlw	1
  7635  07B6  00F4               	movwf	??___llmod
  7636  07B7                     u4715:
  7637  07B7  1003               	clrc
  7638  07B8  0DA0               	rlf	___llmod@divisor,f
  7639  07B9  0DA1               	rlf	___llmod@divisor+1,f
  7640  07BA  0DA2               	rlf	___llmod@divisor+2,f
  7641  07BB  0DA3               	rlf	___llmod@divisor+3,f
  7642  07BC  0BF4               	decfsz	??___llmod,f
  7643  07BD  2FB7               	goto	u4715
  7644  07BE  3001               	movlw	1
  7645  07BF  00F4               	movwf	??___llmod
  7646  07C0  0874               	movf	??___llmod,w
  7647  07C1  07F5               	addwf	___llmod@counter,f
  7648  07C2                     l2826:
  7649  07C2  1FA3               	btfss	___llmod@divisor+3,7
  7650  07C3  2FC5               	goto	u4721
  7651  07C4  2FC6               	goto	u4720
  7652  07C5                     u4721:
  7653  07C5  2FB5               	goto	l2824
  7654  07C6                     u4720:
  7655  07C6                     l2828:
  7656  07C6  0823               	movf	___llmod@divisor+3,w
  7657  07C7  0227               	subwf	___llmod@dividend+3,w
  7658  07C8  1D03               	skipz
  7659  07C9  2FD4               	goto	u4735
  7660  07CA  0822               	movf	___llmod@divisor+2,w
  7661  07CB  0226               	subwf	___llmod@dividend+2,w
  7662  07CC  1D03               	skipz
  7663  07CD  2FD4               	goto	u4735
  7664  07CE  0821               	movf	___llmod@divisor+1,w
  7665  07CF  0225               	subwf	___llmod@dividend+1,w
  7666  07D0  1D03               	skipz
  7667  07D1  2FD4               	goto	u4735
  7668  07D2  0820               	movf	___llmod@divisor,w
  7669  07D3  0224               	subwf	___llmod@dividend,w
  7670  07D4                     u4735:
  7671  07D4  1C03               	skipc
  7672  07D5  2FD7               	goto	u4731
  7673  07D6  2FD8               	goto	u4730
  7674  07D7                     u4731:
  7675  07D7  2FE6               	goto	l2832
  7676  07D8                     u4730:
  7677  07D8                     l2830:
  7678  07D8  0820               	movf	___llmod@divisor,w
  7679  07D9  02A4               	subwf	___llmod@dividend,f
  7680  07DA  0821               	movf	___llmod@divisor+1,w
  7681  07DB  1C03               	skipc
  7682  07DC  0F21               	incfsz	___llmod@divisor+1,w
  7683  07DD  02A5               	subwf	___llmod@dividend+1,f
  7684  07DE  0822               	movf	___llmod@divisor+2,w
  7685  07DF  1C03               	skipc
  7686  07E0  0F22               	incfsz	___llmod@divisor+2,w
  7687  07E1  02A6               	subwf	___llmod@dividend+2,f
  7688  07E2  0823               	movf	___llmod@divisor+3,w
  7689  07E3  1C03               	skipc
  7690  07E4  0F23               	incfsz	___llmod@divisor+3,w
  7691  07E5  02A7               	subwf	___llmod@dividend+3,f
  7692  07E6                     l2832:
  7693  07E6  3001               	movlw	1
  7694  07E7                     u4745:
  7695  07E7  1003               	clrc
  7696  07E8  0CA3               	rrf	___llmod@divisor+3,f
  7697  07E9  0CA2               	rrf	___llmod@divisor+2,f
  7698  07EA  0CA1               	rrf	___llmod@divisor+1,f
  7699  07EB  0CA0               	rrf	___llmod@divisor,f
  7700  07EC  3EFF               	addlw	-1
  7701  07ED  1D03               	skipz
  7702  07EE  2FE7               	goto	u4745
  7703  07EF                     l2834:
  7704  07EF  3001               	movlw	1
  7705  07F0  02F5               	subwf	___llmod@counter,f
  7706  07F1  1D03               	btfss	3,2
  7707  07F2  2FF4               	goto	u4751
  7708  07F3  2FF5               	goto	u4750
  7709  07F4                     u4751:
  7710  07F4  2FC6               	goto	l2828
  7711  07F5                     u4750:
  7712  07F5                     l2836:
  7713  07F5  0827               	movf	___llmod@dividend+3,w
  7714  07F6  00A3               	movwf	?___llmod+3
  7715  07F7  0826               	movf	___llmod@dividend+2,w
  7716  07F8  00A2               	movwf	?___llmod+2
  7717  07F9  0825               	movf	___llmod@dividend+1,w
  7718  07FA  00A1               	movwf	?___llmod+1
  7719  07FB  0824               	movf	___llmod@dividend,w
  7720  07FC  00A0               	movwf	?___llmod
  7721  07FD                     l525:
  7722  07FD  0008               	return
  7723  07FE                     __end_of___llmod:
  7724                           
  7725                           	psect	text17
  7726  10CC                     __ptext17:	
  7727 ;; *************** function ___lldiv *****************
  7728 ;; Defined at:
  7729 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  divisor         4    0[BANK0 ] unsigned long 
  7732 ;;  dividend        4    4[BANK0 ] unsigned long 
  7733 ;; Auto vars:     Size  Location     Type
  7734 ;;  quotient        4    5[COMMON] unsigned long 
  7735 ;;  counter         1    9[COMMON] unsigned char 
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  4    0[BANK0 ] unsigned long 
  7738 ;; Registers used:
  7739 ;;		wreg, status,2, status,0
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7745 ;;      Params:         0       8       0       0       0
  7746 ;;      Locals:         5       0       0       0       0
  7747 ;;      Temps:          1       0       0       0       0
  7748 ;;      Totals:         6       8       0       0       0
  7749 ;;Total ram usage:       14 bytes
  7750 ;; Hardware stack levels used:    1
  7751 ;; Hardware stack levels required when called:    1
  7752 ;; This function calls:
  7753 ;;		Nothing
  7754 ;; This function is called by:
  7755 ;;		_sprintf
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           
  7760                           ;psect for function ___lldiv
  7761  10CC                     ___lldiv:
  7762  10CC                     l2720:	
  7763                           ;incstack = 0
  7764                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7765                           
  7766  10CC  3000               	movlw	0
  7767  10CD  00F8               	movwf	___lldiv@quotient+3
  7768  10CE  3000               	movlw	0
  7769  10CF  00F7               	movwf	___lldiv@quotient+2
  7770  10D0  3000               	movlw	0
  7771  10D1  00F6               	movwf	___lldiv@quotient+1
  7772  10D2  3000               	movlw	0
  7773  10D3  00F5               	movwf	___lldiv@quotient
  7774  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  7775  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  7776  10D6  0823               	movf	___lldiv@divisor+3,w
  7777  10D7  0422               	iorwf	___lldiv@divisor+2,w
  7778  10D8  0421               	iorwf	___lldiv@divisor+1,w
  7779  10D9  0420               	iorwf	___lldiv@divisor,w
  7780  10DA  1903               	skipnz
  7781  10DB  28DD               	goto	u4421
  7782  10DC  28DE               	goto	u4420
  7783  10DD                     u4421:
  7784  10DD  292B               	goto	l2740
  7785  10DE                     u4420:
  7786  10DE                     l2722:
  7787  10DE  01F9               	clrf	___lldiv@counter
  7788  10DF  0AF9               	incf	___lldiv@counter,f
  7789  10E0  28EE               	goto	l2726
  7790  10E1                     l2724:
  7791  10E1  3001               	movlw	1
  7792  10E2  00F4               	movwf	??___lldiv
  7793  10E3                     u4435:
  7794  10E3  1003               	clrc
  7795  10E4  0DA0               	rlf	___lldiv@divisor,f
  7796  10E5  0DA1               	rlf	___lldiv@divisor+1,f
  7797  10E6  0DA2               	rlf	___lldiv@divisor+2,f
  7798  10E7  0DA3               	rlf	___lldiv@divisor+3,f
  7799  10E8  0BF4               	decfsz	??___lldiv,f
  7800  10E9  28E3               	goto	u4435
  7801  10EA  3001               	movlw	1
  7802  10EB  00F4               	movwf	??___lldiv
  7803  10EC  0874               	movf	??___lldiv,w
  7804  10ED  07F9               	addwf	___lldiv@counter,f
  7805  10EE                     l2726:
  7806  10EE  1FA3               	btfss	___lldiv@divisor+3,7
  7807  10EF  28F1               	goto	u4441
  7808  10F0  28F2               	goto	u4440
  7809  10F1                     u4441:
  7810  10F1  28E1               	goto	l2724
  7811  10F2                     u4440:
  7812  10F2                     l2728:
  7813  10F2  3001               	movlw	1
  7814  10F3  00F4               	movwf	??___lldiv
  7815  10F4                     u4455:
  7816  10F4  1003               	clrc
  7817  10F5  0DF5               	rlf	___lldiv@quotient,f
  7818  10F6  0DF6               	rlf	___lldiv@quotient+1,f
  7819  10F7  0DF7               	rlf	___lldiv@quotient+2,f
  7820  10F8  0DF8               	rlf	___lldiv@quotient+3,f
  7821  10F9  0BF4               	decfsz	??___lldiv,f
  7822  10FA  28F4               	goto	u4455
  7823  10FB                     l2730:
  7824  10FB  0823               	movf	___lldiv@divisor+3,w
  7825  10FC  0227               	subwf	___lldiv@dividend+3,w
  7826  10FD  1D03               	skipz
  7827  10FE  2909               	goto	u4465
  7828  10FF  0822               	movf	___lldiv@divisor+2,w
  7829  1100  0226               	subwf	___lldiv@dividend+2,w
  7830  1101  1D03               	skipz
  7831  1102  2909               	goto	u4465
  7832  1103  0821               	movf	___lldiv@divisor+1,w
  7833  1104  0225               	subwf	___lldiv@dividend+1,w
  7834  1105  1D03               	skipz
  7835  1106  2909               	goto	u4465
  7836  1107  0820               	movf	___lldiv@divisor,w
  7837  1108  0224               	subwf	___lldiv@dividend,w
  7838  1109                     u4465:
  7839  1109  1C03               	skipc
  7840  110A  290C               	goto	u4461
  7841  110B  290D               	goto	u4460
  7842  110C                     u4461:
  7843  110C  291C               	goto	l2736
  7844  110D                     u4460:
  7845  110D                     l2732:
  7846  110D  0820               	movf	___lldiv@divisor,w
  7847  110E  02A4               	subwf	___lldiv@dividend,f
  7848  110F  0821               	movf	___lldiv@divisor+1,w
  7849  1110  1C03               	skipc
  7850  1111  0F21               	incfsz	___lldiv@divisor+1,w
  7851  1112  02A5               	subwf	___lldiv@dividend+1,f
  7852  1113  0822               	movf	___lldiv@divisor+2,w
  7853  1114  1C03               	skipc
  7854  1115  0F22               	incfsz	___lldiv@divisor+2,w
  7855  1116  02A6               	subwf	___lldiv@dividend+2,f
  7856  1117  0823               	movf	___lldiv@divisor+3,w
  7857  1118  1C03               	skipc
  7858  1119  0F23               	incfsz	___lldiv@divisor+3,w
  7859  111A  02A7               	subwf	___lldiv@dividend+3,f
  7860  111B                     l2734:
  7861  111B  1475               	bsf	___lldiv@quotient,0
  7862  111C                     l2736:
  7863  111C  3001               	movlw	1
  7864  111D                     u4475:
  7865  111D  1003               	clrc
  7866  111E  0CA3               	rrf	___lldiv@divisor+3,f
  7867  111F  0CA2               	rrf	___lldiv@divisor+2,f
  7868  1120  0CA1               	rrf	___lldiv@divisor+1,f
  7869  1121  0CA0               	rrf	___lldiv@divisor,f
  7870  1122  3EFF               	addlw	-1
  7871  1123  1D03               	skipz
  7872  1124  291D               	goto	u4475
  7873  1125                     l2738:
  7874  1125  3001               	movlw	1
  7875  1126  02F9               	subwf	___lldiv@counter,f
  7876  1127  1D03               	btfss	3,2
  7877  1128  292A               	goto	u4481
  7878  1129  292B               	goto	u4480
  7879  112A                     u4481:
  7880  112A  28F2               	goto	l2728
  7881  112B                     u4480:
  7882  112B                     l2740:
  7883  112B  0878               	movf	___lldiv@quotient+3,w
  7884  112C  00A3               	movwf	?___lldiv+3
  7885  112D  0877               	movf	___lldiv@quotient+2,w
  7886  112E  00A2               	movwf	?___lldiv+2
  7887  112F  0876               	movf	___lldiv@quotient+1,w
  7888  1130  00A1               	movwf	?___lldiv+1
  7889  1131  0875               	movf	___lldiv@quotient,w
  7890  1132  00A0               	movwf	?___lldiv
  7891  1133                     l305:
  7892  1133  0008               	return
  7893  1134                     __end_of___lldiv:
  7894                           
  7895                           	psect	text18
  7896  1EE0                     __ptext18:	
  7897 ;; *************** function ___fltol *****************
  7898 ;; Defined at:
  7899 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  f1              4   56[BANK0 ] unsigned long 
  7902 ;; Auto vars:     Size  Location     Type
  7903 ;;  exp1            1   66[BANK0 ] unsigned char 
  7904 ;;  sign1           1   65[BANK0 ] unsigned char 
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  4   56[BANK0 ] long 
  7907 ;; Registers used:
  7908 ;;		wreg, status,2, status,0
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7914 ;;      Params:         0       4       0       0       0
  7915 ;;      Locals:         0       2       0       0       0
  7916 ;;      Temps:          0       5       0       0       0
  7917 ;;      Totals:         0      11       0       0       0
  7918 ;;Total ram usage:       11 bytes
  7919 ;; Hardware stack levels used:    1
  7920 ;; Hardware stack levels required when called:    1
  7921 ;; This function calls:
  7922 ;;		Nothing
  7923 ;; This function is called by:
  7924 ;;		_sprintf
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           
  7929                           ;psect for function ___fltol
  7930  1EE0                     ___fltol:
  7931  1EE0                     l2784:	
  7932                           ;incstack = 0
  7933                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7934                           
  7935  1EE0  1003               	clrc
  7936  1EE1  1283               	bcf	3,5	;RP0=0, select bank0
  7937  1EE2  1303               	bcf	3,6	;RP1=0, select bank0
  7938  1EE3  0D5A               	rlf	___fltol@f1+2,w
  7939  1EE4  0D5B               	rlf	___fltol@f1+3,w
  7940  1EE5  00DC               	movwf	??___fltol
  7941  1EE6  085C               	movf	??___fltol,w
  7942  1EE7  00E2               	movwf	___fltol@exp1
  7943  1EE8  0862               	movf	___fltol@exp1,w
  7944  1EE9  1D03               	btfss	3,2
  7945  1EEA  2EEC               	goto	u4601
  7946  1EEB  2EED               	goto	u4600
  7947  1EEC                     u4601:
  7948  1EEC  2EF6               	goto	l2790
  7949  1EED                     u4600:
  7950  1EED                     l2786:
  7951  1EED  3000               	movlw	0
  7952  1EEE  00DB               	movwf	?___fltol+3
  7953  1EEF  3000               	movlw	0
  7954  1EF0  00DA               	movwf	?___fltol+2
  7955  1EF1  3000               	movlw	0
  7956  1EF2  00D9               	movwf	?___fltol+1
  7957  1EF3  3000               	movlw	0
  7958  1EF4  00D8               	movwf	?___fltol
  7959  1EF5  2F5B               	goto	l472
  7960  1EF6                     l2790:
  7961  1EF6  0858               	movf	___fltol@f1,w
  7962  1EF7  00DC               	movwf	??___fltol
  7963  1EF8  0859               	movf	___fltol@f1+1,w
  7964  1EF9  00DD               	movwf	??___fltol+1
  7965  1EFA  085A               	movf	___fltol@f1+2,w
  7966  1EFB  00DE               	movwf	??___fltol+2
  7967  1EFC  085B               	movf	___fltol@f1+3,w
  7968  1EFD  00DF               	movwf	??___fltol+3
  7969  1EFE  301F               	movlw	31
  7970  1EFF                     u4615:
  7971  1EFF  1003               	clrc
  7972  1F00  0CDF               	rrf	??___fltol+3,f
  7973  1F01  0CDE               	rrf	??___fltol+2,f
  7974  1F02  0CDD               	rrf	??___fltol+1,f
  7975  1F03  0CDC               	rrf	??___fltol,f
  7976  1F04                     u4610:
  7977  1F04  3EFF               	addlw	-1
  7978  1F05  1D03               	skipz
  7979  1F06  2EFF               	goto	u4615
  7980  1F07  085C               	movf	??___fltol,w
  7981  1F08  00E0               	movwf	??___fltol+4
  7982  1F09  0860               	movf	??___fltol+4,w
  7983  1F0A  00E1               	movwf	___fltol@sign1
  7984  1F0B                     l2792:
  7985  1F0B  17DA               	bsf	___fltol@f1+2,7
  7986  1F0C                     l2794:
  7987  1F0C  30FF               	movlw	255
  7988  1F0D  05D8               	andwf	___fltol@f1,f
  7989  1F0E  30FF               	movlw	255
  7990  1F0F  05D9               	andwf	___fltol@f1+1,f
  7991  1F10  30FF               	movlw	255
  7992  1F11  05DA               	andwf	___fltol@f1+2,f
  7993  1F12  3000               	movlw	0
  7994  1F13  05DB               	andwf	___fltol@f1+3,f
  7995  1F14                     l2796:
  7996  1F14  3096               	movlw	150
  7997  1F15  02E2               	subwf	___fltol@exp1,f
  7998  1F16                     l2798:
  7999  1F16  1FE2               	btfss	___fltol@exp1,7
  8000  1F17  2F19               	goto	u4621
  8001  1F18  2F1A               	goto	u4620
  8002  1F19                     u4621:
  8003  1F19  2F34               	goto	l2808
  8004  1F1A                     u4620:
  8005  1F1A                     l2800:
  8006  1F1A  0862               	movf	___fltol@exp1,w
  8007  1F1B  3A80               	xorlw	128
  8008  1F1C  3E97               	addlw	151
  8009  1F1D  1803               	skipnc
  8010  1F1E  2F20               	goto	u4631
  8011  1F1F  2F21               	goto	u4630
  8012  1F20                     u4631:
  8013  1F20  2F22               	goto	l2806
  8014  1F21                     u4630:
  8015  1F21  2EED               	goto	l2786
  8016  1F22                     l2806:
  8017  1F22  3001               	movlw	1
  8018  1F23                     u4645:
  8019  1F23  1003               	clrc
  8020  1F24  0CDB               	rrf	___fltol@f1+3,f
  8021  1F25  0CDA               	rrf	___fltol@f1+2,f
  8022  1F26  0CD9               	rrf	___fltol@f1+1,f
  8023  1F27  0CD8               	rrf	___fltol@f1,f
  8024  1F28  3EFF               	addlw	-1
  8025  1F29  1D03               	skipz
  8026  1F2A  2F23               	goto	u4645
  8027  1F2B  3001               	movlw	1
  8028  1F2C  00DC               	movwf	??___fltol
  8029  1F2D  085C               	movf	??___fltol,w
  8030  1F2E  07E2               	addwf	___fltol@exp1,f
  8031  1F2F  1D03               	btfss	3,2
  8032  1F30  2F32               	goto	u4651
  8033  1F31  2F33               	goto	u4650
  8034  1F32                     u4651:
  8035  1F32  2F22               	goto	l2806
  8036  1F33                     u4650:
  8037  1F33  2F4B               	goto	l2816
  8038  1F34                     l2808:
  8039  1F34  3020               	movlw	32
  8040  1F35  0262               	subwf	___fltol@exp1,w
  8041  1F36  1C03               	skipc
  8042  1F37  2F39               	goto	u4661
  8043  1F38  2F3A               	goto	u4660
  8044  1F39                     u4661:
  8045  1F39  2F46               	goto	l479
  8046  1F3A                     u4660:
  8047  1F3A  2EED               	goto	l2786
  8048  1F3B                     l2814:
  8049  1F3B  3001               	movlw	1
  8050  1F3C  00DC               	movwf	??___fltol
  8051  1F3D                     u4675:
  8052  1F3D  1003               	clrc
  8053  1F3E  0DD8               	rlf	___fltol@f1,f
  8054  1F3F  0DD9               	rlf	___fltol@f1+1,f
  8055  1F40  0DDA               	rlf	___fltol@f1+2,f
  8056  1F41  0DDB               	rlf	___fltol@f1+3,f
  8057  1F42  0BDC               	decfsz	??___fltol,f
  8058  1F43  2F3D               	goto	u4675
  8059  1F44  3001               	movlw	1
  8060  1F45  02E2               	subwf	___fltol@exp1,f
  8061  1F46                     l479:
  8062  1F46  0862               	movf	___fltol@exp1,w
  8063  1F47  1D03               	btfss	3,2
  8064  1F48  2F4A               	goto	u4681
  8065  1F49  2F4B               	goto	u4680
  8066  1F4A                     u4681:
  8067  1F4A  2F3B               	goto	l2814
  8068  1F4B                     u4680:
  8069  1F4B                     l2816:
  8070  1F4B  0861               	movf	___fltol@sign1,w
  8071  1F4C  1903               	btfsc	3,2
  8072  1F4D  2F4F               	goto	u4691
  8073  1F4E  2F50               	goto	u4690
  8074  1F4F                     u4691:
  8075  1F4F  2F5B               	goto	l482
  8076  1F50                     u4690:
  8077  1F50                     l2818:
  8078  1F50  09D8               	comf	___fltol@f1,f
  8079  1F51  09D9               	comf	___fltol@f1+1,f
  8080  1F52  09DA               	comf	___fltol@f1+2,f
  8081  1F53  09DB               	comf	___fltol@f1+3,f
  8082  1F54  0AD8               	incf	___fltol@f1,f
  8083  1F55  1903               	skipnz
  8084  1F56  0AD9               	incf	___fltol@f1+1,f
  8085  1F57  1903               	skipnz
  8086  1F58  0ADA               	incf	___fltol@f1+2,f
  8087  1F59  1903               	skipnz
  8088  1F5A  0ADB               	incf	___fltol@f1+3,f
  8089  1F5B                     l482:
  8090  1F5B                     l472:
  8091  1F5B  0008               	return
  8092  1F5C                     __end_of___fltol:
  8093                           
  8094                           	psect	text19
  8095  1D57                     __ptext19:	
  8096 ;; *************** function ___flsub *****************
  8097 ;; Defined at:
  8098 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8099 ;; Parameters:    Size  Location     Type
  8100 ;;  a               4    0[BANK1 ] long 
  8101 ;;  b               4    4[BANK1 ] long 
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  4    0[BANK1 ] long 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8113 ;;      Params:         0       0       8       0       0
  8114 ;;      Locals:         0       0       0       0       0
  8115 ;;      Temps:          0       0       0       0       0
  8116 ;;      Totals:         0       0       8       0       0
  8117 ;;Total ram usage:        8 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    2
  8120 ;; This function calls:
  8121 ;;		___fladd
  8122 ;; This function is called by:
  8123 ;;		_sprintf
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           
  8128                           ;psect for function ___flsub
  8129  1D57                     ___flsub:
  8130  1D57                     l2840:	
  8131                           ;incstack = 0
  8132                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8133                           
  8134  1D57  3080               	movlw	128
  8135  1D58  1683               	bsf	3,5	;RP0=1, select bank1
  8136  1D59  1303               	bcf	3,6	;RP1=0, select bank1
  8137  1D5A  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8138  1D5B                     l2842:
  8139  1D5B  0827               	movf	(___flsub@b+3)^(0+128),w
  8140  1D5C  1283               	bcf	3,5	;RP0=0, select bank0
  8141  1D5D  1303               	bcf	3,6	;RP1=0, select bank0
  8142  1D5E  00DC               	movwf	___fladd@b+3
  8143  1D5F  1683               	bsf	3,5	;RP0=1, select bank1
  8144  1D60  1303               	bcf	3,6	;RP1=0, select bank1
  8145  1D61  0826               	movf	(___flsub@b+2)^(0+128),w
  8146  1D62  1283               	bcf	3,5	;RP0=0, select bank0
  8147  1D63  1303               	bcf	3,6	;RP1=0, select bank0
  8148  1D64  00DB               	movwf	___fladd@b+2
  8149  1D65  1683               	bsf	3,5	;RP0=1, select bank1
  8150  1D66  1303               	bcf	3,6	;RP1=0, select bank1
  8151  1D67  0825               	movf	(___flsub@b+1)^(0+128),w
  8152  1D68  1283               	bcf	3,5	;RP0=0, select bank0
  8153  1D69  1303               	bcf	3,6	;RP1=0, select bank0
  8154  1D6A  00DA               	movwf	___fladd@b+1
  8155  1D6B  1683               	bsf	3,5	;RP0=1, select bank1
  8156  1D6C  1303               	bcf	3,6	;RP1=0, select bank1
  8157  1D6D  0824               	movf	___flsub@b^(0+128),w
  8158  1D6E  1283               	bcf	3,5	;RP0=0, select bank0
  8159  1D6F  1303               	bcf	3,6	;RP1=0, select bank0
  8160  1D70  00D9               	movwf	___fladd@b
  8161  1D71  1683               	bsf	3,5	;RP0=1, select bank1
  8162  1D72  1303               	bcf	3,6	;RP1=0, select bank1
  8163  1D73  0823               	movf	(___flsub@a+3)^(0+128),w
  8164  1D74  1283               	bcf	3,5	;RP0=0, select bank0
  8165  1D75  1303               	bcf	3,6	;RP1=0, select bank0
  8166  1D76  00E0               	movwf	___fladd@a+3
  8167  1D77  1683               	bsf	3,5	;RP0=1, select bank1
  8168  1D78  1303               	bcf	3,6	;RP1=0, select bank1
  8169  1D79  0822               	movf	(___flsub@a+2)^(0+128),w
  8170  1D7A  1283               	bcf	3,5	;RP0=0, select bank0
  8171  1D7B  1303               	bcf	3,6	;RP1=0, select bank0
  8172  1D7C  00DF               	movwf	___fladd@a+2
  8173  1D7D  1683               	bsf	3,5	;RP0=1, select bank1
  8174  1D7E  1303               	bcf	3,6	;RP1=0, select bank1
  8175  1D7F  0821               	movf	(___flsub@a+1)^(0+128),w
  8176  1D80  1283               	bcf	3,5	;RP0=0, select bank0
  8177  1D81  1303               	bcf	3,6	;RP1=0, select bank0
  8178  1D82  00DE               	movwf	___fladd@a+1
  8179  1D83  1683               	bsf	3,5	;RP0=1, select bank1
  8180  1D84  1303               	bcf	3,6	;RP1=0, select bank1
  8181  1D85  0820               	movf	___flsub@a^(0+128),w
  8182  1D86  1283               	bcf	3,5	;RP0=0, select bank0
  8183  1D87  1303               	bcf	3,6	;RP1=0, select bank0
  8184  1D88  00DD               	movwf	___fladd@a
  8185  1D89  160A  118A  2578  160A  158A  	fcall	___fladd
  8186  1D8E  1283               	bcf	3,5	;RP0=0, select bank0
  8187  1D8F  1303               	bcf	3,6	;RP1=0, select bank0
  8188  1D90  085C               	movf	?___fladd+3,w
  8189  1D91  1683               	bsf	3,5	;RP0=1, select bank1
  8190  1D92  1303               	bcf	3,6	;RP1=0, select bank1
  8191  1D93  00A3               	movwf	(?___flsub+3)^(0+128)
  8192  1D94  1283               	bcf	3,5	;RP0=0, select bank0
  8193  1D95  1303               	bcf	3,6	;RP1=0, select bank0
  8194  1D96  085B               	movf	?___fladd+2,w
  8195  1D97  1683               	bsf	3,5	;RP0=1, select bank1
  8196  1D98  1303               	bcf	3,6	;RP1=0, select bank1
  8197  1D99  00A2               	movwf	(?___flsub+2)^(0+128)
  8198  1D9A  1283               	bcf	3,5	;RP0=0, select bank0
  8199  1D9B  1303               	bcf	3,6	;RP1=0, select bank0
  8200  1D9C  085A               	movf	?___fladd+1,w
  8201  1D9D  1683               	bsf	3,5	;RP0=1, select bank1
  8202  1D9E  1303               	bcf	3,6	;RP1=0, select bank1
  8203  1D9F  00A1               	movwf	(?___flsub+1)^(0+128)
  8204  1DA0  1283               	bcf	3,5	;RP0=0, select bank0
  8205  1DA1  1303               	bcf	3,6	;RP1=0, select bank0
  8206  1DA2  0859               	movf	?___fladd,w
  8207  1DA3  1683               	bsf	3,5	;RP0=1, select bank1
  8208  1DA4  1303               	bcf	3,6	;RP1=0, select bank1
  8209  1DA5  00A0               	movwf	?___flsub^(0+128)
  8210  1DA6                     l642:
  8211  1DA6  0008               	return
  8212  1DA7                     __end_of___flsub:
  8213                           
  8214                           	psect	text20
  8215  1578                     __ptext20:	
  8216 ;; *************** function ___fladd *****************
  8217 ;; Defined at:
  8218 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  b               4   57[BANK0 ] long 
  8221 ;;  a               4   61[BANK0 ] long 
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;  grs             1   76[BANK0 ] unsigned char 
  8224 ;;  bexp            1   75[BANK0 ] unsigned char 
  8225 ;;  aexp            1   74[BANK0 ] unsigned char 
  8226 ;;  signs           1   73[BANK0 ] unsigned char 
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  4   57[BANK0 ] unsigned char 
  8229 ;; Registers used:
  8230 ;;		wreg, status,2, status,0, btemp+1
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8236 ;;      Params:         0       8       0       0       0
  8237 ;;      Locals:         0       4       0       0       0
  8238 ;;      Temps:          0       8       0       0       0
  8239 ;;      Totals:         0      20       0       0       0
  8240 ;;Total ram usage:       20 bytes
  8241 ;; Hardware stack levels used:    1
  8242 ;; Hardware stack levels required when called:    1
  8243 ;; This function calls:
  8244 ;;		Nothing
  8245 ;; This function is called by:
  8246 ;;		_sprintf
  8247 ;;		___flsub
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           
  8252                           ;psect for function ___fladd
  8253  1578                     ___fladd:
  8254  1578                     l2182:	
  8255                           ;incstack = 0
  8256                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8257                           
  8258  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8259  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8260  157A  085C               	movf	___fladd@b+3,w
  8261  157B  3980               	andlw	128
  8262  157C  00E1               	movwf	??___fladd
  8263  157D  0861               	movf	??___fladd,w
  8264  157E  00E9               	movwf	___fladd@signs
  8265  157F                     l2184:
  8266  157F  085C               	movf	___fladd@b+3,w
  8267  1580  00E1               	movwf	??___fladd
  8268  1581  0761               	addwf	??___fladd,w
  8269  1582  00E2               	movwf	??___fladd+1
  8270  1583  0862               	movf	??___fladd+1,w
  8271  1584  00EB               	movwf	___fladd@bexp
  8272  1585                     l2186:
  8273  1585  1FDB               	btfss	___fladd@b+2,7
  8274  1586  2D88               	goto	u3021
  8275  1587  2D89               	goto	u3020
  8276  1588                     u3021:
  8277  1588  2D8A               	goto	l2190
  8278  1589                     u3020:
  8279  1589                     l2188:
  8280  1589  146B               	bsf	___fladd@bexp,0
  8281  158A                     l2190:
  8282  158A  086B               	movf	___fladd@bexp,w
  8283  158B  1903               	btfsc	3,2
  8284  158C  2D8E               	goto	u3031
  8285  158D  2D8F               	goto	u3030
  8286  158E                     u3031:
  8287  158E  2D9F               	goto	l2200
  8288  158F                     u3030:
  8289  158F                     l2192:
  8290  158F  0A6B               	incf	___fladd@bexp,w
  8291  1590  1D03               	btfss	3,2
  8292  1591  2D93               	goto	u3041
  8293  1592  2D94               	goto	u3040
  8294  1593                     u3041:
  8295  1593  2D9C               	goto	l2196
  8296  1594                     u3040:
  8297  1594                     l2194:
  8298  1594  3000               	movlw	0
  8299  1595  00DC               	movwf	___fladd@b+3
  8300  1596  3000               	movlw	0
  8301  1597  00DB               	movwf	___fladd@b+2
  8302  1598  3000               	movlw	0
  8303  1599  00DA               	movwf	___fladd@b+1
  8304  159A  3000               	movlw	0
  8305  159B  00D9               	movwf	___fladd@b
  8306  159C                     l2196:
  8307  159C  17DB               	bsf	___fladd@b+2,7
  8308  159D                     l2198:
  8309  159D  01DC               	clrf	___fladd@b+3
  8310  159E  2DA7               	goto	l2202
  8311  159F                     l2200:
  8312  159F  3000               	movlw	0
  8313  15A0  00DC               	movwf	___fladd@b+3
  8314  15A1  3000               	movlw	0
  8315  15A2  00DB               	movwf	___fladd@b+2
  8316  15A3  3000               	movlw	0
  8317  15A4  00DA               	movwf	___fladd@b+1
  8318  15A5  3000               	movlw	0
  8319  15A6  00D9               	movwf	___fladd@b
  8320  15A7                     l2202:
  8321  15A7  0860               	movf	___fladd@a+3,w
  8322  15A8  3980               	andlw	128
  8323  15A9  00E1               	movwf	??___fladd
  8324  15AA  0861               	movf	??___fladd,w
  8325  15AB  00EA               	movwf	___fladd@aexp
  8326  15AC                     l2204:
  8327  15AC  086A               	movf	___fladd@aexp,w
  8328  15AD  0669               	xorwf	___fladd@signs,w
  8329  15AE  1903               	skipnz
  8330  15AF  2DB1               	goto	u3051
  8331  15B0  2DB2               	goto	u3050
  8332  15B1                     u3051:
  8333  15B1  2DB3               	goto	l2208
  8334  15B2                     u3050:
  8335  15B2                     l2206:
  8336  15B2  1769               	bsf	___fladd@signs,6
  8337  15B3                     l2208:
  8338  15B3  0860               	movf	___fladd@a+3,w
  8339  15B4  00E1               	movwf	??___fladd
  8340  15B5  0761               	addwf	??___fladd,w
  8341  15B6  00E2               	movwf	??___fladd+1
  8342  15B7  0862               	movf	??___fladd+1,w
  8343  15B8  00EA               	movwf	___fladd@aexp
  8344  15B9                     l2210:
  8345  15B9  1FDF               	btfss	___fladd@a+2,7
  8346  15BA  2DBC               	goto	u3061
  8347  15BB  2DBD               	goto	u3060
  8348  15BC                     u3061:
  8349  15BC  2DBE               	goto	l2214
  8350  15BD                     u3060:
  8351  15BD                     l2212:
  8352  15BD  146A               	bsf	___fladd@aexp,0
  8353  15BE                     l2214:
  8354  15BE  086A               	movf	___fladd@aexp,w
  8355  15BF  1903               	btfsc	3,2
  8356  15C0  2DC2               	goto	u3071
  8357  15C1  2DC3               	goto	u3070
  8358  15C2                     u3071:
  8359  15C2  2DD3               	goto	l2224
  8360  15C3                     u3070:
  8361  15C3                     l2216:
  8362  15C3  0A6A               	incf	___fladd@aexp,w
  8363  15C4  1D03               	btfss	3,2
  8364  15C5  2DC7               	goto	u3081
  8365  15C6  2DC8               	goto	u3080
  8366  15C7                     u3081:
  8367  15C7  2DD0               	goto	l2220
  8368  15C8                     u3080:
  8369  15C8                     l2218:
  8370  15C8  3000               	movlw	0
  8371  15C9  00E0               	movwf	___fladd@a+3
  8372  15CA  3000               	movlw	0
  8373  15CB  00DF               	movwf	___fladd@a+2
  8374  15CC  3000               	movlw	0
  8375  15CD  00DE               	movwf	___fladd@a+1
  8376  15CE  3000               	movlw	0
  8377  15CF  00DD               	movwf	___fladd@a
  8378  15D0                     l2220:
  8379  15D0  17DF               	bsf	___fladd@a+2,7
  8380  15D1                     l2222:
  8381  15D1  01E0               	clrf	___fladd@a+3
  8382  15D2  2DDB               	goto	l596
  8383  15D3                     l2224:
  8384  15D3  3000               	movlw	0
  8385  15D4  00E0               	movwf	___fladd@a+3
  8386  15D5  3000               	movlw	0
  8387  15D6  00DF               	movwf	___fladd@a+2
  8388  15D7  3000               	movlw	0
  8389  15D8  00DE               	movwf	___fladd@a+1
  8390  15D9  3000               	movlw	0
  8391  15DA  00DD               	movwf	___fladd@a
  8392  15DB                     l596:
  8393  15DB  086B               	movf	___fladd@bexp,w
  8394  15DC  026A               	subwf	___fladd@aexp,w
  8395  15DD  1803               	skipnc
  8396  15DE  2DE0               	goto	u3091
  8397  15DF  2DE1               	goto	u3090
  8398  15E0                     u3091:
  8399  15E0  2E25               	goto	l2260
  8400  15E1                     u3090:
  8401  15E1                     l2226:
  8402  15E1  1F69               	btfss	___fladd@signs,6
  8403  15E2  2DE4               	goto	u3101
  8404  15E3  2DE5               	goto	u3100
  8405  15E4                     u3101:
  8406  15E4  2DE9               	goto	l2230
  8407  15E5                     u3100:
  8408  15E5                     l2228:
  8409  15E5  3080               	movlw	128
  8410  15E6  00E1               	movwf	??___fladd
  8411  15E7  0861               	movf	??___fladd,w
  8412  15E8  06E9               	xorwf	___fladd@signs,f
  8413  15E9                     l2230:
  8414  15E9  086B               	movf	___fladd@bexp,w
  8415  15EA  00E1               	movwf	??___fladd
  8416  15EB  0861               	movf	??___fladd,w
  8417  15EC  00EC               	movwf	___fladd@grs
  8418  15ED                     l2232:
  8419  15ED  086A               	movf	___fladd@aexp,w
  8420  15EE  00E1               	movwf	??___fladd
  8421  15EF  0861               	movf	??___fladd,w
  8422  15F0  00EB               	movwf	___fladd@bexp
  8423  15F1                     l2234:
  8424  15F1  086C               	movf	___fladd@grs,w
  8425  15F2  00E1               	movwf	??___fladd
  8426  15F3  0861               	movf	??___fladd,w
  8427  15F4  00EA               	movwf	___fladd@aexp
  8428  15F5                     l2236:
  8429  15F5  0859               	movf	___fladd@b,w
  8430  15F6  00E1               	movwf	??___fladd
  8431  15F7  0861               	movf	??___fladd,w
  8432  15F8  00EC               	movwf	___fladd@grs
  8433  15F9                     l2238:
  8434  15F9  085D               	movf	___fladd@a,w
  8435  15FA  00E1               	movwf	??___fladd
  8436  15FB  0861               	movf	??___fladd,w
  8437  15FC  00D9               	movwf	___fladd@b
  8438  15FD                     l2240:
  8439  15FD  086C               	movf	___fladd@grs,w
  8440  15FE  00E1               	movwf	??___fladd
  8441  15FF  0861               	movf	??___fladd,w
  8442  1600  00DD               	movwf	___fladd@a
  8443  1601                     l2242:
  8444  1601  085A               	movf	___fladd@b+1,w
  8445  1602  00E1               	movwf	??___fladd
  8446  1603  0861               	movf	??___fladd,w
  8447  1604  00EC               	movwf	___fladd@grs
  8448  1605                     l2244:
  8449  1605  085E               	movf	___fladd@a+1,w
  8450  1606  00E1               	movwf	??___fladd
  8451  1607  0861               	movf	??___fladd,w
  8452  1608  00DA               	movwf	___fladd@b+1
  8453  1609                     l2246:
  8454  1609  086C               	movf	___fladd@grs,w
  8455  160A  00E1               	movwf	??___fladd
  8456  160B  0861               	movf	??___fladd,w
  8457  160C  00DE               	movwf	___fladd@a+1
  8458  160D                     l2248:
  8459  160D  085B               	movf	___fladd@b+2,w
  8460  160E  00E1               	movwf	??___fladd
  8461  160F  0861               	movf	??___fladd,w
  8462  1610  00EC               	movwf	___fladd@grs
  8463  1611                     l2250:
  8464  1611  085F               	movf	___fladd@a+2,w
  8465  1612  00E1               	movwf	??___fladd
  8466  1613  0861               	movf	??___fladd,w
  8467  1614  00DB               	movwf	___fladd@b+2
  8468  1615                     l2252:
  8469  1615  086C               	movf	___fladd@grs,w
  8470  1616  00E1               	movwf	??___fladd
  8471  1617  0861               	movf	??___fladd,w
  8472  1618  00DF               	movwf	___fladd@a+2
  8473  1619                     l2254:
  8474  1619  085C               	movf	___fladd@b+3,w
  8475  161A  00E1               	movwf	??___fladd
  8476  161B  0861               	movf	??___fladd,w
  8477  161C  00EC               	movwf	___fladd@grs
  8478  161D                     l2256:
  8479  161D  0860               	movf	___fladd@a+3,w
  8480  161E  00E1               	movwf	??___fladd
  8481  161F  0861               	movf	??___fladd,w
  8482  1620  00DC               	movwf	___fladd@b+3
  8483  1621                     l2258:
  8484  1621  086C               	movf	___fladd@grs,w
  8485  1622  00E1               	movwf	??___fladd
  8486  1623  0861               	movf	??___fladd,w
  8487  1624  00E0               	movwf	___fladd@a+3
  8488  1625                     l2260:
  8489  1625  01EC               	clrf	___fladd@grs
  8490  1626                     l2262:
  8491  1626  086A               	movf	___fladd@aexp,w
  8492  1627  00E1               	movwf	??___fladd
  8493  1628  01E2               	clrf	??___fladd+1
  8494  1629  0862               	movf	??___fladd+1,w
  8495  162A  00E4               	movwf	??___fladd+3
  8496  162B  086B               	movf	___fladd@bexp,w
  8497  162C  0261               	subwf	??___fladd,w
  8498  162D  00E3               	movwf	??___fladd+2
  8499  162E  1C03               	skipc
  8500  162F  03E4               	decf	??___fladd+3,f
  8501  1630  0864               	movf	??___fladd+3,w
  8502  1631  3A80               	xorlw	128
  8503  1632  00FF               	movwf	btemp+1
  8504  1633  3080               	movlw	128
  8505  1634  027F               	subwf	btemp+1,w
  8506  1635  1D03               	skipz
  8507  1636  2E39               	goto	u3115
  8508  1637  301A               	movlw	26
  8509  1638  0263               	subwf	??___fladd+2,w
  8510  1639                     u3115:
  8511  1639  1C03               	skipc
  8512  163A  2E3C               	goto	u3111
  8513  163B  2E3D               	goto	u3110
  8514  163C                     u3111:
  8515  163C  2E7A               	goto	l2278
  8516  163D                     u3110:
  8517  163D                     l2264:
  8518  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8519  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8520  163F  085C               	movf	___fladd@b+3,w
  8521  1640  045B               	iorwf	___fladd@b+2,w
  8522  1641  045A               	iorwf	___fladd@b+1,w
  8523  1642  0459               	iorwf	___fladd@b,w
  8524  1643  1D03               	skipz
  8525  1644  2E46               	goto	u3121
  8526  1645  2E48               	goto	u3120
  8527  1646                     u3121:
  8528  1646  3001               	movlw	1
  8529  1647  2E49               	goto	u3130
  8530  1648                     u3120:
  8531  1648  3000               	movlw	0
  8532  1649                     u3130:
  8533  1649  00E1               	movwf	??___fladd
  8534  164A  0861               	movf	??___fladd,w
  8535  164B  00EC               	movwf	___fladd@grs
  8536  164C  3000               	movlw	0
  8537  164D  00DC               	movwf	___fladd@b+3
  8538  164E  3000               	movlw	0
  8539  164F  00DB               	movwf	___fladd@b+2
  8540  1650  3000               	movlw	0
  8541  1651  00DA               	movwf	___fladd@b+1
  8542  1652  3000               	movlw	0
  8543  1653  00D9               	movwf	___fladd@b
  8544  1654  086A               	movf	___fladd@aexp,w
  8545  1655  00E1               	movwf	??___fladd
  8546  1656  0861               	movf	??___fladd,w
  8547  1657  00EB               	movwf	___fladd@bexp
  8548  1658  2E82               	goto	l600
  8549  1659                     l602:
  8550  1659  1C6C               	btfss	___fladd@grs,0
  8551  165A  2E5C               	goto	u3141
  8552  165B  2E5D               	goto	u3140
  8553  165C                     u3141:
  8554  165C  2E66               	goto	l2268
  8555  165D                     u3140:
  8556  165D                     l2266:
  8557  165D  086C               	movf	___fladd@grs,w
  8558  165E  00E1               	movwf	??___fladd
  8559  165F  1003               	clrc
  8560  1660  0C61               	rrf	??___fladd,w
  8561  1661  3801               	iorlw	1
  8562  1662  00E2               	movwf	??___fladd+1
  8563  1663  0862               	movf	??___fladd+1,w
  8564  1664  00EC               	movwf	___fladd@grs
  8565  1665  2E68               	goto	l2270
  8566  1666                     l2268:
  8567  1666  1003               	clrc
  8568  1667  0CEC               	rrf	___fladd@grs,f
  8569  1668                     l2270:
  8570  1668  1C59               	btfss	___fladd@b,0
  8571  1669  2E6B               	goto	u3151
  8572  166A  2E6C               	goto	u3150
  8573  166B                     u3151:
  8574  166B  2E6D               	goto	l2274
  8575  166C                     u3150:
  8576  166C                     l2272:
  8577  166C  17EC               	bsf	___fladd@grs,7
  8578  166D                     l2274:
  8579  166D  3001               	movlw	1
  8580  166E  00E1               	movwf	??___fladd
  8581  166F                     u3165:
  8582  166F  0D5C               	rlf	___fladd@b+3,w
  8583  1670  0CDC               	rrf	___fladd@b+3,f
  8584  1671  0CDB               	rrf	___fladd@b+2,f
  8585  1672  0CDA               	rrf	___fladd@b+1,f
  8586  1673  0CD9               	rrf	___fladd@b,f
  8587  1674  0BE1               	decfsz	??___fladd& (0+127),f
  8588  1675  2E6F               	goto	u3165
  8589  1676                     l2276:
  8590  1676  3001               	movlw	1
  8591  1677  00E1               	movwf	??___fladd
  8592  1678  0861               	movf	??___fladd,w
  8593  1679  07EB               	addwf	___fladd@bexp,f
  8594  167A                     l2278:
  8595  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8596  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8597  167C  086A               	movf	___fladd@aexp,w
  8598  167D  026B               	subwf	___fladd@bexp,w
  8599  167E  1C03               	skipc
  8600  167F  2E81               	goto	u3171
  8601  1680  2E82               	goto	u3170
  8602  1681                     u3171:
  8603  1681  2E59               	goto	l602
  8604  1682                     u3170:
  8605  1682                     l600:
  8606  1682  1B69               	btfsc	___fladd@signs,6
  8607  1683  2E85               	goto	u3181
  8608  1684  2E86               	goto	u3180
  8609  1685                     u3181:
  8610  1685  2ED1               	goto	l2304
  8611  1686                     u3180:
  8612  1686                     l2280:
  8613  1686  086B               	movf	___fladd@bexp,w
  8614  1687  1D03               	btfss	3,2
  8615  1688  2E8A               	goto	u3191
  8616  1689  2E8B               	goto	u3190
  8617  168A                     u3191:
  8618  168A  2E94               	goto	l2286
  8619  168B                     u3190:
  8620  168B                     l2282:
  8621  168B  3000               	movlw	0
  8622  168C  00DC               	movwf	?___fladd+3
  8623  168D  3000               	movlw	0
  8624  168E  00DB               	movwf	?___fladd+2
  8625  168F  3000               	movlw	0
  8626  1690  00DA               	movwf	?___fladd+1
  8627  1691  3000               	movlw	0
  8628  1692  00D9               	movwf	?___fladd
  8629  1693  2FFF               	goto	l609
  8630  1694                     l2286:
  8631  1694  085D               	movf	___fladd@a,w
  8632  1695  07D9               	addwf	___fladd@b,f
  8633  1696  085E               	movf	___fladd@a+1,w
  8634  1697  1103               	clrz
  8635  1698  1803               	skipnc
  8636  1699  3E01               	addlw	1
  8637  169A  1903               	skipnz
  8638  169B  2E9D               	goto	u3201
  8639  169C  07DA               	addwf	___fladd@b+1,f
  8640  169D                     u3201:
  8641  169D  085F               	movf	___fladd@a+2,w
  8642  169E  1103               	clrz
  8643  169F  1803               	skipnc
  8644  16A0  3E01               	addlw	1
  8645  16A1  1903               	skipnz
  8646  16A2  2EA4               	goto	u3202
  8647  16A3  07DB               	addwf	___fladd@b+2,f
  8648  16A4                     u3202:
  8649  16A4  0860               	movf	___fladd@a+3,w
  8650  16A5  1103               	clrz
  8651  16A6  1803               	skipnc
  8652  16A7  3E01               	addlw	1
  8653  16A8  1903               	skipnz
  8654  16A9  2EAB               	goto	u3203
  8655  16AA  07DC               	addwf	___fladd@b+3,f
  8656  16AB                     u3203:
  8657  16AB                     l2288:
  8658  16AB  1C5C               	btfss	___fladd@b+3,0
  8659  16AC  2EAE               	goto	u3211
  8660  16AD  2EAF               	goto	u3210
  8661  16AE                     u3211:
  8662  16AE  2F85               	goto	l2338
  8663  16AF                     u3210:
  8664  16AF                     l2290:
  8665  16AF  1C6C               	btfss	___fladd@grs,0
  8666  16B0  2EB2               	goto	u3221
  8667  16B1  2EB3               	goto	u3220
  8668  16B2                     u3221:
  8669  16B2  2EBC               	goto	l2294
  8670  16B3                     u3220:
  8671  16B3                     l2292:
  8672  16B3  086C               	movf	___fladd@grs,w
  8673  16B4  00E1               	movwf	??___fladd
  8674  16B5  1003               	clrc
  8675  16B6  0C61               	rrf	??___fladd,w
  8676  16B7  3801               	iorlw	1
  8677  16B8  00E2               	movwf	??___fladd+1
  8678  16B9  0862               	movf	??___fladd+1,w
  8679  16BA  00EC               	movwf	___fladd@grs
  8680  16BB  2EBE               	goto	l2296
  8681  16BC                     l2294:
  8682  16BC  1003               	clrc
  8683  16BD  0CEC               	rrf	___fladd@grs,f
  8684  16BE                     l2296:
  8685  16BE  1C59               	btfss	___fladd@b,0
  8686  16BF  2EC1               	goto	u3231
  8687  16C0  2EC2               	goto	u3230
  8688  16C1                     u3231:
  8689  16C1  2EC3               	goto	l2300
  8690  16C2                     u3230:
  8691  16C2                     l2298:
  8692  16C2  17EC               	bsf	___fladd@grs,7
  8693  16C3                     l2300:
  8694  16C3  3001               	movlw	1
  8695  16C4  00E1               	movwf	??___fladd
  8696  16C5                     u3245:
  8697  16C5  0D5C               	rlf	___fladd@b+3,w
  8698  16C6  0CDC               	rrf	___fladd@b+3,f
  8699  16C7  0CDB               	rrf	___fladd@b+2,f
  8700  16C8  0CDA               	rrf	___fladd@b+1,f
  8701  16C9  0CD9               	rrf	___fladd@b,f
  8702  16CA  0BE1               	decfsz	??___fladd& (0+127),f
  8703  16CB  2EC5               	goto	u3245
  8704  16CC                     l2302:
  8705  16CC  3001               	movlw	1
  8706  16CD  00E1               	movwf	??___fladd
  8707  16CE  0861               	movf	??___fladd,w
  8708  16CF  07EB               	addwf	___fladd@bexp,f
  8709  16D0  2F85               	goto	l2338
  8710  16D1                     l2304:
  8711  16D1  085C               	movf	___fladd@b+3,w
  8712  16D2  3A80               	xorlw	128
  8713  16D3  00FF               	movwf	btemp+1
  8714  16D4  0860               	movf	___fladd@a+3,w
  8715  16D5  3A80               	xorlw	128
  8716  16D6  027F               	subwf	btemp+1,w
  8717  16D7  1D03               	skipz
  8718  16D8  2EE3               	goto	u3253
  8719  16D9  085F               	movf	___fladd@a+2,w
  8720  16DA  025B               	subwf	___fladd@b+2,w
  8721  16DB  1D03               	skipz
  8722  16DC  2EE3               	goto	u3253
  8723  16DD  085E               	movf	___fladd@a+1,w
  8724  16DE  025A               	subwf	___fladd@b+1,w
  8725  16DF  1D03               	skipz
  8726  16E0  2EE3               	goto	u3253
  8727  16E1  085D               	movf	___fladd@a,w
  8728  16E2  0259               	subwf	___fladd@b,w
  8729  16E3                     u3253:
  8730  16E3  1803               	skipnc
  8731  16E4  2EE6               	goto	u3251
  8732  16E5  2EE7               	goto	u3250
  8733  16E6                     u3251:
  8734  16E6  2F3F               	goto	l2314
  8735  16E7                     u3250:
  8736  16E7                     l2306:
  8737  16E7  30FF               	movlw	255
  8738  16E8  00E1               	movwf	??___fladd
  8739  16E9  30FF               	movlw	255
  8740  16EA  00E2               	movwf	??___fladd+1
  8741  16EB  30FF               	movlw	255
  8742  16EC  00E3               	movwf	??___fladd+2
  8743  16ED  30FF               	movlw	255
  8744  16EE  00E4               	movwf	??___fladd+3
  8745  16EF  085D               	movf	___fladd@a,w
  8746  16F0  00E5               	movwf	??___fladd+4
  8747  16F1  085E               	movf	___fladd@a+1,w
  8748  16F2  00E6               	movwf	??___fladd+5
  8749  16F3  085F               	movf	___fladd@a+2,w
  8750  16F4  00E7               	movwf	??___fladd+6
  8751  16F5  0860               	movf	___fladd@a+3,w
  8752  16F6  00E8               	movwf	??___fladd+7
  8753  16F7  0859               	movf	___fladd@b,w
  8754  16F8  02E5               	subwf	??___fladd+4,f
  8755  16F9  085A               	movf	___fladd@b+1,w
  8756  16FA  1C03               	skipc
  8757  16FB  0F5A               	incfsz	___fladd@b+1,w
  8758  16FC  2EFE               	goto	u3261
  8759  16FD  2EFF               	goto	u3262
  8760  16FE                     u3261:
  8761  16FE  02E6               	subwf	??___fladd+5,f
  8762  16FF                     u3262:
  8763  16FF  085B               	movf	___fladd@b+2,w
  8764  1700  1C03               	skipc
  8765  1701  0F5B               	incfsz	___fladd@b+2,w
  8766  1702  2F04               	goto	u3263
  8767  1703  2F05               	goto	u3264
  8768  1704                     u3263:
  8769  1704  02E7               	subwf	??___fladd+6,f
  8770  1705                     u3264:
  8771  1705  085C               	movf	___fladd@b+3,w
  8772  1706  1C03               	skipc
  8773  1707  0F5C               	incfsz	___fladd@b+3,w
  8774  1708  2F0A               	goto	u3265
  8775  1709  2F0B               	goto	u3266
  8776  170A                     u3265:
  8777  170A  02E8               	subwf	??___fladd+7,f
  8778  170B                     u3266:
  8779  170B  0865               	movf	??___fladd+4,w
  8780  170C  07E1               	addwf	??___fladd,f
  8781  170D  0866               	movf	??___fladd+5,w
  8782  170E  1803               	skipnc
  8783  170F  0F66               	incfsz	??___fladd+5,w
  8784  1710  2F12               	goto	u3270
  8785  1711  2F13               	goto	u3271
  8786  1712                     u3270:
  8787  1712  07E2               	addwf	??___fladd+1,f
  8788  1713                     u3271:
  8789  1713  0867               	movf	??___fladd+6,w
  8790  1714  1803               	skipnc
  8791  1715  0F67               	incfsz	??___fladd+6,w
  8792  1716  2F18               	goto	u3272
  8793  1717  2F19               	goto	u3273
  8794  1718                     u3272:
  8795  1718  07E3               	addwf	??___fladd+2,f
  8796  1719                     u3273:
  8797  1719  0868               	movf	??___fladd+7,w
  8798  171A  1803               	skipnc
  8799  171B  0A68               	incf	??___fladd+7,w
  8800  171C  07E4               	addwf	??___fladd+3,f
  8801  171D  0864               	movf	??___fladd+3,w
  8802  171E  00DC               	movwf	___fladd@b+3
  8803  171F  0863               	movf	??___fladd+2,w
  8804  1720  00DB               	movwf	___fladd@b+2
  8805  1721  0862               	movf	??___fladd+1,w
  8806  1722  00DA               	movwf	___fladd@b+1
  8807  1723  0861               	movf	??___fladd,w
  8808  1724  00D9               	movwf	___fladd@b
  8809  1725                     l2308:
  8810  1725  3080               	movlw	128
  8811  1726  00E1               	movwf	??___fladd
  8812  1727  0861               	movf	??___fladd,w
  8813  1728  06E9               	xorwf	___fladd@signs,f
  8814  1729  09EC               	comf	___fladd@grs,f
  8815  172A  0AEC               	incf	___fladd@grs,f
  8816  172B                     l2310:
  8817  172B  086C               	movf	___fladd@grs,w
  8818  172C  1D03               	btfss	3,2
  8819  172D  2F2F               	goto	u3281
  8820  172E  2F30               	goto	u3280
  8821  172F                     u3281:
  8822  172F  2F4D               	goto	l617
  8823  1730                     u3280:
  8824  1730                     l2312:
  8825  1730  3001               	movlw	1
  8826  1731  07D9               	addwf	___fladd@b,f
  8827  1732  3000               	movlw	0
  8828  1733  1803               	skipnc
  8829  1734  3001               	movlw	1
  8830  1735  07DA               	addwf	___fladd@b+1,f
  8831  1736  3000               	movlw	0
  8832  1737  1803               	skipnc
  8833  1738  3001               	movlw	1
  8834  1739  07DB               	addwf	___fladd@b+2,f
  8835  173A  3000               	movlw	0
  8836  173B  1803               	skipnc
  8837  173C  3001               	movlw	1
  8838  173D  07DC               	addwf	___fladd@b+3,f
  8839  173E  2F4D               	goto	l617
  8840  173F                     l2314:
  8841  173F  085D               	movf	___fladd@a,w
  8842  1740  02D9               	subwf	___fladd@b,f
  8843  1741  085E               	movf	___fladd@a+1,w
  8844  1742  1C03               	skipc
  8845  1743  0F5E               	incfsz	___fladd@a+1,w
  8846  1744  02DA               	subwf	___fladd@b+1,f
  8847  1745  085F               	movf	___fladd@a+2,w
  8848  1746  1C03               	skipc
  8849  1747  0F5F               	incfsz	___fladd@a+2,w
  8850  1748  02DB               	subwf	___fladd@b+2,f
  8851  1749  0860               	movf	___fladd@a+3,w
  8852  174A  1C03               	skipc
  8853  174B  0F60               	incfsz	___fladd@a+3,w
  8854  174C  02DC               	subwf	___fladd@b+3,f
  8855  174D                     l617:
  8856  174D  085C               	movf	___fladd@b+3,w
  8857  174E  045B               	iorwf	___fladd@b+2,w
  8858  174F  045A               	iorwf	___fladd@b+1,w
  8859  1750  0459               	iorwf	___fladd@b,w
  8860  1751  1D03               	skipz
  8861  1752  2F54               	goto	u3291
  8862  1753  2F55               	goto	u3290
  8863  1754                     u3291:
  8864  1754  2F81               	goto	l2336
  8865  1755                     u3290:
  8866  1755                     l2316:
  8867  1755  086C               	movf	___fladd@grs,w
  8868  1756  1D03               	btfss	3,2
  8869  1757  2F59               	goto	u3301
  8870  1758  2F5A               	goto	u3300
  8871  1759                     u3301:
  8872  1759  2F81               	goto	l2336
  8873  175A                     u3300:
  8874  175A                     l2318:
  8875  175A  3000               	movlw	0
  8876  175B  00DC               	movwf	?___fladd+3
  8877  175C  3000               	movlw	0
  8878  175D  00DB               	movwf	?___fladd+2
  8879  175E  3000               	movlw	0
  8880  175F  00DA               	movwf	?___fladd+1
  8881  1760  3000               	movlw	0
  8882  1761  00D9               	movwf	?___fladd
  8883  1762  2FFF               	goto	l609
  8884  1763                     l2322:
  8885  1763  3001               	movlw	1
  8886  1764  00E1               	movwf	??___fladd
  8887  1765                     u3315:
  8888  1765  1003               	clrc
  8889  1766  0DD9               	rlf	___fladd@b,f
  8890  1767  0DDA               	rlf	___fladd@b+1,f
  8891  1768  0DDB               	rlf	___fladd@b+2,f
  8892  1769  0DDC               	rlf	___fladd@b+3,f
  8893  176A  0BE1               	decfsz	??___fladd,f
  8894  176B  2F65               	goto	u3315
  8895  176C                     l2324:
  8896  176C  1FEC               	btfss	___fladd@grs,7
  8897  176D  2F6F               	goto	u3321
  8898  176E  2F70               	goto	u3320
  8899  176F                     u3321:
  8900  176F  2F71               	goto	l621
  8901  1770                     u3320:
  8902  1770                     l2326:
  8903  1770  1459               	bsf	___fladd@b,0
  8904  1771                     l621:
  8905  1771  1C6C               	btfss	___fladd@grs,0
  8906  1772  2F74               	goto	u3331
  8907  1773  2F75               	goto	u3330
  8908  1774                     u3331:
  8909  1774  2F78               	goto	l2330
  8910  1775                     u3330:
  8911  1775                     l2328:
  8912  1775  1403               	setc
  8913  1776  0DEC               	rlf	___fladd@grs,f
  8914  1777  2F7A               	goto	l2332
  8915  1778                     l2330:
  8916  1778  1003               	clrc
  8917  1779  0DEC               	rlf	___fladd@grs,f
  8918  177A                     l2332:
  8919  177A  086B               	movf	___fladd@bexp,w
  8920  177B  1903               	btfsc	3,2
  8921  177C  2F7E               	goto	u3341
  8922  177D  2F7F               	goto	u3340
  8923  177E                     u3341:
  8924  177E  2F81               	goto	l2336
  8925  177F                     u3340:
  8926  177F                     l2334:
  8927  177F  3001               	movlw	1
  8928  1780  02EB               	subwf	___fladd@bexp,f
  8929  1781                     l2336:
  8930  1781  1FDB               	btfss	___fladd@b+2,7
  8931  1782  2F84               	goto	u3351
  8932  1783  2F85               	goto	u3350
  8933  1784                     u3351:
  8934  1784  2F63               	goto	l2322
  8935  1785                     u3350:
  8936  1785                     l2338:
  8937  1785  01EA               	clrf	___fladd@aexp
  8938  1786                     l2340:
  8939  1786  1FEC               	btfss	___fladd@grs,7
  8940  1787  2F89               	goto	u3361
  8941  1788  2F8A               	goto	u3360
  8942  1789                     u3361:
  8943  1789  2F98               	goto	l2348
  8944  178A                     u3360:
  8945  178A                     l2342:
  8946  178A  086C               	movf	___fladd@grs,w
  8947  178B  397F               	andlw	127
  8948  178C  1903               	btfsc	3,2
  8949  178D  2F8F               	goto	u3371
  8950  178E  2F90               	goto	u3370
  8951  178F                     u3371:
  8952  178F  2F93               	goto	l627
  8953  1790                     u3370:
  8954  1790                     l2344:
  8955  1790  01EA               	clrf	___fladd@aexp
  8956  1791  0AEA               	incf	___fladd@aexp,f
  8957  1792  2F98               	goto	l2348
  8958  1793                     l627:
  8959  1793  1C59               	btfss	___fladd@b,0
  8960  1794  2F96               	goto	u3381
  8961  1795  2F97               	goto	u3380
  8962  1796                     u3381:
  8963  1796  2F98               	goto	l2348
  8964  1797                     u3380:
  8965  1797  2F90               	goto	l2344
  8966  1798                     l2348:
  8967  1798  086A               	movf	___fladd@aexp,w
  8968  1799  1903               	btfsc	3,2
  8969  179A  2F9C               	goto	u3391
  8970  179B  2F9D               	goto	u3390
  8971  179C                     u3391:
  8972  179C  2FD1               	goto	l630
  8973  179D                     u3390:
  8974  179D                     l2350:
  8975  179D  3001               	movlw	1
  8976  179E  07D9               	addwf	___fladd@b,f
  8977  179F  3000               	movlw	0
  8978  17A0  1803               	skipnc
  8979  17A1  3001               	movlw	1
  8980  17A2  07DA               	addwf	___fladd@b+1,f
  8981  17A3  3000               	movlw	0
  8982  17A4  1803               	skipnc
  8983  17A5  3001               	movlw	1
  8984  17A6  07DB               	addwf	___fladd@b+2,f
  8985  17A7  3000               	movlw	0
  8986  17A8  1803               	skipnc
  8987  17A9  3001               	movlw	1
  8988  17AA  07DC               	addwf	___fladd@b+3,f
  8989  17AB                     l2352:
  8990  17AB  1C5C               	btfss	___fladd@b+3,0
  8991  17AC  2FAE               	goto	u3401
  8992  17AD  2FAF               	goto	u3400
  8993  17AE                     u3401:
  8994  17AE  2FD1               	goto	l630
  8995  17AF                     u3400:
  8996  17AF                     l2354:
  8997  17AF  0859               	movf	___fladd@b,w
  8998  17B0  00E1               	movwf	??___fladd
  8999  17B1  085A               	movf	___fladd@b+1,w
  9000  17B2  00E2               	movwf	??___fladd+1
  9001  17B3  085B               	movf	___fladd@b+2,w
  9002  17B4  00E3               	movwf	??___fladd+2
  9003  17B5  085C               	movf	___fladd@b+3,w
  9004  17B6  00E4               	movwf	??___fladd+3
  9005  17B7  3001               	movlw	1
  9006  17B8  00E5               	movwf	??___fladd+4
  9007  17B9                     u3415:
  9008  17B9  0D64               	rlf	??___fladd+3,w
  9009  17BA  0CE4               	rrf	??___fladd+3,f
  9010  17BB  0CE3               	rrf	??___fladd+2,f
  9011  17BC  0CE2               	rrf	??___fladd+1,f
  9012  17BD  0CE1               	rrf	??___fladd,f
  9013  17BE                     u3410:
  9014  17BE  0BE5               	decfsz	??___fladd+4,f
  9015  17BF  2FB9               	goto	u3415
  9016  17C0  0864               	movf	??___fladd+3,w
  9017  17C1  00DC               	movwf	___fladd@b+3
  9018  17C2  0863               	movf	??___fladd+2,w
  9019  17C3  00DB               	movwf	___fladd@b+2
  9020  17C4  0862               	movf	??___fladd+1,w
  9021  17C5  00DA               	movwf	___fladd@b+1
  9022  17C6  0861               	movf	??___fladd,w
  9023  17C7  00D9               	movwf	___fladd@b
  9024  17C8  0A6B               	incf	___fladd@bexp,w
  9025  17C9  1903               	btfsc	3,2
  9026  17CA  2FCC               	goto	u3421
  9027  17CB  2FCD               	goto	u3420
  9028  17CC                     u3421:
  9029  17CC  2FD1               	goto	l630
  9030  17CD                     u3420:
  9031  17CD                     l2356:
  9032  17CD  3001               	movlw	1
  9033  17CE  00E1               	movwf	??___fladd
  9034  17CF  0861               	movf	??___fladd,w
  9035  17D0  07EB               	addwf	___fladd@bexp,f
  9036  17D1                     l630:
  9037  17D1  0A6B               	incf	___fladd@bexp,w
  9038  17D2  1903               	btfsc	3,2
  9039  17D3  2FD5               	goto	u3431
  9040  17D4  2FD6               	goto	u3430
  9041  17D5                     u3431:
  9042  17D5  2FDB               	goto	l2360
  9043  17D6                     u3430:
  9044  17D6                     l2358:
  9045  17D6  086B               	movf	___fladd@bexp,w
  9046  17D7  1D03               	btfss	3,2
  9047  17D8  2FDA               	goto	u3441
  9048  17D9  2FDB               	goto	u3440
  9049  17DA                     u3441:
  9050  17DA  2FE9               	goto	l2366
  9051  17DB                     u3440:
  9052  17DB                     l2360:
  9053  17DB  3000               	movlw	0
  9054  17DC  00DC               	movwf	___fladd@b+3
  9055  17DD  3000               	movlw	0
  9056  17DE  00DB               	movwf	___fladd@b+2
  9057  17DF  3000               	movlw	0
  9058  17E0  00DA               	movwf	___fladd@b+1
  9059  17E1  3000               	movlw	0
  9060  17E2  00D9               	movwf	___fladd@b
  9061  17E3                     l2362:
  9062  17E3  086B               	movf	___fladd@bexp,w
  9063  17E4  1D03               	btfss	3,2
  9064  17E5  2FE7               	goto	u3451
  9065  17E6  2FE8               	goto	u3450
  9066  17E7                     u3451:
  9067  17E7  2FE9               	goto	l2366
  9068  17E8                     u3450:
  9069  17E8                     l2364:
  9070  17E8  01E9               	clrf	___fladd@signs
  9071  17E9                     l2366:
  9072  17E9  1C6B               	btfss	___fladd@bexp,0
  9073  17EA  2FEC               	goto	u3461
  9074  17EB  2FED               	goto	u3460
  9075  17EC                     u3461:
  9076  17EC  2FEF               	goto	l2370
  9077  17ED                     u3460:
  9078  17ED                     l2368:
  9079  17ED  17DB               	bsf	___fladd@b+2,7
  9080  17EE  2FF3               	goto	l638
  9081  17EF                     l2370:
  9082  17EF  307F               	movlw	127
  9083  17F0  00E1               	movwf	??___fladd
  9084  17F1  0861               	movf	??___fladd,w
  9085  17F2  05DB               	andwf	___fladd@b+2,f
  9086  17F3                     l638:
  9087  17F3  086B               	movf	___fladd@bexp,w
  9088  17F4  00E1               	movwf	??___fladd
  9089  17F5  1003               	clrc
  9090  17F6  0C61               	rrf	??___fladd,w
  9091  17F7  00E2               	movwf	??___fladd+1
  9092  17F8  0862               	movf	??___fladd+1,w
  9093  17F9  00DC               	movwf	___fladd@b+3
  9094  17FA                     l2372:
  9095  17FA  1FE9               	btfss	___fladd@signs,7
  9096  17FB  2FFD               	goto	u3471
  9097  17FC  2FFE               	goto	u3470
  9098  17FD                     u3471:
  9099  17FD  2FFF               	goto	l639
  9100  17FE                     u3470:
  9101  17FE                     l2374:
  9102  17FE  17DC               	bsf	___fladd@b+3,7
  9103  17FF                     l639:
  9104  17FF                     l609:
  9105  17FF  0008               	return
  9106  1800                     __end_of___fladd:
  9107                           
  9108                           	psect	text21
  9109  1B49                     __ptext21:	
  9110 ;; *************** function ___flneg *****************
  9111 ;; Defined at:
  9112 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  9113 ;; Parameters:    Size  Location     Type
  9114 ;;  f1              4    4[COMMON] unsigned char 
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;		None
  9117 ;; Return value:  Size  Location     Type
  9118 ;;                  4    4[COMMON] unsigned char 
  9119 ;; Registers used:
  9120 ;;		wreg
  9121 ;; Tracked objects:
  9122 ;;		On entry : 0/0
  9123 ;;		On exit  : 0/0
  9124 ;;		Unchanged: 0/0
  9125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9126 ;;      Params:         4       0       0       0       0
  9127 ;;      Locals:         0       0       0       0       0
  9128 ;;      Temps:          0       0       0       0       0
  9129 ;;      Totals:         4       0       0       0       0
  9130 ;;Total ram usage:        4 bytes
  9131 ;; Hardware stack levels used:    1
  9132 ;; Hardware stack levels required when called:    1
  9133 ;; This function calls:
  9134 ;;		Nothing
  9135 ;; This function is called by:
  9136 ;;		_sprintf
  9137 ;; This function uses a non-reentrant model
  9138 ;;
  9139                           
  9140                           
  9141                           ;psect for function ___flneg
  9142  1B49                     ___flneg:
  9143  1B49                     l2776:	
  9144                           ;incstack = 0
  9145                           ; Regs used in ___flneg: [wreg]
  9146                           
  9147  1B49  0877               	movf	___flneg@f1+3,w
  9148  1B4A  0476               	iorwf	___flneg@f1+2,w
  9149  1B4B  0475               	iorwf	___flneg@f1+1,w
  9150  1B4C  0474               	iorwf	___flneg@f1,w
  9151  1B4D  1903               	skipnz
  9152  1B4E  2B50               	goto	u4591
  9153  1B4F  2B51               	goto	u4590
  9154  1B50                     u4591:
  9155  1B50  2B53               	goto	l2780
  9156  1B51                     u4590:
  9157  1B51                     l2778:
  9158  1B51  3080               	movlw	128
  9159  1B52  06F7               	xorwf	___flneg@f1+3,f
  9160  1B53                     l2780:
  9161  1B53                     l468:
  9162  1B53  0008               	return
  9163  1B54                     __end_of___flneg:
  9164                           
  9165                           	psect	text22
  9166  1F5C                     __ptext22:	
  9167 ;; *************** function ___flge *****************
  9168 ;; Defined at:
  9169 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;  ff1             4    0[BANK0 ] unsigned char 
  9172 ;;  ff2             4    4[BANK0 ] unsigned char 
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;		None
  9175 ;; Return value:  Size  Location     Type
  9176 ;;		None               void
  9177 ;; Registers used:
  9178 ;;		wreg, status,2, status,0
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9184 ;;      Params:         0       8       0       0       0
  9185 ;;      Locals:         0       0       0       0       0
  9186 ;;      Temps:          4       0       0       0       0
  9187 ;;      Totals:         4       8       0       0       0
  9188 ;;Total ram usage:       12 bytes
  9189 ;; Hardware stack levels used:    1
  9190 ;; Hardware stack levels required when called:    1
  9191 ;; This function calls:
  9192 ;;		Nothing
  9193 ;; This function is called by:
  9194 ;;		_sprintf
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           
  9199                           ;psect for function ___flge
  9200  1F5C                     ___flge:
  9201  1F5C                     l2756:	
  9202                           ;incstack = 0
  9203                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9204                           
  9205  1F5C  3000               	movlw	0
  9206  1F5D  1283               	bcf	3,5	;RP0=0, select bank0
  9207  1F5E  1303               	bcf	3,6	;RP1=0, select bank0
  9208  1F5F  0520               	andwf	___flge@ff1,w
  9209  1F60  00F4               	movwf	??___flge
  9210  1F61  3000               	movlw	0
  9211  1F62  0521               	andwf	___flge@ff1+1,w
  9212  1F63  00F5               	movwf	??___flge+1
  9213  1F64  3080               	movlw	128
  9214  1F65  0522               	andwf	___flge@ff1+2,w
  9215  1F66  00F6               	movwf	??___flge+2
  9216  1F67  307F               	movlw	127
  9217  1F68  0523               	andwf	___flge@ff1+3,w
  9218  1F69  00F7               	movwf	??___flge+3
  9219  1F6A  0877               	movf	??___flge+3,w
  9220  1F6B  0476               	iorwf	??___flge+2,w
  9221  1F6C  0475               	iorwf	??___flge+1,w
  9222  1F6D  0474               	iorwf	??___flge,w
  9223  1F6E  1D03               	skipz
  9224  1F6F  2F71               	goto	u4521
  9225  1F70  2F72               	goto	u4520
  9226  1F71                     u4521:
  9227  1F71  2F7A               	goto	l460
  9228  1F72                     u4520:
  9229  1F72                     l2758:
  9230  1F72  3000               	movlw	0
  9231  1F73  00A3               	movwf	___flge@ff1+3
  9232  1F74  3000               	movlw	0
  9233  1F75  00A2               	movwf	___flge@ff1+2
  9234  1F76  3000               	movlw	0
  9235  1F77  00A1               	movwf	___flge@ff1+1
  9236  1F78  3000               	movlw	0
  9237  1F79  00A0               	movwf	___flge@ff1
  9238  1F7A                     l460:
  9239  1F7A  3000               	movlw	0
  9240  1F7B  0524               	andwf	___flge@ff2,w
  9241  1F7C  00F4               	movwf	??___flge
  9242  1F7D  3000               	movlw	0
  9243  1F7E  0525               	andwf	___flge@ff2+1,w
  9244  1F7F  00F5               	movwf	??___flge+1
  9245  1F80  3080               	movlw	128
  9246  1F81  0526               	andwf	___flge@ff2+2,w
  9247  1F82  00F6               	movwf	??___flge+2
  9248  1F83  307F               	movlw	127
  9249  1F84  0527               	andwf	___flge@ff2+3,w
  9250  1F85  00F7               	movwf	??___flge+3
  9251  1F86  0877               	movf	??___flge+3,w
  9252  1F87  0476               	iorwf	??___flge+2,w
  9253  1F88  0475               	iorwf	??___flge+1,w
  9254  1F89  0474               	iorwf	??___flge,w
  9255  1F8A  1D03               	skipz
  9256  1F8B  2F8D               	goto	u4531
  9257  1F8C  2F8E               	goto	u4530
  9258  1F8D                     u4531:
  9259  1F8D  2F96               	goto	l2762
  9260  1F8E                     u4530:
  9261  1F8E                     l2760:
  9262  1F8E  3000               	movlw	0
  9263  1F8F  00A7               	movwf	___flge@ff2+3
  9264  1F90  3000               	movlw	0
  9265  1F91  00A6               	movwf	___flge@ff2+2
  9266  1F92  3000               	movlw	0
  9267  1F93  00A5               	movwf	___flge@ff2+1
  9268  1F94  3000               	movlw	0
  9269  1F95  00A4               	movwf	___flge@ff2
  9270  1F96                     l2762:
  9271  1F96  1FA3               	btfss	___flge@ff1+3,7
  9272  1F97  2F99               	goto	u4541
  9273  1F98  2F9A               	goto	u4540
  9274  1F99                     u4541:
  9275  1F99  2FBE               	goto	l2766
  9276  1F9A                     u4540:
  9277  1F9A                     l2764:
  9278  1F9A  3000               	movlw	0
  9279  1F9B  00F4               	movwf	??___flge
  9280  1F9C  3000               	movlw	0
  9281  1F9D  00F5               	movwf	??___flge+1
  9282  1F9E  3000               	movlw	0
  9283  1F9F  00F6               	movwf	??___flge+2
  9284  1FA0  3080               	movlw	128
  9285  1FA1  00F7               	movwf	??___flge+3
  9286  1FA2  0820               	movf	___flge@ff1,w
  9287  1FA3  02F4               	subwf	??___flge,f
  9288  1FA4  0821               	movf	___flge@ff1+1,w
  9289  1FA5  1C03               	skipc
  9290  1FA6  0F21               	incfsz	___flge@ff1+1,w
  9291  1FA7  2FA9               	goto	u4551
  9292  1FA8  2FAA               	goto	u4552
  9293  1FA9                     u4551:
  9294  1FA9  02F5               	subwf	??___flge+1,f
  9295  1FAA                     u4552:
  9296  1FAA  0822               	movf	___flge@ff1+2,w
  9297  1FAB  1C03               	skipc
  9298  1FAC  0F22               	incfsz	___flge@ff1+2,w
  9299  1FAD  2FAF               	goto	u4553
  9300  1FAE  2FB0               	goto	u4554
  9301  1FAF                     u4553:
  9302  1FAF  02F6               	subwf	??___flge+2,f
  9303  1FB0                     u4554:
  9304  1FB0  0823               	movf	___flge@ff1+3,w
  9305  1FB1  1C03               	skipc
  9306  1FB2  0F23               	incfsz	___flge@ff1+3,w
  9307  1FB3  2FB5               	goto	u4555
  9308  1FB4  2FB6               	goto	u4556
  9309  1FB5                     u4555:
  9310  1FB5  02F7               	subwf	??___flge+3,f
  9311  1FB6                     u4556:
  9312  1FB6  0877               	movf	??___flge+3,w
  9313  1FB7  00A3               	movwf	___flge@ff1+3
  9314  1FB8  0876               	movf	??___flge+2,w
  9315  1FB9  00A2               	movwf	___flge@ff1+2
  9316  1FBA  0875               	movf	??___flge+1,w
  9317  1FBB  00A1               	movwf	___flge@ff1+1
  9318  1FBC  0874               	movf	??___flge,w
  9319  1FBD  00A0               	movwf	___flge@ff1
  9320  1FBE                     l2766:
  9321  1FBE  1FA7               	btfss	___flge@ff2+3,7
  9322  1FBF  2FC1               	goto	u4561
  9323  1FC0  2FC2               	goto	u4560
  9324  1FC1                     u4561:
  9325  1FC1  2FE6               	goto	l463
  9326  1FC2                     u4560:
  9327  1FC2                     l2768:
  9328  1FC2  3000               	movlw	0
  9329  1FC3  00F4               	movwf	??___flge
  9330  1FC4  3000               	movlw	0
  9331  1FC5  00F5               	movwf	??___flge+1
  9332  1FC6  3000               	movlw	0
  9333  1FC7  00F6               	movwf	??___flge+2
  9334  1FC8  3080               	movlw	128
  9335  1FC9  00F7               	movwf	??___flge+3
  9336  1FCA  0824               	movf	___flge@ff2,w
  9337  1FCB  02F4               	subwf	??___flge,f
  9338  1FCC  0825               	movf	___flge@ff2+1,w
  9339  1FCD  1C03               	skipc
  9340  1FCE  0F25               	incfsz	___flge@ff2+1,w
  9341  1FCF  2FD1               	goto	u4571
  9342  1FD0  2FD2               	goto	u4572
  9343  1FD1                     u4571:
  9344  1FD1  02F5               	subwf	??___flge+1,f
  9345  1FD2                     u4572:
  9346  1FD2  0826               	movf	___flge@ff2+2,w
  9347  1FD3  1C03               	skipc
  9348  1FD4  0F26               	incfsz	___flge@ff2+2,w
  9349  1FD5  2FD7               	goto	u4573
  9350  1FD6  2FD8               	goto	u4574
  9351  1FD7                     u4573:
  9352  1FD7  02F6               	subwf	??___flge+2,f
  9353  1FD8                     u4574:
  9354  1FD8  0827               	movf	___flge@ff2+3,w
  9355  1FD9  1C03               	skipc
  9356  1FDA  0F27               	incfsz	___flge@ff2+3,w
  9357  1FDB  2FDD               	goto	u4575
  9358  1FDC  2FDE               	goto	u4576
  9359  1FDD                     u4575:
  9360  1FDD  02F7               	subwf	??___flge+3,f
  9361  1FDE                     u4576:
  9362  1FDE  0877               	movf	??___flge+3,w
  9363  1FDF  00A7               	movwf	___flge@ff2+3
  9364  1FE0  0876               	movf	??___flge+2,w
  9365  1FE1  00A6               	movwf	___flge@ff2+2
  9366  1FE2  0875               	movf	??___flge+1,w
  9367  1FE3  00A5               	movwf	___flge@ff2+1
  9368  1FE4  0874               	movf	??___flge,w
  9369  1FE5  00A4               	movwf	___flge@ff2
  9370  1FE6                     l463:
  9371  1FE6  3080               	movlw	128
  9372  1FE7  06A3               	xorwf	___flge@ff1+3,f
  9373  1FE8  3080               	movlw	128
  9374  1FE9  06A7               	xorwf	___flge@ff2+3,f
  9375  1FEA  0827               	movf	___flge@ff2+3,w
  9376  1FEB  0223               	subwf	___flge@ff1+3,w
  9377  1FEC  1D03               	skipz
  9378  1FED  2FF8               	goto	u4585
  9379  1FEE  0826               	movf	___flge@ff2+2,w
  9380  1FEF  0222               	subwf	___flge@ff1+2,w
  9381  1FF0  1D03               	skipz
  9382  1FF1  2FF8               	goto	u4585
  9383  1FF2  0825               	movf	___flge@ff2+1,w
  9384  1FF3  0221               	subwf	___flge@ff1+1,w
  9385  1FF4  1D03               	skipz
  9386  1FF5  2FF8               	goto	u4585
  9387  1FF6  0824               	movf	___flge@ff2,w
  9388  1FF7  0220               	subwf	___flge@ff1,w
  9389  1FF8                     u4585:
  9390  1FF8  1803               	skipnc
  9391  1FF9  2FFB               	goto	u4581
  9392  1FFA  2FFC               	goto	u4580
  9393  1FFB                     u4581:
  9394  1FFB  2FFE               	goto	l2772
  9395  1FFC                     u4580:
  9396  1FFC                     l2770:
  9397  1FFC  1003               	clrc
  9398  1FFD  2FFF               	goto	l464
  9399  1FFE                     l2772:
  9400  1FFE  1403               	setc
  9401  1FFF                     l464:
  9402  1FFF  0008               	return
  9403  2000                     __end_of___flge:
  9404                           
  9405                           	psect	text23
  9406  1D07                     __ptext23:	
  9407 ;; *************** function ___fleq *****************
  9408 ;; Defined at:
  9409 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9410 ;; Parameters:    Size  Location     Type
  9411 ;;  ff1             4    0[BANK0 ] unsigned char 
  9412 ;;  ff2             4    4[BANK0 ] unsigned char 
  9413 ;; Auto vars:     Size  Location     Type
  9414 ;;		None
  9415 ;; Return value:  Size  Location     Type
  9416 ;;		None               void
  9417 ;; Registers used:
  9418 ;;		wreg, status,2, status,0
  9419 ;; Tracked objects:
  9420 ;;		On entry : 0/0
  9421 ;;		On exit  : 0/0
  9422 ;;		Unchanged: 0/0
  9423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9424 ;;      Params:         0       8       0       0       0
  9425 ;;      Locals:         0       0       0       0       0
  9426 ;;      Temps:          4       0       0       0       0
  9427 ;;      Totals:         4       8       0       0       0
  9428 ;;Total ram usage:       12 bytes
  9429 ;; Hardware stack levels used:    1
  9430 ;; Hardware stack levels required when called:    1
  9431 ;; This function calls:
  9432 ;;		Nothing
  9433 ;; This function is called by:
  9434 ;;		_sprintf
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           
  9439                           ;psect for function ___fleq
  9440  1D07                     ___fleq:
  9441  1D07                     l2744:	
  9442                           ;incstack = 0
  9443                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9444                           
  9445  1D07  3000               	movlw	0
  9446  1D08  1283               	bcf	3,5	;RP0=0, select bank0
  9447  1D09  1303               	bcf	3,6	;RP1=0, select bank0
  9448  1D0A  0520               	andwf	___fleq@ff1,w
  9449  1D0B  00F4               	movwf	??___fleq
  9450  1D0C  3000               	movlw	0
  9451  1D0D  0521               	andwf	___fleq@ff1+1,w
  9452  1D0E  00F5               	movwf	??___fleq+1
  9453  1D0F  3080               	movlw	128
  9454  1D10  0522               	andwf	___fleq@ff1+2,w
  9455  1D11  00F6               	movwf	??___fleq+2
  9456  1D12  307F               	movlw	127
  9457  1D13  0523               	andwf	___fleq@ff1+3,w
  9458  1D14  00F7               	movwf	??___fleq+3
  9459  1D15  0877               	movf	??___fleq+3,w
  9460  1D16  0476               	iorwf	??___fleq+2,w
  9461  1D17  0475               	iorwf	??___fleq+1,w
  9462  1D18  0474               	iorwf	??___fleq,w
  9463  1D19  1D03               	skipz
  9464  1D1A  2D1C               	goto	u4491
  9465  1D1B  2D1D               	goto	u4490
  9466  1D1C                     u4491:
  9467  1D1C  2D25               	goto	l455
  9468  1D1D                     u4490:
  9469  1D1D                     l2746:
  9470  1D1D  3000               	movlw	0
  9471  1D1E  00A3               	movwf	___fleq@ff1+3
  9472  1D1F  3000               	movlw	0
  9473  1D20  00A2               	movwf	___fleq@ff1+2
  9474  1D21  3000               	movlw	0
  9475  1D22  00A1               	movwf	___fleq@ff1+1
  9476  1D23  3000               	movlw	0
  9477  1D24  00A0               	movwf	___fleq@ff1
  9478  1D25                     l455:
  9479  1D25  3000               	movlw	0
  9480  1D26  0524               	andwf	___fleq@ff2,w
  9481  1D27  00F4               	movwf	??___fleq
  9482  1D28  3000               	movlw	0
  9483  1D29  0525               	andwf	___fleq@ff2+1,w
  9484  1D2A  00F5               	movwf	??___fleq+1
  9485  1D2B  3080               	movlw	128
  9486  1D2C  0526               	andwf	___fleq@ff2+2,w
  9487  1D2D  00F6               	movwf	??___fleq+2
  9488  1D2E  307F               	movlw	127
  9489  1D2F  0527               	andwf	___fleq@ff2+3,w
  9490  1D30  00F7               	movwf	??___fleq+3
  9491  1D31  0877               	movf	??___fleq+3,w
  9492  1D32  0476               	iorwf	??___fleq+2,w
  9493  1D33  0475               	iorwf	??___fleq+1,w
  9494  1D34  0474               	iorwf	??___fleq,w
  9495  1D35  1D03               	skipz
  9496  1D36  2D38               	goto	u4501
  9497  1D37  2D39               	goto	u4500
  9498  1D38                     u4501:
  9499  1D38  2D41               	goto	l456
  9500  1D39                     u4500:
  9501  1D39                     l2748:
  9502  1D39  3000               	movlw	0
  9503  1D3A  00A7               	movwf	___fleq@ff2+3
  9504  1D3B  3000               	movlw	0
  9505  1D3C  00A6               	movwf	___fleq@ff2+2
  9506  1D3D  3000               	movlw	0
  9507  1D3E  00A5               	movwf	___fleq@ff2+1
  9508  1D3F  3000               	movlw	0
  9509  1D40  00A4               	movwf	___fleq@ff2
  9510  1D41                     l456:
  9511  1D41  0827               	movf	___fleq@ff2+3,w
  9512  1D42  0623               	xorwf	___fleq@ff1+3,w
  9513  1D43  1D03               	skipz
  9514  1D44  2D4F               	goto	u4515
  9515  1D45  0826               	movf	___fleq@ff2+2,w
  9516  1D46  0622               	xorwf	___fleq@ff1+2,w
  9517  1D47  1D03               	skipz
  9518  1D48  2D4F               	goto	u4515
  9519  1D49  0825               	movf	___fleq@ff2+1,w
  9520  1D4A  0621               	xorwf	___fleq@ff1+1,w
  9521  1D4B  1D03               	skipz
  9522  1D4C  2D4F               	goto	u4515
  9523  1D4D  0824               	movf	___fleq@ff2,w
  9524  1D4E  0620               	xorwf	___fleq@ff1,w
  9525  1D4F                     u4515:
  9526  1D4F  1903               	skipnz
  9527  1D50  2D52               	goto	u4511
  9528  1D51  2D53               	goto	u4510
  9529  1D52                     u4511:
  9530  1D52  2D55               	goto	l2752
  9531  1D53                     u4510:
  9532  1D53                     l2750:
  9533  1D53  1003               	clrc
  9534  1D54  2D56               	goto	l457
  9535  1D55                     l2752:
  9536  1D55  1403               	setc
  9537  1D56                     l457:
  9538  1D56  0008               	return
  9539  1D57                     __end_of___fleq:
  9540                           
  9541                           	psect	text24
  9542  1C7D                     __ptext24:	
  9543 ;; *************** function _Lcd_Write_String *****************
  9544 ;; Defined at:
  9545 ;;		line 86 in file "./Libreria2.h"
  9546 ;; Parameters:    Size  Location     Type
  9547 ;;  a               2    6[COMMON] PTR unsigned char 
  9548 ;;		 -> buffer(1), STR_4(6), STR_3(6), STR_2(17), 
  9549 ;;		 -> STR_1(10), 
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;  i               2    8[COMMON] int 
  9552 ;; Return value:  Size  Location     Type
  9553 ;;                  1    wreg      void 
  9554 ;; Registers used:
  9555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9556 ;; Tracked objects:
  9557 ;;		On entry : 0/0
  9558 ;;		On exit  : 0/0
  9559 ;;		Unchanged: 0/0
  9560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9561 ;;      Params:         2       0       0       0       0
  9562 ;;      Locals:         2       0       0       0       0
  9563 ;;      Temps:          0       3       0       0       0
  9564 ;;      Totals:         4       3       0       0       0
  9565 ;;Total ram usage:        7 bytes
  9566 ;; Hardware stack levels used:    1
  9567 ;; Hardware stack levels required when called:    2
  9568 ;; This function calls:
  9569 ;;		_Lcd_Write_Char
  9570 ;; This function is called by:
  9571 ;;		_main
  9572 ;;		_conversion
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           
  9577                           ;psect for function _Lcd_Write_String
  9578  1C7D                     _Lcd_Write_String:
  9579  1C7D                     l2902:	
  9580                           ;incstack = 0
  9581                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9582                           
  9583                           
  9584                           ;./Libreria2.h: 86:      Lcd_Write_Char(a[i]);;./Libreria2.h: 87: };./Libreria2.h: 88: ;
      +                          ./Libreria2.h: 89: void Lcd_Init(){
  9585  1C7D  01F8               	clrf	Lcd_Write_String@i
  9586  1C7E  01F9               	clrf	Lcd_Write_String@i+1
  9587  1C7F  2CA2               	goto	l2908
  9588  1C80                     l2904:
  9589                           
  9590                           ;./Libreria2.h: 90: 
  9591  1C80  0878               	movf	Lcd_Write_String@i,w
  9592  1C81  0776               	addwf	Lcd_Write_String@a,w
  9593  1C82  00A1               	movwf	??_Lcd_Write_String+1
  9594  1C83  0877               	movf	Lcd_Write_String@a+1,w
  9595  1C84  00A0               	movwf	??_Lcd_Write_String
  9596  1C85  1803               	skipnc
  9597  1C86  0AA0               	incf	??_Lcd_Write_String,f
  9598  1C87  1FF8               	btfss	Lcd_Write_String@i,7
  9599  1C88  2C8A               	goto	u4920
  9600  1C89  03A0               	decf	??_Lcd_Write_String,f
  9601  1C8A                     u4920:
  9602  1C8A  1283               	bcf	3,5	;RP0=0, select bank0
  9603  1C8B  1303               	bcf	3,6	;RP1=0, select bank0
  9604  1C8C  0820               	movf	??_Lcd_Write_String,w
  9605  1C8D  00A2               	movwf	??_Lcd_Write_String+2
  9606  1C8E  0822               	movf	??_Lcd_Write_String+2,w
  9607  1C8F  00FF               	movwf	btemp+1
  9608  1C90  0821               	movf	??_Lcd_Write_String+1,w
  9609  1C91  0084               	movwf	4
  9610  1C92  160A  118A  2000  160A  158A  	fcall	stringtab
  9611  1C97  160A  158A  2361  160A  158A  	fcall	_Lcd_Write_Char
  9612  1C9C                     l2906:
  9613  1C9C  3001               	movlw	1
  9614  1C9D  07F8               	addwf	Lcd_Write_String@i,f
  9615  1C9E  1803               	skipnc
  9616  1C9F  0AF9               	incf	Lcd_Write_String@i+1,f
  9617  1CA0  3000               	movlw	0
  9618  1CA1  07F9               	addwf	Lcd_Write_String@i+1,f
  9619  1CA2                     l2908:
  9620  1CA2  0878               	movf	Lcd_Write_String@i,w
  9621  1CA3  0776               	addwf	Lcd_Write_String@a,w
  9622  1CA4  1283               	bcf	3,5	;RP0=0, select bank0
  9623  1CA5  1303               	bcf	3,6	;RP1=0, select bank0
  9624  1CA6  00A1               	movwf	??_Lcd_Write_String+1
  9625  1CA7  0877               	movf	Lcd_Write_String@a+1,w
  9626  1CA8  00A0               	movwf	??_Lcd_Write_String
  9627  1CA9  1803               	skipnc
  9628  1CAA  0AA0               	incf	??_Lcd_Write_String,f
  9629  1CAB  1FF8               	btfss	Lcd_Write_String@i,7
  9630  1CAC  2CAE               	goto	u4930
  9631  1CAD  03A0               	decf	??_Lcd_Write_String,f
  9632  1CAE                     u4930:
  9633  1CAE  1283               	bcf	3,5	;RP0=0, select bank0
  9634  1CAF  1303               	bcf	3,6	;RP1=0, select bank0
  9635  1CB0  0820               	movf	??_Lcd_Write_String,w
  9636  1CB1  00A2               	movwf	??_Lcd_Write_String+2
  9637  1CB2  0822               	movf	??_Lcd_Write_String+2,w
  9638  1CB3  00FF               	movwf	btemp+1
  9639  1CB4  0821               	movf	??_Lcd_Write_String+1,w
  9640  1CB5  0084               	movwf	4
  9641  1CB6  160A  118A  2000  160A  158A  	fcall	stringtab
  9642  1CBB  3A00               	xorlw	0
  9643  1CBC  1D03               	skipz
  9644  1CBD  2CBF               	goto	u4941
  9645  1CBE  2CC0               	goto	u4940
  9646  1CBF                     u4941:
  9647  1CBF  2C80               	goto	l2904
  9648  1CC0                     u4940:
  9649  1CC0                     l68:
  9650  1CC0  0008               	return
  9651  1CC1                     __end_of_Lcd_Write_String:
  9652                           
  9653                           	psect	text25
  9654  1B61                     __ptext25:	
  9655 ;; *************** function _Lcd_Write_Char *****************
  9656 ;; Defined at:
  9657 ;;		line 78 in file "./Libreria2.h"
  9658 ;; Parameters:    Size  Location     Type
  9659 ;;  a               1    wreg     unsigned char 
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;  a               1    5[COMMON] unsigned char 
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  1    wreg      void 
  9664 ;; Registers used:
  9665 ;;		wreg
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/0
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9671 ;;      Params:         0       0       0       0       0
  9672 ;;      Locals:         1       0       0       0       0
  9673 ;;      Temps:          1       0       0       0       0
  9674 ;;      Totals:         2       0       0       0       0
  9675 ;;Total ram usage:        2 bytes
  9676 ;; Hardware stack levels used:    1
  9677 ;; Hardware stack levels required when called:    1
  9678 ;; This function calls:
  9679 ;;		Nothing
  9680 ;; This function is called by:
  9681 ;;		_Lcd_Write_String
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           
  9686                           ;psect for function _Lcd_Write_Char
  9687  1B61                     _Lcd_Write_Char:
  9688                           
  9689                           ;incstack = 0
  9690                           ; Regs used in _Lcd_Write_Char: [wreg]
  9691                           ;Lcd_Write_Char@a stored from wreg
  9692  1B61  00F5               	movwf	Lcd_Write_Char@a
  9693  1B62                     l2524:
  9694                           
  9695                           ;./Libreria2.h: 79:     PORTDbits.RD3=0;
  9696  1B62  1283               	bcf	3,5	;RP0=0, select bank0
  9697  1B63  1303               	bcf	3,6	;RP1=0, select bank0
  9698  1B64  1508               	bsf	8,2	;volatile
  9699  1B65                     l2526:
  9700                           
  9701                           ;./Libreria2.h: 80: }
  9702  1B65  0875               	movf	Lcd_Write_Char@a,w
  9703  1B66  0086               	movwf	6	;volatile
  9704  1B67                     l2528:
  9705                           
  9706                           ;./Libreria2.h: 81: 
  9707  1B67  1588               	bsf	8,3	;volatile
  9708                           
  9709                           ;./Libreria2.h: 82: void Lcd_Write_String(char *a)
  9710  1B68  301D               	movlw	29
  9711  1B69  00F4               	movwf	??_Lcd_Write_Char
  9712  1B6A                     u5347:
  9713  1B6A  0BF4               	decfsz	??_Lcd_Write_Char,f
  9714  1B6B  2B6A               	goto	u5347
  9715  1B6C  2B6D               	nop2
  9716  1B6D                     l2530:
  9717                           
  9718                           ;./Libreria2.h: 83: {
  9719  1B6D  1283               	bcf	3,5	;RP0=0, select bank0
  9720  1B6E  1303               	bcf	3,6	;RP1=0, select bank0
  9721  1B6F  1188               	bcf	8,3	;volatile
  9722  1B70                     l62:
  9723  1B70  0008               	return
  9724  1B71                     __end_of_Lcd_Write_Char:
  9725                           
  9726                           	psect	text26
  9727  1BF8                     __ptext26:	
  9728 ;; *************** function _Lcd_Set_Cursor *****************
  9729 ;; Defined at:
  9730 ;;		line 57 in file "./Libreria2.h"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;  a               1    wreg     unsigned char 
  9733 ;;  b               1    7[COMMON] unsigned char 
  9734 ;; Auto vars:     Size  Location     Type
  9735 ;;  a               1    0[BANK0 ] unsigned char 
  9736 ;;  temp            1    1[BANK0 ] unsigned char 
  9737 ;;  y               1    0        unsigned char 
  9738 ;;  z               1    0        unsigned char 
  9739 ;; Return value:  Size  Location     Type
  9740 ;;                  1    wreg      void 
  9741 ;; Registers used:
  9742 ;;		wreg, status,2, status,0, pclath, cstack
  9743 ;; Tracked objects:
  9744 ;;		On entry : 0/0
  9745 ;;		On exit  : 0/0
  9746 ;;		Unchanged: 0/0
  9747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9748 ;;      Params:         1       0       0       0       0
  9749 ;;      Locals:         0       2       0       0       0
  9750 ;;      Temps:          1       0       0       0       0
  9751 ;;      Totals:         2       2       0       0       0
  9752 ;;Total ram usage:        4 bytes
  9753 ;; Hardware stack levels used:    1
  9754 ;; Hardware stack levels required when called:    2
  9755 ;; This function calls:
  9756 ;;		_Lcd_Cmd
  9757 ;; This function is called by:
  9758 ;;		_main
  9759 ;;		_conversion
  9760 ;; This function uses a non-reentrant model
  9761 ;;
  9762                           
  9763                           
  9764                           ;psect for function _Lcd_Set_Cursor
  9765  1BF8                     _Lcd_Set_Cursor:
  9766                           
  9767                           ;incstack = 0
  9768                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9769                           ;Lcd_Set_Cursor@a stored from wreg
  9770  1BF8  1283               	bcf	3,5	;RP0=0, select bank0
  9771  1BF9  1303               	bcf	3,6	;RP1=0, select bank0
  9772  1BFA  00A0               	movwf	Lcd_Set_Cursor@a
  9773  1BFB                     l2890:
  9774                           
  9775                           ;./Libreria2.h: 57:  {;./Libreria2.h: 58:    temp = 0x80 + b - 1;;./Libreria2.h: 59: ;./
      +                          Libreria2.h: 60: 
  9776  1BFB  0320               	decf	Lcd_Set_Cursor@a,w
  9777  1BFC  1D03               	btfss	3,2
  9778  1BFD  2BFF               	goto	u4901
  9779  1BFE  2C00               	goto	u4900
  9780  1BFF                     u4901:
  9781  1BFF  2C0C               	goto	l2896
  9782  1C00                     u4900:
  9783  1C00                     l2892:
  9784                           
  9785                           ;./Libreria2.h: 61:   Lcd_Cmd(temp);;./Libreria2.h: 62: 
  9786  1C00  0877               	movf	Lcd_Set_Cursor@b,w
  9787  1C01  3E7F               	addlw	127
  9788  1C02  00F8               	movwf	??_Lcd_Set_Cursor
  9789  1C03  0878               	movf	??_Lcd_Set_Cursor,w
  9790  1C04  00A1               	movwf	Lcd_Set_Cursor@temp
  9791  1C05                     l2894:
  9792                           
  9793                           ;./Libreria2.h: 65:  {
  9794  1C05  0821               	movf	Lcd_Set_Cursor@temp,w
  9795  1C06  160A  158A  2383  160A  158A  	fcall	_Lcd_Cmd
  9796                           
  9797                           ;./Libreria2.h: 67: 
  9798  1C0B  2C1D               	goto	l59
  9799  1C0C                     l2896:
  9800  1C0C  3002               	movlw	2
  9801  1C0D  0620               	xorwf	Lcd_Set_Cursor@a,w
  9802  1C0E  1D03               	btfss	3,2
  9803  1C0F  2C11               	goto	u4911
  9804  1C10  2C12               	goto	u4910
  9805  1C11                     u4911:
  9806  1C11  2C1D               	goto	l59
  9807  1C12                     u4910:
  9808  1C12                     l2898:
  9809                           
  9810                           ;./Libreria2.h: 69:   Lcd_Cmd(temp);;./Libreria2.h: 70: 
  9811  1C12  0877               	movf	Lcd_Set_Cursor@b,w
  9812  1C13  3EBF               	addlw	191
  9813  1C14  00F8               	movwf	??_Lcd_Set_Cursor
  9814  1C15  0878               	movf	??_Lcd_Set_Cursor,w
  9815  1C16  00A1               	movwf	Lcd_Set_Cursor@temp
  9816  1C17                     l2900:
  9817                           
  9818                           ;./Libreria2.h: 73: 
  9819  1C17  0821               	movf	Lcd_Set_Cursor@temp,w
  9820  1C18  160A  158A  2383  160A  158A  	fcall	_Lcd_Cmd
  9821  1C1D                     l59:
  9822  1C1D  0008               	return
  9823  1C1E                     __end_of_Lcd_Set_Cursor:
  9824                           
  9825                           	psect	text27
  9826  1B96                     __ptext27:	
  9827 ;; *************** function _config *****************
  9828 ;; Defined at:
  9829 ;;		line 18 in file "./Libreria2.h"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;		None
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  1    wreg      void 
  9836 ;; Registers used:
  9837 ;;		wreg, status,2
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9843 ;;      Params:         0       0       0       0       0
  9844 ;;      Locals:         0       0       0       0       0
  9845 ;;      Temps:          0       0       0       0       0
  9846 ;;      Totals:         0       0       0       0       0
  9847 ;;Total ram usage:        0 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:    1
  9850 ;; This function calls:
  9851 ;;		Nothing
  9852 ;; This function is called by:
  9853 ;;		_main
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857                           
  9858                           ;psect for function _config
  9859  1B96                     _config:
  9860  1B96                     l1918:	
  9861                           ;incstack = 0
  9862                           ; Regs used in _config: [wreg+status,2]
  9863                           
  9864                           
  9865                           ;./Libreria2.h: 20:     TRISB = 0b00000000;
  9866  1B96  1683               	bsf	3,5	;RP0=1, select bank3
  9867  1B97  1703               	bsf	3,6	;RP1=1, select bank3
  9868  1B98  0188               	clrf	8	;volatile
  9869                           
  9870                           ;./Libreria2.h: 21:     TRISD = 0b00000000;
  9871  1B99  0189               	clrf	9	;volatile
  9872  1B9A                     l1920:
  9873                           
  9874                           ;./Libreria2.h: 23:     ANSELbits.ANS0 = 1;
  9875  1B9A  3003               	movlw	3
  9876  1B9B  1683               	bsf	3,5	;RP0=1, select bank1
  9877  1B9C  1303               	bcf	3,6	;RP1=0, select bank1
  9878  1B9D  0085               	movwf	5	;volatile
  9879  1B9E                     l1922:
  9880                           
  9881                           ;./Libreria2.h: 24:     ANSELbits.ANS1 = 1;
  9882  1B9E  0186               	clrf	6	;volatile
  9883  1B9F                     l1924:
  9884                           
  9885                           ;./Libreria2.h: 25: 
  9886  1B9F  0188               	clrf	8	;volatile
  9887  1BA0                     l1926:
  9888                           
  9889                           ;./Libreria2.h: 27:     ADCON0bits.ADON=1;
  9890  1BA0  1683               	bsf	3,5	;RP0=1, select bank3
  9891  1BA1  1703               	bsf	3,6	;RP1=1, select bank3
  9892  1BA2  1408               	bsf	8,0	;volatile
  9893  1BA3                     l1928:
  9894                           
  9895                           ;./Libreria2.h: 28:     ADCON1bits.ADFM=0;
  9896  1BA3  1488               	bsf	8,1	;volatile
  9897  1BA4                     l1930:
  9898                           
  9899                           ;./Libreria2.h: 31:     INTCONbits.PEIE = 1;
  9900  1BA4  1283               	bcf	3,5	;RP0=0, select bank0
  9901  1BA5  1303               	bcf	3,6	;RP1=0, select bank0
  9902  1BA6  141F               	bsf	31,0	;volatile
  9903  1BA7                     l1932:
  9904                           
  9905                           ;./Libreria2.h: 32: 
  9906  1BA7  1683               	bsf	3,5	;RP0=1, select bank1
  9907  1BA8  1303               	bcf	3,6	;RP1=0, select bank1
  9908  1BA9  139F               	bcf	31,7	;volatile
  9909  1BAA                     l1934:
  9910                           
  9911                           ;./Libreria2.h: 34:     PIR1bits.ADIF = 0;
  9912  1BAA  178B               	bsf	11,7	;volatile
  9913  1BAB                     l1936:
  9914                           
  9915                           ;./Libreria2.h: 35: 
  9916  1BAB  170B               	bsf	11,6	;volatile
  9917  1BAC                     l1938:
  9918                           
  9919                           ;./Libreria2.h: 37: }
  9920  1BAC  170C               	bsf	12,6	;volatile
  9921  1BAD                     l1940:
  9922                           
  9923                           ;./Libreria2.h: 38: 
  9924  1BAD  1283               	bcf	3,5	;RP0=0, select bank0
  9925  1BAE  1303               	bcf	3,6	;RP1=0, select bank0
  9926  1BAF  130C               	bcf	12,6	;volatile
  9927  1BB0                     l47:
  9928  1BB0  0008               	return
  9929  1BB1                     __end_of_config:
  9930                           
  9931                           	psect	text28
  9932  1C47                     __ptext28:	
  9933 ;; *************** function _Lcd_Init *****************
  9934 ;; Defined at:
  9935 ;;		line 93 in file "./Libreria2.h"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;		None
  9938 ;; Auto vars:     Size  Location     Type
  9939 ;;		None
  9940 ;; Return value:  Size  Location     Type
  9941 ;;                  1    wreg      void 
  9942 ;; Registers used:
  9943 ;;		wreg, status,2, status,0, pclath, cstack
  9944 ;; Tracked objects:
  9945 ;;		On entry : 0/0
  9946 ;;		On exit  : 0/0
  9947 ;;		Unchanged: 0/0
  9948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9949 ;;      Params:         0       0       0       0       0
  9950 ;;      Locals:         0       0       0       0       0
  9951 ;;      Temps:          2       0       0       0       0
  9952 ;;      Totals:         2       0       0       0       0
  9953 ;;Total ram usage:        2 bytes
  9954 ;; Hardware stack levels used:    1
  9955 ;; Hardware stack levels required when called:    2
  9956 ;; This function calls:
  9957 ;;		_Lcd_Cmd
  9958 ;; This function is called by:
  9959 ;;		_main
  9960 ;; This function uses a non-reentrant model
  9961 ;;
  9962                           
  9963                           
  9964                           ;psect for function _Lcd_Init
  9965  1C47                     _Lcd_Init:
  9966  1C47                     l3118:	
  9967                           ;incstack = 0
  9968                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9969                           
  9970                           
  9971                           ;./Libreria2.h: 95: 
  9972  1C47  1283               	bcf	3,5	;RP0=0, select bank0
  9973  1C48  1303               	bcf	3,6	;RP1=0, select bank0
  9974  1C49  1108               	bcf	8,2	;volatile
  9975  1C4A                     l3120:
  9976                           
  9977                           ;./Libreria2.h: 97:     Lcd_Cmd(0x30);
  9978  1C4A  3000               	movlw	0
  9979  1C4B  160A  158A  2383  160A  158A  	fcall	_Lcd_Cmd
  9980  1C50                     l3122:
  9981                           
  9982                           ;./Libreria2.h: 98:     _delay((unsigned long)((160)*(9000000/4000000.0)));
  9983  1C50  302C               	movlw	44
  9984  1C51  00F8               	movwf	??_Lcd_Init+1
  9985  1C52  30D3               	movlw	211
  9986  1C53  00F7               	movwf	??_Lcd_Init
  9987  1C54                     u5357:
  9988  1C54  0BF7               	decfsz	??_Lcd_Init,f
  9989  1C55  2C54               	goto	u5357
  9990  1C56  0BF8               	decfsz	??_Lcd_Init+1,f
  9991  1C57  2C54               	goto	u5357
  9992  1C58  2C59               	nop2
  9993  1C59                     l3124:
  9994                           
  9995                           ;./Libreria2.h: 101:     Lcd_Cmd(0x01);
  9996  1C59  3030               	movlw	48
  9997  1C5A  160A  158A  2383  160A  158A  	fcall	_Lcd_Cmd
  9998                           
  9999                           ;./Libreria2.h: 102:     Lcd_Cmd(0x06);
 10000  1C5F  3077               	movlw	119
 10001  1C60  00F7               	movwf	??_Lcd_Init
 10002  1C61                     u5367:
 10003  1C61  0BF7               	decfsz	??_Lcd_Init,f
 10004  1C62  2C61               	goto	u5367
 10005  1C63  2C64               	nop2
 10006  1C64                     l3126:
 10007                           
 10008                           ;./Libreria2.h: 104: 
 10009  1C64  3038               	movlw	56
 10010  1C65  160A  158A  2383  160A  158A  	fcall	_Lcd_Cmd
 10011  1C6A                     l3128:
 10012                           
 10013                           ;./Libreria2.h: 105: }
 10014  1C6A  3001               	movlw	1
 10015  1C6B  160A  158A  2383  160A  158A  	fcall	_Lcd_Cmd
 10016  1C70                     l3130:
 10017  1C70  3006               	movlw	6
 10018  1C71  160A  158A  2383  160A  158A  	fcall	_Lcd_Cmd
 10019  1C76                     l3132:
 10020  1C76  300F               	movlw	15
 10021  1C77  160A  158A  2383  160A  158A  	fcall	_Lcd_Cmd
 10022  1C7C                     l71:
 10023  1C7C  0008               	return
 10024  1C7D                     __end_of_Lcd_Init:
 10025                           
 10026                           	psect	text29
 10027  1B54                     __ptext29:	
 10028 ;; *************** function _Lcd_Clear *****************
 10029 ;; Defined at:
 10030 ;;		line 52 in file "./Libreria2.h"
 10031 ;; Parameters:    Size  Location     Type
 10032 ;;		None
 10033 ;; Auto vars:     Size  Location     Type
 10034 ;;		None
 10035 ;; Return value:  Size  Location     Type
 10036 ;;                  2   52[None  ] int 
 10037 ;; Registers used:
 10038 ;;		wreg, status,2, status,0, pclath, cstack
 10039 ;; Tracked objects:
 10040 ;;		On entry : 0/0
 10041 ;;		On exit  : 0/0
 10042 ;;		Unchanged: 0/0
 10043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10044 ;;      Params:         0       0       0       0       0
 10045 ;;      Locals:         0       0       0       0       0
 10046 ;;      Temps:          0       0       0       0       0
 10047 ;;      Totals:         0       0       0       0       0
 10048 ;;Total ram usage:        0 bytes
 10049 ;; Hardware stack levels used:    1
 10050 ;; Hardware stack levels required when called:    2
 10051 ;; This function calls:
 10052 ;;		_Lcd_Cmd
 10053 ;; This function is called by:
 10054 ;;		_main
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           
 10059                           ;psect for function _Lcd_Clear
 10060  1B54                     _Lcd_Clear:
 10061  1B54                     l3116:	
 10062                           ;incstack = 0
 10063                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10064                           
 10065                           
 10066                           ;./Libreria2.h: 53: void Lcd_Set_Cursor(char a, char b)
 10067  1B54  3000               	movlw	0
 10068  1B55  160A  158A  2383  160A  158A  	fcall	_Lcd_Cmd
 10069                           
 10070                           ;./Libreria2.h: 54: {
 10071  1B5A  3001               	movlw	1
 10072  1B5B  160A  158A  2383  160A  158A  	fcall	_Lcd_Cmd
 10073  1B60                     l53:
 10074  1B60  0008               	return
 10075  1B61                     __end_of_Lcd_Clear:
 10076                           
 10077                           	psect	text30
 10078  1B83                     __ptext30:	
 10079 ;; *************** function _Lcd_Cmd *****************
 10080 ;; Defined at:
 10081 ;;		line 43 in file "./Libreria2.h"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;  a               1    wreg     unsigned char 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;  a               1    6[COMMON] unsigned char 
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  1    wreg      void 
 10088 ;; Registers used:
 10089 ;;		wreg
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10095 ;;      Params:         0       0       0       0       0
 10096 ;;      Locals:         1       0       0       0       0
 10097 ;;      Temps:          2       0       0       0       0
 10098 ;;      Totals:         3       0       0       0       0
 10099 ;;Total ram usage:        3 bytes
 10100 ;; Hardware stack levels used:    1
 10101 ;; Hardware stack levels required when called:    1
 10102 ;; This function calls:
 10103 ;;		Nothing
 10104 ;; This function is called by:
 10105 ;;		_Lcd_Clear
 10106 ;;		_Lcd_Set_Cursor
 10107 ;;		_Lcd_Init
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           
 10112                           ;psect for function _Lcd_Cmd
 10113  1B83                     _Lcd_Cmd:
 10114                           
 10115                           ;incstack = 0
 10116                           ; Regs used in _Lcd_Cmd: [wreg]
 10117                           ;Lcd_Cmd@a stored from wreg
 10118  1B83  00F6               	movwf	Lcd_Cmd@a
 10119  1B84                     l2516:
 10120                           
 10121                           ;./Libreria2.h: 44:     PORTDbits.RD3=0;
 10122  1B84  1283               	bcf	3,5	;RP0=0, select bank0
 10123  1B85  1303               	bcf	3,6	;RP1=0, select bank0
 10124  1B86  1108               	bcf	8,2	;volatile
 10125  1B87                     l2518:
 10126                           
 10127                           ;./Libreria2.h: 45: }
 10128  1B87  0876               	movf	Lcd_Cmd@a,w
 10129  1B88  0086               	movwf	6	;volatile
 10130  1B89                     l2520:
 10131                           
 10132                           ;./Libreria2.h: 46: 
 10133  1B89  1588               	bsf	8,3	;volatile
 10134                           
 10135                           ;./Libreria2.h: 47: 
 10136  1B8A  300C               	movlw	12
 10137  1B8B  00F5               	movwf	??_Lcd_Cmd+1
 10138  1B8C  30AF               	movlw	175
 10139  1B8D  00F4               	movwf	??_Lcd_Cmd
 10140  1B8E                     u5377:
 10141  1B8E  0BF4               	decfsz	??_Lcd_Cmd,f
 10142  1B8F  2B8E               	goto	u5377
 10143  1B90  0BF5               	decfsz	??_Lcd_Cmd+1,f
 10144  1B91  2B8E               	goto	u5377
 10145  1B92                     l2522:
 10146                           
 10147                           ;./Libreria2.h: 48: Lcd_Clear(){
 10148  1B92  1283               	bcf	3,5	;RP0=0, select bank0
 10149  1B93  1303               	bcf	3,6	;RP1=0, select bank0
 10150  1B94  1188               	bcf	8,3	;volatile
 10151  1B95                     l50:
 10152  1B95  0008               	return
 10153  1B96                     __end_of_Lcd_Cmd:
 10154                           
 10155                           	psect	text31
 10156  1BB1                     __ptext31:	
 10157 ;; *************** function _ISR *****************
 10158 ;; Defined at:
 10159 ;;		line 37 in file "lab3.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;		None
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;		None
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  1    wreg      void 
 10166 ;; Registers used:
 10167 ;;		wreg
 10168 ;; Tracked objects:
 10169 ;;		On entry : 0/0
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10173 ;;      Params:         0       0       0       0       0
 10174 ;;      Locals:         0       0       0       0       0
 10175 ;;      Temps:          4       0       0       0       0
 10176 ;;      Totals:         4       0       0       0       0
 10177 ;;Total ram usage:        4 bytes
 10178 ;; Hardware stack levels used:    1
 10179 ;; This function calls:
 10180 ;;		Nothing
 10181 ;; This function is called by:
 10182 ;;		Interrupt level 1
 10183 ;; This function uses a non-reentrant model
 10184 ;;
 10185                           
 10186                           
 10187                           ;psect for function _ISR
 10188  1BB1                     _ISR:
 10189  1BB1                     i1l3156:
 10190                           
 10191                           ;lab3.c: 39:      if (PIR1bits.ADIF ==1){
 10192  1BB1  1283               	bcf	3,5	;RP0=0, select bank0
 10193  1BB2  1303               	bcf	3,6	;RP1=0, select bank0
 10194  1BB3  1F0C               	btfss	12,6	;volatile
 10195  1BB4  2BB6               	goto	u532_21
 10196  1BB5  2BB7               	goto	u532_20
 10197  1BB6                     u532_21:
 10198  1BB6  2BCC               	goto	i1l77
 10199  1BB7                     u532_20:
 10200  1BB7                     i1l3158:
 10201                           
 10202                           ;lab3.c: 40:         PIR1bits.ADIF = 0;
 10203  1BB7  130C               	bcf	12,6	;volatile
 10204  1BB8                     i1l3160:
 10205                           
 10206                           ;lab3.c: 41:         c = ADRESH;
 10207  1BB8  081E               	movf	30,w	;volatile
 10208  1BB9  00F0               	movwf	??_ISR
 10209  1BBA  01F1               	clrf	??_ISR+1
 10210  1BBB  0870               	movf	??_ISR,w
 10211  1BBC  1683               	bsf	3,5	;RP0=1, select bank1
 10212  1BBD  1303               	bcf	3,6	;RP1=0, select bank1
 10213  1BBE  00D8               	movwf	_c^(0+128)
 10214  1BBF  0871               	movf	??_ISR+1,w
 10215  1BC0  00D9               	movwf	(_c+1)^(0+128)
 10216                           
 10217                           ;lab3.c: 42:         b = ADRESH;
 10218  1BC1  1283               	bcf	3,5	;RP0=0, select bank0
 10219  1BC2  1303               	bcf	3,6	;RP1=0, select bank0
 10220  1BC3  081E               	movf	30,w	;volatile
 10221  1BC4  00F0               	movwf	??_ISR
 10222  1BC5  01F1               	clrf	??_ISR+1
 10223  1BC6  0870               	movf	??_ISR,w
 10224  1BC7  1683               	bsf	3,5	;RP0=1, select bank1
 10225  1BC8  1303               	bcf	3,6	;RP1=0, select bank1
 10226  1BC9  00D6               	movwf	_b^(0+128)
 10227  1BCA  0871               	movf	??_ISR+1,w
 10228  1BCB  00D7               	movwf	(_b+1)^(0+128)
 10229  1BCC                     i1l77:
 10230  1BCC  0873               	movf	??_ISR+3,w
 10231  1BCD  008A               	movwf	10
 10232  1BCE  0E72               	swapf	??_ISR+2,w
 10233  1BCF  0083               	movwf	3
 10234  1BD0  0EFE               	swapf	btemp,f
 10235  1BD1  0E7E               	swapf	btemp,w
 10236  1BD2  0009               	retfie
 10237  1BD3                     __end_of_ISR:
 10238  007E                     btemp	set	126	;btemp
 10239  007E                     wtemp0	set	126
 10240                           
 10241                           	psect	intentry
 10242  0004                     __pintentry:	
 10243                           ;incstack = 0
 10244                           ; Regs used in _ISR: [wreg]
 10245                           
 10246  0004                     interrupt_function:
 10247  007E                     saved_w	set	btemp
 10248  0004  00FE               	movwf	btemp
 10249  0005  0E03               	swapf	3,w
 10250  0006  00F2               	movwf	??_ISR+2
 10251  0007  080A               	movf	10,w
 10252  0008  00F3               	movwf	??_ISR+3
 10253  0009  160A  158A  2BB1   	ljmp	_ISR
 10254                           
 10255                           	psect	config
 10256                           
 10257                           ;Config register CONFIG1 @ 0x2007
 10258                           ;	Oscillator Selection bits
 10259                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 10260                           ;	Watchdog Timer Enable bit
 10261                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10262                           ;	Power-up Timer Enable bit
 10263                           ;	PWRTE = OFF, PWRT disabled
 10264                           ;	RE3/MCLR pin function select bit
 10265                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10266                           ;	Code Protection bit
 10267                           ;	CP = OFF, Program memory code protection is disabled
 10268                           ;	Data Code Protection bit
 10269                           ;	CPD = OFF, Data memory code protection is disabled
 10270                           ;	Brown Out Reset Selection bits
 10271                           ;	BOREN = OFF, BOR disabled
 10272                           ;	Internal External Switchover bit
 10273                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10274                           ;	Fail-Safe Clock Monitor Enabled bit
 10275                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10276                           ;	Low Voltage Programming Enable bit
 10277                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10278                           ;	In-Circuit Debugger Mode bit
 10279                           ;	DEBUG = 0x1, unprogrammed default
 10280  2007                     	org	8199
 10281  2007  20D4               	dw	8404
 10282                           
 10283                           ;Config register CONFIG2 @ 0x2008
 10284                           ;	Brown-out Reset Selection bit
 10285                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10286                           ;	Flash Program Memory Self Write Enable bits
 10287                           ;	WRT = OFF, Write protection off
 10288  2008                     	org	8200
 10289  2008  3FFF               	dw	16383

Data Sizes:
    Strings     44
    Constant    144
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     79      79
    BANK1            80     46      59
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> buffer(BANK1[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> buffer(BANK1[1]), STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[17]), 
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _conversion->_Lcd_Write_String
    _conversion->___wmul
    _sprintf->___lldiv
    _sprintf->___wmul
    ___awdiv->___wmul
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___flmul->___lwmod
    ___xxtofl->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_conversion
    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___flmul->___awdiv
    ___xxtofl->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _conversion->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   36961
                                             43 BANK1      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _config
                         _conversion
 ---------------------------------------------------------------------------------
 (1) _conversion                                           2     2      0   35737
                                             77 BANK0      2     2      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                             ___wmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   31595
                                              8 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7712
                                             37 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              4 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1668
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    5871
                                             37 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              0 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4393
                                             11 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              4 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              4 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                             11 BANK0     14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     700
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              4 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              4 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             56 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             57 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              4 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              4 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              4 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     568
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     612
                                              7 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      22
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _config
   _conversion
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      94       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2E      3B       7       73.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      94      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 11 22:47:06 2021

                        _b 00D6                          _c 00D8                          pc 0002  
                       l50 1B95                         l53 1B60                         l62 1B70  
                       l71 1C7C                         l47 1BB0                         l90 093B  
                       l59 1C1D                         l68 1CC0               ___awdiv@sign 0028  
                       fsr 0004        ___wmul@multiplicand 0076        __Umul8_16@word_mpld 0022  
                      l305 1133                        l218 0093                        l251 0599  
                      l244 0555                        l422 1E6A                        l271 1BF7  
                      l600 1682                        l440 12CF                        l192 1577  
                      l265 07A7                        l602 1659                        l450 135D  
                      l443 132D                        l435 1E01                        l259 0760  
                      l460 1F7A                        l621 1771                        l525 07FD  
                      l269 1BDF                        l630 17D1                        l455 1D25  
                      l463 1FE6                        l439 136A                        l711 1C34  
                      l199 0FFF                        l456 1D41                        l464 1FFF  
                      l472 1F5B                        l704 0C90                        l457 1D56  
                      l617 174D                        l609 17FF                        l713 1C46  
                      l642 1DA6                        l482 1F5B                        l490 126F  
                      l627 1793                        l468 1B53                        l638 17F3  
                      l750 11C5                        l742 119D                        l486 12AC  
                      l639 17FF                        l479 1F46                        l487 121E  
                      l575 1D06                        l736 1158                        l497 129F  
                      l585 083E                        l738 11EF                        l596 15DB  
                      l692 0C9C                        l756 1B82                        l749 11B9  
                      l698 0C08                        _ISR 1BB1                        fsr0 0004  
                      indf 0000               ___awmod@sign 0021               ___flmul@aexp 003D  
             ___flmul@bexp 003E                _sprintf$988 00B2               ___flmul@sign 0038  
             ___flmul@temp 0043               ___flmul@prod 003F                       ?_ISR 0070  
             ___fltol@exp1 0062                       l2100 1DAE                       l2110 1DC4  
                     l2102 1DB3                       l2200 159F                       l2040 1C23  
                     l2120 1DE0                       l2112 1DC7                       l2104 1DB5  
                     l3000 0326                       l2210 15B9                       l2202 15A7  
                     l2042 1C2A                       l2130 1DFD                       l2122 1DE6  
                     l2114 1DCE                       l2106 1DB9                       l3002 034F  
                     l2300 16C3                       l2220 15D0                       l2212 15BD  
                     l2204 15AC                       l2044 1C2E                       l2140 1CCE  
                     l2060 1E10                       l2052 1E02                       l2124 1DED  
                     l2116 1DD2                       l2108 1DBE                       l3100 0789  
                     l3020 0454                       l3012 03C9                       l3004 0358  
                     l2310 172B                       l2302 16CC                       l2230 15E9  
                     l2222 15D1                       l2214 15BE                       l2206 15B2  
                     l2046 1C3D                       l2038 1C21                       l2150 1CF4  
                     l2142 1CD5                       l2134 1CC1                       l2070 1E25  
                     l2062 1E14                       l2054 1E05                       l2118 1DD6  
                     l2126 1DF3                       l3030 048D                       l3006 0360  
                     l3014 03D2                       l3120 1C4A                       l2312 1730  
                     l2304 16D1                       l2240 15FD                       l2232 15ED  
                     l2216 15C3                       l2224 15D3                       l2208 15B3  
                     l2048 1C42                       l2400 0979                       l2152 1CF5  
                     l2144 1CD9                       l2136 1CC5                       l2160 0805  
                     l2080 1E48                       l2072 1E28                       l2064 1E19  
                     l2056 1E09                       l2128 1DF8                       l3040 050A  
                     l3032 0497                       l3016 0407                       l3008 037E  
                     l3104 0791                       l3130 1C70                       l3122 1C50  
                     l2330 1778                       l2322 1763                       l2306 16E7  
                     l2314 173F                       l2250 1611                       l2242 1601  
                     l2234 15F1                       l2226 15E1                       l2218 15C8  
                     l2410 098E                       l2402 097A                       l2154 1CFC  
                     l2146 1CDD                       l2138 1CCB                       l2170 081D  
                     l2162 080B                       l2090 1E61                       l2082 1E4E  
                     l2074 1E2F                       l2066 1E1D                       l2058 1E0E  
                     l3050 0570                       l3042 0549                       l3034 04A3  
                     l3026 0456                       l3018 0452                       l3106 07A3  
                     l3116 1B54                       l3132 1C76                       l3124 1C59  
                     l2340 1786                       l2332 177A                       l2324 176C  
                     l2316 1755                       l2308 1725                       l2252 1615  
                     l2244 1605                       l2236 15F5                       l2228 15E5  
                     l2260 1625                       l2500 0C6A                       l2420 09A9  
                     l2412 0996                       l2404 097F                       l2148 1CEE  
                     l2156 1D02                       l2172 0827                       l2164 080E  
                     l2092 1E66                       l2084 1E4F                       l2076 1E33  
                     l2068 1E1F                       l3060 05A7                       l3052 057D  
                     l3044 055D                       l3036 04AA                       l3140 0854  
                     l3126 1C64                       l3118 1C47                       l2350 179D  
                     l2342 178A                       l2334 177F                       l2326 1770  
                     l2318 175A                       l2270 1668                       l2262 1626  
                     l2254 1619                       l2246 1609                       l2238 15F9  
                     l2190 158A                       l2182 1578                       l2510 0C89  
                     l2502 0C74                       l2430 0A2B                       l2422 09B9  
                     l2414 099B                       l2406 0984                       l2174 082D  
                     l2166 0815                       l2086 1E56                       l2078 1E37  
                     l3070 0686                       l3062 05AE                       l3054 058C  
                     l3046 0566                       l3038 04AF                       l3214 00A9  
                     l3150 090D                       l3142 089B                       l3134 0842  
                     l2520 1B89                       l3128 1C6A                       l2360 17DB  
                     l2352 17AB                       l2344 1790                       l2328 1775  
                     l2336 1781                       l2280 1686                       l2272 166C  
                     l2264 163D                       l2256 161D                       l2248 160D  
                     l2192 158F                       l2184 157F                       l2512 0C94  
                     l2504 0C76                       l2440 0A99                       l2432 0A47  
                     l2424 09C6                       l2416 09A0                       l2408 098C  
                     l2176 0834                       l2168 0819                       l2088 1E5C  
                     l2096 1DA7                       l3080 073B                       l3072 06C5  
                     l3064 05B2                       l3056 0593                       l3048 056A  
                     l3152 0923                       l3144 08B1                       l3136 084B  
                     l2522 1B92                       l2530 1B6D                       l2370 17EF  
                     l2362 17E3                       l2354 17AF                       l2290 16AF  
                     l2338 1785                       l2282 168B                       l2274 166D  
                     l2266 165D                       l2258 1621                       l2194 1594  
                     l2186 1585                       l2602 11F0                       l2506 0C84  
                     l2450 0B29                       l2442 0AA9                       l2434 0A63  
                     l2426 09E3                       l2178 083A                       l2098 1DAA  
                     l3090 075A                       l3082 073F                       l3074 06D1  
                     l3066 05D0                       l3058 05A2                       l3154 0938  
                     l3146 08C2                       l3138 084F                       l3170 1EA5  
                     l3162 1E6B                       l2516 1B84                       l2524 1B62  
                     l2372 17FA                       l2364 17E8                       l2356 17CD  
                     l2348 1798                       l2292 16B3                       l2276 1676  
                     l2268 1666                       l2196 159C                       l2188 1589  
                     l2700 1352                       l2620 1236                       l2604 1203  
                     l2508 0C88                       l2460 0BBD                       l2452 0B39  
                     l2444 0AC6                       l2436 0A6C                       l2428 09FF  
                     l2380 0949                       l2540 1483                       l2532 136E  
                     l3092 076B                       l3084 0745                       l3068 062B  
                     l3076 072C                       l3148 08C6                       l3180 1ED0  
                     l3172 1EAA                       l3164 1E7D                       l2518 1B87  
                     l2526 1B65                       l2374 17FE                       l2366 17E9  
                     l2358 17D6                       l2294 16BC                       l2286 1694  
                     l2278 167A                       l2198 159D                       l2710 1BD9  
                     l2702 1362                       l2630 1261                       l2622 123F  
                     l2614 121F                       l2470 0BE2                       l2462 0BCB  
                     l2454 0B66                       l2446 0ADF                       l2438 0A7C  
                     l2390 0960                       l2382 094D                       l2542 1489  
                     l2534 1374                       l2550 0CA0                       l3094 076C  
                     l3078 0734                       l3086 074C                       l3182 1ED6  
                     l3174 1EB2                       l3166 1E86                       l1920 1B9A  
                     l2528 1B67                       l2368 17ED                       l2296 16BE  
                     l2288 16AB                       l2800 1F1A                       l2720 10CC  
                     l2712 1BE6                       l2640 127B                       l2632 1269  
                     l2624 1248                       l2616 1225                       l2608 120C  
                     l2480 0C05                       l2464 0BD4                       l2472 0BE8  
                     l2456 0B8C                       l2448 0AFC                       l2392 0962  
                     l2384 094E                       l2376 093C                       l2552 0CA4  
                     l3096 077B                       l3088 0752                       l3176 1EBB  
                     l3168 1E97                       l1930 1BA4                       l1922 1B9E  
                     l2298 16C2                       l2730 10FB                       l2722 10DE  
                     l2714 1BED                       l2706 1BD3                       l2650 12A4  
                     l2634 1273                       l2642 128D                       l2626 1256  
                     l2618 1234                       l2490 0C24                       l2474 0BEC  
                     l2466 0BD8                       l2458 0BB4                       l2394 096A  
                     l2386 0953                       l2378 0943                       l2546 1534  
                     l2562 0D97                       l2554 0CA6                       l3098 077B  
                     l3178 1EC7                       l1940 1BAD                       l1932 1BA7  
                     l1924 1B9F                       l2900 1C17                       l2732 110D  
                     l2724 10E1                       l2740 112B                       l2820 07A8  
                     l2716 1BF3                       l2708 1BD5                       l2660 12C3  
                     l2628 1260                       l2492 0C3D                       l2484 0C0D  
                     l2476 0BED                       l2468 0BD9                       l2396 096F  
                     l2388 0958                       l2580 0F44                       l2564 0D9E  
                     l2556 0CAD                       l2572 0E53                       l1934 1BAA  
                     l1926 1BA0                       l1918 1B96                       l2902 1C7D  
                     l2750 1D53                       l2814 1F3B                       l2806 1F22  
                     l2734 111B                       l2726 10EE                       l2830 07D8  
                     l2822 07B2                       l2670 12E9                       l2654 12AD  
                     l2486 0C12                       l2494 0C43                       l2478 0BF1  
                     l2398 0975                       l2590 1B72                       l2582 0F4B  
                     l2574 0E5A                       l2910 0025                       l1936 1BAB  
                     l1928 1BA3                       l2904 1C80                       l2752 1D55  
                     l2744 1D07                       l2760 1F8E                       l2840 1D57  
                     l2816 1F4B                       l2808 1F34                       l2736 111C  
                     l2728 10F2                       l2832 07E6                       l2824 07B5  
                     l2680 131D                       l2672 12EB                       l2656 12BA  
                     l2648 1294                       l2496 0C50                       l2488 0C20  
                     l2592 1B73                       l2568 0E26                       l2920 003E  
                     l2912 002A                       l1938 1BAC                       l2906 1C9C  
                     l2746 1D1D                       l2770 1FFC                       l2762 1F96  
                     l2842 1D5B                       l2818 1F50                       l2738 1125  
                     l2834 07EF                       l2826 07C2                       l2850 1140  
                     l2682 131E                       l2674 12F4                       l2666 12D0  
                     l2498 0C5B                       l2594 1B79                       l2586 0FD3  
                     l2930 0067                       l2922 004A                       l2914 0030  
                     l2908 1CA2                       l2748 1D39                       l2772 1FFE  
                     l2764 1F9A                       l2756 1F5C                       l2780 1B53  
                     l2828 07C6                       l2836 07F5                       l2860 116E  
                     l2852 1150                       l2692 1339                       l2684 1327  
                     l2676 12FD                       l2668 12D8                       l2596 1B7F  
                     l2932 007A                       l2924 004B                       l2916 0037  
                     l2766 1FBE                       l2758 1F72                       l2790 1EF6  
                     l2870 11A4                       l2862 117B                       l2854 1160  
                     l2846 1137                       l2686 1331                       l2694 134B  
                     l2678 130F                       l2598 1B81                       l2950 00C5  
                     l2942 0095                       l2934 007E                       l2926 004F  
                     l2918 003C                       l2768 1FC2                       l2776 1B49  
                     l2792 1F0B                       l2784 1EE0                       l2880 11DD  
                     l2872 11AF                       l2864 1182                       l2848 113C  
                     l2960 011B                       l2952 00D3                       l2944 00B1  
                     l2928 0052                       l2936 008F                       l2890 1BFB  
                     l2778 1B51                       l2794 1F0C                       l2786 1EED  
                     l2882 11E2                       l2874 11B3                       l2866 1186  
                     l2858 1169                       l2970 016A                       l2962 011F  
                     l2954 00D7                       l2946 00BD                       l2938 0091  
                     l2892 1C00                       l2796 1F14                       l2884 11E6  
                     l2876 11BD                       l2868 1194                       l2980 0201  
                     l2972 018D                       l2964 0146                       l2956 00FE  
                     l2948 00C1                       l2894 1C05                       l2798 1F16  
                     l2886 11E7                       l2878 11C7                       l2990 0271  
                     l2982 0228                       l2974 0191                       l2966 0151  
                     l2958 0117                       l2896 1C0C                       l2992 02B8  
                     l2984 0231                       l2976 0197                       l2968 0157  
                     l2898 1C12                       l2994 02C7                       l2986 025A  
                     l2978 01B6                       l2996 02F0                       l2988 0262  
                     l2998 0317                       STR_1 10B1                       STR_2 10A0  
                     STR_3 10BB                       STR_4 10C1                       STR_5 10C7  
                     STR_6 10C7                       u3010 083A                       u3011 0839  
                     u3100 15E5                       u3020 1589                       u3101 15E4  
                     u3021 1588                       u3005 082E                       u3110 163D  
                     u3030 158F                       u3111 163C                       u3031 158E  
                     u3120 1648                       u3040 1594                       u3201 169D  
                     u3121 1646                       u3041 1593                       u3210 16AF  
                     u3202 16A4                       u3130 1649                       u3050 15B2  
                     u3211 16AE                       u3203 16AB                       u3115 1639  
                     u3051 15B1                       u3300 175A                       u3220 16B3  
                     u3140 165D                       u3060 15BD                       u4100 1B79  
                     u4020 0E5A                       u3301 1759                       u3221 16B2  
                     u3141 165C                       u3061 15BC                       u4101 1B78  
                     u4021 0E59                       u4005 0DED                       u3230 16C2  
                     u3150 166C                       u3070 15C3                       u4110 1B7F  
                     u3231 16C1                       u3151 166B                       u3071 15C2  
                     u4111 1B7E                       u4015 0E29                       u3400 17AF  
                     u3320 1770                       u3080 15C8                       u4120 1203  
                     u5000 00FE                       u3401 17AE                       u3321 176F  
                     u3081 15C7                       u4121 1202                       u5001 00FD  
                     u3410 17BE                       u3330 1775                       u3250 16E7  
                     u3170 1682                       u3090 15E1                       u4210 128C  
                     u4130 121D                       u5010 0146                       u3331 1774  
                     u3315 1765                       u3251 16E6                       u3171 1681  
                     u3091 15E0                       u4211 128B                       u4131 121C  
                     u4035 0E7C                       u5011 0145                       u3420 17CD  
                     u3340 177F                       u3180 1686                       u4300 132D  
                     u4220 1293                       u3500 0958                       u2700 1E09  
                     u4060 0F4B                       u5100 034F                       u5020 0191  
                     u3421 17CC                       u3341 177E                       u3261 16FE  
                     u3253 16E3                       u3245 16C5                       u3181 1685  
                     u3165 166F                       u4301 132C                       u4221 1292  
                     u4205 127C                       u3501 0957                       u2701 1E08  
                     u4061 0F4A                       u4045 0EB8                       u5101 034E  
                     u5021 0190                       u3430 17D6                       u3350 1785  
                     u3270 1712                       u3262 16FF                       u3190 168B  
                     u4310 1331                       u4150 1256                       u3510 0979  
                     u2710 1E14                       u5030 0228                       u3431 17D5  
                     u3415 17B9                       u3351 1784                       u3271 1713  
                     u3263 1704                       u3191 168A                       u4311 1330  
                     u4151 1255                       u3511 0978                       u2711 1E13  
                     u4055 0F03                       u5031 0227                       u3440 17DB  
                     u3360 178A                       u3280 1730                       u3272 1718  
                     u3264 1705                       u4320 1338                       u4240 12A4  
                     u3520 097F                       u2720 1E25                       u2800 1DAE  
                     u5120 048C                       u5040 025A                       u3441 17DA  
                     u3361 1789                       u3281 172F                       u3273 1719  
                     u3265 170A                       u4321 1337                       u4241 12A3  
                     u4145 1241                       u3521 097E                       u2721 1E24  
                     u2801 1DAD                       u5121 048B                       u5041 0259  
                     u3450 17E8                       u3370 1790                       u3290 1755  
                     u3266 170B                       u4410 1BF3                       u4250 12BA  
                     u4170 126F                       u3530 0984                       u2810 1DB9  
                     u5130 0497                       u5050 0271                       u3451 17E7  
                     u3371 178F                       u3291 1754                       u4411 1BF2  
                     u4251 12B9                       u4235 1296                       u4171 126E  
                     u4155 1252                       u3611 0A8B                       u3531 0983  
                     u2811 1DB8                       u4075 0F5E                       u5131 0496  
                     u5115 0459                       u5051 0270                       u4500 1D39  
                     u3460 17ED                       u3380 1797                       u4420 10DE  
                     u4340 134A                       u4260 12CE                       u4180 1273  
                     u3612 0A92                       u3540 099B                       u2740 1E37  
                     u2820 1DC4                       u5220 0733                       u5140 04A3  
                     u5060 02C7                       u5300 084F                       u4501 1D38  
                     u3461 17EC                       u3381 1796                       u4421 10DD  
                     u4405 1BE7                       u4341 1349                       u4261 12CD  
                     u4181 1272                       u4165 1262                       u3701 0BA6  
                     u3621 0AB8                       u3613 0A99                       u3605 0A65  
                     u3541 099A                       u2741 1E36                       u2821 1DC3  
                     u4085 0F9A                       u5221 0732                       u5205 062E  
                     u5141 04A2                       u5125 0488                       u5061 02C6  
                     u5301 084E                       u4510 1D53                       u3470 17FE  
                     u3390 179D                       u4350 1351                       u4190 127A  
                     u2670 1C2E                       u3702 0BAD                       u3622 0ABF  
                     u3550 09A0                       u2910 1CDD                       u5230 074B  
                     u5070 02F0                       u5310 0854                       u4511 1D52  
                     u3471 17FD                       u3391 179C                       u4351 1350  
                     u4335 133A                       u4191 1279                       u2671 1C2D  
                     u3703 0BB4                       u3623 0AC6                       u3551 099F  
                     u2911 1CDC                       u2735 1E29                       u4095 0FD6  
                     u5231 074A                       u5215 06D4                       u5071 02EF  
                     u5055 026D                       u5311 0853                       u4520 1F72  
                     u4600 1EED                       u4440 10F2                       u4280 130F  
                     u3800 0C24                       u3480 094D                       u2760 1E48  
                     u2840 1DD6                       u5240 0752                       u5160 055C  
                     u5080 0317                       u4521 1F71                       u4601 1EEC  
                     u4441 10F1                       u4281 130E                       u3801 0C23  
                     u3641 0AEE                       u3561 09F1                       u3481 094C  
                     u2905 1CCF                       u2761 1E47                       u2841 1DD5  
                     u5241 0751                       u5161 055B                       u5081 0316  
                     u5065 02C3                       u4530 1F8E                       u4610 1F04  
                     u4370 1362                       u2690 1C42                       u3810 0C33  
                     u3730 0BD8                       u3642 0AF5                       u3562 09F8  
                     u3490 0953                       u2930 1CEE                       u2850 1DE0  
                     u5250 075A                       u5170 057D                       u5090 0326  
                     u4515 1D4F                       u4531 1F8D                       u4435 10E3  
                     u4371 1361                       u4275 12F6                       u2691 1C41  
                     u3731 0BD7                       u3715 0BB6                       u3651 0B1B  
                     u3643 0AFC                       u3635 0AC8                       u3571 0A0D  
                     u3563 09FF                       u3491 0952                       u2931 1CED  
                     u2755 1E38                       u2851 1DDF                       u2835 1DC8  
                     u5251 0759                       u5171 057C                       u5155 04B2  
                     u5091 0325                       u4540 1F9A                       u4620 1F1A  
                     u4460 110D                       u4700 07B2                       u4380 1BD9  
                     u3820 0C50                       u3652 0B22                       u3572 0A14  
                     u2780 1E5C                       u5260 076B                       u5180 058C  
                     u4541 1F99                       u4621 1F19                       u4461 110C  
                     u4701 07B1                       u4381 1BD8                       u4365 1354  
                     u4285 130B                       u2685 1C35                       u3821 0C4F  
                     u3725 0BCD                       u3661 0B48                       u3653 0B29  
                     u3581 0A39                       u3573 0A1B                       u2925 1CDE  
                     u2781 1E5B                       u2765 1E44                       u5261 076A  
                     u5181 058B                       u4630 1F21                       u3830 0C6A  
                     u3750 0BEC                       u3670 0B72                       u3662 0B4F  
                     u3582 0A40                       u2950 1D02                       u2790 1E61  
                     u2870 1DF3                       u5270 077B                       u5190 05A7  
                     u4551 1FA9                       u4631 1F20                       u4615 1EFF  
                     u4455 10F4                       u4295 1320                       u3831 0C69  
                     u3815 0C2E                       u3751 0BEB                       u3663 0B56  
                     u3591 0A55                       u3583 0A47                       u2951 1D01  
                     u2935 1CEA                       u2791 1E60                       u2775 1E50  
                     u2871 1DF2                       u2855 1DDC                       u5271 077A  
                     u5191 05A6                       u5175 0579                       u5095 0322  
                     u4560 1FC2                       u4552 1FAA                       u4480 112B  
                     u4720 07C6                       u4800 1181                       u3840 0C88  
                     u3760 0BF1                       u3592 0A5C                       u2960 080B  
                     u2880 1DF8                       u5280 0789                       u4561 1FC1  
                     u4553 1FAF                       u4481 112A                       u4465 1109  
                     u4721 07C5                       u4801 1180                       u3841 0C87  
                     u3825 0C4C                       u3761 0BF0                       u3745 0BDB  
                     u3681 0B7E                       u3593 0A63                       u2945 1CF6  
                     u2961 080A                       u3905 14A6                       u2881 1DF7  
                     u2865 1DE7                       u5281 0788                       u5265 0767  
                     u5185 0588                       u5337 1E9F                       u4490 1D1D  
                     u4554 1FB0                       u4650 1F33                       u4730 07D8  
                     u3770 0C05                       u3690 0B9A                       u3682 0B85  
                     u2890 1CCB                       u3850 1374                       u3930 0CA4  
                     u5290 07A3                       u5347 1B6A                       u4491 1D1C  
                     u4571 1FD1                       u4555 1FB5                       u4651 1F32  
                     u4475 111D                       u4731 07D7                       u4715 07B7  
                     u4395 1BE0                       u3835 0C66                       u3771 0C04  
                     u3683 0B8C                       u3675 0B6D                       u2891 1CCA  
                     u3915 14F3                       u3851 1373                       u3931 0CA3  
                     u5291 07A2                       u5275 0777                       u4900 1C00  
                     u4580 1FFC                       u4572 1FD2                       u4556 1FB6  
                     u4660 1F3A                       u4820 11A3                       u3780 0C0C  
                     u2980 081D                       u3940 0CAD                       u5357 1C54  
                     u4901 1BFF                       u4581 1FFB                       u4573 1FD7  
                     u4661 1F39                       u4645 1F23                       u4821 11A2  
                     u3781 0C0B                       u2981 081C                       u3925 153F  
                     u3941 0CAC                       u4910 1C12                       u4574 1FD8  
                     u4590 1B51                       u4750 07F5                       u3790 0C12  
                     u2990 0827                       u5367 1C61                       u4911 1C11  
                     u4575 1FDD                       u4591 1B50                       u4751 07F4  
                     u4735 07D4                       u4815 1195                       u3791 0C11  
                     u3695 0B95                       u2991 0826                       u2975 080F  
                     u4920 1C8A                       u4576 1FDE                       u4680 1F4B  
                     u4840 11B3                       u4760 113C                       u5377 1B8E  
                     u4585 1FF8                       u4681 1F4A                       u4745 07E7  
                     u4841 11B2                       u4761 113B                       u3865 1391  
                     u4930 1CAE                       u4690 1F50                       u4850 11B9  
                     u4770 1140                       u3890 1489                       u4691 1F4F  
                     u4675 1F3D                       u4851 11B8                       u4835 11A8  
                     u4771 113F                       u2995 0823                       u3891 1488  
                     u3875 13ED                       u3955 0CCF                       u4940 1CC0  
                     u4860 11BD                       u4780 1160                       u3980 0D9E  
                     i1l77 1BCC                       u4941 1CBF                       u4861 11BC  
                     u4781 115F                       u3885 1442                       u3981 0D9D  
                     u3965 0D0B                       u4870 11D2                       u4950 0030  
                     u3975 0D56                       u4951 002F                       u4880 11E2  
                     u4960 004A                       u4881 11E1                       u4961 0049  
                     u4890 11E6                       u4970 008E                       u4891 11E5  
                     u4875 11CD                       u4795 1173                       u3995 0DB1  
                     u4971 008D                       u4980 00BD                       u4981 00BC  
                     u4990 00C1                       u4991 00C0          ?_Lcd_Write_String 0076  
                     _main 1E6B                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0020            __end_of_Lcd_Cmd 1B96                      ??_ISR 0070  
            ___fltol@sign1 0061            __end_of___fladd 1800                      ?_main 0070  
          __end_of___awdiv 1E6B            __end_of___flneg 1B54            __end_of___awmod 1E02  
          __end_of___flmul 0C9D            __end_of___flsub 1DA7            __end_of___fltol 1F5C  
                    _ANSEL 0188            __end_of___lldiv 1134            ___awdiv@divisor 0022  
          __end_of___llmod 07FE            __end_of___lwdiv 1D07            __end_of___lwmod 083F  
          ___awdiv@counter 0027                      _PORTB 0006    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
          __end_of_dpowers 10A0                      _scale 0C9D            __end_of_isdigit 1B83  
                    _vpot1 00D2                      _vpot2 00CE                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07A8  
         __end_of_Lcd_Init 1C7D            __initialization 000F               __end_of_main 1EE0  
                   ??_main 00CB         __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD  
         ___llmod@dividend 0024                     ?_scale 0045                     _ADRESH 001E  
         ___awdiv@dividend 0024                     _ANSELH 0189                     i1l3160 1BB8  
                   i1l3156 1BB1                     i1l3158 1BB7                     u532_20 1BB7  
                   u532_21 1BB6                  ??_Lcd_Cmd 0074    __size_of_Lcd_Write_Char 0010  
         __end_of___xxtofl 11F0           __end_of__powers_ 1044                     ___flge 1F5C  
                   ___fleq 1D07                  ??___fladd 0061                     ___wmul 1BD3  
                ??___awdiv 0026                  ??___flneg 0078                  ??___awmod 0078  
                ??___flmul 0033                  ??___flsub 007A                  ??___fltol 005C  
                ??___lldiv 0074                  ??___llmod 0074                  ??___lwdiv 0024  
                ??___lwmod 0078                     _config 1B96                     _buffer 00DA  
                   _fround 136B           ___awdiv@quotient 0029            ___awmod@divisor 0074  
          ___awmod@counter 0020                  ??_isdigit 0074         __size_of__Umul8_16 0029  
                   saved_w 007E                  ??_sprintf 00AD            Lcd_Set_Cursor@a 0020  
          Lcd_Set_Cursor@b 0077                 ___flge@ff1 0020                 ___flge@ff2 0024  
             ___xxtofl@arg 0035               ___xxtofl@exp 0034               ___xxtofl@val 002B  
               ___fleq@ff1 0020                 ___fleq@ff2 0024    __end_of__initialization 001E  
               ___flneg@f1 0074          __end_of_Lcd_Clear 1B61                 ___fltol@f1 0058  
           __pcstackCOMMON 0070              __end_of_scale 1000             _Lcd_Set_Cursor 1BF8  
               __div_to_l_ 12AD                  ?_Lcd_Init 0070            __div_to_l_@exp1 002D  
          __div_to_l_@cntr 002C                    ??_scale 0049            __div_to_l_@quot 0028  
               __pbssBANK1 00CE              __div_to_l_@f1 0020              __div_to_l_@f2 0024  
        __end_of__Umul8_16 1C47                 __pmaintext 1E6B                    ?___flge 0020  
                  ?___fleq 0020                    ?___wmul 0074                 __pintentry 0004  
                  ?_config 0070                    ?_fround 0045  __size_of_Lcd_Write_String 0044  
   __end_of_Lcd_Set_Cursor 1C1E                  ?___xxtofl 002B                 ??_Lcd_Init 0077  
               __stringtab 1000             _Lcd_Write_Char 1B61                    _Lcd_Cmd 1B83  
               _conversion 083F          __end_of__npowers_ 1078            __size_of___flge 00A4  
          __size_of___fleq 0050                    ___fladd 1578                    ___awdiv 1E02  
                  ___flneg 1B49                    ___awmod 1DA7                    ___flmul 093C  
                  ___flsub 1D57                    ___fltol 1EE0                    ___lldiv 10CC  
          __size_of___wmul 0025                    ___llmod 07A8                    ___lwdiv 1CC1  
               _fround$985 0054                 _fround$986 0050                    ___lwmod 0805  
          __size_of_config 001B                  _ANSELbits 0188            __size_of_fround 020D  
          ?_Lcd_Set_Cursor 0077                    __ptext1 083F                    __ptext2 0022  
                  __ptext3 0C9D                    __ptext4 1DA7                    __ptext5 1E02  
                  __ptext6 1B71                    __ptext7 136B                    __ptext8 0805  
                  __ptext9 1CC1               __size_of_ISR 0022                ?__div_to_l_ 0020  
                  _dpowers 1078                    _isdigit 1B71                 ??___xxtofl 002F  
         ___awmod@dividend 0076                    _sprintf 0022     __end_of_Lcd_Write_Char 1B71  
     end_of_initialization 001E            ___lldiv@divisor 0020            ___lldiv@counter 0079  
           __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024              ??__tdiv_to_l_ 0074  
                _PORTDbits 0008                ___fladd@grs 006C              ___xxtofl@sign 0033  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076          Lcd_Write_String@i 0078  
              ___flmul@grs 0039                ?_conversion 0070        __size_of__div_to_l_ 00BE  
                _Lcd_Clear 1B54             __end_of___flge 2000             __end_of___fleq 1D57  
           __end_of___wmul 1BF8           _Lcd_Write_String 1C7D             __end_of_config 1BB1  
           __end_of_fround 1578        start_initialization 000F                __end_of_ISR 1BD3  
      __end_of__tdiv_to_l_ 12AD          __size_of_Lcd_Init 0036            ___llmod@divisor 0020  
          ___llmod@counter 0075        conversion@puertoANL 006E                 ?_Lcd_Clear 0070  
                 ??___flge 0074                   ??___fleq 0074                   ??___wmul 0078  
                __Umul8_16 1C1E                   ??_config 0074            Lcd_Write_Char@a 0075  
                 ??_fround 0049              sprintf@tmpval 00BF                  ___fladd@a 005D  
                ___fladd@b 0059        __size_of_conversion 00FD                 fround@prec 0058  
                ___flmul@a 002F                  ___flmul@b 002B                  ___flsub@a 00A0  
                ___flsub@b 00A4                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070  
              sprintf@flag 00B7                sprintf@eexp 00BD                sprintf@fval 00C6  
              sprintf@prec 00C4           ___lwdiv@dividend 0022           ??_Lcd_Set_Cursor 0078  
                 ?___fladd 0059                   ?___awdiv 0022                   ?___flneg 0074  
                 ?___awmod 0074                   ?___flmul 002B                   ?___flsub 00A0  
                 ?___fltol 0058                   ?___lldiv 0020                   ?___llmod 0020  
                __npowers_ 1044                 ?__Umul8_16 0074                   ?___lwdiv 0020  
                 ?___lwmod 0074                  __pstrings 1000                __tdiv_to_l_ 11F0  
             ??__div_to_l_ 0074                   ?_isdigit 0070                  _scale$987 0053  
         ___lwdiv@quotient 0025                   ?_sprintf 00A8             __size_of_scale 0363  
        interrupt_function 0004             ___wmul@product 0078                   _PIE1bits 008C  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C         __end_of__div_to_l_ 136B  
              ??_Lcd_Clear 0077                 _ADCON0bits 001F                __stringbase 100F  
               _ADCON1bits 009F          ___wmul@multiplier 0074           ??_Lcd_Write_Char 0074  
                 _Lcd_Init 1C47   __end_of_Lcd_Write_String 1CC1               ??_conversion 006D  
         __size_of_Lcd_Cmd 0013                ??__Umul8_16 0076           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 005B  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003A         __end_of__stringtab 1010                _isdigit$802 0074  
               sprintf@val 00B9         __end_of_conversion 093C                   ___xxtofl 1134  
         __size_of_isdigit 0012            ___lwdiv@divisor 0020            ___lwdiv@counter 0027  
                 __ptext10 093C                   __ptext11 1C1E                   __ptext20 1578  
                 __ptext12 11F0                   __ptext21 1B49                   __ptext13 12AD  
                 __ptext30 1B83                   __ptext22 1F5C                   __ptext14 1134  
                 __ptext31 1BB1                   __ptext23 1D07                   __ptext15 1BD3  
                 __ptext24 1C7D                   __ptext16 07A8                   __ptext25 1B61  
                 __ptext17 10CC                   __ptext26 1BF8                   __ptext18 1EE0  
                 __ptext27 1B96                   __ptext19 1D57                   __ptext28 1C47  
                 __ptext29 1B54                   __powers_ 1010           __size_of_sprintf 0786  
            __size_of_main 0075                 _INTCONbits 000B                   isdigit@c 0075  
                 scale@scl 0057                   intlevel1 0000                  sprintf@ap 00B6  
         __tdiv_to_l_@exp1 002D           __tdiv_to_l_@cntr 002C                  sprintf@sp 00C3  
         __tdiv_to_l_@quot 0028           ___lwmod@dividend 0076           ___lldiv@dividend 0024  
                stringcode 100A         Lcd_Set_Cursor@temp 0021               ?__tdiv_to_l_ 0020  
   __Umul8_16@multiplicand 0074                   sprintf@c 00CA                   sprintf@f 00A8  
         ___lldiv@quotient 0075            ___lwmod@divisor 0074            ___lwmod@counter 0079  
                 stringdir 100A                   stringtab 1000              ___fladd@signs 0069  
             ___fladd@aexp 006A               ___fladd@bexp 006B       __Umul8_16@multiplier 0024  
        __Umul8_16@product 0020  
