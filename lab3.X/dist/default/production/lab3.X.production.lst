

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 17:22:51 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236                           
   237                           	psect	strings
   238  1000                     __pstrings:
   239  1000                     stringtab:
   240  1000                     __stringtab:
   241                           
   242                           ;	String table - string pointers are 1 byte each
   243  1000  1BFF               	btfsc	btemp+1,7
   244  1001  280A               	ljmp	stringcode
   245  1002  1383               	bcf	3,7
   246  1003  187F               	btfsc	btemp+1,0
   247  1004  1783               	bsf	3,7
   248  1005  0800               	movf	0,w
   249  1006  0A84               	incf	4,f
   250  1007  1903               	skipnz
   251  1008  0AFF               	incf	btemp+1,f
   252  1009  0008               	return
   253  100A                     stringcode:
   254  100A                     stringdir:
   255  100A  3010               	movlw	high stringdir
   256  100B  008A               	movwf	10
   257  100C  0804               	movf	4,w
   258  100D  0A84               	incf	4,f
   259  100E  0782               	addwf	2,f
   260  100F                     __stringbase:
   261  100F  3400               	retlw	0
   262  1010                     __end_of__stringtab:
   263  1010                     __powers_:
   264  1010  3400               	retlw	0
   265  1011  3400               	retlw	0
   266  1012  3480               	retlw	128
   267  1013  343F               	retlw	63
   268  1014  3400               	retlw	0
   269  1015  3400               	retlw	0
   270  1016  3420               	retlw	32
   271  1017  3441               	retlw	65
   272  1018  3400               	retlw	0
   273  1019  3400               	retlw	0
   274  101A  34C8               	retlw	200
   275  101B  3442               	retlw	66
   276  101C  3400               	retlw	0
   277  101D  3400               	retlw	0
   278  101E  347A               	retlw	122
   279  101F  3444               	retlw	68
   280  1020  3400               	retlw	0
   281  1021  3440               	retlw	64
   282  1022  341C               	retlw	28
   283  1023  3446               	retlw	70
   284  1024  3400               	retlw	0
   285  1025  3450               	retlw	80
   286  1026  34C3               	retlw	195
   287  1027  3447               	retlw	71
   288  1028  3400               	retlw	0
   289  1029  3424               	retlw	36
   290  102A  3474               	retlw	116
   291  102B  3449               	retlw	73
   292  102C  3480               	retlw	128
   293  102D  3496               	retlw	150
   294  102E  3418               	retlw	24
   295  102F  344B               	retlw	75
   296  1030  3420               	retlw	32
   297  1031  34BC               	retlw	188
   298  1032  34BE               	retlw	190
   299  1033  344C               	retlw	76
   300  1034  3428               	retlw	40
   301  1035  346B               	retlw	107
   302  1036  346E               	retlw	110
   303  1037  344E               	retlw	78
   304  1038  34F9               	retlw	249
   305  1039  3402               	retlw	2
   306  103A  3415               	retlw	21
   307  103B  3450               	retlw	80
   308  103C  34EC               	retlw	236
   309  103D  3478               	retlw	120
   310  103E  34AD               	retlw	173
   311  103F  3460               	retlw	96
   312  1040  34CA               	retlw	202
   313  1041  34F2               	retlw	242
   314  1042  3449               	retlw	73
   315  1043  3471               	retlw	113
   316  1044                     __end_of__powers_:
   317  1044                     __npowers_:
   318  1044  3400               	retlw	0
   319  1045  3400               	retlw	0
   320  1046  3480               	retlw	128
   321  1047  343F               	retlw	63
   322  1048  34CD               	retlw	205
   323  1049  34CC               	retlw	204
   324  104A  34CC               	retlw	204
   325  104B  343D               	retlw	61
   326  104C  340A               	retlw	10
   327  104D  34D7               	retlw	215
   328  104E  3423               	retlw	35
   329  104F  343C               	retlw	60
   330  1050  346F               	retlw	111
   331  1051  3412               	retlw	18
   332  1052  3483               	retlw	131
   333  1053  343A               	retlw	58
   334  1054  3417               	retlw	23
   335  1055  34B7               	retlw	183
   336  1056  34D1               	retlw	209
   337  1057  3438               	retlw	56
   338  1058  34AC               	retlw	172
   339  1059  34C5               	retlw	197
   340  105A  3427               	retlw	39
   341  105B  3437               	retlw	55
   342  105C  34BD               	retlw	189
   343  105D  3437               	retlw	55
   344  105E  3486               	retlw	134
   345  105F  3435               	retlw	53
   346  1060  3495               	retlw	149
   347  1061  34BF               	retlw	191
   348  1062  34D6               	retlw	214
   349  1063  3433               	retlw	51
   350  1064  3477               	retlw	119
   351  1065  34CC               	retlw	204
   352  1066  342B               	retlw	43
   353  1067  3432               	retlw	50
   354  1068  345F               	retlw	95
   355  1069  3470               	retlw	112
   356  106A  3489               	retlw	137
   357  106B  3430               	retlw	48
   358  106C  34FF               	retlw	255
   359  106D  34E6               	retlw	230
   360  106E  34DB               	retlw	219
   361  106F  342E               	retlw	46
   362  1070  3408               	retlw	8
   363  1071  34E5               	retlw	229
   364  1072  343C               	retlw	60
   365  1073  341E               	retlw	30
   366  1074  3460               	retlw	96
   367  1075  3442               	retlw	66
   368  1076  34A2               	retlw	162
   369  1077  340D               	retlw	13
   370  1078                     __end_of__npowers_:
   371  1078                     _dpowers:
   372  1078  3401               	retlw	1
   373  1079  3400               	retlw	0
   374  107A  3400               	retlw	0
   375  107B  3400               	retlw	0
   376  107C  340A               	retlw	10
   377  107D  3400               	retlw	0
   378  107E  3400               	retlw	0
   379  107F  3400               	retlw	0
   380  1080  3464               	retlw	100
   381  1081  3400               	retlw	0
   382  1082  3400               	retlw	0
   383  1083  3400               	retlw	0
   384  1084  34E8               	retlw	232
   385  1085  3403               	retlw	3
   386  1086  3400               	retlw	0
   387  1087  3400               	retlw	0
   388  1088  3410               	retlw	16
   389  1089  3427               	retlw	39
   390  108A  3400               	retlw	0
   391  108B  3400               	retlw	0
   392  108C  34A0               	retlw	160
   393  108D  3486               	retlw	134
   394  108E  3401               	retlw	1
   395  108F  3400               	retlw	0
   396  1090  3440               	retlw	64
   397  1091  3442               	retlw	66
   398  1092  340F               	retlw	15
   399  1093  3400               	retlw	0
   400  1094  3480               	retlw	128
   401  1095  3496               	retlw	150
   402  1096  3498               	retlw	152
   403  1097  3400               	retlw	0
   404  1098  3400               	retlw	0
   405  1099  34E1               	retlw	225
   406  109A  34F5               	retlw	245
   407  109B  3405               	retlw	5
   408  109C  3400               	retlw	0
   409  109D  34CA               	retlw	202
   410  109E  349A               	retlw	154
   411  109F  343B               	retlw	59
   412  10A0                     __end_of_dpowers:
   413  001E                     _ADRESH	set	30
   414  0008                     _PORTDbits	set	8
   415  000C                     _PIR1bits	set	12
   416  000B                     _INTCONbits	set	11
   417  001F                     _ADCON0bits	set	31
   418  0006                     _PORTB	set	6
   419  008C                     _PIE1bits	set	140
   420  009F                     _ADCON1bits	set	159
   421  0088                     _TRISD	set	136
   422  0086                     _TRISB	set	134
   423  0085                     _TRISA	set	133
   424  0188                     _ANSELbits	set	392
   425  0189                     _ANSELH	set	393
   426  0188                     _ANSEL	set	392
   427  10A0                     STR_2:
   428  10A0  3446               	retlw	70	;'F'
   429  10A1  3465               	retlw	101	;'e'
   430  10A2  3472               	retlw	114	;'r'
   431  10A3  346E               	retlw	110	;'n'
   432  10A4  3461               	retlw	97	;'a'
   433  10A5  346E               	retlw	110	;'n'
   434  10A6  3464               	retlw	100	;'d'
   435  10A7  346F               	retlw	111	;'o'
   436  10A8  3446               	retlw	70	;'F'
   437  10A9  3469               	retlw	105	;'i'
   438  10AA  3467               	retlw	103	;'g'
   439  10AB  3475               	retlw	117	;'u'
   440  10AC  3465               	retlw	101	;'e'
   441  10AD  3472               	retlw	114	;'r'
   442  10AE  346F               	retlw	111	;'o'
   443  10AF  3461               	retlw	97	;'a'
   444  10B0  3400               	retlw	0
   445  10B1                     STR_1:
   446  10B1  3444               	retlw	68	;'D'
   447  10B2  3449               	retlw	73	;'I'
   448  10B3  3447               	retlw	71	;'G'
   449  10B4  3449               	retlw	73	;'I'
   450  10B5  3454               	retlw	84	;'T'
   451  10B6  3441               	retlw	65	;'A'
   452  10B7  344C               	retlw	76	;'L'
   453  10B8  3420               	retlw	32	;' '
   454  10B9  3432               	retlw	50	;'2'
   455  10BA  3400               	retlw	0
   456  10BB                     STR_3:
   457  10BB  3456               	retlw	86	;'V'
   458  10BC  346F               	retlw	111	;'o'
   459  10BD  346C               	retlw	108	;'l'
   460  10BE  3474               	retlw	116	;'t'
   461  10BF  3431               	retlw	49	;'1'
   462  10C0  3400               	retlw	0
   463  10C1                     STR_4:
   464  10C1  3456               	retlw	86	;'V'
   465  10C2  346F               	retlw	111	;'o'
   466  10C3  346C               	retlw	108	;'l'
   467  10C4  3474               	retlw	116	;'t'
   468  10C5  3432               	retlw	50	;'2'
   469  10C6  3400               	retlw	0
   470  10C7                     STR_5:
   471  10C7  3443               	retlw	67	;'C'
   472  10C8  344F               	retlw	79	;'O'
   473  10C9  344E               	retlw	78	;'N'
   474  10CA  3454               	retlw	84	;'T'
   475  10CB  3400               	retlw	0
   476  10CC                     STR_6:
   477  10CC  3425               	retlw	37	;'%'
   478  10CD  342E               	retlw	46	;'.'
   479  10CE  3433               	retlw	51	;'3'
   480  10CF  3466               	retlw	102	;'f'
   481  10D0  3400               	retlw	0
   482  10CC                     
   483                           	psect	cinit
   484  000F                     start_initialization:	
   485                           ; #config settings
   486                           
   487  000F                     __initialization:
   488                           
   489                           ; Clear objects allocated to BANK1
   490  000F  1683               	bsf	3,5	;RP0=1, select bank1
   491  0010  1303               	bcf	3,6	;RP1=0, select bank1
   492  0011  01CE               	clrf	__pbssBANK1& (0+127)
   493  0012  01CF               	clrf	(__pbssBANK1+1)& (0+127)
   494  0013  01D0               	clrf	(__pbssBANK1+2)& (0+127)
   495  0014  01D1               	clrf	(__pbssBANK1+3)& (0+127)
   496  0015  01D2               	clrf	(__pbssBANK1+4)& (0+127)
   497  0016  01D3               	clrf	(__pbssBANK1+5)& (0+127)
   498  0017  01D4               	clrf	(__pbssBANK1+6)& (0+127)
   499  0018  01D5               	clrf	(__pbssBANK1+7)& (0+127)
   500  0019  01D6               	clrf	(__pbssBANK1+8)& (0+127)
   501  001A  01D7               	clrf	(__pbssBANK1+9)& (0+127)
   502  001B  01D8               	clrf	(__pbssBANK1+10)& (0+127)
   503  001C  01D9               	clrf	(__pbssBANK1+11)& (0+127)
   504  001D  01DA               	clrf	(__pbssBANK1+12)& (0+127)
   505  001E                     end_of_initialization:	
   506                           ;End of C runtime variable initialization code
   507                           
   508  001E                     __end_of__initialization:
   509  001E  0183               	clrf	3
   510  001F  160A  158A  2EC6   	ljmp	_main	;jump to C main() function
   511                           
   512                           	psect	bssBANK1
   513  00CE                     __pbssBANK1:
   514  00CE                     _vpot2:
   515  00CE                     	ds	4
   516  00D2                     _vpot1:
   517  00D2                     	ds	4
   518  00D6                     _b:
   519  00D6                     	ds	2
   520  00D8                     _c:
   521  00D8                     	ds	2
   522  00DA                     _buffer:
   523  00DA                     	ds	1
   524                           
   525                           	psect	cstackBANK1
   526  00A0                     __pcstackBANK1:
   527  00A0                     ?___flsub:
   528  00A0                     ___flsub@a:	
   529                           ; 4 bytes @ 0x0
   530                           
   531                           
   532                           ; 4 bytes @ 0x0
   533  00A0                     	ds	4
   534  00A4                     ___flsub@b:
   535                           
   536                           ; 4 bytes @ 0x4
   537  00A4                     	ds	4
   538  00A8                     ?_sprintf:
   539  00A8                     sprintf@f:	
   540                           ; 2 bytes @ 0x8
   541                           
   542                           
   543                           ; 1 bytes @ 0x8
   544  00A8                     	ds	5
   545  00AD                     ??_sprintf:
   546                           
   547                           ; 1 bytes @ 0xD
   548  00AD                     	ds	5
   549  00B2                     _sprintf$989:
   550                           
   551                           ; 4 bytes @ 0x12
   552  00B2                     	ds	4
   553  00B6                     sprintf@ap:
   554                           
   555                           ; 1 bytes @ 0x16
   556  00B6                     	ds	1
   557  00B7                     sprintf@flag:
   558                           
   559                           ; 2 bytes @ 0x17
   560  00B7                     	ds	2
   561  00B9                     sprintf@val:
   562                           
   563                           ; 4 bytes @ 0x19
   564  00B9                     	ds	4
   565  00BD                     sprintf@eexp:
   566                           
   567                           ; 2 bytes @ 0x1D
   568  00BD                     	ds	2
   569  00BF                     sprintf@tmpval:
   570                           
   571                           ; 4 bytes @ 0x1F
   572  00BF                     	ds	4
   573  00C3                     sprintf@sp:
   574                           
   575                           ; 1 bytes @ 0x23
   576  00C3                     	ds	1
   577  00C4                     sprintf@prec:
   578                           
   579                           ; 2 bytes @ 0x24
   580  00C4                     	ds	2
   581  00C6                     sprintf@fval:
   582                           
   583                           ; 4 bytes @ 0x26
   584  00C6                     	ds	4
   585  00CA                     sprintf@c:
   586                           
   587                           ; 1 bytes @ 0x2A
   588  00CA                     	ds	1
   589  00CB                     ??_main:
   590                           
   591                           ; 1 bytes @ 0x2B
   592  00CB                     	ds	3
   593                           
   594                           	psect	cstackCOMMON
   595  0070                     __pcstackCOMMON:
   596  0070                     ?_isdigit:
   597  0070                     ?_conversion:	
   598                           ; 1 bit 
   599                           
   600  0070                     ?_config:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_Lcd_Cmd:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_Lcd_Write_Char:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_Lcd_Init:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_ISR:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ??_ISR:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_main:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_Lcd_Clear:	
   622                           ; 1 bytes @ 0x0
   623                           
   624                           
   625                           ; 2 bytes @ 0x0
   626  0070                     	ds	4
   627  0074                     ??_isdigit:
   628  0074                     ??__tdiv_to_l_:	
   629                           ; 1 bytes @ 0x4
   630                           
   631  0074                     ??__div_to_l_:	
   632                           ; 1 bytes @ 0x4
   633                           
   634  0074                     ??_config:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0074                     ??_Lcd_Cmd:	
   638                           ; 1 bytes @ 0x4
   639                           
   640  0074                     ??_Lcd_Write_Char:	
   641                           ; 1 bytes @ 0x4
   642                           
   643  0074                     ??___lldiv:	
   644                           ; 1 bytes @ 0x4
   645                           
   646  0074                     ??___fleq:	
   647                           ; 1 bytes @ 0x4
   648                           
   649  0074                     ??___flge:	
   650                           ; 1 bytes @ 0x4
   651                           
   652  0074                     ??___llmod:	
   653                           ; 1 bytes @ 0x4
   654                           
   655  0074                     ?__Umul8_16:	
   656                           ; 1 bytes @ 0x4
   657                           
   658  0074                     ?___wmul:	
   659                           ; 2 bytes @ 0x4
   660                           
   661  0074                     ?___awmod:	
   662                           ; 2 bytes @ 0x4
   663                           
   664  0074                     ?___lwmod:	
   665                           ; 2 bytes @ 0x4
   666                           
   667  0074                     ?___flneg:	
   668                           ; 2 bytes @ 0x4
   669                           
   670  0074                     __Umul8_16@multiplicand:	
   671                           ; 4 bytes @ 0x4
   672                           
   673  0074                     _isdigit$803:	
   674                           ; 1 bytes @ 0x4
   675                           
   676  0074                     ___wmul@multiplier:	
   677                           ; 1 bytes @ 0x4
   678                           
   679  0074                     ___awmod@divisor:	
   680                           ; 2 bytes @ 0x4
   681                           
   682  0074                     ___lwmod@divisor:	
   683                           ; 2 bytes @ 0x4
   684                           
   685  0074                     ___flneg@f1:	
   686                           ; 2 bytes @ 0x4
   687                           
   688                           
   689                           ; 4 bytes @ 0x4
   690  0074                     	ds	1
   691  0075                     Lcd_Write_Char@a:
   692  0075                     ___llmod@counter:	
   693                           ; 1 bytes @ 0x5
   694                           
   695  0075                     isdigit@c:	
   696                           ; 1 bytes @ 0x5
   697                           
   698  0075                     ___lldiv@quotient:	
   699                           ; 1 bytes @ 0x5
   700                           
   701                           
   702                           ; 4 bytes @ 0x5
   703  0075                     	ds	1
   704  0076                     ??__Umul8_16:
   705  0076                     ?_Lcd_Write_String:	
   706                           ; 1 bytes @ 0x6
   707                           
   708  0076                     Lcd_Cmd@a:	
   709                           ; 1 bytes @ 0x6
   710                           
   711  0076                     Lcd_Write_String@a:	
   712                           ; 1 bytes @ 0x6
   713                           
   714  0076                     ___wmul@multiplicand:	
   715                           ; 2 bytes @ 0x6
   716                           
   717  0076                     ___awmod@dividend:	
   718                           ; 2 bytes @ 0x6
   719                           
   720  0076                     ___lwmod@dividend:	
   721                           ; 2 bytes @ 0x6
   722                           
   723                           
   724                           ; 2 bytes @ 0x6
   725  0076                     	ds	1
   726  0077                     ??_Lcd_Clear:
   727  0077                     ?_Lcd_Set_Cursor:	
   728                           ; 1 bytes @ 0x7
   729                           
   730  0077                     ??_Lcd_Init:	
   731                           ; 1 bytes @ 0x7
   732                           
   733  0077                     Lcd_Set_Cursor@b:	
   734                           ; 1 bytes @ 0x7
   735                           
   736                           
   737                           ; 1 bytes @ 0x7
   738  0077                     	ds	1
   739  0078                     ??_Lcd_Set_Cursor:
   740  0078                     ??___wmul:	
   741                           ; 1 bytes @ 0x8
   742                           
   743  0078                     ??___awmod:	
   744                           ; 1 bytes @ 0x8
   745                           
   746  0078                     ??___flneg:	
   747                           ; 1 bytes @ 0x8
   748                           
   749  0078                     ??___lwmod:	
   750                           ; 1 bytes @ 0x8
   751                           
   752  0078                     Lcd_Write_String@i:	
   753                           ; 1 bytes @ 0x8
   754                           
   755  0078                     ___wmul@product:	
   756                           ; 2 bytes @ 0x8
   757                           
   758                           
   759                           ; 2 bytes @ 0x8
   760  0078                     	ds	1
   761  0079                     ___lldiv@counter:
   762  0079                     ___lwmod@counter:	
   763                           ; 1 bytes @ 0x9
   764                           
   765                           
   766                           ; 1 bytes @ 0x9
   767  0079                     	ds	1
   768  007A                     ??___flsub:
   769                           
   770                           	psect	cstackBANK0
   771  0020                     __pcstackBANK0:	
   772                           ; 1 bytes @ 0xA
   773                           
   774  0020                     ?___fleq:
   775  0020                     ?___flge:	
   776                           ; 1 bit 
   777                           
   778  0020                     ??_Lcd_Write_String:	
   779                           ; 1 bit 
   780                           
   781  0020                     ?___lwdiv:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0020                     ?__tdiv_to_l_:	
   785                           ; 2 bytes @ 0x0
   786                           
   787  0020                     ?__div_to_l_:	
   788                           ; 4 bytes @ 0x0
   789                           
   790  0020                     ?___lldiv:	
   791                           ; 4 bytes @ 0x0
   792                           
   793  0020                     ?___llmod:	
   794                           ; 4 bytes @ 0x0
   795                           
   796  0020                     ___awmod@counter:	
   797                           ; 4 bytes @ 0x0
   798                           
   799  0020                     ___lwdiv@divisor:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0020                     __Umul8_16@product:	
   803                           ; 2 bytes @ 0x0
   804                           
   805  0020                     ___lldiv@divisor:	
   806                           ; 2 bytes @ 0x0
   807                           
   808  0020                     __div_to_l_@f1:	
   809                           ; 4 bytes @ 0x0
   810                           
   811  0020                     ___fleq@ff1:	
   812                           ; 4 bytes @ 0x0
   813                           
   814  0020                     ___flge@ff1:	
   815                           ; 4 bytes @ 0x0
   816                           
   817  0020                     __tdiv_to_l_@f1:	
   818                           ; 4 bytes @ 0x0
   819                           
   820  0020                     ___llmod@divisor:	
   821                           ; 4 bytes @ 0x0
   822                           
   823                           
   824                           ; 4 bytes @ 0x0
   825  0020                     	ds	1
   826  0021                     ___awmod@sign:
   827                           
   828                           ; 1 bytes @ 0x1
   829  0021                     	ds	1
   830  0022                     ?___awdiv:
   831  0022                     Lcd_Set_Cursor@a:	
   832                           ; 2 bytes @ 0x2
   833                           
   834  0022                     ___awdiv@divisor:	
   835                           ; 1 bytes @ 0x2
   836                           
   837  0022                     ___lwdiv@dividend:	
   838                           ; 2 bytes @ 0x2
   839                           
   840  0022                     __Umul8_16@word_mpld:	
   841                           ; 2 bytes @ 0x2
   842                           
   843                           
   844                           ; 2 bytes @ 0x2
   845  0022                     	ds	1
   846  0023                     Lcd_Set_Cursor@temp:
   847                           
   848                           ; 1 bytes @ 0x3
   849  0023                     	ds	1
   850  0024                     ??___lwdiv:
   851  0024                     __Umul8_16@multiplier:	
   852                           ; 1 bytes @ 0x4
   853                           
   854  0024                     ___awdiv@dividend:	
   855                           ; 1 bytes @ 0x4
   856                           
   857  0024                     ___lldiv@dividend:	
   858                           ; 2 bytes @ 0x4
   859                           
   860  0024                     __div_to_l_@f2:	
   861                           ; 4 bytes @ 0x4
   862                           
   863  0024                     ___fleq@ff2:	
   864                           ; 4 bytes @ 0x4
   865                           
   866  0024                     ___flge@ff2:	
   867                           ; 4 bytes @ 0x4
   868                           
   869  0024                     __tdiv_to_l_@f2:	
   870                           ; 4 bytes @ 0x4
   871                           
   872  0024                     ___llmod@dividend:	
   873                           ; 4 bytes @ 0x4
   874                           
   875                           
   876                           ; 4 bytes @ 0x4
   877  0024                     	ds	1
   878  0025                     ___lwdiv@quotient:
   879                           
   880                           ; 2 bytes @ 0x5
   881  0025                     	ds	1
   882  0026                     ??___awdiv:
   883                           
   884                           ; 1 bytes @ 0x6
   885  0026                     	ds	1
   886  0027                     ___awdiv@counter:
   887  0027                     ___lwdiv@counter:	
   888                           ; 1 bytes @ 0x7
   889                           
   890                           
   891                           ; 1 bytes @ 0x7
   892  0027                     	ds	1
   893  0028                     ___awdiv@sign:
   894  0028                     __div_to_l_@quot:	
   895                           ; 1 bytes @ 0x8
   896                           
   897  0028                     __tdiv_to_l_@quot:	
   898                           ; 4 bytes @ 0x8
   899                           
   900                           
   901                           ; 4 bytes @ 0x8
   902  0028                     	ds	1
   903  0029                     ___awdiv@quotient:
   904                           
   905                           ; 2 bytes @ 0x9
   906  0029                     	ds	2
   907  002B                     ?___flmul:
   908  002B                     ?___xxtofl:	
   909                           ; 4 bytes @ 0xB
   910                           
   911  002B                     ___flmul@b:	
   912                           ; 4 bytes @ 0xB
   913                           
   914  002B                     ___xxtofl@val:	
   915                           ; 4 bytes @ 0xB
   916                           
   917                           
   918                           ; 4 bytes @ 0xB
   919  002B                     	ds	1
   920  002C                     __div_to_l_@cntr:
   921  002C                     __tdiv_to_l_@cntr:	
   922                           ; 1 bytes @ 0xC
   923                           
   924                           
   925                           ; 1 bytes @ 0xC
   926  002C                     	ds	1
   927  002D                     __div_to_l_@exp1:
   928  002D                     __tdiv_to_l_@exp1:	
   929                           ; 1 bytes @ 0xD
   930                           
   931                           
   932                           ; 1 bytes @ 0xD
   933  002D                     	ds	2
   934  002F                     ??___xxtofl:
   935  002F                     ___flmul@a:	
   936                           ; 1 bytes @ 0xF
   937                           
   938                           
   939                           ; 4 bytes @ 0xF
   940  002F                     	ds	4
   941  0033                     ??___flmul:
   942  0033                     ___xxtofl@sign:	
   943                           ; 1 bytes @ 0x13
   944                           
   945                           
   946                           ; 1 bytes @ 0x13
   947  0033                     	ds	1
   948  0034                     ___xxtofl@exp:
   949                           
   950                           ; 1 bytes @ 0x14
   951  0034                     	ds	1
   952  0035                     ___xxtofl@arg:
   953                           
   954                           ; 4 bytes @ 0x15
   955  0035                     	ds	3
   956  0038                     ___flmul@sign:
   957                           
   958                           ; 1 bytes @ 0x18
   959  0038                     	ds	1
   960  0039                     ___flmul@grs:
   961                           
   962                           ; 4 bytes @ 0x19
   963  0039                     	ds	4
   964  003D                     ___flmul@aexp:
   965                           
   966                           ; 1 bytes @ 0x1D
   967  003D                     	ds	1
   968  003E                     ___flmul@bexp:
   969                           
   970                           ; 1 bytes @ 0x1E
   971  003E                     	ds	1
   972  003F                     ___flmul@prod:
   973                           
   974                           ; 4 bytes @ 0x1F
   975  003F                     	ds	4
   976  0043                     ___flmul@temp:
   977                           
   978                           ; 2 bytes @ 0x23
   979  0043                     	ds	2
   980  0045                     ?_fround:
   981  0045                     ?_scale:	
   982                           ; 4 bytes @ 0x25
   983                           
   984                           
   985                           ; 4 bytes @ 0x25
   986  0045                     	ds	4
   987  0049                     ??_fround:
   988  0049                     ??_scale:	
   989                           ; 1 bytes @ 0x29
   990                           
   991                           
   992                           ; 1 bytes @ 0x29
   993  0049                     	ds	7
   994  0050                     _fround$987:
   995                           
   996                           ; 4 bytes @ 0x30
   997  0050                     	ds	3
   998  0053                     _scale$988:
   999                           
  1000                           ; 4 bytes @ 0x33
  1001  0053                     	ds	1
  1002  0054                     _fround$986:
  1003                           
  1004                           ; 4 bytes @ 0x34
  1005  0054                     	ds	3
  1006  0057                     scale@scl:
  1007                           
  1008                           ; 1 bytes @ 0x37
  1009  0057                     	ds	1
  1010  0058                     ?___fltol:
  1011  0058                     fround@prec:	
  1012                           ; 4 bytes @ 0x38
  1013                           
  1014  0058                     ___fltol@f1:	
  1015                           ; 1 bytes @ 0x38
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x38
  1019  0058                     	ds	1
  1020  0059                     ?___fladd:
  1021  0059                     ___fladd@b:	
  1022                           ; 4 bytes @ 0x39
  1023                           
  1024                           
  1025                           ; 4 bytes @ 0x39
  1026  0059                     	ds	3
  1027  005C                     ??___fltol:
  1028                           
  1029                           ; 1 bytes @ 0x3C
  1030  005C                     	ds	1
  1031  005D                     ___fladd@a:
  1032                           
  1033                           ; 4 bytes @ 0x3D
  1034  005D                     	ds	4
  1035  0061                     ??___fladd:
  1036  0061                     ___fltol@sign1:	
  1037                           ; 1 bytes @ 0x41
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0x41
  1041  0061                     	ds	1
  1042  0062                     ___fltol@exp1:
  1043                           
  1044                           ; 1 bytes @ 0x42
  1045  0062                     	ds	7
  1046  0069                     ___fladd@signs:
  1047                           
  1048                           ; 1 bytes @ 0x49
  1049  0069                     	ds	1
  1050  006A                     ___fladd@aexp:
  1051                           
  1052                           ; 1 bytes @ 0x4A
  1053  006A                     	ds	1
  1054  006B                     ___fladd@bexp:
  1055                           
  1056                           ; 1 bytes @ 0x4B
  1057  006B                     	ds	1
  1058  006C                     ___fladd@grs:
  1059                           
  1060                           ; 1 bytes @ 0x4C
  1061  006C                     	ds	1
  1062  006D                     ??_conversion:
  1063                           
  1064                           ; 1 bytes @ 0x4D
  1065  006D                     	ds	1
  1066  006E                     conversion@puertoANL:
  1067                           
  1068                           ; 1 bytes @ 0x4E
  1069  006E                     	ds	1
  1070                           
  1071                           	psect	maintext
  1072  1EC6                     __pmaintext:	
  1073 ;;
  1074 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1075 ;;
  1076 ;; *************** function _main *****************
  1077 ;; Defined at:
  1078 ;;		line 48 in file "lab3.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : B00/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0
  1094 ;;      Temps:          0       0       3       0       0
  1095 ;;      Totals:         0       0       3       0       0
  1096 ;;Total ram usage:        3 bytes
  1097 ;; Hardware stack levels required when called:    6
  1098 ;; This function calls:
  1099 ;;		_Lcd_Clear
  1100 ;;		_Lcd_Init
  1101 ;;		_Lcd_Set_Cursor
  1102 ;;		_Lcd_Write_String
  1103 ;;		_config
  1104 ;;		_conversion
  1105 ;; This function is called by:
  1106 ;;		Startup code after reset
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _main
  1112  1EC6                     _main:
  1113  1EC6                     l3184:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1116                           
  1117                           
  1118                           ;lab3.c: 49:     config();
  1119  1EC6  160A  158A  2365  160A  158A  	fcall	_config
  1120                           
  1121                           ;lab3.c: 50:     Lcd_Init();
  1122  1ECB  160A  158A  2419  160A  158A  	fcall	_Lcd_Init
  1123                           
  1124                           ;lab3.c: 51:     Lcd_Set_Cursor(1,1);
  1125  1ED0  01F7               	clrf	Lcd_Set_Cursor@b
  1126  1ED1  0AF7               	incf	Lcd_Set_Cursor@b,f
  1127  1ED2  3001               	movlw	1
  1128  1ED3  160A  158A  23CA  160A  158A  	fcall	_Lcd_Set_Cursor
  1129  1ED8                     l3186:
  1130                           
  1131                           ;lab3.c: 52:     Lcd_Write_String("DIGITAL 2");
  1132  1ED8  30A2               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1133  1ED9  00F6               	movwf	Lcd_Write_String@a
  1134  1EDA  3080               	movlw	128
  1135  1EDB  00F7               	movwf	Lcd_Write_String@a+1
  1136  1EDC  160A  158A  244F  160A  158A  	fcall	_Lcd_Write_String
  1137  1EE1                     l3188:
  1138                           
  1139                           ;lab3.c: 53:     Lcd_Set_Cursor(2,1);
  1140  1EE1  01F7               	clrf	Lcd_Set_Cursor@b
  1141  1EE2  0AF7               	incf	Lcd_Set_Cursor@b,f
  1142  1EE3  3002               	movlw	2
  1143  1EE4  160A  158A  23CA  160A  158A  	fcall	_Lcd_Set_Cursor
  1144                           
  1145                           ;lab3.c: 54:     Lcd_Write_String("FernandoFigueroa");
  1146  1EE9  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1147  1EEA  00F6               	movwf	Lcd_Write_String@a
  1148  1EEB  3080               	movlw	128
  1149  1EEC  00F7               	movwf	Lcd_Write_String@a+1
  1150  1EED  160A  158A  244F  160A  158A  	fcall	_Lcd_Write_String
  1151  1EF2                     l3190:
  1152                           
  1153                           ;lab3.c: 55:     _delay((unsigned long)((100)*(9000000/4000.0)));
  1154  1EF2  3002               	movlw	2
  1155  1EF3  1683               	bsf	3,5	;RP0=1, select bank1
  1156  1EF4  1303               	bcf	3,6	;RP1=0, select bank1
  1157  1EF5  00CD               	movwf	(??_main^(0+128)+2)
  1158  1EF6  3025               	movlw	37
  1159  1EF7  00CC               	movwf	(??_main^(0+128)+1)
  1160  1EF8  3031               	movlw	49
  1161  1EF9  00CB               	movwf	??_main^(0+128)
  1162  1EFA                     u5337:
  1163  1EFA  0BCB               	decfsz	??_main^(0+128),f
  1164  1EFB  2EFA               	goto	u5337
  1165  1EFC  0BCC               	decfsz	(??_main^(0+128)+1),f
  1166  1EFD  2EFA               	goto	u5337
  1167  1EFE  0BCD               	decfsz	(??_main^(0+128)+2),f
  1168  1EFF  2EFA               	goto	u5337
  1169  1F00                     l3192:
  1170                           
  1171                           ;lab3.c: 56:     Lcd_Clear();
  1172  1F00  160A  158A  2323  160A  158A  	fcall	_Lcd_Clear
  1173  1F05                     l3194:
  1174                           
  1175                           ;lab3.c: 58:      Lcd_Set_Cursor(1,1);
  1176  1F05  01F7               	clrf	Lcd_Set_Cursor@b
  1177  1F06  0AF7               	incf	Lcd_Set_Cursor@b,f
  1178  1F07  3001               	movlw	1
  1179  1F08  160A  158A  23CA  160A  158A  	fcall	_Lcd_Set_Cursor
  1180  1F0D                     l3196:
  1181                           
  1182                           ;lab3.c: 59:      Lcd_Write_String("Volt1");
  1183  1F0D  30AC               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1184  1F0E  00F6               	movwf	Lcd_Write_String@a
  1185  1F0F  3080               	movlw	128
  1186  1F10  00F7               	movwf	Lcd_Write_String@a+1
  1187  1F11  160A  158A  244F  160A  158A  	fcall	_Lcd_Write_String
  1188  1F16                     l3198:
  1189                           
  1190                           ;lab3.c: 60:      Lcd_Set_Cursor(1,7);
  1191  1F16  3007               	movlw	7
  1192  1F17  1683               	bsf	3,5	;RP0=1, select bank1
  1193  1F18  1303               	bcf	3,6	;RP1=0, select bank1
  1194  1F19  00CB               	movwf	??_main^(0+128)
  1195  1F1A  084B               	movf	??_main^(0+128),w
  1196  1F1B  00F7               	movwf	Lcd_Set_Cursor@b
  1197  1F1C  3001               	movlw	1
  1198  1F1D  160A  158A  23CA  160A  158A  	fcall	_Lcd_Set_Cursor
  1199  1F22                     l3200:
  1200                           
  1201                           ;lab3.c: 61:      Lcd_Write_String("Volt2");
  1202  1F22  30B2               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1203  1F23  00F6               	movwf	Lcd_Write_String@a
  1204  1F24  3080               	movlw	128
  1205  1F25  00F7               	movwf	Lcd_Write_String@a+1
  1206  1F26  160A  158A  244F  160A  158A  	fcall	_Lcd_Write_String
  1207  1F2B                     l3202:
  1208                           
  1209                           ;lab3.c: 63:      Lcd_Set_Cursor(1,13);
  1210  1F2B  300D               	movlw	13
  1211  1F2C  1683               	bsf	3,5	;RP0=1, select bank1
  1212  1F2D  1303               	bcf	3,6	;RP1=0, select bank1
  1213  1F2E  00CB               	movwf	??_main^(0+128)
  1214  1F2F  084B               	movf	??_main^(0+128),w
  1215  1F30  00F7               	movwf	Lcd_Set_Cursor@b
  1216  1F31  3001               	movlw	1
  1217  1F32  160A  158A  23CA  160A  158A  	fcall	_Lcd_Set_Cursor
  1218  1F37                     l3204:
  1219                           
  1220                           ;lab3.c: 64:      Lcd_Write_String("CONT");
  1221  1F37  30B8               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1222  1F38  00F6               	movwf	Lcd_Write_String@a
  1223  1F39  3080               	movlw	128
  1224  1F3A  00F7               	movwf	Lcd_Write_String@a+1
  1225  1F3B  160A  158A  244F  160A  158A  	fcall	_Lcd_Write_String
  1226  1F40                     l3206:
  1227                           
  1228                           ;lab3.c: 65:      Lcd_Set_Cursor(2,11);
  1229  1F40  300B               	movlw	11
  1230  1F41  1683               	bsf	3,5	;RP0=1, select bank1
  1231  1F42  1303               	bcf	3,6	;RP1=0, select bank1
  1232  1F43  00CB               	movwf	??_main^(0+128)
  1233  1F44  084B               	movf	??_main^(0+128),w
  1234  1F45  00F7               	movwf	Lcd_Set_Cursor@b
  1235  1F46  3002               	movlw	2
  1236  1F47  160A  158A  23CA  160A  158A  	fcall	_Lcd_Set_Cursor
  1237  1F4C                     l3208:
  1238                           
  1239                           ;lab3.c: 70:         conversion(1);
  1240  1F4C  3001               	movlw	1
  1241  1F4D  120A  158A  203F  160A  158A  	fcall	_conversion
  1242  1F52                     l3210:
  1243                           
  1244                           ;lab3.c: 71:         conversion(0);
  1245  1F52  3000               	movlw	0
  1246  1F53  120A  158A  203F  160A  158A  	fcall	_conversion
  1247  1F58  2F4C               	goto	l3208
  1248  1F59  120A  118A  280C   	ljmp	start
  1249  1F5C                     __end_of_main:
  1250                           
  1251                           	psect	text1
  1252  083F                     __ptext1:	
  1253 ;; *************** function _conversion *****************
  1254 ;; Defined at:
  1255 ;;		line 77 in file "lab3.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  puertoANL       1    wreg     unsigned char 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  puertoANL       1   78[BANK0 ] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       0       0       0       0
  1270 ;;      Locals:         0       1       0       0       0
  1271 ;;      Temps:          0       1       0       0       0
  1272 ;;      Totals:         0       2       0       0       0
  1273 ;;Total ram usage:        2 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    5
  1276 ;; This function calls:
  1277 ;;		_Lcd_Set_Cursor
  1278 ;;		_Lcd_Write_String
  1279 ;;		___awdiv
  1280 ;;		___wmul
  1281 ;;		___xxtofl
  1282 ;;		_sprintf
  1283 ;; This function is called by:
  1284 ;;		_main
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           
  1289                           ;psect for function _conversion
  1290  083F                     _conversion:
  1291                           
  1292                           ;incstack = 0
  1293                           ; Regs used in _conversion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1294                           ;conversion@puertoANL stored from wreg
  1295  083F  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0840  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0841  00EE               	movwf	conversion@puertoANL
  1298  0842                     l3156:
  1299                           
  1300                           ;lab3.c: 79:     ADCON0bits.CHS = puertoANL;
  1301  0842  086E               	movf	conversion@puertoANL,w
  1302  0843  00ED               	movwf	??_conversion
  1303  0844  0DED               	rlf	??_conversion,f
  1304  0845  0DED               	rlf	??_conversion,f
  1305  0846  081F               	movf	31,w	;volatile
  1306  0847  066D               	xorwf	??_conversion,w
  1307  0848  39C3               	andlw	-61
  1308  0849  066D               	xorwf	??_conversion,w
  1309  084A  009F               	movwf	31	;volatile
  1310  084B                     l3158:
  1311                           
  1312                           ;lab3.c: 80:     if (ADCON0bits.GO_DONE==0 && puertoANL ==0){
  1313  084B  189F               	btfsc	31,1	;volatile
  1314  084C  284E               	goto	u5301
  1315  084D  284F               	goto	u5300
  1316  084E                     u5301:
  1317  084E  28C6               	goto	l3170
  1318  084F                     u5300:
  1319  084F                     l3160:
  1320  084F  086E               	movf	conversion@puertoANL,w
  1321  0850  1D03               	btfss	3,2
  1322  0851  2853               	goto	u5311
  1323  0852  2854               	goto	u5310
  1324  0853                     u5311:
  1325  0853  28C6               	goto	l3170
  1326  0854                     u5310:
  1327  0854                     l3162:
  1328                           
  1329                           ;lab3.c: 82:         vpot1 = (5*c)/255;
  1330  0854  3005               	movlw	5
  1331  0855  00F6               	movwf	___wmul@multiplicand
  1332  0856  3000               	movlw	0
  1333  0857  00F7               	movwf	___wmul@multiplicand+1
  1334  0858  1683               	bsf	3,5	;RP0=1, select bank1
  1335  0859  1303               	bcf	3,6	;RP1=0, select bank1
  1336  085A  0859               	movf	(_c+1)^(0+128),w
  1337  085B  00F5               	movwf	___wmul@multiplier+1
  1338  085C  0858               	movf	_c^(0+128),w
  1339  085D  00F4               	movwf	___wmul@multiplier
  1340  085E  160A  158A  23A5  120A  158A  	fcall	___wmul
  1341  0863  0875               	movf	?___wmul+1,w
  1342  0864  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0865  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0866  00A5               	movwf	___awdiv@dividend+1
  1345  0867  0874               	movf	?___wmul,w
  1346  0868  00A4               	movwf	___awdiv@dividend
  1347  0869  30FF               	movlw	255
  1348  086A  00A2               	movwf	___awdiv@divisor
  1349  086B  3000               	movlw	0
  1350  086C  00A3               	movwf	___awdiv@divisor+1
  1351  086D  160A  158A  25E1  120A  158A  	fcall	___awdiv
  1352  0872  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0873  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0874  0822               	movf	?___awdiv,w
  1355  0875  00AB               	movwf	___xxtofl@val
  1356  0876  0823               	movf	?___awdiv+1,w
  1357  0877  00AC               	movwf	___xxtofl@val+1
  1358  0878  3000               	movlw	0
  1359  0879  1BAC               	btfsc	___xxtofl@val+1,7
  1360  087A  30FF               	movlw	255
  1361  087B  00AD               	movwf	___xxtofl@val+2
  1362  087C  00AE               	movwf	___xxtofl@val+3
  1363  087D  3001               	movlw	1
  1364  087E  160A  118A  2134  120A  158A  	fcall	___xxtofl
  1365  0883  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0884  1303               	bcf	3,6	;RP1=0, select bank0
  1367  0885  082E               	movf	?___xxtofl+3,w
  1368  0886  1683               	bsf	3,5	;RP0=1, select bank1
  1369  0887  1303               	bcf	3,6	;RP1=0, select bank1
  1370  0888  00D5               	movwf	(_vpot1+3)^(0+128)
  1371  0889  1283               	bcf	3,5	;RP0=0, select bank0
  1372  088A  1303               	bcf	3,6	;RP1=0, select bank0
  1373  088B  082D               	movf	?___xxtofl+2,w
  1374  088C  1683               	bsf	3,5	;RP0=1, select bank1
  1375  088D  1303               	bcf	3,6	;RP1=0, select bank1
  1376  088E  00D4               	movwf	(_vpot1+2)^(0+128)
  1377  088F  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0890  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0891  082C               	movf	?___xxtofl+1,w
  1380  0892  1683               	bsf	3,5	;RP0=1, select bank1
  1381  0893  1303               	bcf	3,6	;RP1=0, select bank1
  1382  0894  00D3               	movwf	(_vpot1+1)^(0+128)
  1383  0895  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0896  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0897  082B               	movf	?___xxtofl,w
  1386  0898  1683               	bsf	3,5	;RP0=1, select bank1
  1387  0899  1303               	bcf	3,6	;RP1=0, select bank1
  1388  089A  00D2               	movwf	_vpot1^(0+128)
  1389  089B                     l3164:
  1390                           
  1391                           ;lab3.c: 83:         sprintf(buffer, "%.3f", vpot1);
  1392  089B  30BD               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1393  089C  1283               	bcf	3,5	;RP0=0, select bank0
  1394  089D  1303               	bcf	3,6	;RP1=0, select bank0
  1395  089E  00ED               	movwf	??_conversion
  1396  089F  086D               	movf	??_conversion,w
  1397  08A0  1683               	bsf	3,5	;RP0=1, select bank1
  1398  08A1  1303               	bcf	3,6	;RP1=0, select bank1
  1399  08A2  00A8               	movwf	sprintf@f^(0+128)
  1400  08A3  0855               	movf	(_vpot1+3)^(0+128),w
  1401  08A4  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1402  08A5  0854               	movf	(_vpot1+2)^(0+128),w
  1403  08A6  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1404  08A7  0853               	movf	(_vpot1+1)^(0+128),w
  1405  08A8  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1406  08A9  0852               	movf	_vpot1^(0+128),w
  1407  08AA  00A9               	movwf	(?_sprintf^(0+128)+1)
  1408  08AB  30DA               	movlw	(low (_buffer| 0))& (0+255)
  1409  08AC  120A  118A  2022  120A  158A  	fcall	_sprintf
  1410  08B1                     l3166:
  1411                           
  1412                           ;lab3.c: 84:         Lcd_Set_Cursor(2,1);
  1413  08B1  01F7               	clrf	Lcd_Set_Cursor@b
  1414  08B2  0AF7               	incf	Lcd_Set_Cursor@b,f
  1415  08B3  3002               	movlw	2
  1416  08B4  160A  158A  23CA  120A  158A  	fcall	_Lcd_Set_Cursor
  1417                           
  1418                           ;lab3.c: 85:         Lcd_Write_String(buffer);
  1419  08B9  30DA               	movlw	(low (_buffer| 0))& (0+255)
  1420  08BA  00F6               	movwf	Lcd_Write_String@a
  1421  08BB  3000               	movlw	0
  1422  08BC  00F7               	movwf	Lcd_Write_String@a+1
  1423  08BD  160A  158A  244F  120A  158A  	fcall	_Lcd_Write_String
  1424  08C2                     l3168:
  1425                           
  1426                           ;lab3.c: 86:         ADCON0bits.GO_DONE=1;
  1427  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  1428  08C3  1303               	bcf	3,6	;RP1=0, select bank0
  1429  08C4  149F               	bsf	31,1	;volatile
  1430                           
  1431                           ;lab3.c: 87:     }
  1432  08C5  293B               	goto	l90
  1433  08C6                     l3170:
  1434                           
  1435                           ;lab3.c: 89:         vpot2 = (5*b)/255;
  1436  08C6  3005               	movlw	5
  1437  08C7  00F6               	movwf	___wmul@multiplicand
  1438  08C8  3000               	movlw	0
  1439  08C9  00F7               	movwf	___wmul@multiplicand+1
  1440  08CA  1683               	bsf	3,5	;RP0=1, select bank1
  1441  08CB  1303               	bcf	3,6	;RP1=0, select bank1
  1442  08CC  0857               	movf	(_b+1)^(0+128),w
  1443  08CD  00F5               	movwf	___wmul@multiplier+1
  1444  08CE  0856               	movf	_b^(0+128),w
  1445  08CF  00F4               	movwf	___wmul@multiplier
  1446  08D0  160A  158A  23A5  120A  158A  	fcall	___wmul
  1447  08D5  0875               	movf	?___wmul+1,w
  1448  08D6  1283               	bcf	3,5	;RP0=0, select bank0
  1449  08D7  1303               	bcf	3,6	;RP1=0, select bank0
  1450  08D8  00A5               	movwf	___awdiv@dividend+1
  1451  08D9  0874               	movf	?___wmul,w
  1452  08DA  00A4               	movwf	___awdiv@dividend
  1453  08DB  30FF               	movlw	255
  1454  08DC  00A2               	movwf	___awdiv@divisor
  1455  08DD  3000               	movlw	0
  1456  08DE  00A3               	movwf	___awdiv@divisor+1
  1457  08DF  160A  158A  25E1  120A  158A  	fcall	___awdiv
  1458  08E4  1283               	bcf	3,5	;RP0=0, select bank0
  1459  08E5  1303               	bcf	3,6	;RP1=0, select bank0
  1460  08E6  0822               	movf	?___awdiv,w
  1461  08E7  00AB               	movwf	___xxtofl@val
  1462  08E8  0823               	movf	?___awdiv+1,w
  1463  08E9  00AC               	movwf	___xxtofl@val+1
  1464  08EA  3000               	movlw	0
  1465  08EB  1BAC               	btfsc	___xxtofl@val+1,7
  1466  08EC  30FF               	movlw	255
  1467  08ED  00AD               	movwf	___xxtofl@val+2
  1468  08EE  00AE               	movwf	___xxtofl@val+3
  1469  08EF  3001               	movlw	1
  1470  08F0  160A  118A  2134  120A  158A  	fcall	___xxtofl
  1471  08F5  1283               	bcf	3,5	;RP0=0, select bank0
  1472  08F6  1303               	bcf	3,6	;RP1=0, select bank0
  1473  08F7  082E               	movf	?___xxtofl+3,w
  1474  08F8  1683               	bsf	3,5	;RP0=1, select bank1
  1475  08F9  1303               	bcf	3,6	;RP1=0, select bank1
  1476  08FA  00D1               	movwf	(_vpot2+3)^(0+128)
  1477  08FB  1283               	bcf	3,5	;RP0=0, select bank0
  1478  08FC  1303               	bcf	3,6	;RP1=0, select bank0
  1479  08FD  082D               	movf	?___xxtofl+2,w
  1480  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  1481  08FF  1303               	bcf	3,6	;RP1=0, select bank1
  1482  0900  00D0               	movwf	(_vpot2+2)^(0+128)
  1483  0901  1283               	bcf	3,5	;RP0=0, select bank0
  1484  0902  1303               	bcf	3,6	;RP1=0, select bank0
  1485  0903  082C               	movf	?___xxtofl+1,w
  1486  0904  1683               	bsf	3,5	;RP0=1, select bank1
  1487  0905  1303               	bcf	3,6	;RP1=0, select bank1
  1488  0906  00CF               	movwf	(_vpot2+1)^(0+128)
  1489  0907  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0908  1303               	bcf	3,6	;RP1=0, select bank0
  1491  0909  082B               	movf	?___xxtofl,w
  1492  090A  1683               	bsf	3,5	;RP0=1, select bank1
  1493  090B  1303               	bcf	3,6	;RP1=0, select bank1
  1494  090C  00CE               	movwf	_vpot2^(0+128)
  1495  090D                     l3172:
  1496                           
  1497                           ;lab3.c: 90:         sprintf(buffer, "%.3f", vpot2);
  1498  090D  30BD               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1499  090E  1283               	bcf	3,5	;RP0=0, select bank0
  1500  090F  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0910  00ED               	movwf	??_conversion
  1502  0911  086D               	movf	??_conversion,w
  1503  0912  1683               	bsf	3,5	;RP0=1, select bank1
  1504  0913  1303               	bcf	3,6	;RP1=0, select bank1
  1505  0914  00A8               	movwf	sprintf@f^(0+128)
  1506  0915  0851               	movf	(_vpot2+3)^(0+128),w
  1507  0916  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1508  0917  0850               	movf	(_vpot2+2)^(0+128),w
  1509  0918  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1510  0919  084F               	movf	(_vpot2+1)^(0+128),w
  1511  091A  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1512  091B  084E               	movf	_vpot2^(0+128),w
  1513  091C  00A9               	movwf	(?_sprintf^(0+128)+1)
  1514  091D  30DA               	movlw	(low (_buffer| 0))& (0+255)
  1515  091E  120A  118A  2022  120A  158A  	fcall	_sprintf
  1516  0923                     l3174:
  1517                           
  1518                           ;lab3.c: 91:         Lcd_Set_Cursor(2,7);
  1519  0923  3007               	movlw	7
  1520  0924  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0925  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0926  00ED               	movwf	??_conversion
  1523  0927  086D               	movf	??_conversion,w
  1524  0928  00F7               	movwf	Lcd_Set_Cursor@b
  1525  0929  3002               	movlw	2
  1526  092A  160A  158A  23CA  120A  158A  	fcall	_Lcd_Set_Cursor
  1527                           
  1528                           ;lab3.c: 92:         Lcd_Write_String(buffer);
  1529  092F  30DA               	movlw	(low (_buffer| 0))& (0+255)
  1530  0930  00F6               	movwf	Lcd_Write_String@a
  1531  0931  3000               	movlw	0
  1532  0932  00F7               	movwf	Lcd_Write_String@a+1
  1533  0933  160A  158A  244F  120A  158A  	fcall	_Lcd_Write_String
  1534  0938                     l3176:
  1535                           
  1536                           ;lab3.c: 93:         ADCON0bits.GO_DONE=1;
  1537  0938  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0939  1303               	bcf	3,6	;RP1=0, select bank0
  1539  093A  149F               	bsf	31,1	;volatile
  1540  093B                     l90:
  1541  093B  0008               	return
  1542  093C                     __end_of_conversion:
  1543                           
  1544                           	psect	text2
  1545  0022                     __ptext2:	
  1546 ;; *************** function _sprintf *****************
  1547 ;; Defined at:
  1548 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  sp              1    wreg     PTR unsigned char 
  1551 ;;		 -> buffer(1), 
  1552 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1553 ;;		 -> STR_7(5), STR_6(5), 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  sp              1   35[BANK1 ] PTR unsigned char 
  1556 ;;		 -> buffer(1), 
  1557 ;;  fval            4   38[BANK1 ] PTR unsigned char 
  1558 ;;  tmpval          4   31[BANK1 ] struct .
  1559 ;;  val             4   25[BANK1 ] unsigned long 
  1560 ;;  prec            2   36[BANK1 ] int 
  1561 ;;  eexp            2   29[BANK1 ] int 
  1562 ;;  flag            2   23[BANK1 ] unsigned short 
  1563 ;;  cp              2    0        PTR const unsigned char 
  1564 ;;  len             2    0        unsigned int 
  1565 ;;  width           2    0        int 
  1566 ;;  c               1   42[BANK1 ] unsigned char 
  1567 ;;  ap              1   22[BANK1 ] PTR void [1]
  1568 ;;		 -> ?_sprintf(2), 
  1569 ;;  d               1    0        unsigned char 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  2    8[BANK1 ] int 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1579 ;;      Params:         0       0       5       0       0
  1580 ;;      Locals:         0       0      25       0       0
  1581 ;;      Temps:          0       0       5       0       0
  1582 ;;      Totals:         0       0      35       0       0
  1583 ;;Total ram usage:       35 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    4
  1586 ;; This function calls:
  1587 ;;		___awdiv
  1588 ;;		___fladd
  1589 ;;		___fleq
  1590 ;;		___flge
  1591 ;;		___flmul
  1592 ;;		___flneg
  1593 ;;		___flsub
  1594 ;;		___fltol
  1595 ;;		___lldiv
  1596 ;;		___llmod
  1597 ;;		___wmul
  1598 ;;		___xxtofl
  1599 ;;		__div_to_l_
  1600 ;;		__tdiv_to_l_
  1601 ;;		_fround
  1602 ;;		_isdigit
  1603 ;;		_scale
  1604 ;; This function is called by:
  1605 ;;		_conversion
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           
  1610                           ;psect for function _sprintf
  1611  0022                     _sprintf:
  1612                           
  1613                           ;incstack = 0
  1614                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1615                           ;sprintf@sp stored from wreg
  1616  0022  1683               	bsf	3,5	;RP0=1, select bank1
  1617  0023  1303               	bcf	3,6	;RP1=0, select bank1
  1618  0024  00C3               	movwf	sprintf@sp^(0+128)
  1619  0025                     l2932:
  1620                           
  1621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1622  0025  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1623  0026  00AD               	movwf	??_sprintf^(0+128)
  1624  0027  082D               	movf	??_sprintf^(0+128),w
  1625  0028  00B6               	movwf	sprintf@ap^(0+128)
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1628  0029  2F91               	goto	l3126
  1629  002A                     l2934:
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1632  002A  3025               	movlw	37
  1633  002B  064A               	xorwf	sprintf@c^(0+128),w
  1634  002C  1903               	btfsc	3,2
  1635  002D  282F               	goto	u4951
  1636  002E  2830               	goto	u4950
  1637  002F                     u4951:
  1638  002F  283C               	goto	l2940
  1639  0030                     u4950:
  1640  0030                     l2936:
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1643  0030  084A               	movf	sprintf@c^(0+128),w
  1644  0031  00AD               	movwf	??_sprintf^(0+128)
  1645  0032  0843               	movf	sprintf@sp^(0+128),w
  1646  0033  0084               	movwf	4
  1647  0034  082D               	movf	??_sprintf^(0+128),w
  1648  0035  1383               	bcf	3,7	;select IRP bank0
  1649  0036  0080               	movwf	0
  1650  0037                     l2938:
  1651  0037  3001               	movlw	1
  1652  0038  00AD               	movwf	??_sprintf^(0+128)
  1653  0039  082D               	movf	??_sprintf^(0+128),w
  1654  003A  07C3               	addwf	sprintf@sp^(0+128),f
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1657  003B  2F91               	goto	l3126
  1658  003C                     l2940:
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1661  003C  01B7               	clrf	sprintf@flag^(0+128)
  1662  003D  01B8               	clrf	(sprintf@flag+1)^(0+128)
  1663  003E                     l2942:
  1664                           
  1665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1666  003E  0828               	movf	sprintf@f^(0+128),w
  1667  003F  0084               	movwf	4
  1668  0040  160A  118A  200A  120A  118A  	fcall	stringdir
  1669  0045  3A2E               	xorlw	46
  1670  0046  1D03               	skipz
  1671  0047  2849               	goto	u4961
  1672  0048  284A               	goto	u4960
  1673  0049                     u4961:
  1674  0049  288F               	goto	l2958
  1675  004A                     u4960:
  1676  004A                     l2944:
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1679  004A  1738               	bsf	(sprintf@flag^(0+128)+1),6
  1680  004B                     l2946:
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1683  004B  3001               	movlw	1
  1684  004C  00AD               	movwf	??_sprintf^(0+128)
  1685  004D  082D               	movf	??_sprintf^(0+128),w
  1686  004E  07A8               	addwf	sprintf@f^(0+128),f
  1687  004F                     l2948:
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1690  004F  01C4               	clrf	sprintf@prec^(0+128)
  1691  0050  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1692                           
  1693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1694  0051  287E               	goto	l2956
  1695  0052                     l2950:
  1696                           
  1697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1698  0052  300A               	movlw	10
  1699  0053  00F4               	movwf	___wmul@multiplier
  1700  0054  3000               	movlw	0
  1701  0055  00F5               	movwf	___wmul@multiplier+1
  1702  0056  1683               	bsf	3,5	;RP0=1, select bank1
  1703  0057  1303               	bcf	3,6	;RP1=0, select bank1
  1704  0058  0845               	movf	(sprintf@prec+1)^(0+128),w
  1705  0059  00F7               	movwf	___wmul@multiplicand+1
  1706  005A  0844               	movf	sprintf@prec^(0+128),w
  1707  005B  00F6               	movwf	___wmul@multiplicand
  1708  005C  160A  158A  23A5  120A  118A  	fcall	___wmul
  1709  0061  0875               	movf	?___wmul+1,w
  1710  0062  1683               	bsf	3,5	;RP0=1, select bank1
  1711  0063  1303               	bcf	3,6	;RP1=0, select bank1
  1712  0064  00C5               	movwf	(sprintf@prec+1)^(0+128)
  1713  0065  0874               	movf	?___wmul,w
  1714  0066  00C4               	movwf	sprintf@prec^(0+128)
  1715  0067                     l2952:
  1716                           
  1717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1718  0067  0828               	movf	sprintf@f^(0+128),w
  1719  0068  0084               	movwf	4
  1720  0069  160A  118A  200A  120A  118A  	fcall	stringdir
  1721  006E  3ED0               	addlw	208
  1722  006F  00AD               	movwf	??_sprintf^(0+128)
  1723  0070  30FF               	movlw	255
  1724  0071  1803               	skipnc
  1725  0072  3000               	movlw	0
  1726  0073  00AE               	movwf	(??_sprintf^(0+128)+1)
  1727  0074  082D               	movf	??_sprintf^(0+128),w
  1728  0075  07C4               	addwf	sprintf@prec^(0+128),f
  1729  0076  1803               	skipnc
  1730  0077  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  1731  0078  082E               	movf	(??_sprintf+1)^(0+128),w
  1732  0079  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  1733  007A                     l2954:
  1734  007A  3001               	movlw	1
  1735  007B  00AD               	movwf	??_sprintf^(0+128)
  1736  007C  082D               	movf	??_sprintf^(0+128),w
  1737  007D  07A8               	addwf	sprintf@f^(0+128),f
  1738  007E                     l2956:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1741  007E  0828               	movf	sprintf@f^(0+128),w
  1742  007F  0084               	movwf	4
  1743  0080  160A  118A  200A  120A  118A  	fcall	stringdir
  1744  0085  160A  158A  2340  120A  118A  	fcall	_isdigit
  1745  008A  1803               	btfsc	3,0
  1746  008B  288D               	goto	u4971
  1747  008C  288E               	goto	u4970
  1748  008D                     u4971:
  1749  008D  2852               	goto	l2950
  1750  008E                     u4970:
  1751  008E  2895               	goto	l2964
  1752  008F                     l2958:
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1755  008F  01C4               	clrf	sprintf@prec^(0+128)
  1756  0090  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1757  0091                     l2960:
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1760  0091  1638               	bsf	(sprintf@flag^(0+128)+1),4
  1761  0092  2895               	goto	l2964
  1762  0093                     l218:	
  1763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1764                           
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1767  0093  1538               	bsf	(sprintf@flag^(0+128)+1),2
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1770  0094  28B1               	goto	l2966
  1771  0095                     l2964:
  1772  0095  3001               	movlw	1
  1773  0096  1683               	bsf	3,5	;RP0=1, select bank1
  1774  0097  1303               	bcf	3,6	;RP1=0, select bank1
  1775  0098  07A8               	addwf	sprintf@f^(0+128),f
  1776  0099  30FF               	movlw	-1
  1777  009A  0728               	addwf	sprintf@f^(0+128),w
  1778  009B  0084               	movwf	4
  1779  009C  160A  118A  200A  120A  118A  	fcall	stringdir
  1780  00A1  00CA               	movwf	sprintf@c^(0+128)
  1781  00A2  00AD               	movwf	??_sprintf^(0+128)
  1782  00A3  01AE               	clrf	(??_sprintf^(0+128)+1)
  1783                           
  1784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1785                           ; Switch size 1, requested type "simple"
  1786                           ; Number of cases is 1, Range of values is 0 to 0
  1787                           ; switch strategies available:
  1788                           ; Name         Instructions Cycles
  1789                           ; simple_byte            4     3 (average)
  1790                           ; direct_byte           11     8 (fixed)
  1791                           ; jumptable            260     6 (fixed)
  1792                           ;	Chosen strategy is simple_byte
  1793  00A4  082E               	movf	(??_sprintf+1)^(0+128),w
  1794  00A5  3A00               	xorlw	0	; case 0
  1795  00A6  1903               	skipnz
  1796  00A7  28A9               	goto	l3242
  1797  00A8  2F91               	goto	l3126
  1798  00A9                     l3242:
  1799                           
  1800                           ; Switch size 1, requested type "simple"
  1801                           ; Number of cases is 2, Range of values is 0 to 102
  1802                           ; switch strategies available:
  1803                           ; Name         Instructions Cycles
  1804                           ; simple_byte            7     4 (average)
  1805                           ; jumptable            260     6 (fixed)
  1806                           ;	Chosen strategy is simple_byte
  1807  00A9  082D               	movf	??_sprintf^(0+128),w
  1808  00AA  3A00               	xorlw	0	; case 0
  1809  00AB  1903               	skipnz
  1810  00AC  2FA3               	goto	l3128
  1811  00AD  3A66               	xorlw	102	; case 102
  1812  00AE  1903               	skipnz
  1813  00AF  2893               	goto	l218
  1814  00B0  2F91               	goto	l3126
  1815  00B1                     l2966:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1818  00B1  3000               	movlw	0
  1819  00B2  0537               	andwf	sprintf@flag^(0+128),w
  1820  00B3  00AD               	movwf	??_sprintf^(0+128)
  1821  00B4  3007               	movlw	7
  1822  00B5  0538               	andwf	(sprintf@flag+1)^(0+128),w
  1823  00B6  00AE               	movwf	(??_sprintf+1)^(0+128)
  1824  00B7  082D               	movf	??_sprintf^(0+128),w
  1825  00B8  042E               	iorwf	(??_sprintf^(0+128)+1),w
  1826  00B9  1903               	btfsc	3,2
  1827  00BA  28BC               	goto	u4981
  1828  00BB  28BD               	goto	u4980
  1829  00BC                     u4981:
  1830  00BC  2F4C               	goto	l3108
  1831  00BD                     u4980:
  1832  00BD                     l2968:
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1835  00BD  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  1836  00BE  28C0               	goto	u4991
  1837  00BF  28C1               	goto	u4990
  1838  00C0                     u4991:
  1839  00C0  28C5               	goto	l2972
  1840  00C1                     u4990:
  1841  00C1                     l2970:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1844  00C1  3006               	movlw	6
  1845  00C2  00C4               	movwf	sprintf@prec^(0+128)
  1846  00C3  3000               	movlw	0
  1847  00C4  00C5               	movwf	(sprintf@prec^(0+128)+1)
  1848  00C5                     l2972:
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1851  00C5  0836               	movf	sprintf@ap^(0+128),w
  1852  00C6  0084               	movwf	4
  1853  00C7  1383               	bcf	3,7	;select IRP bank0
  1854  00C8  0800               	movf	0,w
  1855  00C9  00C6               	movwf	sprintf@fval^(0+128)
  1856  00CA  0A84               	incf	4,f
  1857  00CB  0800               	movf	0,w
  1858  00CC  00C7               	movwf	(sprintf@fval+1)^(0+128)
  1859  00CD  0A84               	incf	4,f
  1860  00CE  0800               	movf	0,w
  1861  00CF  00C8               	movwf	(sprintf@fval+2)^(0+128)
  1862  00D0  0A84               	incf	4,f
  1863  00D1  0800               	movf	0,w
  1864  00D2  00C9               	movwf	(sprintf@fval+3)^(0+128)
  1865  00D3                     l2974:
  1866  00D3  3004               	movlw	4
  1867  00D4  00AD               	movwf	??_sprintf^(0+128)
  1868  00D5  082D               	movf	??_sprintf^(0+128),w
  1869  00D6  07B6               	addwf	sprintf@ap^(0+128),f
  1870  00D7                     l2976:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1873  00D7  0849               	movf	(sprintf@fval+3)^(0+128),w
  1874  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1875  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1876  00DA  00A3               	movwf	___flge@ff1+3
  1877  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  1878  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  1879  00DD  0848               	movf	(sprintf@fval+2)^(0+128),w
  1880  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1881  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1882  00E0  00A2               	movwf	___flge@ff1+2
  1883  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1884  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1885  00E3  0847               	movf	(sprintf@fval+1)^(0+128),w
  1886  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1887  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1888  00E6  00A1               	movwf	___flge@ff1+1
  1889  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1890  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1891  00E9  0846               	movf	sprintf@fval^(0+128),w
  1892  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1893  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1894  00EC  00A0               	movwf	___flge@ff1
  1895  00ED  3000               	movlw	0
  1896  00EE  00A7               	movwf	___flge@ff2+3
  1897  00EF  3000               	movlw	0
  1898  00F0  00A6               	movwf	___flge@ff2+2
  1899  00F1  3000               	movlw	0
  1900  00F2  00A5               	movwf	___flge@ff2+1
  1901  00F3  3000               	movlw	0
  1902  00F4  00A4               	movwf	___flge@ff2
  1903  00F5  160A  158A  275C  120A  118A  	fcall	___flge
  1904  00FA  1803               	btfsc	3,0
  1905  00FB  28FD               	goto	u5001
  1906  00FC  28FE               	goto	u5000
  1907  00FD                     u5001:
  1908  00FD  291B               	goto	l2982
  1909  00FE                     u5000:
  1910  00FE                     l2978:
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1913  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  1914  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  1915  0100  0849               	movf	(sprintf@fval+3)^(0+128),w
  1916  0101  00F7               	movwf	___flneg@f1+3
  1917  0102  0848               	movf	(sprintf@fval+2)^(0+128),w
  1918  0103  00F6               	movwf	___flneg@f1+2
  1919  0104  0847               	movf	(sprintf@fval+1)^(0+128),w
  1920  0105  00F5               	movwf	___flneg@f1+1
  1921  0106  0846               	movf	sprintf@fval^(0+128),w
  1922  0107  00F4               	movwf	___flneg@f1
  1923  0108  160A  158A  2318  120A  118A  	fcall	___flneg
  1924  010D  0877               	movf	?___flneg+3,w
  1925  010E  1683               	bsf	3,5	;RP0=1, select bank1
  1926  010F  1303               	bcf	3,6	;RP1=0, select bank1
  1927  0110  00C9               	movwf	(sprintf@fval+3)^(0+128)
  1928  0111  0876               	movf	?___flneg+2,w
  1929  0112  00C8               	movwf	(sprintf@fval+2)^(0+128)
  1930  0113  0875               	movf	?___flneg+1,w
  1931  0114  00C7               	movwf	(sprintf@fval+1)^(0+128)
  1932  0115  0874               	movf	?___flneg,w
  1933  0116  00C6               	movwf	sprintf@fval^(0+128)
  1934  0117                     l2980:
  1935                           
  1936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1937  0117  3003               	movlw	3
  1938  0118  04B7               	iorwf	sprintf@flag^(0+128),f
  1939  0119  3000               	movlw	0
  1940  011A  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  1941  011B                     l2982:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1944  011B  1683               	bsf	3,5	;RP0=1, select bank1
  1945  011C  1303               	bcf	3,6	;RP1=0, select bank1
  1946  011D  01BD               	clrf	sprintf@eexp^(0+128)
  1947  011E  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  1948  011F                     l2984:
  1949                           
  1950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1951  011F  0849               	movf	(sprintf@fval+3)^(0+128),w
  1952  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1953  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1954  0122  00A3               	movwf	___fleq@ff1+3
  1955  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1956  0124  1303               	bcf	3,6	;RP1=0, select bank1
  1957  0125  0848               	movf	(sprintf@fval+2)^(0+128),w
  1958  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0128  00A2               	movwf	___fleq@ff1+2
  1961  0129  1683               	bsf	3,5	;RP0=1, select bank1
  1962  012A  1303               	bcf	3,6	;RP1=0, select bank1
  1963  012B  0847               	movf	(sprintf@fval+1)^(0+128),w
  1964  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1965  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1966  012E  00A1               	movwf	___fleq@ff1+1
  1967  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1968  0130  1303               	bcf	3,6	;RP1=0, select bank1
  1969  0131  0846               	movf	sprintf@fval^(0+128),w
  1970  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1971  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1972  0134  00A0               	movwf	___fleq@ff1
  1973  0135  3000               	movlw	0
  1974  0136  00A7               	movwf	___fleq@ff2+3
  1975  0137  3000               	movlw	0
  1976  0138  00A6               	movwf	___fleq@ff2+2
  1977  0139  3000               	movlw	0
  1978  013A  00A5               	movwf	___fleq@ff2+1
  1979  013B  3000               	movlw	0
  1980  013C  00A4               	movwf	___fleq@ff2
  1981  013D  160A  158A  24D9  120A  118A  	fcall	___fleq
  1982  0142  1803               	btfsc	3,0
  1983  0143  2945               	goto	u5011
  1984  0144  2946               	goto	u5010
  1985  0145                     u5011:
  1986  0145  2A62               	goto	l3010
  1987  0146                     u5010:
  1988  0146                     l2986:
  1989                           
  1990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1991  0146  1003               	clrc
  1992  0147  1683               	bsf	3,5	;RP0=1, select bank1
  1993  0148  1303               	bcf	3,6	;RP1=0, select bank1
  1994  0149  0D48               	rlf	(sprintf@fval+2)^(0+128),w
  1995  014A  0D49               	rlf	(sprintf@fval+3)^(0+128),w
  1996  014B  3E82               	addlw	130
  1997  014C  00BD               	movwf	sprintf@eexp^(0+128)
  1998  014D  30FF               	movlw	255
  1999  014E  1803               	skipnc
  2000  014F  3000               	movlw	0
  2001  0150  00BE               	movwf	(sprintf@eexp^(0+128)+1)
  2002  0151                     l2988:
  2003                           
  2004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2005  0151  30FF               	movlw	255
  2006  0152  07BD               	addwf	sprintf@eexp^(0+128),f
  2007  0153  1803               	skipnc
  2008  0154  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2009  0155  30FF               	movlw	255
  2010  0156  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2011  0157                     l2990:
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2014  0157  3003               	movlw	3
  2015  0158  00F4               	movwf	___wmul@multiplier
  2016  0159  3000               	movlw	0
  2017  015A  00F5               	movwf	___wmul@multiplier+1
  2018  015B  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2019  015C  00F7               	movwf	___wmul@multiplicand+1
  2020  015D  083D               	movf	sprintf@eexp^(0+128),w
  2021  015E  00F6               	movwf	___wmul@multiplicand
  2022  015F  160A  158A  23A5  120A  118A  	fcall	___wmul
  2023  0164  0875               	movf	?___wmul+1,w
  2024  0165  1683               	bsf	3,5	;RP0=1, select bank1
  2025  0166  1303               	bcf	3,6	;RP1=0, select bank1
  2026  0167  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2027  0168  0874               	movf	?___wmul,w
  2028  0169  00BD               	movwf	sprintf@eexp^(0+128)
  2029  016A                     l2992:
  2030                           
  2031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2032  016A  300A               	movlw	10
  2033  016B  1283               	bcf	3,5	;RP0=0, select bank0
  2034  016C  1303               	bcf	3,6	;RP1=0, select bank0
  2035  016D  00A2               	movwf	___awdiv@divisor
  2036  016E  3000               	movlw	0
  2037  016F  00A3               	movwf	___awdiv@divisor+1
  2038  0170  1683               	bsf	3,5	;RP0=1, select bank1
  2039  0171  1303               	bcf	3,6	;RP1=0, select bank1
  2040  0172  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2041  0173  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0174  1303               	bcf	3,6	;RP1=0, select bank0
  2043  0175  00A5               	movwf	___awdiv@dividend+1
  2044  0176  1683               	bsf	3,5	;RP0=1, select bank1
  2045  0177  1303               	bcf	3,6	;RP1=0, select bank1
  2046  0178  083D               	movf	sprintf@eexp^(0+128),w
  2047  0179  1283               	bcf	3,5	;RP0=0, select bank0
  2048  017A  1303               	bcf	3,6	;RP1=0, select bank0
  2049  017B  00A4               	movwf	___awdiv@dividend
  2050  017C  160A  158A  25E1  120A  118A  	fcall	___awdiv
  2051  0181  1283               	bcf	3,5	;RP0=0, select bank0
  2052  0182  1303               	bcf	3,6	;RP1=0, select bank0
  2053  0183  0823               	movf	?___awdiv+1,w
  2054  0184  1683               	bsf	3,5	;RP0=1, select bank1
  2055  0185  1303               	bcf	3,6	;RP1=0, select bank1
  2056  0186  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2057  0187  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0188  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0189  0822               	movf	?___awdiv,w
  2060  018A  1683               	bsf	3,5	;RP0=1, select bank1
  2061  018B  1303               	bcf	3,6	;RP1=0, select bank1
  2062  018C  00BD               	movwf	sprintf@eexp^(0+128)
  2063  018D                     l2994:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2066  018D  1FBE               	btfss	(sprintf@eexp+1)^(0+128),7
  2067  018E  2990               	goto	u5021
  2068  018F  2991               	goto	u5020
  2069  0190                     u5021:
  2070  0190  2997               	goto	l2998
  2071  0191                     u5020:
  2072  0191                     l2996:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2075  0191  30FF               	movlw	255
  2076  0192  07BD               	addwf	sprintf@eexp^(0+128),f
  2077  0193  1803               	skipnc
  2078  0194  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2079  0195  30FF               	movlw	255
  2080  0196  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2081  0197                     l2998:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2084  0197  033D               	decf	sprintf@eexp^(0+128),w
  2085  0198  3AFF               	xorlw	255
  2086  0199  120A  158A  249D  120A  118A  	fcall	_scale
  2087  019E  1283               	bcf	3,5	;RP0=0, select bank0
  2088  019F  1303               	bcf	3,6	;RP1=0, select bank0
  2089  01A0  0848               	movf	?_scale+3,w
  2090  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  2091  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  2092  01A3  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2093  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2094  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2095  01A6  0847               	movf	?_scale+2,w
  2096  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  2097  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  2098  01A9  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2099  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2100  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2101  01AC  0846               	movf	?_scale+1,w
  2102  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2103  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  2104  01AF  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2105  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  2106  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  2107  01B2  0845               	movf	?_scale,w
  2108  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2109  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  2110  01B5  00BF               	movwf	sprintf@tmpval^(0+128)
  2111  01B6                     l3000:
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2114  01B6  0849               	movf	(sprintf@fval+3)^(0+128),w
  2115  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  2116  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  2117  01B9  00AE               	movwf	___flmul@b+3
  2118  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  2119  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  2120  01BC  0848               	movf	(sprintf@fval+2)^(0+128),w
  2121  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2122  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2123  01BF  00AD               	movwf	___flmul@b+2
  2124  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  2125  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  2126  01C2  0847               	movf	(sprintf@fval+1)^(0+128),w
  2127  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2128  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2129  01C5  00AC               	movwf	___flmul@b+1
  2130  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  2131  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  2132  01C8  0846               	movf	sprintf@fval^(0+128),w
  2133  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2134  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2135  01CB  00AB               	movwf	___flmul@b
  2136  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  2137  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  2138  01CE  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2139  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2140  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2141  01D1  00B2               	movwf	___flmul@a+3
  2142  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2143  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2144  01D4  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2145  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2146  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2147  01D7  00B1               	movwf	___flmul@a+2
  2148  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2149  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2150  01DA  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2151  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2152  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2153  01DD  00B0               	movwf	___flmul@a+1
  2154  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  2155  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  2156  01E0  083F               	movf	sprintf@tmpval^(0+128),w
  2157  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2158  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  2159  01E3  00AF               	movwf	___flmul@a
  2160  01E4  120A  158A  213C  120A  118A  	fcall	___flmul
  2161  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2162  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2163  01EB  082E               	movf	?___flmul+3,w
  2164  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2165  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2166  01EE  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2167  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2168  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2169  01F1  082D               	movf	?___flmul+2,w
  2170  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  2171  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  2172  01F4  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2173  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2174  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2175  01F7  082C               	movf	?___flmul+1,w
  2176  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  2177  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  2178  01FA  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2179  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2180  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2181  01FD  082B               	movf	?___flmul,w
  2182  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  2183  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  2184  0200  00BF               	movwf	sprintf@tmpval^(0+128)
  2185  0201                     l3002:
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2188  0201  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2189  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0204  00A3               	movwf	___flge@ff1+3
  2192  0205  1683               	bsf	3,5	;RP0=1, select bank1
  2193  0206  1303               	bcf	3,6	;RP1=0, select bank1
  2194  0207  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2195  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2197  020A  00A2               	movwf	___flge@ff1+2
  2198  020B  1683               	bsf	3,5	;RP0=1, select bank1
  2199  020C  1303               	bcf	3,6	;RP1=0, select bank1
  2200  020D  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2201  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2202  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0210  00A1               	movwf	___flge@ff1+1
  2204  0211  1683               	bsf	3,5	;RP0=1, select bank1
  2205  0212  1303               	bcf	3,6	;RP1=0, select bank1
  2206  0213  083F               	movf	sprintf@tmpval^(0+128),w
  2207  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2209  0216  00A0               	movwf	___flge@ff1
  2210  0217  303F               	movlw	63
  2211  0218  00A7               	movwf	___flge@ff2+3
  2212  0219  3080               	movlw	128
  2213  021A  00A6               	movwf	___flge@ff2+2
  2214  021B  3000               	movlw	0
  2215  021C  00A5               	movwf	___flge@ff2+1
  2216  021D  3000               	movlw	0
  2217  021E  00A4               	movwf	___flge@ff2
  2218  021F  160A  158A  275C  120A  118A  	fcall	___flge
  2219  0224  1803               	btfsc	3,0
  2220  0225  2A27               	goto	u5031
  2221  0226  2A28               	goto	u5030
  2222  0227                     u5031:
  2223  0227  2A31               	goto	l3006
  2224  0228                     u5030:
  2225  0228                     l3004:
  2226                           
  2227                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2228  0228  30FF               	movlw	255
  2229  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2230  022A  1303               	bcf	3,6	;RP1=0, select bank1
  2231  022B  07BD               	addwf	sprintf@eexp^(0+128),f
  2232  022C  1803               	skipnc
  2233  022D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2234  022E  30FF               	movlw	255
  2235  022F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2236  0230  2A62               	goto	l3010
  2237  0231                     l3006:
  2238  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2239  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2240  0233  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2241  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0236  00A3               	movwf	___flge@ff1+3
  2244  0237  1683               	bsf	3,5	;RP0=1, select bank1
  2245  0238  1303               	bcf	3,6	;RP1=0, select bank1
  2246  0239  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2247  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2248  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2249  023C  00A2               	movwf	___flge@ff1+2
  2250  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2251  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2252  023F  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2253  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2255  0242  00A1               	movwf	___flge@ff1+1
  2256  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2257  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2258  0245  083F               	movf	sprintf@tmpval^(0+128),w
  2259  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0248  00A0               	movwf	___flge@ff1
  2262  0249  3041               	movlw	65
  2263  024A  00A7               	movwf	___flge@ff2+3
  2264  024B  3020               	movlw	32
  2265  024C  00A6               	movwf	___flge@ff2+2
  2266  024D  3000               	movlw	0
  2267  024E  00A5               	movwf	___flge@ff2+1
  2268  024F  3000               	movlw	0
  2269  0250  00A4               	movwf	___flge@ff2
  2270  0251  160A  158A  275C  120A  118A  	fcall	___flge
  2271  0256  1C03               	btfss	3,0
  2272  0257  2A59               	goto	u5041
  2273  0258  2A5A               	goto	u5040
  2274  0259                     u5041:
  2275  0259  2A62               	goto	l3010
  2276  025A                     u5040:
  2277  025A                     l3008:
  2278                           
  2279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2280  025A  3001               	movlw	1
  2281  025B  1683               	bsf	3,5	;RP0=1, select bank1
  2282  025C  1303               	bcf	3,6	;RP1=0, select bank1
  2283  025D  07BD               	addwf	sprintf@eexp^(0+128),f
  2284  025E  1803               	skipnc
  2285  025F  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2286  0260  3000               	movlw	0
  2287  0261  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2288  0262                     l3010:
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2291  0262  1683               	bsf	3,5	;RP0=1, select bank1
  2292  0263  1303               	bcf	3,6	;RP1=0, select bank1
  2293  0264  0845               	movf	(sprintf@prec+1)^(0+128),w
  2294  0265  3A80               	xorlw	128
  2295  0266  00FF               	movwf	btemp+1
  2296  0267  3080               	movlw	128
  2297  0268  027F               	subwf	btemp+1,w
  2298  0269  1D03               	skipz
  2299  026A  2A6D               	goto	u5055
  2300  026B  300D               	movlw	13
  2301  026C  0244               	subwf	sprintf@prec^(0+128),w
  2302  026D                     u5055:
  2303  026D  1803               	skipnc
  2304  026E  2A70               	goto	u5051
  2305  026F  2A71               	goto	u5050
  2306  0270                     u5051:
  2307  0270  2AB8               	goto	l3014
  2308  0271                     u5050:
  2309  0271                     l3012:
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2312  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2313  0272  1303               	bcf	3,6	;RP1=0, select bank1
  2314  0273  0844               	movf	sprintf@prec^(0+128),w
  2315  0274  160A  118A  236B  120A  118A  	fcall	_fround
  2316  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2317  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2318  027B  0848               	movf	?_fround+3,w
  2319  027C  00DC               	movwf	___fladd@b+3
  2320  027D  0847               	movf	?_fround+2,w
  2321  027E  00DB               	movwf	___fladd@b+2
  2322  027F  0846               	movf	?_fround+1,w
  2323  0280  00DA               	movwf	___fladd@b+1
  2324  0281  0845               	movf	?_fround,w
  2325  0282  00D9               	movwf	___fladd@b
  2326  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2327  0284  1303               	bcf	3,6	;RP1=0, select bank1
  2328  0285  0849               	movf	(sprintf@fval+3)^(0+128),w
  2329  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2330  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2331  0288  00E0               	movwf	___fladd@a+3
  2332  0289  1683               	bsf	3,5	;RP0=1, select bank1
  2333  028A  1303               	bcf	3,6	;RP1=0, select bank1
  2334  028B  0848               	movf	(sprintf@fval+2)^(0+128),w
  2335  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2336  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2337  028E  00DF               	movwf	___fladd@a+2
  2338  028F  1683               	bsf	3,5	;RP0=1, select bank1
  2339  0290  1303               	bcf	3,6	;RP1=0, select bank1
  2340  0291  0847               	movf	(sprintf@fval+1)^(0+128),w
  2341  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0294  00DE               	movwf	___fladd@a+1
  2344  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2345  0296  1303               	bcf	3,6	;RP1=0, select bank1
  2346  0297  0846               	movf	sprintf@fval^(0+128),w
  2347  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2348  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2349  029A  00DD               	movwf	___fladd@a
  2350  029B  160A  118A  2578  120A  118A  	fcall	___fladd
  2351  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2352  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2353  02A2  085C               	movf	?___fladd+3,w
  2354  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2355  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2356  02A5  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2357  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2358  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2359  02A8  085B               	movf	?___fladd+2,w
  2360  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2361  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2362  02AB  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2363  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2364  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2365  02AE  085A               	movf	?___fladd+1,w
  2366  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2367  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  2368  02B1  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2369  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2370  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  2371  02B4  0859               	movf	?___fladd,w
  2372  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  2373  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  2374  02B7  00C6               	movwf	sprintf@fval^(0+128)
  2375  02B8                     l3014:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2378  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2379  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2380  02BA  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2381  02BB  3A80               	xorlw	128
  2382  02BC  00FF               	movwf	btemp+1
  2383  02BD  3080               	movlw	128
  2384  02BE  027F               	subwf	btemp+1,w
  2385  02BF  1D03               	skipz
  2386  02C0  2AC3               	goto	u5065
  2387  02C1  300A               	movlw	10
  2388  02C2  023D               	subwf	sprintf@eexp^(0+128),w
  2389  02C3                     u5065:
  2390  02C3  1803               	skipnc
  2391  02C4  2AC6               	goto	u5061
  2392  02C5  2AC7               	goto	u5060
  2393  02C6                     u5061:
  2394  02C6  2B26               	goto	l3022
  2395  02C7                     u5060:
  2396  02C7                     l3016:
  2397  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2398  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2399  02C9  0849               	movf	(sprintf@fval+3)^(0+128),w
  2400  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2401  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2402  02CC  00A3               	movwf	___fleq@ff1+3
  2403  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  2404  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  2405  02CF  0848               	movf	(sprintf@fval+2)^(0+128),w
  2406  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2407  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2408  02D2  00A2               	movwf	___fleq@ff1+2
  2409  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2410  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2411  02D5  0847               	movf	(sprintf@fval+1)^(0+128),w
  2412  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2413  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2414  02D8  00A1               	movwf	___fleq@ff1+1
  2415  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2416  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2417  02DB  0846               	movf	sprintf@fval^(0+128),w
  2418  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2419  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2420  02DE  00A0               	movwf	___fleq@ff1
  2421  02DF  3000               	movlw	0
  2422  02E0  00A7               	movwf	___fleq@ff2+3
  2423  02E1  3000               	movlw	0
  2424  02E2  00A6               	movwf	___fleq@ff2+2
  2425  02E3  3000               	movlw	0
  2426  02E4  00A5               	movwf	___fleq@ff2+1
  2427  02E5  3000               	movlw	0
  2428  02E6  00A4               	movwf	___fleq@ff2
  2429  02E7  160A  158A  24D9  120A  118A  	fcall	___fleq
  2430  02EC  1803               	btfsc	3,0
  2431  02ED  2AEF               	goto	u5071
  2432  02EE  2AF0               	goto	u5070
  2433  02EF                     u5071:
  2434  02EF  2BD2               	goto	l3036
  2435  02F0                     u5070:
  2436  02F0                     l3018:
  2437  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2438  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2439  02F2  0849               	movf	(sprintf@fval+3)^(0+128),w
  2440  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2441  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2442  02F5  00DB               	movwf	___fltol@f1+3
  2443  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  2444  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  2445  02F8  0848               	movf	(sprintf@fval+2)^(0+128),w
  2446  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2447  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2448  02FB  00DA               	movwf	___fltol@f1+2
  2449  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  2450  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  2451  02FE  0847               	movf	(sprintf@fval+1)^(0+128),w
  2452  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2453  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2454  0301  00D9               	movwf	___fltol@f1+1
  2455  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2456  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2457  0304  0846               	movf	sprintf@fval^(0+128),w
  2458  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0307  00D8               	movwf	___fltol@f1
  2461  0308  160A  158A  264A  120A  118A  	fcall	___fltol
  2462  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2463  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2464  030F  085B               	movf	?___fltol+3,w
  2465  0310  045A               	iorwf	?___fltol+2,w
  2466  0311  0459               	iorwf	?___fltol+1,w
  2467  0312  0458               	iorwf	?___fltol,w
  2468  0313  1D03               	skipz
  2469  0314  2B16               	goto	u5081
  2470  0315  2B17               	goto	u5080
  2471  0316                     u5081:
  2472  0316  2BD2               	goto	l3036
  2473  0317                     u5080:
  2474  0317                     l3020:
  2475  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2476  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2477  0319  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2478  031A  3A80               	xorlw	128
  2479  031B  00FF               	movwf	btemp+1
  2480  031C  3080               	movlw	128
  2481  031D  027F               	subwf	btemp+1,w
  2482  031E  1D03               	skipz
  2483  031F  2B22               	goto	u5095
  2484  0320  3002               	movlw	2
  2485  0321  023D               	subwf	sprintf@eexp^(0+128),w
  2486  0322                     u5095:
  2487  0322  1C03               	skipc
  2488  0323  2B25               	goto	u5091
  2489  0324  2B26               	goto	u5090
  2490  0325                     u5091:
  2491  0325  2BD2               	goto	l3036
  2492  0326                     u5090:
  2493  0326                     l3022:
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2496  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2497  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2498  0328  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2499  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2500  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2501  032B  00A3               	movwf	___flge@ff1+3
  2502  032C  1683               	bsf	3,5	;RP0=1, select bank1
  2503  032D  1303               	bcf	3,6	;RP1=0, select bank1
  2504  032E  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2505  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2506  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2507  0331  00A2               	movwf	___flge@ff1+2
  2508  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2509  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2510  0334  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2511  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2512  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2513  0337  00A1               	movwf	___flge@ff1+1
  2514  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2515  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2516  033A  083F               	movf	sprintf@tmpval^(0+128),w
  2517  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2518  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2519  033D  00A0               	movwf	___flge@ff1
  2520  033E  3040               	movlw	64
  2521  033F  00A7               	movwf	___flge@ff2+3
  2522  0340  3089               	movlw	137
  2523  0341  00A6               	movwf	___flge@ff2+2
  2524  0342  3070               	movlw	112
  2525  0343  00A5               	movwf	___flge@ff2+1
  2526  0344  305F               	movlw	95
  2527  0345  00A4               	movwf	___flge@ff2
  2528  0346  160A  158A  275C  120A  118A  	fcall	___flge
  2529  034B  1803               	btfsc	3,0
  2530  034C  2B4E               	goto	u5101
  2531  034D  2B4F               	goto	u5100
  2532  034E                     u5101:
  2533  034E  2B58               	goto	l3026
  2534  034F                     u5100:
  2535  034F                     l3024:
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2538  034F  30F7               	movlw	247
  2539  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2540  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2541  0352  07BD               	addwf	sprintf@eexp^(0+128),f
  2542  0353  1803               	skipnc
  2543  0354  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2544  0355  30FF               	movlw	255
  2545  0356  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2548  0357  2B60               	goto	l3028
  2549  0358                     l3026:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2552  0358  30F8               	movlw	248
  2553  0359  1683               	bsf	3,5	;RP0=1, select bank1
  2554  035A  1303               	bcf	3,6	;RP1=0, select bank1
  2555  035B  07BD               	addwf	sprintf@eexp^(0+128),f
  2556  035C  1803               	skipnc
  2557  035D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2558  035E  30FF               	movlw	255
  2559  035F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2560  0360                     l3028:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2563  0360  083D               	movf	sprintf@eexp^(0+128),w
  2564  0361  120A  158A  249D  120A  118A  	fcall	_scale
  2565  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0368  0848               	movf	?_scale+3,w
  2568  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2569  036A  1303               	bcf	3,6	;RP1=0, select bank1
  2570  036B  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2571  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2572  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2573  036E  0847               	movf	?_scale+2,w
  2574  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2575  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2576  0371  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2577  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2578  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2579  0374  0846               	movf	?_scale+1,w
  2580  0375  1683               	bsf	3,5	;RP0=1, select bank1
  2581  0376  1303               	bcf	3,6	;RP1=0, select bank1
  2582  0377  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2583  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2584  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2585  037A  0845               	movf	?_scale,w
  2586  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2587  037C  1303               	bcf	3,6	;RP1=0, select bank1
  2588  037D  00BF               	movwf	sprintf@tmpval^(0+128)
  2589  037E                     l3030:
  2590  037E  0849               	movf	(sprintf@fval+3)^(0+128),w
  2591  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2593  0381  00A3               	movwf	__div_to_l_@f1+3
  2594  0382  1683               	bsf	3,5	;RP0=1, select bank1
  2595  0383  1303               	bcf	3,6	;RP1=0, select bank1
  2596  0384  0848               	movf	(sprintf@fval+2)^(0+128),w
  2597  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2598  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2599  0387  00A2               	movwf	__div_to_l_@f1+2
  2600  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2601  0389  1303               	bcf	3,6	;RP1=0, select bank1
  2602  038A  0847               	movf	(sprintf@fval+1)^(0+128),w
  2603  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2604  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2605  038D  00A1               	movwf	__div_to_l_@f1+1
  2606  038E  1683               	bsf	3,5	;RP0=1, select bank1
  2607  038F  1303               	bcf	3,6	;RP1=0, select bank1
  2608  0390  0846               	movf	sprintf@fval^(0+128),w
  2609  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0393  00A0               	movwf	__div_to_l_@f1
  2612  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2613  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2614  0396  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2615  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2616  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2617  0399  00A7               	movwf	__div_to_l_@f2+3
  2618  039A  1683               	bsf	3,5	;RP0=1, select bank1
  2619  039B  1303               	bcf	3,6	;RP1=0, select bank1
  2620  039C  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2621  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2622  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2623  039F  00A6               	movwf	__div_to_l_@f2+2
  2624  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2625  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2626  03A2  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2627  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2628  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2629  03A5  00A5               	movwf	__div_to_l_@f2+1
  2630  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2631  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2632  03A8  083F               	movf	sprintf@tmpval^(0+128),w
  2633  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2634  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2635  03AB  00A4               	movwf	__div_to_l_@f2
  2636  03AC  160A  118A  22AD  120A  118A  	fcall	__div_to_l_
  2637  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2638  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2639  03B3  0823               	movf	?__div_to_l_+3,w
  2640  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2641  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2642  03B6  00BC               	movwf	(sprintf@val+3)^(0+128)
  2643  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2644  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2645  03B9  0822               	movf	?__div_to_l_+2,w
  2646  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2647  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  2648  03BC  00BB               	movwf	(sprintf@val+2)^(0+128)
  2649  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2650  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2651  03BF  0821               	movf	?__div_to_l_+1,w
  2652  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  2653  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  2654  03C2  00BA               	movwf	(sprintf@val+1)^(0+128)
  2655  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2656  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2657  03C5  0820               	movf	?__div_to_l_,w
  2658  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2659  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  2660  03C8  00B9               	movwf	sprintf@val^(0+128)
  2661  03C9                     l3034:
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2664  03C9  3000               	movlw	0
  2665  03CA  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2666  03CB  3000               	movlw	0
  2667  03CC  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2668  03CD  3000               	movlw	0
  2669  03CE  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2670  03CF  3000               	movlw	0
  2671  03D0  00C6               	movwf	sprintf@fval^(0+128)
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2674  03D1  2C54               	goto	l3042
  2675  03D2                     l3036:
  2676                           
  2677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2678  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2679  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  2680  03D4  0849               	movf	(sprintf@fval+3)^(0+128),w
  2681  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2682  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2683  03D7  00DB               	movwf	___fltol@f1+3
  2684  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2685  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  2686  03DA  0848               	movf	(sprintf@fval+2)^(0+128),w
  2687  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2688  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2689  03DD  00DA               	movwf	___fltol@f1+2
  2690  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  2691  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  2692  03E0  0847               	movf	(sprintf@fval+1)^(0+128),w
  2693  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2694  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2695  03E3  00D9               	movwf	___fltol@f1+1
  2696  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2697  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  2698  03E6  0846               	movf	sprintf@fval^(0+128),w
  2699  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2700  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2701  03E9  00D8               	movwf	___fltol@f1
  2702  03EA  160A  158A  264A  120A  118A  	fcall	___fltol
  2703  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2704  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2705  03F1  085B               	movf	?___fltol+3,w
  2706  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2707  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2708  03F4  00BC               	movwf	(sprintf@val+3)^(0+128)
  2709  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2710  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2711  03F7  085A               	movf	?___fltol+2,w
  2712  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2713  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2714  03FA  00BB               	movwf	(sprintf@val+2)^(0+128)
  2715  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2716  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2717  03FD  0859               	movf	?___fltol+1,w
  2718  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2719  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  2720  0400  00BA               	movwf	(sprintf@val+1)^(0+128)
  2721  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0403  0858               	movf	?___fltol,w
  2724  0404  1683               	bsf	3,5	;RP0=1, select bank1
  2725  0405  1303               	bcf	3,6	;RP1=0, select bank1
  2726  0406  00B9               	movwf	sprintf@val^(0+128)
  2727  0407                     l3038:
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2730  0407  083C               	movf	(sprintf@val+3)^(0+128),w
  2731  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2732  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2733  040A  00AE               	movwf	___xxtofl@val+3
  2734  040B  1683               	bsf	3,5	;RP0=1, select bank1
  2735  040C  1303               	bcf	3,6	;RP1=0, select bank1
  2736  040D  083B               	movf	(sprintf@val+2)^(0+128),w
  2737  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2738  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2739  0410  00AD               	movwf	___xxtofl@val+2
  2740  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2741  0412  1303               	bcf	3,6	;RP1=0, select bank1
  2742  0413  083A               	movf	(sprintf@val+1)^(0+128),w
  2743  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0415  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0416  00AC               	movwf	___xxtofl@val+1
  2746  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2747  0418  1303               	bcf	3,6	;RP1=0, select bank1
  2748  0419  0839               	movf	sprintf@val^(0+128),w
  2749  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2750  041B  1303               	bcf	3,6	;RP1=0, select bank0
  2751  041C  00AB               	movwf	___xxtofl@val
  2752  041D  3000               	movlw	0
  2753  041E  160A  118A  2134  120A  118A  	fcall	___xxtofl
  2754  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0425  082E               	movf	?___xxtofl+3,w
  2757  0426  1683               	bsf	3,5	;RP0=1, select bank1
  2758  0427  1303               	bcf	3,6	;RP1=0, select bank1
  2759  0428  00A3               	movwf	(___flsub@a+3)^(0+128)
  2760  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2761  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2762  042B  082D               	movf	?___xxtofl+2,w
  2763  042C  1683               	bsf	3,5	;RP0=1, select bank1
  2764  042D  1303               	bcf	3,6	;RP1=0, select bank1
  2765  042E  00A2               	movwf	(___flsub@a+2)^(0+128)
  2766  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0431  082C               	movf	?___xxtofl+1,w
  2769  0432  1683               	bsf	3,5	;RP0=1, select bank1
  2770  0433  1303               	bcf	3,6	;RP1=0, select bank1
  2771  0434  00A1               	movwf	(___flsub@a+1)^(0+128)
  2772  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2773  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2774  0437  082B               	movf	?___xxtofl,w
  2775  0438  1683               	bsf	3,5	;RP0=1, select bank1
  2776  0439  1303               	bcf	3,6	;RP1=0, select bank1
  2777  043A  00A0               	movwf	___flsub@a^(0+128)
  2778  043B  0849               	movf	(sprintf@fval+3)^(0+128),w
  2779  043C  00A7               	movwf	(___flsub@b+3)^(0+128)
  2780  043D  0848               	movf	(sprintf@fval+2)^(0+128),w
  2781  043E  00A6               	movwf	(___flsub@b+2)^(0+128)
  2782  043F  0847               	movf	(sprintf@fval+1)^(0+128),w
  2783  0440  00A5               	movwf	(___flsub@b+1)^(0+128)
  2784  0441  0846               	movf	sprintf@fval^(0+128),w
  2785  0442  00A4               	movwf	___flsub@b^(0+128)
  2786  0443  160A  158A  2529  120A  118A  	fcall	___flsub
  2787  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2788  0449  1303               	bcf	3,6	;RP1=0, select bank1
  2789  044A  0823               	movf	(?___flsub+3)^(0+128),w
  2790  044B  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2791  044C  0822               	movf	(?___flsub+2)^(0+128),w
  2792  044D  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2793  044E  0821               	movf	(?___flsub+1)^(0+128),w
  2794  044F  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2795  0450  0820               	movf	?___flsub^(0+128),w
  2796  0451  00C6               	movwf	sprintf@fval^(0+128)
  2797  0452                     l3040:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2800  0452  01BD               	clrf	sprintf@eexp^(0+128)
  2801  0453  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2802  0454                     l3042:
  2803                           
  2804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2805  0454  01CA               	clrf	sprintf@c^(0+128)
  2806  0455  0ACA               	incf	sprintf@c^(0+128),f
  2807  0456                     l3048:
  2808                           
  2809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2810  0456  084A               	movf	sprintf@c^(0+128),w
  2811  0457  00AD               	movwf	??_sprintf^(0+128)
  2812  0458  3001               	movlw	1
  2813  0459                     u5115:
  2814  0459  1003               	clrc
  2815  045A  0DAD               	rlf	??_sprintf^(0+128),f
  2816  045B  3EFF               	addlw	-1
  2817  045C  1D03               	skipz
  2818  045D  2C59               	goto	u5115
  2819  045E  1003               	clrc
  2820  045F  0D2D               	rlf	??_sprintf^(0+128),w
  2821  0460  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2822  0461  0084               	movwf	4
  2823  0462  160A  118A  200A  120A  118A  	fcall	stringdir
  2824  0467  00AE               	movwf	(??_sprintf+1)^(0+128)
  2825  0468  160A  118A  200A  120A  118A  	fcall	stringdir
  2826  046D  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
  2827  046E  160A  118A  200A  120A  118A  	fcall	stringdir
  2828  0473  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
  2829  0474  160A  118A  200A  120A  118A  	fcall	stringdir
  2830  0479  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
  2831  047A  0831               	movf	(??_sprintf+4)^(0+128),w
  2832  047B  023C               	subwf	(sprintf@val+3)^(0+128),w
  2833  047C  1D03               	skipz
  2834  047D  2C88               	goto	u5125
  2835  047E  0830               	movf	(??_sprintf+3)^(0+128),w
  2836  047F  023B               	subwf	(sprintf@val+2)^(0+128),w
  2837  0480  1D03               	skipz
  2838  0481  2C88               	goto	u5125
  2839  0482  082F               	movf	(??_sprintf+2)^(0+128),w
  2840  0483  023A               	subwf	(sprintf@val+1)^(0+128),w
  2841  0484  1D03               	skipz
  2842  0485  2C88               	goto	u5125
  2843  0486  082E               	movf	(??_sprintf+1)^(0+128),w
  2844  0487  0239               	subwf	sprintf@val^(0+128),w
  2845  0488                     u5125:
  2846  0488  1803               	skipnc
  2847  0489  2C8B               	goto	u5121
  2848  048A  2C8C               	goto	u5120
  2849  048B                     u5121:
  2850  048B  2C8D               	goto	l3052
  2851  048C                     u5120:
  2852  048C  2C97               	goto	l3054
  2853  048D                     l3052:
  2854  048D  3001               	movlw	1
  2855  048E  00AD               	movwf	??_sprintf^(0+128)
  2856  048F  082D               	movf	??_sprintf^(0+128),w
  2857  0490  07CA               	addwf	sprintf@c^(0+128),f
  2858  0491  300A               	movlw	10
  2859  0492  064A               	xorwf	sprintf@c^(0+128),w
  2860  0493  1D03               	btfss	3,2
  2861  0494  2C96               	goto	u5131
  2862  0495  2C97               	goto	u5130
  2863  0496                     u5131:
  2864  0496  2C56               	goto	l3048
  2865  0497                     u5130:
  2866  0497                     l3054:
  2867                           
  2868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2869  0497  3003               	movlw	3
  2870  0498  0537               	andwf	sprintf@flag^(0+128),w
  2871  0499  00AD               	movwf	??_sprintf^(0+128)
  2872  049A  3000               	movlw	0
  2873  049B  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2874  049C  00AE               	movwf	(??_sprintf+1)^(0+128)
  2875  049D  082D               	movf	??_sprintf^(0+128),w
  2876  049E  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2877  049F  1903               	btfsc	3,2
  2878  04A0  2CA2               	goto	u5141
  2879  04A1  2CA3               	goto	u5140
  2880  04A2                     u5141:
  2881  04A2  2D55               	goto	l244
  2882  04A3                     u5140:
  2883  04A3                     l3056:
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2886  04A3  302D               	movlw	45
  2887  04A4  00AD               	movwf	??_sprintf^(0+128)
  2888  04A5  0843               	movf	sprintf@sp^(0+128),w
  2889  04A6  0084               	movwf	4
  2890  04A7  082D               	movf	??_sprintf^(0+128),w
  2891  04A8  1383               	bcf	3,7	;select IRP bank0
  2892  04A9  0080               	movwf	0
  2893  04AA                     l3058:
  2894  04AA  3001               	movlw	1
  2895  04AB  00AD               	movwf	??_sprintf^(0+128)
  2896  04AC  082D               	movf	??_sprintf^(0+128),w
  2897  04AD  07C3               	addwf	sprintf@sp^(0+128),f
  2898  04AE  2D55               	goto	l244
  2899  04AF                     l3060:
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2902  04AF  084A               	movf	sprintf@c^(0+128),w
  2903  04B0  00AD               	movwf	??_sprintf^(0+128)
  2904  04B1  3001               	movlw	1
  2905  04B2                     u5155:
  2906  04B2  1003               	clrc
  2907  04B3  0DAD               	rlf	??_sprintf^(0+128),f
  2908  04B4  3EFF               	addlw	-1
  2909  04B5  1D03               	skipz
  2910  04B6  2CB2               	goto	u5155
  2911  04B7  1003               	clrc
  2912  04B8  0D2D               	rlf	??_sprintf^(0+128),w
  2913  04B9  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2914  04BA  0084               	movwf	4
  2915  04BB  160A  118A  200A  120A  118A  	fcall	stringdir
  2916  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2917  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2918  04C2  00A0               	movwf	___lldiv@divisor
  2919  04C3  160A  118A  200A  120A  118A  	fcall	stringdir
  2920  04C8  00A1               	movwf	___lldiv@divisor+1
  2921  04C9  160A  118A  200A  120A  118A  	fcall	stringdir
  2922  04CE  00A2               	movwf	___lldiv@divisor+2
  2923  04CF  160A  118A  200A  120A  118A  	fcall	stringdir
  2924  04D4  00A3               	movwf	___lldiv@divisor+3
  2925  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2926  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2927  04D7  083C               	movf	(sprintf@val+3)^(0+128),w
  2928  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2929  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2930  04DA  00A7               	movwf	___lldiv@dividend+3
  2931  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  2932  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  2933  04DD  083B               	movf	(sprintf@val+2)^(0+128),w
  2934  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2935  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2936  04E0  00A6               	movwf	___lldiv@dividend+2
  2937  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  2938  04E2  1303               	bcf	3,6	;RP1=0, select bank1
  2939  04E3  083A               	movf	(sprintf@val+1)^(0+128),w
  2940  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2941  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2942  04E6  00A5               	movwf	___lldiv@dividend+1
  2943  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  2944  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  2945  04E9  0839               	movf	sprintf@val^(0+128),w
  2946  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2947  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2948  04EC  00A4               	movwf	___lldiv@dividend
  2949  04ED  160A  158A  2579  120A  118A  	fcall	___lldiv
  2950  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2951  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2952  04F4  0823               	movf	?___lldiv+3,w
  2953  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  2954  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  2955  04F7  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2956  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2957  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2958  04FA  0822               	movf	?___lldiv+2,w
  2959  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  2960  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  2961  04FD  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2962  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2963  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2964  0500  0821               	movf	?___lldiv+1,w
  2965  0501  1683               	bsf	3,5	;RP0=1, select bank1
  2966  0502  1303               	bcf	3,6	;RP1=0, select bank1
  2967  0503  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2968  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2969  0505  1303               	bcf	3,6	;RP1=0, select bank0
  2970  0506  0820               	movf	?___lldiv,w
  2971  0507  1683               	bsf	3,5	;RP0=1, select bank1
  2972  0508  1303               	bcf	3,6	;RP1=0, select bank1
  2973  0509  00BF               	movwf	sprintf@tmpval^(0+128)
  2974  050A                     l3062:
  2975                           
  2976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2977  050A  3000               	movlw	0
  2978  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2979  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2980  050D  00A3               	movwf	___llmod@divisor+3
  2981  050E  3000               	movlw	0
  2982  050F  00A2               	movwf	___llmod@divisor+2
  2983  0510  3000               	movlw	0
  2984  0511  00A1               	movwf	___llmod@divisor+1
  2985  0512  300A               	movlw	10
  2986  0513  00A0               	movwf	___llmod@divisor
  2987  0514  1683               	bsf	3,5	;RP0=1, select bank1
  2988  0515  1303               	bcf	3,6	;RP1=0, select bank1
  2989  0516  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2990  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2991  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2992  0519  00A7               	movwf	___llmod@dividend+3
  2993  051A  1683               	bsf	3,5	;RP0=1, select bank1
  2994  051B  1303               	bcf	3,6	;RP1=0, select bank1
  2995  051C  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2996  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2997  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2998  051F  00A6               	movwf	___llmod@dividend+2
  2999  0520  1683               	bsf	3,5	;RP0=1, select bank1
  3000  0521  1303               	bcf	3,6	;RP1=0, select bank1
  3001  0522  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  3002  0523  1283               	bcf	3,5	;RP0=0, select bank0
  3003  0524  1303               	bcf	3,6	;RP1=0, select bank0
  3004  0525  00A5               	movwf	___llmod@dividend+1
  3005  0526  1683               	bsf	3,5	;RP0=1, select bank1
  3006  0527  1303               	bcf	3,6	;RP1=0, select bank1
  3007  0528  083F               	movf	sprintf@tmpval^(0+128),w
  3008  0529  1283               	bcf	3,5	;RP0=0, select bank0
  3009  052A  1303               	bcf	3,6	;RP1=0, select bank0
  3010  052B  00A4               	movwf	___llmod@dividend
  3011  052C  120A  118A  27A8  120A  118A  	fcall	___llmod
  3012  0531  1283               	bcf	3,5	;RP0=0, select bank0
  3013  0532  1303               	bcf	3,6	;RP1=0, select bank0
  3014  0533  0823               	movf	?___llmod+3,w
  3015  0534  1683               	bsf	3,5	;RP0=1, select bank1
  3016  0535  1303               	bcf	3,6	;RP1=0, select bank1
  3017  0536  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3018  0537  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0538  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0539  0822               	movf	?___llmod+2,w
  3021  053A  1683               	bsf	3,5	;RP0=1, select bank1
  3022  053B  1303               	bcf	3,6	;RP1=0, select bank1
  3023  053C  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3024  053D  1283               	bcf	3,5	;RP0=0, select bank0
  3025  053E  1303               	bcf	3,6	;RP1=0, select bank0
  3026  053F  0821               	movf	?___llmod+1,w
  3027  0540  1683               	bsf	3,5	;RP0=1, select bank1
  3028  0541  1303               	bcf	3,6	;RP1=0, select bank1
  3029  0542  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3030  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3031  0544  1303               	bcf	3,6	;RP1=0, select bank0
  3032  0545  0820               	movf	?___llmod,w
  3033  0546  1683               	bsf	3,5	;RP0=1, select bank1
  3034  0547  1303               	bcf	3,6	;RP1=0, select bank1
  3035  0548  00BF               	movwf	sprintf@tmpval^(0+128)
  3036  0549                     l3064:
  3037                           
  3038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3039  0549  083F               	movf	sprintf@tmpval^(0+128),w
  3040  054A  3E30               	addlw	48
  3041  054B  00AD               	movwf	??_sprintf^(0+128)
  3042  054C  0843               	movf	sprintf@sp^(0+128),w
  3043  054D  0084               	movwf	4
  3044  054E  082D               	movf	??_sprintf^(0+128),w
  3045  054F  1383               	bcf	3,7	;select IRP bank0
  3046  0550  0080               	movwf	0
  3047  0551  3001               	movlw	1
  3048  0552  00AD               	movwf	??_sprintf^(0+128)
  3049  0553  082D               	movf	??_sprintf^(0+128),w
  3050  0554  07C3               	addwf	sprintf@sp^(0+128),f
  3051  0555                     l244:	
  3052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3053                           
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3056  0555  3001               	movlw	1
  3057  0556  02CA               	subwf	sprintf@c^(0+128),f
  3058  0557  0A4A               	incf	sprintf@c^(0+128),w
  3059  0558  1D03               	btfss	3,2
  3060  0559  2D5B               	goto	u5161
  3061  055A  2D5C               	goto	u5160
  3062  055B                     u5161:
  3063  055B  2CAF               	goto	l3060
  3064  055C                     u5160:
  3065  055C  2D70               	goto	l3072
  3066  055D                     l3066:
  3067                           
  3068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3069  055D  3030               	movlw	48
  3070  055E  1683               	bsf	3,5	;RP0=1, select bank1
  3071  055F  1303               	bcf	3,6	;RP1=0, select bank1
  3072  0560  00AD               	movwf	??_sprintf^(0+128)
  3073  0561  0843               	movf	sprintf@sp^(0+128),w
  3074  0562  0084               	movwf	4
  3075  0563  082D               	movf	??_sprintf^(0+128),w
  3076  0564  1383               	bcf	3,7	;select IRP bank0
  3077  0565  0080               	movwf	0
  3078  0566                     l3068:
  3079  0566  3001               	movlw	1
  3080  0567  00AD               	movwf	??_sprintf^(0+128)
  3081  0568  082D               	movf	??_sprintf^(0+128),w
  3082  0569  07C3               	addwf	sprintf@sp^(0+128),f
  3083  056A                     l3070:
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3086  056A  30FF               	movlw	255
  3087  056B  07BD               	addwf	sprintf@eexp^(0+128),f
  3088  056C  1803               	skipnc
  3089  056D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  3090  056E  30FF               	movlw	255
  3091  056F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  3092  0570                     l3072:
  3093                           
  3094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3095  0570  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3096  0571  3A80               	xorlw	128
  3097  0572  00FF               	movwf	btemp+1
  3098  0573  3080               	movlw	128
  3099  0574  027F               	subwf	btemp+1,w
  3100  0575  1D03               	skipz
  3101  0576  2D79               	goto	u5175
  3102  0577  3001               	movlw	1
  3103  0578  023D               	subwf	sprintf@eexp^(0+128),w
  3104  0579                     u5175:
  3105  0579  1803               	skipnc
  3106  057A  2D7C               	goto	u5171
  3107  057B  2D7D               	goto	u5170
  3108  057C                     u5171:
  3109  057C  2D5D               	goto	l3066
  3110  057D                     u5170:
  3111  057D                     l3074:
  3112                           
  3113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3114  057D  1683               	bsf	3,5	;RP0=1, select bank1
  3115  057E  1303               	bcf	3,6	;RP1=0, select bank1
  3116  057F  0845               	movf	(sprintf@prec+1)^(0+128),w
  3117  0580  3A80               	xorlw	128
  3118  0581  00FF               	movwf	btemp+1
  3119  0582  3080               	movlw	128
  3120  0583  027F               	subwf	btemp+1,w
  3121  0584  1D03               	skipz
  3122  0585  2D88               	goto	u5185
  3123  0586  3009               	movlw	9
  3124  0587  0244               	subwf	sprintf@prec^(0+128),w
  3125  0588                     u5185:
  3126  0588  1C03               	skipc
  3127  0589  2D8B               	goto	u5181
  3128  058A  2D8C               	goto	u5180
  3129  058B                     u5181:
  3130  058B  2D93               	goto	l3078
  3131  058C                     u5180:
  3132  058C                     l3076:
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3135  058C  3008               	movlw	8
  3136  058D  1683               	bsf	3,5	;RP0=1, select bank1
  3137  058E  1303               	bcf	3,6	;RP1=0, select bank1
  3138  058F  00AD               	movwf	??_sprintf^(0+128)
  3139  0590  082D               	movf	??_sprintf^(0+128),w
  3140  0591  00CA               	movwf	sprintf@c^(0+128)
  3141  0592  2D99               	goto	l251
  3142  0593                     l3078:
  3143                           
  3144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3145  0593  1683               	bsf	3,5	;RP0=1, select bank1
  3146  0594  1303               	bcf	3,6	;RP1=0, select bank1
  3147  0595  0844               	movf	sprintf@prec^(0+128),w
  3148  0596  00AD               	movwf	??_sprintf^(0+128)
  3149  0597  082D               	movf	??_sprintf^(0+128),w
  3150  0598  00CA               	movwf	sprintf@c^(0+128)
  3151  0599                     l251:
  3152                           
  3153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3154  0599  084A               	movf	sprintf@c^(0+128),w
  3155  059A  00AD               	movwf	??_sprintf^(0+128)
  3156  059B  01AE               	clrf	(??_sprintf^(0+128)+1)
  3157  059C  082D               	movf	??_sprintf^(0+128),w
  3158  059D  02C4               	subwf	sprintf@prec^(0+128),f
  3159  059E  082E               	movf	(??_sprintf+1)^(0+128),w
  3160  059F  1C03               	skipc
  3161  05A0  03C5               	decf	(sprintf@prec+1)^(0+128),f
  3162  05A1  02C5               	subwf	(sprintf@prec+1)^(0+128),f
  3163  05A2                     l3080:
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3166  05A2  084A               	movf	sprintf@c^(0+128),w
  3167  05A3  1903               	btfsc	3,2
  3168  05A4  2DA6               	goto	u5191
  3169  05A5  2DA7               	goto	u5190
  3170  05A6                     u5191:
  3171  05A6  2DB2               	goto	l3086
  3172  05A7                     u5190:
  3173  05A7                     l3082:
  3174                           
  3175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3176  05A7  302E               	movlw	46
  3177  05A8  00AD               	movwf	??_sprintf^(0+128)
  3178  05A9  0843               	movf	sprintf@sp^(0+128),w
  3179  05AA  0084               	movwf	4
  3180  05AB  082D               	movf	??_sprintf^(0+128),w
  3181  05AC  1383               	bcf	3,7	;select IRP bank0
  3182  05AD  0080               	movwf	0
  3183  05AE                     l3084:
  3184  05AE  3001               	movlw	1
  3185  05AF  00AD               	movwf	??_sprintf^(0+128)
  3186  05B0  082D               	movf	??_sprintf^(0+128),w
  3187  05B1  07C3               	addwf	sprintf@sp^(0+128),f
  3188  05B2                     l3086:
  3189                           
  3190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3191  05B2  084A               	movf	sprintf@c^(0+128),w
  3192  05B3  120A  158A  249D  120A  118A  	fcall	_scale
  3193  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3194  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3195  05BA  0848               	movf	?_scale+3,w
  3196  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  3197  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  3198  05BD  00B5               	movwf	(_sprintf$989+3)^(0+128)
  3199  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  3200  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  3201  05C0  0847               	movf	?_scale+2,w
  3202  05C1  1683               	bsf	3,5	;RP0=1, select bank1
  3203  05C2  1303               	bcf	3,6	;RP1=0, select bank1
  3204  05C3  00B4               	movwf	(_sprintf$989+2)^(0+128)
  3205  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3206  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  3207  05C6  0846               	movf	?_scale+1,w
  3208  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  3209  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  3210  05C9  00B3               	movwf	(_sprintf$989+1)^(0+128)
  3211  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  3212  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  3213  05CC  0845               	movf	?_scale,w
  3214  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  3215  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  3216  05CF  00B2               	movwf	_sprintf$989^(0+128)
  3217  05D0                     l3088:
  3218                           
  3219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3220  05D0  0835               	movf	(_sprintf$989+3)^(0+128),w
  3221  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3222  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3223  05D3  00B2               	movwf	___flmul@a+3
  3224  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3225  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  3226  05D6  0834               	movf	(_sprintf$989+2)^(0+128),w
  3227  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  3228  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  3229  05D9  00B1               	movwf	___flmul@a+2
  3230  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3231  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  3232  05DC  0833               	movf	(_sprintf$989+1)^(0+128),w
  3233  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3234  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3235  05DF  00B0               	movwf	___flmul@a+1
  3236  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  3237  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  3238  05E2  0832               	movf	_sprintf$989^(0+128),w
  3239  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3240  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3241  05E5  00AF               	movwf	___flmul@a
  3242  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  3243  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  3244  05E8  0849               	movf	(sprintf@fval+3)^(0+128),w
  3245  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  3246  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  3247  05EB  00AE               	movwf	___flmul@b+3
  3248  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  3249  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  3250  05EE  0848               	movf	(sprintf@fval+2)^(0+128),w
  3251  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3252  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3253  05F1  00AD               	movwf	___flmul@b+2
  3254  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  3255  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  3256  05F4  0847               	movf	(sprintf@fval+1)^(0+128),w
  3257  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3258  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  3259  05F7  00AC               	movwf	___flmul@b+1
  3260  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  3261  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  3262  05FA  0846               	movf	sprintf@fval^(0+128),w
  3263  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3264  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  3265  05FD  00AB               	movwf	___flmul@b
  3266  05FE  120A  158A  213C  120A  118A  	fcall	___flmul
  3267  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0604  1303               	bcf	3,6	;RP1=0, select bank0
  3269  0605  082E               	movf	?___flmul+3,w
  3270  0606  00DB               	movwf	___fltol@f1+3
  3271  0607  082D               	movf	?___flmul+2,w
  3272  0608  00DA               	movwf	___fltol@f1+2
  3273  0609  082C               	movf	?___flmul+1,w
  3274  060A  00D9               	movwf	___fltol@f1+1
  3275  060B  082B               	movf	?___flmul,w
  3276  060C  00D8               	movwf	___fltol@f1
  3277  060D  160A  158A  264A  120A  118A  	fcall	___fltol
  3278  0612  1283               	bcf	3,5	;RP0=0, select bank0
  3279  0613  1303               	bcf	3,6	;RP1=0, select bank0
  3280  0614  085B               	movf	?___fltol+3,w
  3281  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3282  0616  1303               	bcf	3,6	;RP1=0, select bank1
  3283  0617  00BC               	movwf	(sprintf@val+3)^(0+128)
  3284  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3286  061A  085A               	movf	?___fltol+2,w
  3287  061B  1683               	bsf	3,5	;RP0=1, select bank1
  3288  061C  1303               	bcf	3,6	;RP1=0, select bank1
  3289  061D  00BB               	movwf	(sprintf@val+2)^(0+128)
  3290  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3291  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3292  0620  0859               	movf	?___fltol+1,w
  3293  0621  1683               	bsf	3,5	;RP0=1, select bank1
  3294  0622  1303               	bcf	3,6	;RP1=0, select bank1
  3295  0623  00BA               	movwf	(sprintf@val+1)^(0+128)
  3296  0624  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0625  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0626  0858               	movf	?___fltol,w
  3299  0627  1683               	bsf	3,5	;RP0=1, select bank1
  3300  0628  1303               	bcf	3,6	;RP1=0, select bank1
  3301  0629  00B9               	movwf	sprintf@val^(0+128)
  3302                           
  3303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3304  062A  2F2C               	goto	l3098
  3305  062B                     l3090:
  3306                           
  3307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3308  062B  084A               	movf	sprintf@c^(0+128),w
  3309  062C  00AD               	movwf	??_sprintf^(0+128)
  3310  062D  3001               	movlw	1
  3311  062E                     u5205:
  3312  062E  1003               	clrc
  3313  062F  0DAD               	rlf	??_sprintf^(0+128),f
  3314  0630  3EFF               	addlw	-1
  3315  0631  1D03               	skipz
  3316  0632  2E2E               	goto	u5205
  3317  0633  1003               	clrc
  3318  0634  0D2D               	rlf	??_sprintf^(0+128),w
  3319  0635  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3320  0636  0084               	movwf	4
  3321  0637  160A  118A  200A  120A  118A  	fcall	stringdir
  3322  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3323  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3324  063E  00A0               	movwf	___lldiv@divisor
  3325  063F  160A  118A  200A  120A  118A  	fcall	stringdir
  3326  0644  00A1               	movwf	___lldiv@divisor+1
  3327  0645  160A  118A  200A  120A  118A  	fcall	stringdir
  3328  064A  00A2               	movwf	___lldiv@divisor+2
  3329  064B  160A  118A  200A  120A  118A  	fcall	stringdir
  3330  0650  00A3               	movwf	___lldiv@divisor+3
  3331  0651  1683               	bsf	3,5	;RP0=1, select bank1
  3332  0652  1303               	bcf	3,6	;RP1=0, select bank1
  3333  0653  083C               	movf	(sprintf@val+3)^(0+128),w
  3334  0654  1283               	bcf	3,5	;RP0=0, select bank0
  3335  0655  1303               	bcf	3,6	;RP1=0, select bank0
  3336  0656  00A7               	movwf	___lldiv@dividend+3
  3337  0657  1683               	bsf	3,5	;RP0=1, select bank1
  3338  0658  1303               	bcf	3,6	;RP1=0, select bank1
  3339  0659  083B               	movf	(sprintf@val+2)^(0+128),w
  3340  065A  1283               	bcf	3,5	;RP0=0, select bank0
  3341  065B  1303               	bcf	3,6	;RP1=0, select bank0
  3342  065C  00A6               	movwf	___lldiv@dividend+2
  3343  065D  1683               	bsf	3,5	;RP0=1, select bank1
  3344  065E  1303               	bcf	3,6	;RP1=0, select bank1
  3345  065F  083A               	movf	(sprintf@val+1)^(0+128),w
  3346  0660  1283               	bcf	3,5	;RP0=0, select bank0
  3347  0661  1303               	bcf	3,6	;RP1=0, select bank0
  3348  0662  00A5               	movwf	___lldiv@dividend+1
  3349  0663  1683               	bsf	3,5	;RP0=1, select bank1
  3350  0664  1303               	bcf	3,6	;RP1=0, select bank1
  3351  0665  0839               	movf	sprintf@val^(0+128),w
  3352  0666  1283               	bcf	3,5	;RP0=0, select bank0
  3353  0667  1303               	bcf	3,6	;RP1=0, select bank0
  3354  0668  00A4               	movwf	___lldiv@dividend
  3355  0669  160A  158A  2579  120A  118A  	fcall	___lldiv
  3356  066E  1283               	bcf	3,5	;RP0=0, select bank0
  3357  066F  1303               	bcf	3,6	;RP1=0, select bank0
  3358  0670  0823               	movf	?___lldiv+3,w
  3359  0671  1683               	bsf	3,5	;RP0=1, select bank1
  3360  0672  1303               	bcf	3,6	;RP1=0, select bank1
  3361  0673  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3362  0674  1283               	bcf	3,5	;RP0=0, select bank0
  3363  0675  1303               	bcf	3,6	;RP1=0, select bank0
  3364  0676  0822               	movf	?___lldiv+2,w
  3365  0677  1683               	bsf	3,5	;RP0=1, select bank1
  3366  0678  1303               	bcf	3,6	;RP1=0, select bank1
  3367  0679  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3368  067A  1283               	bcf	3,5	;RP0=0, select bank0
  3369  067B  1303               	bcf	3,6	;RP1=0, select bank0
  3370  067C  0821               	movf	?___lldiv+1,w
  3371  067D  1683               	bsf	3,5	;RP0=1, select bank1
  3372  067E  1303               	bcf	3,6	;RP1=0, select bank1
  3373  067F  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3374  0680  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0681  1303               	bcf	3,6	;RP1=0, select bank0
  3376  0682  0820               	movf	?___lldiv,w
  3377  0683  1683               	bsf	3,5	;RP0=1, select bank1
  3378  0684  1303               	bcf	3,6	;RP1=0, select bank1
  3379  0685  00BF               	movwf	sprintf@tmpval^(0+128)
  3380  0686                     l3092:
  3381                           
  3382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3383  0686  3000               	movlw	0
  3384  0687  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0688  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0689  00A3               	movwf	___llmod@divisor+3
  3387  068A  3000               	movlw	0
  3388  068B  00A2               	movwf	___llmod@divisor+2
  3389  068C  3000               	movlw	0
  3390  068D  00A1               	movwf	___llmod@divisor+1
  3391  068E  300A               	movlw	10
  3392  068F  00A0               	movwf	___llmod@divisor
  3393  0690  1683               	bsf	3,5	;RP0=1, select bank1
  3394  0691  1303               	bcf	3,6	;RP1=0, select bank1
  3395  0692  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  3396  0693  1283               	bcf	3,5	;RP0=0, select bank0
  3397  0694  1303               	bcf	3,6	;RP1=0, select bank0
  3398  0695  00A7               	movwf	___llmod@dividend+3
  3399  0696  1683               	bsf	3,5	;RP0=1, select bank1
  3400  0697  1303               	bcf	3,6	;RP1=0, select bank1
  3401  0698  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  3402  0699  1283               	bcf	3,5	;RP0=0, select bank0
  3403  069A  1303               	bcf	3,6	;RP1=0, select bank0
  3404  069B  00A6               	movwf	___llmod@dividend+2
  3405  069C  1683               	bsf	3,5	;RP0=1, select bank1
  3406  069D  1303               	bcf	3,6	;RP1=0, select bank1
  3407  069E  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  3408  069F  1283               	bcf	3,5	;RP0=0, select bank0
  3409  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3410  06A1  00A5               	movwf	___llmod@dividend+1
  3411  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3412  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3413  06A4  083F               	movf	sprintf@tmpval^(0+128),w
  3414  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3415  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3416  06A7  00A4               	movwf	___llmod@dividend
  3417  06A8  120A  118A  27A8  120A  118A  	fcall	___llmod
  3418  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3419  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3420  06AF  0823               	movf	?___llmod+3,w
  3421  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  3422  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  3423  06B2  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3424  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  3425  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  3426  06B5  0822               	movf	?___llmod+2,w
  3427  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  3428  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  3429  06B8  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3430  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3431  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3432  06BB  0821               	movf	?___llmod+1,w
  3433  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  3434  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  3435  06BE  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3436  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  3437  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  3438  06C1  0820               	movf	?___llmod,w
  3439  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  3440  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  3441  06C4  00BF               	movwf	sprintf@tmpval^(0+128)
  3442  06C5                     l3094:
  3443                           
  3444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3445  06C5  083F               	movf	sprintf@tmpval^(0+128),w
  3446  06C6  3E30               	addlw	48
  3447  06C7  00AD               	movwf	??_sprintf^(0+128)
  3448  06C8  0843               	movf	sprintf@sp^(0+128),w
  3449  06C9  0084               	movwf	4
  3450  06CA  082D               	movf	??_sprintf^(0+128),w
  3451  06CB  1383               	bcf	3,7	;select IRP bank0
  3452  06CC  0080               	movwf	0
  3453  06CD  3001               	movlw	1
  3454  06CE  00AD               	movwf	??_sprintf^(0+128)
  3455  06CF  082D               	movf	??_sprintf^(0+128),w
  3456  06D0  07C3               	addwf	sprintf@sp^(0+128),f
  3457  06D1                     l3096:
  3458                           
  3459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3460  06D1  084A               	movf	sprintf@c^(0+128),w
  3461  06D2  00AD               	movwf	??_sprintf^(0+128)
  3462  06D3  3001               	movlw	1
  3463  06D4                     u5215:
  3464  06D4  1003               	clrc
  3465  06D5  0DAD               	rlf	??_sprintf^(0+128),f
  3466  06D6  3EFF               	addlw	-1
  3467  06D7  1D03               	skipz
  3468  06D8  2ED4               	goto	u5215
  3469  06D9  1003               	clrc
  3470  06DA  0D2D               	rlf	??_sprintf^(0+128),w
  3471  06DB  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3472  06DC  0084               	movwf	4
  3473  06DD  160A  118A  200A  120A  118A  	fcall	stringdir
  3474  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  3475  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  3476  06E4  00A0               	movwf	___llmod@divisor
  3477  06E5  160A  118A  200A  120A  118A  	fcall	stringdir
  3478  06EA  00A1               	movwf	___llmod@divisor+1
  3479  06EB  160A  118A  200A  120A  118A  	fcall	stringdir
  3480  06F0  00A2               	movwf	___llmod@divisor+2
  3481  06F1  160A  118A  200A  120A  118A  	fcall	stringdir
  3482  06F6  00A3               	movwf	___llmod@divisor+3
  3483  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  3484  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  3485  06F9  083C               	movf	(sprintf@val+3)^(0+128),w
  3486  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  3487  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  3488  06FC  00A7               	movwf	___llmod@dividend+3
  3489  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  3490  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  3491  06FF  083B               	movf	(sprintf@val+2)^(0+128),w
  3492  0700  1283               	bcf	3,5	;RP0=0, select bank0
  3493  0701  1303               	bcf	3,6	;RP1=0, select bank0
  3494  0702  00A6               	movwf	___llmod@dividend+2
  3495  0703  1683               	bsf	3,5	;RP0=1, select bank1
  3496  0704  1303               	bcf	3,6	;RP1=0, select bank1
  3497  0705  083A               	movf	(sprintf@val+1)^(0+128),w
  3498  0706  1283               	bcf	3,5	;RP0=0, select bank0
  3499  0707  1303               	bcf	3,6	;RP1=0, select bank0
  3500  0708  00A5               	movwf	___llmod@dividend+1
  3501  0709  1683               	bsf	3,5	;RP0=1, select bank1
  3502  070A  1303               	bcf	3,6	;RP1=0, select bank1
  3503  070B  0839               	movf	sprintf@val^(0+128),w
  3504  070C  1283               	bcf	3,5	;RP0=0, select bank0
  3505  070D  1303               	bcf	3,6	;RP1=0, select bank0
  3506  070E  00A4               	movwf	___llmod@dividend
  3507  070F  120A  118A  27A8  120A  118A  	fcall	___llmod
  3508  0714  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0715  1303               	bcf	3,6	;RP1=0, select bank0
  3510  0716  0823               	movf	?___llmod+3,w
  3511  0717  1683               	bsf	3,5	;RP0=1, select bank1
  3512  0718  1303               	bcf	3,6	;RP1=0, select bank1
  3513  0719  00BC               	movwf	(sprintf@val+3)^(0+128)
  3514  071A  1283               	bcf	3,5	;RP0=0, select bank0
  3515  071B  1303               	bcf	3,6	;RP1=0, select bank0
  3516  071C  0822               	movf	?___llmod+2,w
  3517  071D  1683               	bsf	3,5	;RP0=1, select bank1
  3518  071E  1303               	bcf	3,6	;RP1=0, select bank1
  3519  071F  00BB               	movwf	(sprintf@val+2)^(0+128)
  3520  0720  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0721  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0722  0821               	movf	?___llmod+1,w
  3523  0723  1683               	bsf	3,5	;RP0=1, select bank1
  3524  0724  1303               	bcf	3,6	;RP1=0, select bank1
  3525  0725  00BA               	movwf	(sprintf@val+1)^(0+128)
  3526  0726  1283               	bcf	3,5	;RP0=0, select bank0
  3527  0727  1303               	bcf	3,6	;RP1=0, select bank0
  3528  0728  0820               	movf	?___llmod,w
  3529  0729  1683               	bsf	3,5	;RP0=1, select bank1
  3530  072A  1303               	bcf	3,6	;RP1=0, select bank1
  3531  072B  00B9               	movwf	sprintf@val^(0+128)
  3532  072C                     l3098:
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3535  072C  3001               	movlw	1
  3536  072D  02CA               	subwf	sprintf@c^(0+128),f
  3537  072E  0A4A               	incf	sprintf@c^(0+128),w
  3538  072F  1D03               	btfss	3,2
  3539  0730  2F32               	goto	u5221
  3540  0731  2F33               	goto	u5220
  3541  0732                     u5221:
  3542  0732  2E2B               	goto	l3090
  3543  0733                     u5220:
  3544  0733  2F45               	goto	l3106
  3545  0734                     l3100:
  3546                           
  3547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3548  0734  3030               	movlw	48
  3549  0735  00AD               	movwf	??_sprintf^(0+128)
  3550  0736  0843               	movf	sprintf@sp^(0+128),w
  3551  0737  0084               	movwf	4
  3552  0738  082D               	movf	??_sprintf^(0+128),w
  3553  0739  1383               	bcf	3,7	;select IRP bank0
  3554  073A  0080               	movwf	0
  3555  073B                     l3102:
  3556  073B  3001               	movlw	1
  3557  073C  00AD               	movwf	??_sprintf^(0+128)
  3558  073D  082D               	movf	??_sprintf^(0+128),w
  3559  073E  07C3               	addwf	sprintf@sp^(0+128),f
  3560  073F                     l3104:
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3563  073F  30FF               	movlw	255
  3564  0740  07C4               	addwf	sprintf@prec^(0+128),f
  3565  0741  1803               	skipnc
  3566  0742  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  3567  0743  30FF               	movlw	255
  3568  0744  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  3569  0745                     l3106:
  3570                           
  3571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3572  0745  0844               	movf	sprintf@prec^(0+128),w
  3573  0746  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3574  0747  1D03               	btfss	3,2
  3575  0748  2F4A               	goto	u5231
  3576  0749  2F4B               	goto	u5230
  3577  074A                     u5231:
  3578  074A  2F34               	goto	l3100
  3579  074B                     u5230:
  3580  074B  2F91               	goto	l3126
  3581  074C                     l3108:
  3582                           
  3583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3584  074C  0844               	movf	sprintf@prec^(0+128),w
  3585  074D  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3586  074E  1D03               	btfss	3,2
  3587  074F  2F51               	goto	u5241
  3588  0750  2F52               	goto	u5240
  3589  0751                     u5241:
  3590  0751  2F60               	goto	l259
  3591  0752                     u5240:
  3592  0752                     l3110:
  3593  0752  083C               	movf	(sprintf@val+3)^(0+128),w
  3594  0753  043B               	iorwf	(sprintf@val+2)^(0+128),w
  3595  0754  043A               	iorwf	(sprintf@val+1)^(0+128),w
  3596  0755  0439               	iorwf	sprintf@val^(0+128),w
  3597  0756  1D03               	skipz
  3598  0757  2F59               	goto	u5251
  3599  0758  2F5A               	goto	u5250
  3600  0759                     u5251:
  3601  0759  2F60               	goto	l259
  3602  075A                     u5250:
  3603  075A                     l3112:
  3604                           
  3605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3606  075A  3001               	movlw	1
  3607  075B  07C4               	addwf	sprintf@prec^(0+128),f
  3608  075C  1803               	skipnc
  3609  075D  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  3610  075E  3000               	movlw	0
  3611  075F  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  3612  0760                     l259:
  3613                           
  3614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3615  0760  0845               	movf	(sprintf@prec+1)^(0+128),w
  3616  0761  3A80               	xorlw	128
  3617  0762  3C80               	sublw	128
  3618  0763  1D03               	skipz
  3619  0764  2F67               	goto	u5265
  3620  0765  0844               	movf	sprintf@prec^(0+128),w
  3621  0766  024A               	subwf	sprintf@c^(0+128),w
  3622  0767                     u5265:
  3623  0767  1803               	skipnc
  3624  0768  2F6A               	goto	u5261
  3625  0769  2F6B               	goto	u5260
  3626  076A                     u5261:
  3627  076A  2F6C               	goto	l3116
  3628  076B                     u5260:
  3629  076B                     l3114:
  3630  076B  2F7B               	goto	l3120
  3631  076C                     l3116:
  3632  076C  1683               	bsf	3,5	;RP0=1, select bank1
  3633  076D  1303               	bcf	3,6	;RP1=0, select bank1
  3634  076E  0845               	movf	(sprintf@prec+1)^(0+128),w
  3635  076F  3A80               	xorlw	128
  3636  0770  00AD               	movwf	??_sprintf^(0+128)
  3637  0771  3080               	movlw	128
  3638  0772  022D               	subwf	??_sprintf^(0+128),w
  3639  0773  1D03               	skipz
  3640  0774  2F77               	goto	u5275
  3641  0775  084A               	movf	sprintf@c^(0+128),w
  3642  0776  0244               	subwf	sprintf@prec^(0+128),w
  3643  0777                     u5275:
  3644  0777  1803               	skipnc
  3645  0778  2F7A               	goto	u5271
  3646  0779  2F7B               	goto	u5270
  3647  077A                     u5271:
  3648  077A  2F7B               	goto	l3120
  3649  077B                     u5270:
  3650  077B                     l3118:
  3651  077B                     l3120:
  3652                           
  3653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3654  077B  3003               	movlw	3
  3655  077C  1683               	bsf	3,5	;RP0=1, select bank1
  3656  077D  1303               	bcf	3,6	;RP1=0, select bank1
  3657  077E  0537               	andwf	sprintf@flag^(0+128),w
  3658  077F  00AD               	movwf	??_sprintf^(0+128)
  3659  0780  3000               	movlw	0
  3660  0781  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3661  0782  00AE               	movwf	(??_sprintf+1)^(0+128)
  3662  0783  082D               	movf	??_sprintf^(0+128),w
  3663  0784  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3664  0785  1903               	btfsc	3,2
  3665  0786  2F88               	goto	u5281
  3666  0787  2F89               	goto	u5280
  3667  0788                     u5281:
  3668  0788  2F91               	goto	l3126
  3669  0789                     u5280:
  3670  0789                     l3122:
  3671                           
  3672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3673  0789  302D               	movlw	45
  3674  078A  00AD               	movwf	??_sprintf^(0+128)
  3675  078B  0843               	movf	sprintf@sp^(0+128),w
  3676  078C  0084               	movwf	4
  3677  078D  082D               	movf	??_sprintf^(0+128),w
  3678  078E  1383               	bcf	3,7	;select IRP bank0
  3679  078F  0080               	movwf	0
  3680  0790  2837               	goto	l2938
  3681  0791                     l3126:
  3682                           
  3683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3684  0791  3001               	movlw	1
  3685  0792  07A8               	addwf	sprintf@f^(0+128),f
  3686  0793  30FF               	movlw	-1
  3687  0794  0728               	addwf	sprintf@f^(0+128),w
  3688  0795  0084               	movwf	4
  3689  0796  160A  118A  200A  120A  118A  	fcall	stringdir
  3690  079B  00AD               	movwf	??_sprintf^(0+128)
  3691  079C  082D               	movf	??_sprintf^(0+128),w
  3692  079D  00CA               	movwf	sprintf@c^(0+128)
  3693  079E  084A               	movf	sprintf@c^(0+128),w
  3694  079F  1D03               	btfss	3,2
  3695  07A0  2FA2               	goto	u5291
  3696  07A1  2FA3               	goto	u5290
  3697  07A2                     u5291:
  3698  07A2  282A               	goto	l2934
  3699  07A3                     u5290:
  3700  07A3                     l3128:
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3703  07A3  0843               	movf	sprintf@sp^(0+128),w
  3704  07A4  0084               	movwf	4
  3705  07A5  1383               	bcf	3,7	;select IRP bank0
  3706  07A6  0180               	clrf	0
  3707  07A7                     l265:
  3708  07A7  0008               	return
  3709  07A8                     __end_of_sprintf:
  3710                           
  3711                           	psect	text3
  3712  0C9D                     __ptext3:	
  3713 ;; *************** function _scale *****************
  3714 ;; Defined at:
  3715 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;  scl             1    wreg     char 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  scl             1   55[BANK0 ] char 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  4   37[BANK0 ] char 
  3722 ;; Registers used:
  3723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3729 ;;      Params:         0       4       0       0       0
  3730 ;;      Locals:         0       5       0       0       0
  3731 ;;      Temps:          0      10       0       0       0
  3732 ;;      Totals:         0      19       0       0       0
  3733 ;;Total ram usage:       19 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    3
  3736 ;; This function calls:
  3737 ;;		___awdiv
  3738 ;;		___awmod
  3739 ;;		___flmul
  3740 ;; This function is called by:
  3741 ;;		_sprintf
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           
  3746                           ;psect for function _scale
  3747  0C9D                     _scale:
  3748                           
  3749                           ;incstack = 0
  3750                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3751                           ;scale@scl stored from wreg
  3752  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3753  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3754  0C9F  00D7               	movwf	scale@scl
  3755  0CA0                     l2564:
  3756                           
  3757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3758  0CA0  1FD7               	btfss	scale@scl,7
  3759  0CA1  2CA3               	goto	u3931
  3760  0CA2  2CA4               	goto	u3930
  3761  0CA3                     u3931:
  3762  0CA3  2E53               	goto	l2586
  3763  0CA4                     u3930:
  3764  0CA4                     l2566:
  3765                           
  3766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3767  0CA4  09D7               	comf	scale@scl,f
  3768  0CA5  0AD7               	incf	scale@scl,f
  3769  0CA6                     l2568:
  3770                           
  3771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3772  0CA6  0857               	movf	scale@scl,w
  3773  0CA7  3A80               	xorlw	128
  3774  0CA8  3E12               	addlw	-238
  3775  0CA9  1C03               	skipc
  3776  0CAA  2CAC               	goto	u3941
  3777  0CAB  2CAD               	goto	u3940
  3778  0CAC                     u3941:
  3779  0CAC  2D97               	goto	l2576
  3780  0CAD                     u3940:
  3781  0CAD                     l2570:
  3782                           
  3783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3784  0CAD  300A               	movlw	10
  3785  0CAE  00A2               	movwf	___awdiv@divisor
  3786  0CAF  3000               	movlw	0
  3787  0CB0  00A3               	movwf	___awdiv@divisor+1
  3788  0CB1  0857               	movf	scale@scl,w
  3789  0CB2  00F6               	movwf	___awmod@dividend
  3790  0CB3  01F7               	clrf	___awmod@dividend+1
  3791  0CB4  1BF6               	btfsc	___awmod@dividend,7
  3792  0CB5  03F7               	decf	___awmod@dividend+1,f
  3793  0CB6  3064               	movlw	100
  3794  0CB7  00F4               	movwf	___awmod@divisor
  3795  0CB8  3000               	movlw	0
  3796  0CB9  00F5               	movwf	___awmod@divisor+1
  3797  0CBA  160A  118A  20D9  120A  158A  	fcall	___awmod
  3798  0CBF  0875               	movf	?___awmod+1,w
  3799  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3800  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3801  0CC2  00A5               	movwf	___awdiv@dividend+1
  3802  0CC3  0874               	movf	?___awmod,w
  3803  0CC4  00A4               	movwf	___awdiv@dividend
  3804  0CC5  160A  158A  25E1  120A  158A  	fcall	___awdiv
  3805  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3806  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3807  0CCC  0822               	movf	?___awdiv,w
  3808  0CCD  00C9               	movwf	??_scale
  3809  0CCE  3001               	movlw	1
  3810  0CCF                     u3955:
  3811  0CCF  1003               	clrc
  3812  0CD0  0DC9               	rlf	??_scale,f
  3813  0CD1  3EFF               	addlw	-1
  3814  0CD2  1D03               	skipz
  3815  0CD3  2CCF               	goto	u3955
  3816  0CD4  1003               	clrc
  3817  0CD5  0D49               	rlf	??_scale,w
  3818  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3819  0CD7  0084               	movwf	4
  3820  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  3821  0CDD  00CA               	movwf	??_scale+1
  3822  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  3823  0CE3  00CB               	movwf	??_scale+2
  3824  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  3825  0CE9  00CC               	movwf	??_scale+3
  3826  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  3827  0CEF  00CD               	movwf	??_scale+4
  3828  0CF0  084D               	movf	??_scale+4,w
  3829  0CF1  00AE               	movwf	___flmul@b+3
  3830  0CF2  084C               	movf	??_scale+3,w
  3831  0CF3  00AD               	movwf	___flmul@b+2
  3832  0CF4  084B               	movf	??_scale+2,w
  3833  0CF5  00AC               	movwf	___flmul@b+1
  3834  0CF6  084A               	movf	??_scale+1,w
  3835  0CF7  00AB               	movwf	___flmul@b
  3836  0CF8  3064               	movlw	100
  3837  0CF9  00A2               	movwf	___awdiv@divisor
  3838  0CFA  3000               	movlw	0
  3839  0CFB  00A3               	movwf	___awdiv@divisor+1
  3840  0CFC  0857               	movf	scale@scl,w
  3841  0CFD  00A4               	movwf	___awdiv@dividend
  3842  0CFE  01A5               	clrf	___awdiv@dividend+1
  3843  0CFF  1BA4               	btfsc	___awdiv@dividend,7
  3844  0D00  03A5               	decf	___awdiv@dividend+1,f
  3845  0D01  160A  158A  25E1  120A  158A  	fcall	___awdiv
  3846  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3847  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3848  0D08  0822               	movf	?___awdiv,w
  3849  0D09  00CE               	movwf	??_scale+5
  3850  0D0A  3001               	movlw	1
  3851  0D0B                     u3965:
  3852  0D0B  1003               	clrc
  3853  0D0C  0DCE               	rlf	??_scale+5,f
  3854  0D0D  3EFF               	addlw	-1
  3855  0D0E  1D03               	skipz
  3856  0D0F  2D0B               	goto	u3965
  3857  0D10  1003               	clrc
  3858  0D11  0D4E               	rlf	??_scale+5,w
  3859  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3860  0D13  0084               	movwf	4
  3861  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  3862  0D19  00CF               	movwf	??_scale+6
  3863  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  3864  0D1F  00D0               	movwf	??_scale+7
  3865  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  3866  0D25  00D1               	movwf	??_scale+8
  3867  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  3868  0D2B  00D2               	movwf	??_scale+9
  3869  0D2C  0852               	movf	??_scale+9,w
  3870  0D2D  00B2               	movwf	___flmul@a+3
  3871  0D2E  0851               	movf	??_scale+8,w
  3872  0D2F  00B1               	movwf	___flmul@a+2
  3873  0D30  0850               	movf	??_scale+7,w
  3874  0D31  00B0               	movwf	___flmul@a+1
  3875  0D32  084F               	movf	??_scale+6,w
  3876  0D33  00AF               	movwf	___flmul@a
  3877  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3878  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3879  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3880  0D3B  082E               	movf	?___flmul+3,w
  3881  0D3C  00D6               	movwf	_scale$988+3
  3882  0D3D  082D               	movf	?___flmul+2,w
  3883  0D3E  00D5               	movwf	_scale$988+2
  3884  0D3F  082C               	movf	?___flmul+1,w
  3885  0D40  00D4               	movwf	_scale$988+1
  3886  0D41  082B               	movf	?___flmul,w
  3887  0D42  00D3               	movwf	_scale$988
  3888                           
  3889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3890  0D43  300A               	movlw	10
  3891  0D44  00F4               	movwf	___awmod@divisor
  3892  0D45  3000               	movlw	0
  3893  0D46  00F5               	movwf	___awmod@divisor+1
  3894  0D47  0857               	movf	scale@scl,w
  3895  0D48  00F6               	movwf	___awmod@dividend
  3896  0D49  01F7               	clrf	___awmod@dividend+1
  3897  0D4A  1BF6               	btfsc	___awmod@dividend,7
  3898  0D4B  03F7               	decf	___awmod@dividend+1,f
  3899  0D4C  160A  118A  20D9  120A  158A  	fcall	___awmod
  3900  0D51  0874               	movf	?___awmod,w
  3901  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3902  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3903  0D54  00C9               	movwf	??_scale
  3904  0D55  3001               	movlw	1
  3905  0D56                     u3975:
  3906  0D56  1003               	clrc
  3907  0D57  0DC9               	rlf	??_scale,f
  3908  0D58  3EFF               	addlw	-1
  3909  0D59  1D03               	skipz
  3910  0D5A  2D56               	goto	u3975
  3911  0D5B  1003               	clrc
  3912  0D5C  0D49               	rlf	??_scale,w
  3913  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3914  0D5E  0084               	movwf	4
  3915  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  3916  0D64  00CA               	movwf	??_scale+1
  3917  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  3918  0D6A  00CB               	movwf	??_scale+2
  3919  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  3920  0D70  00CC               	movwf	??_scale+3
  3921  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  3922  0D76  00CD               	movwf	??_scale+4
  3923  0D77  084D               	movf	??_scale+4,w
  3924  0D78  00AE               	movwf	___flmul@b+3
  3925  0D79  084C               	movf	??_scale+3,w
  3926  0D7A  00AD               	movwf	___flmul@b+2
  3927  0D7B  084B               	movf	??_scale+2,w
  3928  0D7C  00AC               	movwf	___flmul@b+1
  3929  0D7D  084A               	movf	??_scale+1,w
  3930  0D7E  00AB               	movwf	___flmul@b
  3931  0D7F  0856               	movf	_scale$988+3,w
  3932  0D80  00B2               	movwf	___flmul@a+3
  3933  0D81  0855               	movf	_scale$988+2,w
  3934  0D82  00B1               	movwf	___flmul@a+2
  3935  0D83  0854               	movf	_scale$988+1,w
  3936  0D84  00B0               	movwf	___flmul@a+1
  3937  0D85  0853               	movf	_scale$988,w
  3938  0D86  00AF               	movwf	___flmul@a
  3939  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3940  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3941  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3942  0D8E  082E               	movf	?___flmul+3,w
  3943  0D8F  00C8               	movwf	?_scale+3
  3944  0D90  082D               	movf	?___flmul+2,w
  3945  0D91  00C7               	movwf	?_scale+2
  3946  0D92  082C               	movf	?___flmul+1,w
  3947  0D93  00C6               	movwf	?_scale+1
  3948  0D94  082B               	movf	?___flmul,w
  3949  0D95  00C5               	movwf	?_scale
  3950  0D96  2FFF               	goto	l199
  3951  0D97                     l2576:
  3952  0D97  0857               	movf	scale@scl,w
  3953  0D98  3A80               	xorlw	128
  3954  0D99  3E75               	addlw	-139
  3955  0D9A  1C03               	skipc
  3956  0D9B  2D9D               	goto	u3981
  3957  0D9C  2D9E               	goto	u3980
  3958  0D9D                     u3981:
  3959  0D9D  2E26               	goto	l2582
  3960  0D9E                     u3980:
  3961  0D9E                     l2578:
  3962                           
  3963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3964  0D9E  300A               	movlw	10
  3965  0D9F  00F4               	movwf	___awmod@divisor
  3966  0DA0  3000               	movlw	0
  3967  0DA1  00F5               	movwf	___awmod@divisor+1
  3968  0DA2  0857               	movf	scale@scl,w
  3969  0DA3  00F6               	movwf	___awmod@dividend
  3970  0DA4  01F7               	clrf	___awmod@dividend+1
  3971  0DA5  1BF6               	btfsc	___awmod@dividend,7
  3972  0DA6  03F7               	decf	___awmod@dividend+1,f
  3973  0DA7  160A  118A  20D9  120A  158A  	fcall	___awmod
  3974  0DAC  0874               	movf	?___awmod,w
  3975  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3976  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3977  0DAF  00C9               	movwf	??_scale
  3978  0DB0  3001               	movlw	1
  3979  0DB1                     u3995:
  3980  0DB1  1003               	clrc
  3981  0DB2  0DC9               	rlf	??_scale,f
  3982  0DB3  3EFF               	addlw	-1
  3983  0DB4  1D03               	skipz
  3984  0DB5  2DB1               	goto	u3995
  3985  0DB6  1003               	clrc
  3986  0DB7  0D49               	rlf	??_scale,w
  3987  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3988  0DB9  0084               	movwf	4
  3989  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  3990  0DBF  00CA               	movwf	??_scale+1
  3991  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  3992  0DC5  00CB               	movwf	??_scale+2
  3993  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  3994  0DCB  00CC               	movwf	??_scale+3
  3995  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  3996  0DD1  00CD               	movwf	??_scale+4
  3997  0DD2  084D               	movf	??_scale+4,w
  3998  0DD3  00AE               	movwf	___flmul@b+3
  3999  0DD4  084C               	movf	??_scale+3,w
  4000  0DD5  00AD               	movwf	___flmul@b+2
  4001  0DD6  084B               	movf	??_scale+2,w
  4002  0DD7  00AC               	movwf	___flmul@b+1
  4003  0DD8  084A               	movf	??_scale+1,w
  4004  0DD9  00AB               	movwf	___flmul@b
  4005  0DDA  300A               	movlw	10
  4006  0DDB  00A2               	movwf	___awdiv@divisor
  4007  0DDC  3000               	movlw	0
  4008  0DDD  00A3               	movwf	___awdiv@divisor+1
  4009  0DDE  0857               	movf	scale@scl,w
  4010  0DDF  00A4               	movwf	___awdiv@dividend
  4011  0DE0  01A5               	clrf	___awdiv@dividend+1
  4012  0DE1  1BA4               	btfsc	___awdiv@dividend,7
  4013  0DE2  03A5               	decf	___awdiv@dividend+1,f
  4014  0DE3  160A  158A  25E1  120A  158A  	fcall	___awdiv
  4015  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4016  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4017  0DEA  0822               	movf	?___awdiv,w
  4018  0DEB  00CE               	movwf	??_scale+5
  4019  0DEC  3001               	movlw	1
  4020  0DED                     u4005:
  4021  0DED  1003               	clrc
  4022  0DEE  0DCE               	rlf	??_scale+5,f
  4023  0DEF  3EFF               	addlw	-1
  4024  0DF0  1D03               	skipz
  4025  0DF1  2DED               	goto	u4005
  4026  0DF2  1003               	clrc
  4027  0DF3  0D4E               	rlf	??_scale+5,w
  4028  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4029  0DF5  0084               	movwf	4
  4030  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  4031  0DFB  00CF               	movwf	??_scale+6
  4032  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  4033  0E01  00D0               	movwf	??_scale+7
  4034  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  4035  0E07  00D1               	movwf	??_scale+8
  4036  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  4037  0E0D  00D2               	movwf	??_scale+9
  4038  0E0E  0852               	movf	??_scale+9,w
  4039  0E0F  00B2               	movwf	___flmul@a+3
  4040  0E10  0851               	movf	??_scale+8,w
  4041  0E11  00B1               	movwf	___flmul@a+2
  4042  0E12  0850               	movf	??_scale+7,w
  4043  0E13  00B0               	movwf	___flmul@a+1
  4044  0E14  084F               	movf	??_scale+6,w
  4045  0E15  00AF               	movwf	___flmul@a
  4046  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  4047  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4048  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4049  0E1D  082E               	movf	?___flmul+3,w
  4050  0E1E  00C8               	movwf	?_scale+3
  4051  0E1F  082D               	movf	?___flmul+2,w
  4052  0E20  00C7               	movwf	?_scale+2
  4053  0E21  082C               	movf	?___flmul+1,w
  4054  0E22  00C6               	movwf	?_scale+1
  4055  0E23  082B               	movf	?___flmul,w
  4056  0E24  00C5               	movwf	?_scale
  4057  0E25  2FFF               	goto	l199
  4058  0E26                     l2582:
  4059                           
  4060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4061  0E26  0857               	movf	scale@scl,w
  4062  0E27  00C9               	movwf	??_scale
  4063  0E28  3001               	movlw	1
  4064  0E29                     u4015:
  4065  0E29  1003               	clrc
  4066  0E2A  0DC9               	rlf	??_scale,f
  4067  0E2B  3EFF               	addlw	-1
  4068  0E2C  1D03               	skipz
  4069  0E2D  2E29               	goto	u4015
  4070  0E2E  1003               	clrc
  4071  0E2F  0D49               	rlf	??_scale,w
  4072  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4073  0E31  0084               	movwf	4
  4074  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  4075  0E37  00CA               	movwf	??_scale+1
  4076  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  4077  0E3D  00CB               	movwf	??_scale+2
  4078  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  4079  0E43  00CC               	movwf	??_scale+3
  4080  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  4081  0E49  00CD               	movwf	??_scale+4
  4082  0E4A  084D               	movf	??_scale+4,w
  4083  0E4B  00C8               	movwf	?_scale+3
  4084  0E4C  084C               	movf	??_scale+3,w
  4085  0E4D  00C7               	movwf	?_scale+2
  4086  0E4E  084B               	movf	??_scale+2,w
  4087  0E4F  00C6               	movwf	?_scale+1
  4088  0E50  084A               	movf	??_scale+1,w
  4089  0E51  00C5               	movwf	?_scale
  4090  0E52  2FFF               	goto	l199
  4091  0E53                     l2586:
  4092                           
  4093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4094  0E53  0857               	movf	scale@scl,w
  4095  0E54  3A80               	xorlw	128
  4096  0E55  3E12               	addlw	-238
  4097  0E56  1C03               	skipc
  4098  0E57  2E59               	goto	u4021
  4099  0E58  2E5A               	goto	u4020
  4100  0E59                     u4021:
  4101  0E59  2F44               	goto	l2594
  4102  0E5A                     u4020:
  4103  0E5A                     l2588:
  4104                           
  4105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4106  0E5A  300A               	movlw	10
  4107  0E5B  00A2               	movwf	___awdiv@divisor
  4108  0E5C  3000               	movlw	0
  4109  0E5D  00A3               	movwf	___awdiv@divisor+1
  4110  0E5E  0857               	movf	scale@scl,w
  4111  0E5F  00F6               	movwf	___awmod@dividend
  4112  0E60  01F7               	clrf	___awmod@dividend+1
  4113  0E61  1BF6               	btfsc	___awmod@dividend,7
  4114  0E62  03F7               	decf	___awmod@dividend+1,f
  4115  0E63  3064               	movlw	100
  4116  0E64  00F4               	movwf	___awmod@divisor
  4117  0E65  3000               	movlw	0
  4118  0E66  00F5               	movwf	___awmod@divisor+1
  4119  0E67  160A  118A  20D9  120A  158A  	fcall	___awmod
  4120  0E6C  0875               	movf	?___awmod+1,w
  4121  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4122  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4123  0E6F  00A5               	movwf	___awdiv@dividend+1
  4124  0E70  0874               	movf	?___awmod,w
  4125  0E71  00A4               	movwf	___awdiv@dividend
  4126  0E72  160A  158A  25E1  120A  158A  	fcall	___awdiv
  4127  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4128  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4129  0E79  0822               	movf	?___awdiv,w
  4130  0E7A  00C9               	movwf	??_scale
  4131  0E7B  3001               	movlw	1
  4132  0E7C                     u4035:
  4133  0E7C  1003               	clrc
  4134  0E7D  0DC9               	rlf	??_scale,f
  4135  0E7E  3EFF               	addlw	-1
  4136  0E7F  1D03               	skipz
  4137  0E80  2E7C               	goto	u4035
  4138  0E81  1003               	clrc
  4139  0E82  0D49               	rlf	??_scale,w
  4140  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4141  0E84  0084               	movwf	4
  4142  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  4143  0E8A  00CA               	movwf	??_scale+1
  4144  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  4145  0E90  00CB               	movwf	??_scale+2
  4146  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  4147  0E96  00CC               	movwf	??_scale+3
  4148  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  4149  0E9C  00CD               	movwf	??_scale+4
  4150  0E9D  084D               	movf	??_scale+4,w
  4151  0E9E  00AE               	movwf	___flmul@b+3
  4152  0E9F  084C               	movf	??_scale+3,w
  4153  0EA0  00AD               	movwf	___flmul@b+2
  4154  0EA1  084B               	movf	??_scale+2,w
  4155  0EA2  00AC               	movwf	___flmul@b+1
  4156  0EA3  084A               	movf	??_scale+1,w
  4157  0EA4  00AB               	movwf	___flmul@b
  4158  0EA5  3064               	movlw	100
  4159  0EA6  00A2               	movwf	___awdiv@divisor
  4160  0EA7  3000               	movlw	0
  4161  0EA8  00A3               	movwf	___awdiv@divisor+1
  4162  0EA9  0857               	movf	scale@scl,w
  4163  0EAA  00A4               	movwf	___awdiv@dividend
  4164  0EAB  01A5               	clrf	___awdiv@dividend+1
  4165  0EAC  1BA4               	btfsc	___awdiv@dividend,7
  4166  0EAD  03A5               	decf	___awdiv@dividend+1,f
  4167  0EAE  160A  158A  25E1  120A  158A  	fcall	___awdiv
  4168  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4169  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4170  0EB5  0822               	movf	?___awdiv,w
  4171  0EB6  00CE               	movwf	??_scale+5
  4172  0EB7  3001               	movlw	1
  4173  0EB8                     u4045:
  4174  0EB8  1003               	clrc
  4175  0EB9  0DCE               	rlf	??_scale+5,f
  4176  0EBA  3EFF               	addlw	-1
  4177  0EBB  1D03               	skipz
  4178  0EBC  2EB8               	goto	u4045
  4179  0EBD  1003               	clrc
  4180  0EBE  0D4E               	rlf	??_scale+5,w
  4181  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4182  0EC0  0084               	movwf	4
  4183  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  4184  0EC6  00CF               	movwf	??_scale+6
  4185  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  4186  0ECC  00D0               	movwf	??_scale+7
  4187  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  4188  0ED2  00D1               	movwf	??_scale+8
  4189  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  4190  0ED8  00D2               	movwf	??_scale+9
  4191  0ED9  0852               	movf	??_scale+9,w
  4192  0EDA  00B2               	movwf	___flmul@a+3
  4193  0EDB  0851               	movf	??_scale+8,w
  4194  0EDC  00B1               	movwf	___flmul@a+2
  4195  0EDD  0850               	movf	??_scale+7,w
  4196  0EDE  00B0               	movwf	___flmul@a+1
  4197  0EDF  084F               	movf	??_scale+6,w
  4198  0EE0  00AF               	movwf	___flmul@a
  4199  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4200  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4201  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4202  0EE8  082E               	movf	?___flmul+3,w
  4203  0EE9  00D6               	movwf	_scale$988+3
  4204  0EEA  082D               	movf	?___flmul+2,w
  4205  0EEB  00D5               	movwf	_scale$988+2
  4206  0EEC  082C               	movf	?___flmul+1,w
  4207  0EED  00D4               	movwf	_scale$988+1
  4208  0EEE  082B               	movf	?___flmul,w
  4209  0EEF  00D3               	movwf	_scale$988
  4210                           
  4211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4212  0EF0  300A               	movlw	10
  4213  0EF1  00F4               	movwf	___awmod@divisor
  4214  0EF2  3000               	movlw	0
  4215  0EF3  00F5               	movwf	___awmod@divisor+1
  4216  0EF4  0857               	movf	scale@scl,w
  4217  0EF5  00F6               	movwf	___awmod@dividend
  4218  0EF6  01F7               	clrf	___awmod@dividend+1
  4219  0EF7  1BF6               	btfsc	___awmod@dividend,7
  4220  0EF8  03F7               	decf	___awmod@dividend+1,f
  4221  0EF9  160A  118A  20D9  120A  158A  	fcall	___awmod
  4222  0EFE  0874               	movf	?___awmod,w
  4223  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4224  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4225  0F01  00C9               	movwf	??_scale
  4226  0F02  3001               	movlw	1
  4227  0F03                     u4055:
  4228  0F03  1003               	clrc
  4229  0F04  0DC9               	rlf	??_scale,f
  4230  0F05  3EFF               	addlw	-1
  4231  0F06  1D03               	skipz
  4232  0F07  2F03               	goto	u4055
  4233  0F08  1003               	clrc
  4234  0F09  0D49               	rlf	??_scale,w
  4235  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4236  0F0B  0084               	movwf	4
  4237  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4238  0F11  00CA               	movwf	??_scale+1
  4239  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  4240  0F17  00CB               	movwf	??_scale+2
  4241  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  4242  0F1D  00CC               	movwf	??_scale+3
  4243  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  4244  0F23  00CD               	movwf	??_scale+4
  4245  0F24  084D               	movf	??_scale+4,w
  4246  0F25  00AE               	movwf	___flmul@b+3
  4247  0F26  084C               	movf	??_scale+3,w
  4248  0F27  00AD               	movwf	___flmul@b+2
  4249  0F28  084B               	movf	??_scale+2,w
  4250  0F29  00AC               	movwf	___flmul@b+1
  4251  0F2A  084A               	movf	??_scale+1,w
  4252  0F2B  00AB               	movwf	___flmul@b
  4253  0F2C  0856               	movf	_scale$988+3,w
  4254  0F2D  00B2               	movwf	___flmul@a+3
  4255  0F2E  0855               	movf	_scale$988+2,w
  4256  0F2F  00B1               	movwf	___flmul@a+2
  4257  0F30  0854               	movf	_scale$988+1,w
  4258  0F31  00B0               	movwf	___flmul@a+1
  4259  0F32  0853               	movf	_scale$988,w
  4260  0F33  00AF               	movwf	___flmul@a
  4261  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4262  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4263  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4264  0F3B  082E               	movf	?___flmul+3,w
  4265  0F3C  00C8               	movwf	?_scale+3
  4266  0F3D  082D               	movf	?___flmul+2,w
  4267  0F3E  00C7               	movwf	?_scale+2
  4268  0F3F  082C               	movf	?___flmul+1,w
  4269  0F40  00C6               	movwf	?_scale+1
  4270  0F41  082B               	movf	?___flmul,w
  4271  0F42  00C5               	movwf	?_scale
  4272  0F43  2FFF               	goto	l199
  4273  0F44                     l2594:
  4274  0F44  0857               	movf	scale@scl,w
  4275  0F45  3A80               	xorlw	128
  4276  0F46  3E75               	addlw	-139
  4277  0F47  1C03               	skipc
  4278  0F48  2F4A               	goto	u4061
  4279  0F49  2F4B               	goto	u4060
  4280  0F4A                     u4061:
  4281  0F4A  2FD3               	goto	l2600
  4282  0F4B                     u4060:
  4283  0F4B                     l2596:
  4284                           
  4285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4286  0F4B  300A               	movlw	10
  4287  0F4C  00F4               	movwf	___awmod@divisor
  4288  0F4D  3000               	movlw	0
  4289  0F4E  00F5               	movwf	___awmod@divisor+1
  4290  0F4F  0857               	movf	scale@scl,w
  4291  0F50  00F6               	movwf	___awmod@dividend
  4292  0F51  01F7               	clrf	___awmod@dividend+1
  4293  0F52  1BF6               	btfsc	___awmod@dividend,7
  4294  0F53  03F7               	decf	___awmod@dividend+1,f
  4295  0F54  160A  118A  20D9  120A  158A  	fcall	___awmod
  4296  0F59  0874               	movf	?___awmod,w
  4297  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4298  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4299  0F5C  00C9               	movwf	??_scale
  4300  0F5D  3001               	movlw	1
  4301  0F5E                     u4075:
  4302  0F5E  1003               	clrc
  4303  0F5F  0DC9               	rlf	??_scale,f
  4304  0F60  3EFF               	addlw	-1
  4305  0F61  1D03               	skipz
  4306  0F62  2F5E               	goto	u4075
  4307  0F63  1003               	clrc
  4308  0F64  0D49               	rlf	??_scale,w
  4309  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4310  0F66  0084               	movwf	4
  4311  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  4312  0F6C  00CA               	movwf	??_scale+1
  4313  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4314  0F72  00CB               	movwf	??_scale+2
  4315  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  4316  0F78  00CC               	movwf	??_scale+3
  4317  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  4318  0F7E  00CD               	movwf	??_scale+4
  4319  0F7F  084D               	movf	??_scale+4,w
  4320  0F80  00AE               	movwf	___flmul@b+3
  4321  0F81  084C               	movf	??_scale+3,w
  4322  0F82  00AD               	movwf	___flmul@b+2
  4323  0F83  084B               	movf	??_scale+2,w
  4324  0F84  00AC               	movwf	___flmul@b+1
  4325  0F85  084A               	movf	??_scale+1,w
  4326  0F86  00AB               	movwf	___flmul@b
  4327  0F87  300A               	movlw	10
  4328  0F88  00A2               	movwf	___awdiv@divisor
  4329  0F89  3000               	movlw	0
  4330  0F8A  00A3               	movwf	___awdiv@divisor+1
  4331  0F8B  0857               	movf	scale@scl,w
  4332  0F8C  00A4               	movwf	___awdiv@dividend
  4333  0F8D  01A5               	clrf	___awdiv@dividend+1
  4334  0F8E  1BA4               	btfsc	___awdiv@dividend,7
  4335  0F8F  03A5               	decf	___awdiv@dividend+1,f
  4336  0F90  160A  158A  25E1  120A  158A  	fcall	___awdiv
  4337  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4338  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4339  0F97  0822               	movf	?___awdiv,w
  4340  0F98  00CE               	movwf	??_scale+5
  4341  0F99  3001               	movlw	1
  4342  0F9A                     u4085:
  4343  0F9A  1003               	clrc
  4344  0F9B  0DCE               	rlf	??_scale+5,f
  4345  0F9C  3EFF               	addlw	-1
  4346  0F9D  1D03               	skipz
  4347  0F9E  2F9A               	goto	u4085
  4348  0F9F  1003               	clrc
  4349  0FA0  0D4E               	rlf	??_scale+5,w
  4350  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4351  0FA2  0084               	movwf	4
  4352  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4353  0FA8  00CF               	movwf	??_scale+6
  4354  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4355  0FAE  00D0               	movwf	??_scale+7
  4356  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4357  0FB4  00D1               	movwf	??_scale+8
  4358  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4359  0FBA  00D2               	movwf	??_scale+9
  4360  0FBB  0852               	movf	??_scale+9,w
  4361  0FBC  00B2               	movwf	___flmul@a+3
  4362  0FBD  0851               	movf	??_scale+8,w
  4363  0FBE  00B1               	movwf	___flmul@a+2
  4364  0FBF  0850               	movf	??_scale+7,w
  4365  0FC0  00B0               	movwf	___flmul@a+1
  4366  0FC1  084F               	movf	??_scale+6,w
  4367  0FC2  00AF               	movwf	___flmul@a
  4368  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4369  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4370  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4371  0FCA  082E               	movf	?___flmul+3,w
  4372  0FCB  00C8               	movwf	?_scale+3
  4373  0FCC  082D               	movf	?___flmul+2,w
  4374  0FCD  00C7               	movwf	?_scale+2
  4375  0FCE  082C               	movf	?___flmul+1,w
  4376  0FCF  00C6               	movwf	?_scale+1
  4377  0FD0  082B               	movf	?___flmul,w
  4378  0FD1  00C5               	movwf	?_scale
  4379  0FD2  2FFF               	goto	l199
  4380  0FD3                     l2600:
  4381                           
  4382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4383  0FD3  0857               	movf	scale@scl,w
  4384  0FD4  00C9               	movwf	??_scale
  4385  0FD5  3001               	movlw	1
  4386  0FD6                     u4095:
  4387  0FD6  1003               	clrc
  4388  0FD7  0DC9               	rlf	??_scale,f
  4389  0FD8  3EFF               	addlw	-1
  4390  0FD9  1D03               	skipz
  4391  0FDA  2FD6               	goto	u4095
  4392  0FDB  1003               	clrc
  4393  0FDC  0D49               	rlf	??_scale,w
  4394  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4395  0FDE  0084               	movwf	4
  4396  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  4397  0FE4  00CA               	movwf	??_scale+1
  4398  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4399  0FEA  00CB               	movwf	??_scale+2
  4400  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  4401  0FF0  00CC               	movwf	??_scale+3
  4402  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4403  0FF6  00CD               	movwf	??_scale+4
  4404  0FF7  084D               	movf	??_scale+4,w
  4405  0FF8  00C8               	movwf	?_scale+3
  4406  0FF9  084C               	movf	??_scale+3,w
  4407  0FFA  00C7               	movwf	?_scale+2
  4408  0FFB  084B               	movf	??_scale+2,w
  4409  0FFC  00C6               	movwf	?_scale+1
  4410  0FFD  084A               	movf	??_scale+1,w
  4411  0FFE  00C5               	movwf	?_scale
  4412  0FFF                     l199:
  4413  0FFF  0008               	return
  4414  1000                     __end_of_scale:
  4415                           
  4416                           	psect	text4
  4417  10D9                     __ptext4:	
  4418 ;; *************** function ___awmod *****************
  4419 ;; Defined at:
  4420 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  divisor         2    4[COMMON] int 
  4423 ;;  dividend        2    6[COMMON] int 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  sign            1    1[BANK0 ] unsigned char 
  4426 ;;  counter         1    0[BANK0 ] unsigned char 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  2    4[COMMON] int 
  4429 ;; Registers used:
  4430 ;;		wreg, status,2, status,0
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4436 ;;      Params:         4       0       0       0       0
  4437 ;;      Locals:         0       2       0       0       0
  4438 ;;      Temps:          1       0       0       0       0
  4439 ;;      Totals:         5       2       0       0       0
  4440 ;;Total ram usage:        7 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    1
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_scale
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           
  4451                           ;psect for function ___awmod
  4452  10D9                     ___awmod:
  4453  10D9                     l2110:	
  4454                           ;incstack = 0
  4455                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4456                           
  4457  10D9  1283               	bcf	3,5	;RP0=0, select bank0
  4458  10DA  1303               	bcf	3,6	;RP1=0, select bank0
  4459  10DB  01A1               	clrf	___awmod@sign
  4460  10DC                     l2112:
  4461  10DC  1FF7               	btfss	___awmod@dividend+1,7
  4462  10DD  28DF               	goto	u2801
  4463  10DE  28E0               	goto	u2800
  4464  10DF                     u2801:
  4465  10DF  28E7               	goto	l2118
  4466  10E0                     u2800:
  4467  10E0                     l2114:
  4468  10E0  09F6               	comf	___awmod@dividend,f
  4469  10E1  09F7               	comf	___awmod@dividend+1,f
  4470  10E2  0AF6               	incf	___awmod@dividend,f
  4471  10E3  1903               	skipnz
  4472  10E4  0AF7               	incf	___awmod@dividend+1,f
  4473  10E5                     l2116:
  4474  10E5  01A1               	clrf	___awmod@sign
  4475  10E6  0AA1               	incf	___awmod@sign,f
  4476  10E7                     l2118:
  4477  10E7  1FF5               	btfss	___awmod@divisor+1,7
  4478  10E8  28EA               	goto	u2811
  4479  10E9  28EB               	goto	u2810
  4480  10EA                     u2811:
  4481  10EA  28F0               	goto	l2122
  4482  10EB                     u2810:
  4483  10EB                     l2120:
  4484  10EB  09F4               	comf	___awmod@divisor,f
  4485  10EC  09F5               	comf	___awmod@divisor+1,f
  4486  10ED  0AF4               	incf	___awmod@divisor,f
  4487  10EE  1903               	skipnz
  4488  10EF  0AF5               	incf	___awmod@divisor+1,f
  4489  10F0                     l2122:
  4490  10F0  0874               	movf	___awmod@divisor,w
  4491  10F1  0475               	iorwf	___awmod@divisor+1,w
  4492  10F2  1903               	btfsc	3,2
  4493  10F3  28F5               	goto	u2821
  4494  10F4  28F6               	goto	u2820
  4495  10F5                     u2821:
  4496  10F5  2925               	goto	l2140
  4497  10F6                     u2820:
  4498  10F6                     l2124:
  4499  10F6  01A0               	clrf	___awmod@counter
  4500  10F7  0AA0               	incf	___awmod@counter,f
  4501  10F8  2904               	goto	l2130
  4502  10F9                     l2126:
  4503  10F9  3001               	movlw	1
  4504  10FA                     u2835:
  4505  10FA  1003               	clrc
  4506  10FB  0DF4               	rlf	___awmod@divisor,f
  4507  10FC  0DF5               	rlf	___awmod@divisor+1,f
  4508  10FD  3EFF               	addlw	-1
  4509  10FE  1D03               	skipz
  4510  10FF  28FA               	goto	u2835
  4511  1100                     l2128:
  4512  1100  3001               	movlw	1
  4513  1101  00F8               	movwf	??___awmod
  4514  1102  0878               	movf	??___awmod,w
  4515  1103  07A0               	addwf	___awmod@counter,f
  4516  1104                     l2130:
  4517  1104  1FF5               	btfss	___awmod@divisor+1,7
  4518  1105  2907               	goto	u2841
  4519  1106  2908               	goto	u2840
  4520  1107                     u2841:
  4521  1107  28F9               	goto	l2126
  4522  1108                     u2840:
  4523  1108                     l2132:
  4524  1108  0875               	movf	___awmod@divisor+1,w
  4525  1109  0277               	subwf	___awmod@dividend+1,w
  4526  110A  1D03               	skipz
  4527  110B  290E               	goto	u2855
  4528  110C  0874               	movf	___awmod@divisor,w
  4529  110D  0276               	subwf	___awmod@dividend,w
  4530  110E                     u2855:
  4531  110E  1C03               	skipc
  4532  110F  2911               	goto	u2851
  4533  1110  2912               	goto	u2850
  4534  1111                     u2851:
  4535  1111  2918               	goto	l2136
  4536  1112                     u2850:
  4537  1112                     l2134:
  4538  1112  0874               	movf	___awmod@divisor,w
  4539  1113  02F6               	subwf	___awmod@dividend,f
  4540  1114  0875               	movf	___awmod@divisor+1,w
  4541  1115  1C03               	skipc
  4542  1116  03F7               	decf	___awmod@dividend+1,f
  4543  1117  02F7               	subwf	___awmod@dividend+1,f
  4544  1118                     l2136:
  4545  1118  3001               	movlw	1
  4546  1119                     u2865:
  4547  1119  1003               	clrc
  4548  111A  0CF5               	rrf	___awmod@divisor+1,f
  4549  111B  0CF4               	rrf	___awmod@divisor,f
  4550  111C  3EFF               	addlw	-1
  4551  111D  1D03               	skipz
  4552  111E  2919               	goto	u2865
  4553  111F                     l2138:
  4554  111F  3001               	movlw	1
  4555  1120  02A0               	subwf	___awmod@counter,f
  4556  1121  1D03               	btfss	3,2
  4557  1122  2924               	goto	u2871
  4558  1123  2925               	goto	u2870
  4559  1124                     u2871:
  4560  1124  2908               	goto	l2132
  4561  1125                     u2870:
  4562  1125                     l2140:
  4563  1125  0821               	movf	___awmod@sign,w
  4564  1126  1903               	btfsc	3,2
  4565  1127  2929               	goto	u2881
  4566  1128  292A               	goto	u2880
  4567  1129                     u2881:
  4568  1129  292F               	goto	l2144
  4569  112A                     u2880:
  4570  112A                     l2142:
  4571  112A  09F6               	comf	___awmod@dividend,f
  4572  112B  09F7               	comf	___awmod@dividend+1,f
  4573  112C  0AF6               	incf	___awmod@dividend,f
  4574  112D  1903               	skipnz
  4575  112E  0AF7               	incf	___awmod@dividend+1,f
  4576  112F                     l2144:
  4577  112F  0877               	movf	___awmod@dividend+1,w
  4578  1130  00F5               	movwf	?___awmod+1
  4579  1131  0876               	movf	___awmod@dividend,w
  4580  1132  00F4               	movwf	?___awmod
  4581  1133                     l435:
  4582  1133  0008               	return
  4583  1134                     __end_of___awmod:
  4584                           
  4585                           	psect	text5
  4586  1DE1                     __ptext5:	
  4587 ;; *************** function ___awdiv *****************
  4588 ;; Defined at:
  4589 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  divisor         2    2[BANK0 ] int 
  4592 ;;  dividend        2    4[BANK0 ] int 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  quotient        2    9[BANK0 ] int 
  4595 ;;  sign            1    8[BANK0 ] unsigned char 
  4596 ;;  counter         1    7[BANK0 ] unsigned char 
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  2    2[BANK0 ] int 
  4599 ;; Registers used:
  4600 ;;		wreg, status,2, status,0
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4606 ;;      Params:         0       4       0       0       0
  4607 ;;      Locals:         0       4       0       0       0
  4608 ;;      Temps:          0       1       0       0       0
  4609 ;;      Totals:         0       9       0       0       0
  4610 ;;Total ram usage:        9 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; Hardware stack levels required when called:    1
  4613 ;; This function calls:
  4614 ;;		Nothing
  4615 ;; This function is called by:
  4616 ;;		_conversion
  4617 ;;		_scale
  4618 ;;		_sprintf
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           
  4623                           ;psect for function ___awdiv
  4624  1DE1                     ___awdiv:
  4625  1DE1                     l2066:	
  4626                           ;incstack = 0
  4627                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4628                           
  4629  1DE1  1283               	bcf	3,5	;RP0=0, select bank0
  4630  1DE2  1303               	bcf	3,6	;RP1=0, select bank0
  4631  1DE3  01A8               	clrf	___awdiv@sign
  4632  1DE4                     l2068:
  4633  1DE4  1FA3               	btfss	___awdiv@divisor+1,7
  4634  1DE5  2DE7               	goto	u2701
  4635  1DE6  2DE8               	goto	u2700
  4636  1DE7                     u2701:
  4637  1DE7  2DEF               	goto	l2074
  4638  1DE8                     u2700:
  4639  1DE8                     l2070:
  4640  1DE8  09A2               	comf	___awdiv@divisor,f
  4641  1DE9  09A3               	comf	___awdiv@divisor+1,f
  4642  1DEA  0AA2               	incf	___awdiv@divisor,f
  4643  1DEB  1903               	skipnz
  4644  1DEC  0AA3               	incf	___awdiv@divisor+1,f
  4645  1DED                     l2072:
  4646  1DED  01A8               	clrf	___awdiv@sign
  4647  1DEE  0AA8               	incf	___awdiv@sign,f
  4648  1DEF                     l2074:
  4649  1DEF  1FA5               	btfss	___awdiv@dividend+1,7
  4650  1DF0  2DF2               	goto	u2711
  4651  1DF1  2DF3               	goto	u2710
  4652  1DF2                     u2711:
  4653  1DF2  2DFC               	goto	l2080
  4654  1DF3                     u2710:
  4655  1DF3                     l2076:
  4656  1DF3  09A4               	comf	___awdiv@dividend,f
  4657  1DF4  09A5               	comf	___awdiv@dividend+1,f
  4658  1DF5  0AA4               	incf	___awdiv@dividend,f
  4659  1DF6  1903               	skipnz
  4660  1DF7  0AA5               	incf	___awdiv@dividend+1,f
  4661  1DF8                     l2078:
  4662  1DF8  3001               	movlw	1
  4663  1DF9  00A6               	movwf	??___awdiv
  4664  1DFA  0826               	movf	??___awdiv,w
  4665  1DFB  06A8               	xorwf	___awdiv@sign,f
  4666  1DFC                     l2080:
  4667  1DFC  01A9               	clrf	___awdiv@quotient
  4668  1DFD  01AA               	clrf	___awdiv@quotient+1
  4669  1DFE                     l2082:
  4670  1DFE  0822               	movf	___awdiv@divisor,w
  4671  1DFF  0423               	iorwf	___awdiv@divisor+1,w
  4672  1E00  1903               	btfsc	3,2
  4673  1E01  2E03               	goto	u2721
  4674  1E02  2E04               	goto	u2720
  4675  1E03                     u2721:
  4676  1E03  2E3B               	goto	l2102
  4677  1E04                     u2720:
  4678  1E04                     l2084:
  4679  1E04  01A7               	clrf	___awdiv@counter
  4680  1E05  0AA7               	incf	___awdiv@counter,f
  4681  1E06  2E12               	goto	l2090
  4682  1E07                     l2086:
  4683  1E07  3001               	movlw	1
  4684  1E08                     u2735:
  4685  1E08  1003               	clrc
  4686  1E09  0DA2               	rlf	___awdiv@divisor,f
  4687  1E0A  0DA3               	rlf	___awdiv@divisor+1,f
  4688  1E0B  3EFF               	addlw	-1
  4689  1E0C  1D03               	skipz
  4690  1E0D  2E08               	goto	u2735
  4691  1E0E                     l2088:
  4692  1E0E  3001               	movlw	1
  4693  1E0F  00A6               	movwf	??___awdiv
  4694  1E10  0826               	movf	??___awdiv,w
  4695  1E11  07A7               	addwf	___awdiv@counter,f
  4696  1E12                     l2090:
  4697  1E12  1FA3               	btfss	___awdiv@divisor+1,7
  4698  1E13  2E15               	goto	u2741
  4699  1E14  2E16               	goto	u2740
  4700  1E15                     u2741:
  4701  1E15  2E07               	goto	l2086
  4702  1E16                     u2740:
  4703  1E16                     l2092:
  4704  1E16  3001               	movlw	1
  4705  1E17                     u2755:
  4706  1E17  1003               	clrc
  4707  1E18  0DA9               	rlf	___awdiv@quotient,f
  4708  1E19  0DAA               	rlf	___awdiv@quotient+1,f
  4709  1E1A  3EFF               	addlw	-1
  4710  1E1B  1D03               	skipz
  4711  1E1C  2E17               	goto	u2755
  4712  1E1D  0823               	movf	___awdiv@divisor+1,w
  4713  1E1E  0225               	subwf	___awdiv@dividend+1,w
  4714  1E1F  1D03               	skipz
  4715  1E20  2E23               	goto	u2765
  4716  1E21  0822               	movf	___awdiv@divisor,w
  4717  1E22  0224               	subwf	___awdiv@dividend,w
  4718  1E23                     u2765:
  4719  1E23  1C03               	skipc
  4720  1E24  2E26               	goto	u2761
  4721  1E25  2E27               	goto	u2760
  4722  1E26                     u2761:
  4723  1E26  2E2E               	goto	l2098
  4724  1E27                     u2760:
  4725  1E27                     l2094:
  4726  1E27  0822               	movf	___awdiv@divisor,w
  4727  1E28  02A4               	subwf	___awdiv@dividend,f
  4728  1E29  0823               	movf	___awdiv@divisor+1,w
  4729  1E2A  1C03               	skipc
  4730  1E2B  03A5               	decf	___awdiv@dividend+1,f
  4731  1E2C  02A5               	subwf	___awdiv@dividend+1,f
  4732  1E2D                     l2096:
  4733  1E2D  1429               	bsf	___awdiv@quotient,0
  4734  1E2E                     l2098:
  4735  1E2E  3001               	movlw	1
  4736  1E2F                     u2775:
  4737  1E2F  1003               	clrc
  4738  1E30  0CA3               	rrf	___awdiv@divisor+1,f
  4739  1E31  0CA2               	rrf	___awdiv@divisor,f
  4740  1E32  3EFF               	addlw	-1
  4741  1E33  1D03               	skipz
  4742  1E34  2E2F               	goto	u2775
  4743  1E35                     l2100:
  4744  1E35  3001               	movlw	1
  4745  1E36  02A7               	subwf	___awdiv@counter,f
  4746  1E37  1D03               	btfss	3,2
  4747  1E38  2E3A               	goto	u2781
  4748  1E39  2E3B               	goto	u2780
  4749  1E3A                     u2781:
  4750  1E3A  2E16               	goto	l2092
  4751  1E3B                     u2780:
  4752  1E3B                     l2102:
  4753  1E3B  0828               	movf	___awdiv@sign,w
  4754  1E3C  1903               	btfsc	3,2
  4755  1E3D  2E3F               	goto	u2791
  4756  1E3E  2E40               	goto	u2790
  4757  1E3F                     u2791:
  4758  1E3F  2E45               	goto	l2106
  4759  1E40                     u2790:
  4760  1E40                     l2104:
  4761  1E40  09A9               	comf	___awdiv@quotient,f
  4762  1E41  09AA               	comf	___awdiv@quotient+1,f
  4763  1E42  0AA9               	incf	___awdiv@quotient,f
  4764  1E43  1903               	skipnz
  4765  1E44  0AAA               	incf	___awdiv@quotient+1,f
  4766  1E45                     l2106:
  4767  1E45  082A               	movf	___awdiv@quotient+1,w
  4768  1E46  00A3               	movwf	?___awdiv+1
  4769  1E47  0829               	movf	___awdiv@quotient,w
  4770  1E48  00A2               	movwf	?___awdiv
  4771  1E49                     l422:
  4772  1E49  0008               	return
  4773  1E4A                     __end_of___awdiv:
  4774                           
  4775                           	psect	text6
  4776  1B40                     __ptext6:	
  4777 ;; *************** function _isdigit *****************
  4778 ;; Defined at:
  4779 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  c               1    wreg     unsigned char 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  c               1    5[COMMON] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;		None               void
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4793 ;;      Params:         0       0       0       0       0
  4794 ;;      Locals:         2       0       0       0       0
  4795 ;;      Temps:          0       0       0       0       0
  4796 ;;      Totals:         2       0       0       0       0
  4797 ;;Total ram usage:        2 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    1
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_sprintf
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           
  4808                           ;psect for function _isdigit
  4809  1B40                     _isdigit:
  4810                           
  4811                           ;incstack = 0
  4812                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4813                           ;isdigit@c stored from wreg
  4814  1B40  00F5               	movwf	isdigit@c
  4815  1B41                     l2604:
  4816  1B41  01F4               	clrf	_isdigit$803
  4817  1B42                     l2606:
  4818  1B42  303A               	movlw	58
  4819  1B43  0275               	subwf	isdigit@c,w
  4820  1B44  1803               	skipnc
  4821  1B45  2B47               	goto	u4101
  4822  1B46  2B48               	goto	u4100
  4823  1B47                     u4101:
  4824  1B47  2B50               	goto	l2612
  4825  1B48                     u4100:
  4826  1B48                     l2608:
  4827  1B48  3030               	movlw	48
  4828  1B49  0275               	subwf	isdigit@c,w
  4829  1B4A  1C03               	skipc
  4830  1B4B  2B4D               	goto	u4111
  4831  1B4C  2B4E               	goto	u4110
  4832  1B4D                     u4111:
  4833  1B4D  2B50               	goto	l2612
  4834  1B4E                     u4110:
  4835  1B4E                     l2610:
  4836  1B4E  01F4               	clrf	_isdigit$803
  4837  1B4F  0AF4               	incf	_isdigit$803,f
  4838  1B50                     l2612:
  4839  1B50  0C74               	rrf	_isdigit$803,w
  4840  1B51                     l756:
  4841  1B51  0008               	return
  4842  1B52                     __end_of_isdigit:
  4843                           
  4844                           	psect	text7
  4845  136B                     __ptext7:	
  4846 ;; *************** function _fround *****************
  4847 ;; Defined at:
  4848 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;  prec            1    wreg     unsigned char 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  prec            1   56[BANK0 ] unsigned char 
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  4   37[BANK0 ] unsigned char 
  4855 ;; Registers used:
  4856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4862 ;;      Params:         0       4       0       0       0
  4863 ;;      Locals:         0       9       0       0       0
  4864 ;;      Temps:          0       7       0       0       0
  4865 ;;      Totals:         0      20       0       0       0
  4866 ;;Total ram usage:       20 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:    3
  4869 ;; This function calls:
  4870 ;;		___flmul
  4871 ;;		___lwdiv
  4872 ;;		___lwmod
  4873 ;; This function is called by:
  4874 ;;		_sprintf
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           
  4879                           ;psect for function _fround
  4880  136B                     _fround:
  4881                           
  4882                           ;incstack = 0
  4883                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4884                           ;fround@prec stored from wreg
  4885  136B  1283               	bcf	3,5	;RP0=0, select bank0
  4886  136C  1303               	bcf	3,6	;RP1=0, select bank0
  4887  136D  00D8               	movwf	fround@prec
  4888  136E                     l2546:
  4889                           
  4890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4891  136E  306E               	movlw	110
  4892  136F  0258               	subwf	fround@prec,w
  4893  1370  1C03               	skipc
  4894  1371  2B73               	goto	u3851
  4895  1372  2B74               	goto	u3850
  4896  1373                     u3851:
  4897  1373  2C83               	goto	l2554
  4898  1374                     u3850:
  4899  1374                     l2548:
  4900                           
  4901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4902  1374  303F               	movlw	63
  4903  1375  00AE               	movwf	___flmul@b+3
  4904  1376  3000               	movlw	0
  4905  1377  00AD               	movwf	___flmul@b+2
  4906  1378  3000               	movlw	0
  4907  1379  00AC               	movwf	___flmul@b+1
  4908  137A  3000               	movlw	0
  4909  137B  00AB               	movwf	___flmul@b
  4910  137C  3064               	movlw	100
  4911  137D  00A0               	movwf	___lwdiv@divisor
  4912  137E  3000               	movlw	0
  4913  137F  00A1               	movwf	___lwdiv@divisor+1
  4914  1380  0858               	movf	fround@prec,w
  4915  1381  00C9               	movwf	??_fround
  4916  1382  01CA               	clrf	??_fround+1
  4917  1383  0849               	movf	??_fround,w
  4918  1384  00A2               	movwf	___lwdiv@dividend
  4919  1385  084A               	movf	??_fround+1,w
  4920  1386  00A3               	movwf	___lwdiv@dividend+1
  4921  1387  160A  158A  2493  160A  118A  	fcall	___lwdiv
  4922  138C  1283               	bcf	3,5	;RP0=0, select bank0
  4923  138D  1303               	bcf	3,6	;RP1=0, select bank0
  4924  138E  0820               	movf	?___lwdiv,w
  4925  138F  00CB               	movwf	??_fround+2
  4926  1390  3001               	movlw	1
  4927  1391                     u3865:
  4928  1391  1003               	clrc
  4929  1392  0DCB               	rlf	??_fround+2,f
  4930  1393  3EFF               	addlw	-1
  4931  1394  1D03               	skipz
  4932  1395  2B91               	goto	u3865
  4933  1396  1003               	clrc
  4934  1397  0D4B               	rlf	??_fround+2,w
  4935  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4936  1399  0084               	movwf	4
  4937  139A  160A  118A  200A  160A  118A  	fcall	stringdir
  4938  139F  00CC               	movwf	??_fround+3
  4939  13A0  160A  118A  200A  160A  118A  	fcall	stringdir
  4940  13A5  00CD               	movwf	??_fround+4
  4941  13A6  160A  118A  200A  160A  118A  	fcall	stringdir
  4942  13AB  00CE               	movwf	??_fround+5
  4943  13AC  160A  118A  200A  160A  118A  	fcall	stringdir
  4944  13B1  00CF               	movwf	??_fround+6
  4945  13B2  084F               	movf	??_fround+6,w
  4946  13B3  00B2               	movwf	___flmul@a+3
  4947  13B4  084E               	movf	??_fround+5,w
  4948  13B5  00B1               	movwf	___flmul@a+2
  4949  13B6  084D               	movf	??_fround+4,w
  4950  13B7  00B0               	movwf	___flmul@a+1
  4951  13B8  084C               	movf	??_fround+3,w
  4952  13B9  00AF               	movwf	___flmul@a
  4953  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  4954  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4955  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4956  13C1  082E               	movf	?___flmul+3,w
  4957  13C2  00D7               	movwf	_fround$986+3
  4958  13C3  082D               	movf	?___flmul+2,w
  4959  13C4  00D6               	movwf	_fround$986+2
  4960  13C5  082C               	movf	?___flmul+1,w
  4961  13C6  00D5               	movwf	_fround$986+1
  4962  13C7  082B               	movf	?___flmul,w
  4963  13C8  00D4               	movwf	_fround$986
  4964                           
  4965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4966  13C9  300A               	movlw	10
  4967  13CA  00A0               	movwf	___lwdiv@divisor
  4968  13CB  3000               	movlw	0
  4969  13CC  00A1               	movwf	___lwdiv@divisor+1
  4970  13CD  0858               	movf	fround@prec,w
  4971  13CE  00C9               	movwf	??_fround
  4972  13CF  01CA               	clrf	??_fround+1
  4973  13D0  0849               	movf	??_fround,w
  4974  13D1  00F6               	movwf	___lwmod@dividend
  4975  13D2  084A               	movf	??_fround+1,w
  4976  13D3  00F7               	movwf	___lwmod@dividend+1
  4977  13D4  3064               	movlw	100
  4978  13D5  00F4               	movwf	___lwmod@divisor
  4979  13D6  3000               	movlw	0
  4980  13D7  00F5               	movwf	___lwmod@divisor+1
  4981  13D8  120A  158A  2005  160A  118A  	fcall	___lwmod
  4982  13DD  0875               	movf	?___lwmod+1,w
  4983  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  4984  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  4985  13E0  00A3               	movwf	___lwdiv@dividend+1
  4986  13E1  0874               	movf	?___lwmod,w
  4987  13E2  00A2               	movwf	___lwdiv@dividend
  4988  13E3  160A  158A  2493  160A  118A  	fcall	___lwdiv
  4989  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  4990  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  4991  13EA  0820               	movf	?___lwdiv,w
  4992  13EB  00CB               	movwf	??_fround+2
  4993  13EC  3001               	movlw	1
  4994  13ED                     u3875:
  4995  13ED  1003               	clrc
  4996  13EE  0DCB               	rlf	??_fround+2,f
  4997  13EF  3EFF               	addlw	-1
  4998  13F0  1D03               	skipz
  4999  13F1  2BED               	goto	u3875
  5000  13F2  1003               	clrc
  5001  13F3  0D4B               	rlf	??_fround+2,w
  5002  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5003  13F5  0084               	movwf	4
  5004  13F6  160A  118A  200A  160A  118A  	fcall	stringdir
  5005  13FB  00CC               	movwf	??_fround+3
  5006  13FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5007  1401  00CD               	movwf	??_fround+4
  5008  1402  160A  118A  200A  160A  118A  	fcall	stringdir
  5009  1407  00CE               	movwf	??_fround+5
  5010  1408  160A  118A  200A  160A  118A  	fcall	stringdir
  5011  140D  00CF               	movwf	??_fround+6
  5012  140E  084F               	movf	??_fround+6,w
  5013  140F  00AE               	movwf	___flmul@b+3
  5014  1410  084E               	movf	??_fround+5,w
  5015  1411  00AD               	movwf	___flmul@b+2
  5016  1412  084D               	movf	??_fround+4,w
  5017  1413  00AC               	movwf	___flmul@b+1
  5018  1414  084C               	movf	??_fround+3,w
  5019  1415  00AB               	movwf	___flmul@b
  5020  1416  0857               	movf	_fround$986+3,w
  5021  1417  00B2               	movwf	___flmul@a+3
  5022  1418  0856               	movf	_fround$986+2,w
  5023  1419  00B1               	movwf	___flmul@a+2
  5024  141A  0855               	movf	_fround$986+1,w
  5025  141B  00B0               	movwf	___flmul@a+1
  5026  141C  0854               	movf	_fround$986,w
  5027  141D  00AF               	movwf	___flmul@a
  5028  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  5029  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5030  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5031  1425  082E               	movf	?___flmul+3,w
  5032  1426  00D3               	movwf	_fround$987+3
  5033  1427  082D               	movf	?___flmul+2,w
  5034  1428  00D2               	movwf	_fround$987+2
  5035  1429  082C               	movf	?___flmul+1,w
  5036  142A  00D1               	movwf	_fround$987+1
  5037  142B  082B               	movf	?___flmul,w
  5038  142C  00D0               	movwf	_fround$987
  5039                           
  5040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5041  142D  300A               	movlw	10
  5042  142E  00F4               	movwf	___lwmod@divisor
  5043  142F  3000               	movlw	0
  5044  1430  00F5               	movwf	___lwmod@divisor+1
  5045  1431  0858               	movf	fround@prec,w
  5046  1432  00C9               	movwf	??_fround
  5047  1433  01CA               	clrf	??_fround+1
  5048  1434  0849               	movf	??_fround,w
  5049  1435  00F6               	movwf	___lwmod@dividend
  5050  1436  084A               	movf	??_fround+1,w
  5051  1437  00F7               	movwf	___lwmod@dividend+1
  5052  1438  120A  158A  2005  160A  118A  	fcall	___lwmod
  5053  143D  0874               	movf	?___lwmod,w
  5054  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5055  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5056  1440  00CB               	movwf	??_fround+2
  5057  1441  3001               	movlw	1
  5058  1442                     u3885:
  5059  1442  1003               	clrc
  5060  1443  0DCB               	rlf	??_fround+2,f
  5061  1444  3EFF               	addlw	-1
  5062  1445  1D03               	skipz
  5063  1446  2C42               	goto	u3885
  5064  1447  1003               	clrc
  5065  1448  0D4B               	rlf	??_fround+2,w
  5066  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5067  144A  0084               	movwf	4
  5068  144B  160A  118A  200A  160A  118A  	fcall	stringdir
  5069  1450  00CC               	movwf	??_fround+3
  5070  1451  160A  118A  200A  160A  118A  	fcall	stringdir
  5071  1456  00CD               	movwf	??_fround+4
  5072  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  5073  145C  00CE               	movwf	??_fround+5
  5074  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  5075  1462  00CF               	movwf	??_fround+6
  5076  1463  084F               	movf	??_fround+6,w
  5077  1464  00AE               	movwf	___flmul@b+3
  5078  1465  084E               	movf	??_fround+5,w
  5079  1466  00AD               	movwf	___flmul@b+2
  5080  1467  084D               	movf	??_fround+4,w
  5081  1468  00AC               	movwf	___flmul@b+1
  5082  1469  084C               	movf	??_fround+3,w
  5083  146A  00AB               	movwf	___flmul@b
  5084  146B  0853               	movf	_fround$987+3,w
  5085  146C  00B2               	movwf	___flmul@a+3
  5086  146D  0852               	movf	_fround$987+2,w
  5087  146E  00B1               	movwf	___flmul@a+2
  5088  146F  0851               	movf	_fround$987+1,w
  5089  1470  00B0               	movwf	___flmul@a+1
  5090  1471  0850               	movf	_fround$987,w
  5091  1472  00AF               	movwf	___flmul@a
  5092  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  5093  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5094  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5095  147A  082E               	movf	?___flmul+3,w
  5096  147B  00C8               	movwf	?_fround+3
  5097  147C  082D               	movf	?___flmul+2,w
  5098  147D  00C7               	movwf	?_fround+2
  5099  147E  082C               	movf	?___flmul+1,w
  5100  147F  00C6               	movwf	?_fround+1
  5101  1480  082B               	movf	?___flmul,w
  5102  1481  00C5               	movwf	?_fround
  5103  1482  2D77               	goto	l192
  5104  1483                     l2554:
  5105  1483  300B               	movlw	11
  5106  1484  0258               	subwf	fround@prec,w
  5107  1485  1C03               	skipc
  5108  1486  2C88               	goto	u3891
  5109  1487  2C89               	goto	u3890
  5110  1488                     u3891:
  5111  1488  2D34               	goto	l2560
  5112  1489                     u3890:
  5113  1489                     l2556:
  5114                           
  5115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5116  1489  303F               	movlw	63
  5117  148A  00AE               	movwf	___flmul@b+3
  5118  148B  3000               	movlw	0
  5119  148C  00AD               	movwf	___flmul@b+2
  5120  148D  3000               	movlw	0
  5121  148E  00AC               	movwf	___flmul@b+1
  5122  148F  3000               	movlw	0
  5123  1490  00AB               	movwf	___flmul@b
  5124  1491  300A               	movlw	10
  5125  1492  00A0               	movwf	___lwdiv@divisor
  5126  1493  3000               	movlw	0
  5127  1494  00A1               	movwf	___lwdiv@divisor+1
  5128  1495  0858               	movf	fround@prec,w
  5129  1496  00C9               	movwf	??_fround
  5130  1497  01CA               	clrf	??_fround+1
  5131  1498  0849               	movf	??_fround,w
  5132  1499  00A2               	movwf	___lwdiv@dividend
  5133  149A  084A               	movf	??_fround+1,w
  5134  149B  00A3               	movwf	___lwdiv@dividend+1
  5135  149C  160A  158A  2493  160A  118A  	fcall	___lwdiv
  5136  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  5137  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  5138  14A3  0820               	movf	?___lwdiv,w
  5139  14A4  00CB               	movwf	??_fround+2
  5140  14A5  3001               	movlw	1
  5141  14A6                     u3905:
  5142  14A6  1003               	clrc
  5143  14A7  0DCB               	rlf	??_fround+2,f
  5144  14A8  3EFF               	addlw	-1
  5145  14A9  1D03               	skipz
  5146  14AA  2CA6               	goto	u3905
  5147  14AB  1003               	clrc
  5148  14AC  0D4B               	rlf	??_fround+2,w
  5149  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5150  14AE  0084               	movwf	4
  5151  14AF  160A  118A  200A  160A  118A  	fcall	stringdir
  5152  14B4  00CC               	movwf	??_fround+3
  5153  14B5  160A  118A  200A  160A  118A  	fcall	stringdir
  5154  14BA  00CD               	movwf	??_fround+4
  5155  14BB  160A  118A  200A  160A  118A  	fcall	stringdir
  5156  14C0  00CE               	movwf	??_fround+5
  5157  14C1  160A  118A  200A  160A  118A  	fcall	stringdir
  5158  14C6  00CF               	movwf	??_fround+6
  5159  14C7  084F               	movf	??_fround+6,w
  5160  14C8  00B2               	movwf	___flmul@a+3
  5161  14C9  084E               	movf	??_fround+5,w
  5162  14CA  00B1               	movwf	___flmul@a+2
  5163  14CB  084D               	movf	??_fround+4,w
  5164  14CC  00B0               	movwf	___flmul@a+1
  5165  14CD  084C               	movf	??_fround+3,w
  5166  14CE  00AF               	movwf	___flmul@a
  5167  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  5168  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5169  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5170  14D6  082E               	movf	?___flmul+3,w
  5171  14D7  00D7               	movwf	_fround$986+3
  5172  14D8  082D               	movf	?___flmul+2,w
  5173  14D9  00D6               	movwf	_fround$986+2
  5174  14DA  082C               	movf	?___flmul+1,w
  5175  14DB  00D5               	movwf	_fround$986+1
  5176  14DC  082B               	movf	?___flmul,w
  5177  14DD  00D4               	movwf	_fround$986
  5178                           
  5179                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5180  14DE  300A               	movlw	10
  5181  14DF  00F4               	movwf	___lwmod@divisor
  5182  14E0  3000               	movlw	0
  5183  14E1  00F5               	movwf	___lwmod@divisor+1
  5184  14E2  0858               	movf	fround@prec,w
  5185  14E3  00C9               	movwf	??_fround
  5186  14E4  01CA               	clrf	??_fround+1
  5187  14E5  0849               	movf	??_fround,w
  5188  14E6  00F6               	movwf	___lwmod@dividend
  5189  14E7  084A               	movf	??_fround+1,w
  5190  14E8  00F7               	movwf	___lwmod@dividend+1
  5191  14E9  120A  158A  2005  160A  118A  	fcall	___lwmod
  5192  14EE  0874               	movf	?___lwmod,w
  5193  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5194  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5195  14F1  00CB               	movwf	??_fround+2
  5196  14F2  3001               	movlw	1
  5197  14F3                     u3915:
  5198  14F3  1003               	clrc
  5199  14F4  0DCB               	rlf	??_fround+2,f
  5200  14F5  3EFF               	addlw	-1
  5201  14F6  1D03               	skipz
  5202  14F7  2CF3               	goto	u3915
  5203  14F8  1003               	clrc
  5204  14F9  0D4B               	rlf	??_fround+2,w
  5205  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5206  14FB  0084               	movwf	4
  5207  14FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5208  1501  00CC               	movwf	??_fround+3
  5209  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  5210  1507  00CD               	movwf	??_fround+4
  5211  1508  160A  118A  200A  160A  118A  	fcall	stringdir
  5212  150D  00CE               	movwf	??_fround+5
  5213  150E  160A  118A  200A  160A  118A  	fcall	stringdir
  5214  1513  00CF               	movwf	??_fround+6
  5215  1514  084F               	movf	??_fround+6,w
  5216  1515  00AE               	movwf	___flmul@b+3
  5217  1516  084E               	movf	??_fround+5,w
  5218  1517  00AD               	movwf	___flmul@b+2
  5219  1518  084D               	movf	??_fround+4,w
  5220  1519  00AC               	movwf	___flmul@b+1
  5221  151A  084C               	movf	??_fround+3,w
  5222  151B  00AB               	movwf	___flmul@b
  5223  151C  0857               	movf	_fround$986+3,w
  5224  151D  00B2               	movwf	___flmul@a+3
  5225  151E  0856               	movf	_fround$986+2,w
  5226  151F  00B1               	movwf	___flmul@a+2
  5227  1520  0855               	movf	_fround$986+1,w
  5228  1521  00B0               	movwf	___flmul@a+1
  5229  1522  0854               	movf	_fround$986,w
  5230  1523  00AF               	movwf	___flmul@a
  5231  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  5232  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5233  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5234  152B  082E               	movf	?___flmul+3,w
  5235  152C  00C8               	movwf	?_fround+3
  5236  152D  082D               	movf	?___flmul+2,w
  5237  152E  00C7               	movwf	?_fround+2
  5238  152F  082C               	movf	?___flmul+1,w
  5239  1530  00C6               	movwf	?_fround+1
  5240  1531  082B               	movf	?___flmul,w
  5241  1532  00C5               	movwf	?_fround
  5242  1533  2D77               	goto	l192
  5243  1534                     l2560:
  5244                           
  5245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5246  1534  303F               	movlw	63
  5247  1535  00AE               	movwf	___flmul@b+3
  5248  1536  3000               	movlw	0
  5249  1537  00AD               	movwf	___flmul@b+2
  5250  1538  3000               	movlw	0
  5251  1539  00AC               	movwf	___flmul@b+1
  5252  153A  3000               	movlw	0
  5253  153B  00AB               	movwf	___flmul@b
  5254  153C  0858               	movf	fround@prec,w
  5255  153D  00C9               	movwf	??_fround
  5256  153E  3001               	movlw	1
  5257  153F                     u3925:
  5258  153F  1003               	clrc
  5259  1540  0DC9               	rlf	??_fround,f
  5260  1541  3EFF               	addlw	-1
  5261  1542  1D03               	skipz
  5262  1543  2D3F               	goto	u3925
  5263  1544  1003               	clrc
  5264  1545  0D49               	rlf	??_fround,w
  5265  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5266  1547  0084               	movwf	4
  5267  1548  160A  118A  200A  160A  118A  	fcall	stringdir
  5268  154D  00CA               	movwf	??_fround+1
  5269  154E  160A  118A  200A  160A  118A  	fcall	stringdir
  5270  1553  00CB               	movwf	??_fround+2
  5271  1554  160A  118A  200A  160A  118A  	fcall	stringdir
  5272  1559  00CC               	movwf	??_fround+3
  5273  155A  160A  118A  200A  160A  118A  	fcall	stringdir
  5274  155F  00CD               	movwf	??_fround+4
  5275  1560  084D               	movf	??_fround+4,w
  5276  1561  00B2               	movwf	___flmul@a+3
  5277  1562  084C               	movf	??_fround+3,w
  5278  1563  00B1               	movwf	___flmul@a+2
  5279  1564  084B               	movf	??_fround+2,w
  5280  1565  00B0               	movwf	___flmul@a+1
  5281  1566  084A               	movf	??_fround+1,w
  5282  1567  00AF               	movwf	___flmul@a
  5283  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  5284  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5285  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5286  156F  082E               	movf	?___flmul+3,w
  5287  1570  00C8               	movwf	?_fround+3
  5288  1571  082D               	movf	?___flmul+2,w
  5289  1572  00C7               	movwf	?_fround+2
  5290  1573  082C               	movf	?___flmul+1,w
  5291  1574  00C6               	movwf	?_fround+1
  5292  1575  082B               	movf	?___flmul,w
  5293  1576  00C5               	movwf	?_fround
  5294  1577                     l192:
  5295  1577  0008               	return
  5296  1578                     __end_of_fround:
  5297                           
  5298                           	psect	text8
  5299  0805                     __ptext8:	
  5300 ;; *************** function ___lwmod *****************
  5301 ;; Defined at:
  5302 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  divisor         2    4[COMMON] unsigned int 
  5305 ;;  dividend        2    6[COMMON] unsigned int 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  counter         1    9[COMMON] unsigned char 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  2    4[COMMON] unsigned int 
  5310 ;; Registers used:
  5311 ;;		wreg, status,2, status,0
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5317 ;;      Params:         4       0       0       0       0
  5318 ;;      Locals:         1       0       0       0       0
  5319 ;;      Temps:          1       0       0       0       0
  5320 ;;      Totals:         6       0       0       0       0
  5321 ;;Total ram usage:        6 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:    1
  5324 ;; This function calls:
  5325 ;;		Nothing
  5326 ;; This function is called by:
  5327 ;;		_fround
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           
  5332                           ;psect for function ___lwmod
  5333  0805                     ___lwmod:
  5334  0805                     l2174:	
  5335                           ;incstack = 0
  5336                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5337                           
  5338  0805  0874               	movf	___lwmod@divisor,w
  5339  0806  0475               	iorwf	___lwmod@divisor+1,w
  5340  0807  1903               	btfsc	3,2
  5341  0808  280A               	goto	u2961
  5342  0809  280B               	goto	u2960
  5343  080A                     u2961:
  5344  080A  283A               	goto	l2192
  5345  080B                     u2960:
  5346  080B                     l2176:
  5347  080B  01F9               	clrf	___lwmod@counter
  5348  080C  0AF9               	incf	___lwmod@counter,f
  5349  080D  2819               	goto	l2182
  5350  080E                     l2178:
  5351  080E  3001               	movlw	1
  5352  080F                     u2975:
  5353  080F  1003               	clrc
  5354  0810  0DF4               	rlf	___lwmod@divisor,f
  5355  0811  0DF5               	rlf	___lwmod@divisor+1,f
  5356  0812  3EFF               	addlw	-1
  5357  0813  1D03               	skipz
  5358  0814  280F               	goto	u2975
  5359  0815                     l2180:
  5360  0815  3001               	movlw	1
  5361  0816  00F8               	movwf	??___lwmod
  5362  0817  0878               	movf	??___lwmod,w
  5363  0818  07F9               	addwf	___lwmod@counter,f
  5364  0819                     l2182:
  5365  0819  1FF5               	btfss	___lwmod@divisor+1,7
  5366  081A  281C               	goto	u2981
  5367  081B  281D               	goto	u2980
  5368  081C                     u2981:
  5369  081C  280E               	goto	l2178
  5370  081D                     u2980:
  5371  081D                     l2184:
  5372  081D  0875               	movf	___lwmod@divisor+1,w
  5373  081E  0277               	subwf	___lwmod@dividend+1,w
  5374  081F  1D03               	skipz
  5375  0820  2823               	goto	u2995
  5376  0821  0874               	movf	___lwmod@divisor,w
  5377  0822  0276               	subwf	___lwmod@dividend,w
  5378  0823                     u2995:
  5379  0823  1C03               	skipc
  5380  0824  2826               	goto	u2991
  5381  0825  2827               	goto	u2990
  5382  0826                     u2991:
  5383  0826  282D               	goto	l2188
  5384  0827                     u2990:
  5385  0827                     l2186:
  5386  0827  0874               	movf	___lwmod@divisor,w
  5387  0828  02F6               	subwf	___lwmod@dividend,f
  5388  0829  0875               	movf	___lwmod@divisor+1,w
  5389  082A  1C03               	skipc
  5390  082B  03F7               	decf	___lwmod@dividend+1,f
  5391  082C  02F7               	subwf	___lwmod@dividend+1,f
  5392  082D                     l2188:
  5393  082D  3001               	movlw	1
  5394  082E                     u3005:
  5395  082E  1003               	clrc
  5396  082F  0CF5               	rrf	___lwmod@divisor+1,f
  5397  0830  0CF4               	rrf	___lwmod@divisor,f
  5398  0831  3EFF               	addlw	-1
  5399  0832  1D03               	skipz
  5400  0833  282E               	goto	u3005
  5401  0834                     l2190:
  5402  0834  3001               	movlw	1
  5403  0835  02F9               	subwf	___lwmod@counter,f
  5404  0836  1D03               	btfss	3,2
  5405  0837  2839               	goto	u3011
  5406  0838  283A               	goto	u3010
  5407  0839                     u3011:
  5408  0839  281D               	goto	l2184
  5409  083A                     u3010:
  5410  083A                     l2192:
  5411  083A  0877               	movf	___lwmod@dividend+1,w
  5412  083B  00F5               	movwf	?___lwmod+1
  5413  083C  0876               	movf	___lwmod@dividend,w
  5414  083D  00F4               	movwf	?___lwmod
  5415  083E                     l585:
  5416  083E  0008               	return
  5417  083F                     __end_of___lwmod:
  5418                           
  5419                           	psect	text9
  5420  1C93                     __ptext9:	
  5421 ;; *************** function ___lwdiv *****************
  5422 ;; Defined at:
  5423 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;  divisor         2    0[BANK0 ] unsigned int 
  5426 ;;  dividend        2    2[BANK0 ] unsigned int 
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;  quotient        2    5[BANK0 ] unsigned int 
  5429 ;;  counter         1    7[BANK0 ] unsigned char 
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  2    0[BANK0 ] unsigned int 
  5432 ;; Registers used:
  5433 ;;		wreg, status,2, status,0
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5439 ;;      Params:         0       4       0       0       0
  5440 ;;      Locals:         0       3       0       0       0
  5441 ;;      Temps:          0       1       0       0       0
  5442 ;;      Totals:         0       8       0       0       0
  5443 ;;Total ram usage:        8 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:    1
  5446 ;; This function calls:
  5447 ;;		Nothing
  5448 ;; This function is called by:
  5449 ;;		_fround
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           
  5454                           ;psect for function ___lwdiv
  5455  1C93                     ___lwdiv:
  5456  1C93                     l2148:	
  5457                           ;incstack = 0
  5458                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5459                           
  5460  1C93  1283               	bcf	3,5	;RP0=0, select bank0
  5461  1C94  1303               	bcf	3,6	;RP1=0, select bank0
  5462  1C95  01A5               	clrf	___lwdiv@quotient
  5463  1C96  01A6               	clrf	___lwdiv@quotient+1
  5464  1C97                     l2150:
  5465  1C97  0820               	movf	___lwdiv@divisor,w
  5466  1C98  0421               	iorwf	___lwdiv@divisor+1,w
  5467  1C99  1903               	btfsc	3,2
  5468  1C9A  2C9C               	goto	u2891
  5469  1C9B  2C9D               	goto	u2890
  5470  1C9C                     u2891:
  5471  1C9C  2CD4               	goto	l2170
  5472  1C9D                     u2890:
  5473  1C9D                     l2152:
  5474  1C9D  01A7               	clrf	___lwdiv@counter
  5475  1C9E  0AA7               	incf	___lwdiv@counter,f
  5476  1C9F  2CAB               	goto	l2158
  5477  1CA0                     l2154:
  5478  1CA0  3001               	movlw	1
  5479  1CA1                     u2905:
  5480  1CA1  1003               	clrc
  5481  1CA2  0DA0               	rlf	___lwdiv@divisor,f
  5482  1CA3  0DA1               	rlf	___lwdiv@divisor+1,f
  5483  1CA4  3EFF               	addlw	-1
  5484  1CA5  1D03               	skipz
  5485  1CA6  2CA1               	goto	u2905
  5486  1CA7                     l2156:
  5487  1CA7  3001               	movlw	1
  5488  1CA8  00A4               	movwf	??___lwdiv
  5489  1CA9  0824               	movf	??___lwdiv,w
  5490  1CAA  07A7               	addwf	___lwdiv@counter,f
  5491  1CAB                     l2158:
  5492  1CAB  1FA1               	btfss	___lwdiv@divisor+1,7
  5493  1CAC  2CAE               	goto	u2911
  5494  1CAD  2CAF               	goto	u2910
  5495  1CAE                     u2911:
  5496  1CAE  2CA0               	goto	l2154
  5497  1CAF                     u2910:
  5498  1CAF                     l2160:
  5499  1CAF  3001               	movlw	1
  5500  1CB0                     u2925:
  5501  1CB0  1003               	clrc
  5502  1CB1  0DA5               	rlf	___lwdiv@quotient,f
  5503  1CB2  0DA6               	rlf	___lwdiv@quotient+1,f
  5504  1CB3  3EFF               	addlw	-1
  5505  1CB4  1D03               	skipz
  5506  1CB5  2CB0               	goto	u2925
  5507  1CB6  0821               	movf	___lwdiv@divisor+1,w
  5508  1CB7  0223               	subwf	___lwdiv@dividend+1,w
  5509  1CB8  1D03               	skipz
  5510  1CB9  2CBC               	goto	u2935
  5511  1CBA  0820               	movf	___lwdiv@divisor,w
  5512  1CBB  0222               	subwf	___lwdiv@dividend,w
  5513  1CBC                     u2935:
  5514  1CBC  1C03               	skipc
  5515  1CBD  2CBF               	goto	u2931
  5516  1CBE  2CC0               	goto	u2930
  5517  1CBF                     u2931:
  5518  1CBF  2CC7               	goto	l2166
  5519  1CC0                     u2930:
  5520  1CC0                     l2162:
  5521  1CC0  0820               	movf	___lwdiv@divisor,w
  5522  1CC1  02A2               	subwf	___lwdiv@dividend,f
  5523  1CC2  0821               	movf	___lwdiv@divisor+1,w
  5524  1CC3  1C03               	skipc
  5525  1CC4  03A3               	decf	___lwdiv@dividend+1,f
  5526  1CC5  02A3               	subwf	___lwdiv@dividend+1,f
  5527  1CC6                     l2164:
  5528  1CC6  1425               	bsf	___lwdiv@quotient,0
  5529  1CC7                     l2166:
  5530  1CC7  3001               	movlw	1
  5531  1CC8                     u2945:
  5532  1CC8  1003               	clrc
  5533  1CC9  0CA1               	rrf	___lwdiv@divisor+1,f
  5534  1CCA  0CA0               	rrf	___lwdiv@divisor,f
  5535  1CCB  3EFF               	addlw	-1
  5536  1CCC  1D03               	skipz
  5537  1CCD  2CC8               	goto	u2945
  5538  1CCE                     l2168:
  5539  1CCE  3001               	movlw	1
  5540  1CCF  02A7               	subwf	___lwdiv@counter,f
  5541  1CD0  1D03               	btfss	3,2
  5542  1CD1  2CD3               	goto	u2951
  5543  1CD2  2CD4               	goto	u2950
  5544  1CD3                     u2951:
  5545  1CD3  2CAF               	goto	l2160
  5546  1CD4                     u2950:
  5547  1CD4                     l2170:
  5548  1CD4  0826               	movf	___lwdiv@quotient+1,w
  5549  1CD5  00A1               	movwf	?___lwdiv+1
  5550  1CD6  0825               	movf	___lwdiv@quotient,w
  5551  1CD7  00A0               	movwf	?___lwdiv
  5552  1CD8                     l575:
  5553  1CD8  0008               	return
  5554  1CD9                     __end_of___lwdiv:
  5555                           
  5556                           	psect	text10
  5557  093C                     __ptext10:	
  5558 ;; *************** function ___flmul *****************
  5559 ;; Defined at:
  5560 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;  b               4   11[BANK0 ] unsigned int 
  5563 ;;  a               4   15[BANK0 ] unsigned int 
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;  prod            4   31[BANK0 ] struct .
  5566 ;;  grs             4   25[BANK0 ] unsigned long 
  5567 ;;  temp            2   35[BANK0 ] struct .
  5568 ;;  bexp            1   30[BANK0 ] unsigned char 
  5569 ;;  aexp            1   29[BANK0 ] unsigned char 
  5570 ;;  sign            1   24[BANK0 ] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  4   11[BANK0 ] unsigned char 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5580 ;;      Params:         0       8       0       0       0
  5581 ;;      Locals:         0      13       0       0       0
  5582 ;;      Temps:          0       5       0       0       0
  5583 ;;      Totals:         0      26       0       0       0
  5584 ;;Total ram usage:       26 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    2
  5587 ;; This function calls:
  5588 ;;		__Umul8_16
  5589 ;; This function is called by:
  5590 ;;		_fround
  5591 ;;		_scale
  5592 ;;		_sprintf
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           
  5597                           ;psect for function ___flmul
  5598  093C                     ___flmul:
  5599  093C                     l2390:	
  5600                           ;incstack = 0
  5601                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5602                           
  5603  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5604  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5605  093E  082E               	movf	___flmul@b+3,w
  5606  093F  3980               	andlw	128
  5607  0940  00B3               	movwf	??___flmul
  5608  0941  0833               	movf	??___flmul,w
  5609  0942  00B8               	movwf	___flmul@sign
  5610  0943                     l2392:
  5611  0943  082E               	movf	___flmul@b+3,w
  5612  0944  00B3               	movwf	??___flmul
  5613  0945  0733               	addwf	??___flmul,w
  5614  0946  00B4               	movwf	??___flmul+1
  5615  0947  0834               	movf	??___flmul+1,w
  5616  0948  00BE               	movwf	___flmul@bexp
  5617  0949                     l2394:
  5618  0949  1FAD               	btfss	___flmul@b+2,7
  5619  094A  294C               	goto	u3481
  5620  094B  294D               	goto	u3480
  5621  094C                     u3481:
  5622  094C  294E               	goto	l2398
  5623  094D                     u3480:
  5624  094D                     l2396:
  5625  094D  143E               	bsf	___flmul@bexp,0
  5626  094E                     l2398:
  5627  094E  083E               	movf	___flmul@bexp,w
  5628  094F  1903               	btfsc	3,2
  5629  0950  2952               	goto	u3491
  5630  0951  2953               	goto	u3490
  5631  0952                     u3491:
  5632  0952  2962               	goto	l2406
  5633  0953                     u3490:
  5634  0953                     l2400:
  5635  0953  0A3E               	incf	___flmul@bexp,w
  5636  0954  1D03               	btfss	3,2
  5637  0955  2957               	goto	u3501
  5638  0956  2958               	goto	u3500
  5639  0957                     u3501:
  5640  0957  2960               	goto	l2404
  5641  0958                     u3500:
  5642  0958                     l2402:
  5643  0958  3000               	movlw	0
  5644  0959  00AE               	movwf	___flmul@b+3
  5645  095A  3000               	movlw	0
  5646  095B  00AD               	movwf	___flmul@b+2
  5647  095C  3000               	movlw	0
  5648  095D  00AC               	movwf	___flmul@b+1
  5649  095E  3000               	movlw	0
  5650  095F  00AB               	movwf	___flmul@b
  5651  0960                     l2404:
  5652  0960  17AD               	bsf	___flmul@b+2,7
  5653  0961  296A               	goto	l2408
  5654  0962                     l2406:
  5655  0962  3000               	movlw	0
  5656  0963  00AE               	movwf	___flmul@b+3
  5657  0964  3000               	movlw	0
  5658  0965  00AD               	movwf	___flmul@b+2
  5659  0966  3000               	movlw	0
  5660  0967  00AC               	movwf	___flmul@b+1
  5661  0968  3000               	movlw	0
  5662  0969  00AB               	movwf	___flmul@b
  5663  096A                     l2408:
  5664  096A  0832               	movf	___flmul@a+3,w
  5665  096B  3980               	andlw	128
  5666  096C  00B3               	movwf	??___flmul
  5667  096D  0833               	movf	??___flmul,w
  5668  096E  06B8               	xorwf	___flmul@sign,f
  5669  096F                     l2410:
  5670  096F  0832               	movf	___flmul@a+3,w
  5671  0970  00B3               	movwf	??___flmul
  5672  0971  0733               	addwf	??___flmul,w
  5673  0972  00B4               	movwf	??___flmul+1
  5674  0973  0834               	movf	??___flmul+1,w
  5675  0974  00BD               	movwf	___flmul@aexp
  5676  0975                     l2412:
  5677  0975  1FB1               	btfss	___flmul@a+2,7
  5678  0976  2978               	goto	u3511
  5679  0977  2979               	goto	u3510
  5680  0978                     u3511:
  5681  0978  297A               	goto	l2416
  5682  0979                     u3510:
  5683  0979                     l2414:
  5684  0979  143D               	bsf	___flmul@aexp,0
  5685  097A                     l2416:
  5686  097A  083D               	movf	___flmul@aexp,w
  5687  097B  1903               	btfsc	3,2
  5688  097C  297E               	goto	u3521
  5689  097D  297F               	goto	u3520
  5690  097E                     u3521:
  5691  097E  298E               	goto	l2424
  5692  097F                     u3520:
  5693  097F                     l2418:
  5694  097F  0A3D               	incf	___flmul@aexp,w
  5695  0980  1D03               	btfss	3,2
  5696  0981  2983               	goto	u3531
  5697  0982  2984               	goto	u3530
  5698  0983                     u3531:
  5699  0983  298C               	goto	l2422
  5700  0984                     u3530:
  5701  0984                     l2420:
  5702  0984  3000               	movlw	0
  5703  0985  00B2               	movwf	___flmul@a+3
  5704  0986  3000               	movlw	0
  5705  0987  00B1               	movwf	___flmul@a+2
  5706  0988  3000               	movlw	0
  5707  0989  00B0               	movwf	___flmul@a+1
  5708  098A  3000               	movlw	0
  5709  098B  00AF               	movwf	___flmul@a
  5710  098C                     l2422:
  5711  098C  17B1               	bsf	___flmul@a+2,7
  5712  098D  2996               	goto	l2426
  5713  098E                     l2424:
  5714  098E  3000               	movlw	0
  5715  098F  00B2               	movwf	___flmul@a+3
  5716  0990  3000               	movlw	0
  5717  0991  00B1               	movwf	___flmul@a+2
  5718  0992  3000               	movlw	0
  5719  0993  00B0               	movwf	___flmul@a+1
  5720  0994  3000               	movlw	0
  5721  0995  00AF               	movwf	___flmul@a
  5722  0996                     l2426:
  5723  0996  083D               	movf	___flmul@aexp,w
  5724  0997  1903               	btfsc	3,2
  5725  0998  299A               	goto	u3541
  5726  0999  299B               	goto	u3540
  5727  099A                     u3541:
  5728  099A  29A0               	goto	l2430
  5729  099B                     u3540:
  5730  099B                     l2428:
  5731  099B  083E               	movf	___flmul@bexp,w
  5732  099C  1D03               	btfss	3,2
  5733  099D  299F               	goto	u3551
  5734  099E  29A0               	goto	u3550
  5735  099F                     u3551:
  5736  099F  29A9               	goto	l2434
  5737  09A0                     u3550:
  5738  09A0                     l2430:
  5739  09A0  3000               	movlw	0
  5740  09A1  00AE               	movwf	?___flmul+3
  5741  09A2  3000               	movlw	0
  5742  09A3  00AD               	movwf	?___flmul+2
  5743  09A4  3000               	movlw	0
  5744  09A5  00AC               	movwf	?___flmul+1
  5745  09A6  3000               	movlw	0
  5746  09A7  00AB               	movwf	?___flmul
  5747  09A8  2C9C               	goto	l692
  5748  09A9                     l2434:
  5749  09A9  082B               	movf	___flmul@b,w
  5750  09AA  00B3               	movwf	??___flmul
  5751  09AB  0833               	movf	??___flmul,w
  5752  09AC  00F4               	movwf	__Umul8_16@multiplicand
  5753  09AD  0831               	movf	___flmul@a+2,w
  5754  09AE  160A  158A  23F0  120A  158A  	fcall	__Umul8_16
  5755  09B3  0875               	movf	?__Umul8_16+1,w
  5756  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  5757  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  5758  09B6  00C4               	movwf	___flmul@temp+1
  5759  09B7  0874               	movf	?__Umul8_16,w
  5760  09B8  00C3               	movwf	___flmul@temp
  5761  09B9                     l2436:
  5762  09B9  0843               	movf	___flmul@temp,w
  5763  09BA  00B3               	movwf	??___flmul
  5764  09BB  01B4               	clrf	??___flmul+1
  5765  09BC  01B5               	clrf	??___flmul+2
  5766  09BD  01B6               	clrf	??___flmul+3
  5767  09BE  0836               	movf	??___flmul+3,w
  5768  09BF  00BC               	movwf	___flmul@grs+3
  5769  09C0  0835               	movf	??___flmul+2,w
  5770  09C1  00BB               	movwf	___flmul@grs+2
  5771  09C2  0834               	movf	??___flmul+1,w
  5772  09C3  00BA               	movwf	___flmul@grs+1
  5773  09C4  0833               	movf	??___flmul,w
  5774  09C5  00B9               	movwf	___flmul@grs
  5775  09C6                     l2438:
  5776  09C6  0844               	movf	___flmul@temp+1,w
  5777  09C7  00B3               	movwf	??___flmul
  5778  09C8  01B4               	clrf	??___flmul+1
  5779  09C9  01B5               	clrf	??___flmul+2
  5780  09CA  01B6               	clrf	??___flmul+3
  5781  09CB  0836               	movf	??___flmul+3,w
  5782  09CC  00C2               	movwf	___flmul@prod+3
  5783  09CD  0835               	movf	??___flmul+2,w
  5784  09CE  00C1               	movwf	___flmul@prod+2
  5785  09CF  0834               	movf	??___flmul+1,w
  5786  09D0  00C0               	movwf	___flmul@prod+1
  5787  09D1  0833               	movf	??___flmul,w
  5788  09D2  00BF               	movwf	___flmul@prod
  5789  09D3  082C               	movf	___flmul@b+1,w
  5790  09D4  00B3               	movwf	??___flmul
  5791  09D5  0833               	movf	??___flmul,w
  5792  09D6  00F4               	movwf	__Umul8_16@multiplicand
  5793  09D7  0830               	movf	___flmul@a+1,w
  5794  09D8  160A  158A  23F0  120A  158A  	fcall	__Umul8_16
  5795  09DD  0875               	movf	?__Umul8_16+1,w
  5796  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  5797  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  5798  09E0  00C4               	movwf	___flmul@temp+1
  5799  09E1  0874               	movf	?__Umul8_16,w
  5800  09E2  00C3               	movwf	___flmul@temp
  5801  09E3                     l2440:
  5802  09E3  0843               	movf	___flmul@temp,w
  5803  09E4  00B3               	movwf	??___flmul
  5804  09E5  01B4               	clrf	??___flmul+1
  5805  09E6  01B5               	clrf	??___flmul+2
  5806  09E7  01B6               	clrf	??___flmul+3
  5807  09E8  0833               	movf	??___flmul,w
  5808  09E9  07B9               	addwf	___flmul@grs,f
  5809  09EA  0834               	movf	??___flmul+1,w
  5810  09EB  1103               	clrz
  5811  09EC  1803               	skipnc
  5812  09ED  3E01               	addlw	1
  5813  09EE  1903               	skipnz
  5814  09EF  29F1               	goto	u3561
  5815  09F0  07BA               	addwf	___flmul@grs+1,f
  5816  09F1                     u3561:
  5817  09F1  0835               	movf	??___flmul+2,w
  5818  09F2  1103               	clrz
  5819  09F3  1803               	skipnc
  5820  09F4  3E01               	addlw	1
  5821  09F5  1903               	skipnz
  5822  09F6  29F8               	goto	u3562
  5823  09F7  07BB               	addwf	___flmul@grs+2,f
  5824  09F8                     u3562:
  5825  09F8  0836               	movf	??___flmul+3,w
  5826  09F9  1103               	clrz
  5827  09FA  1803               	skipnc
  5828  09FB  3E01               	addlw	1
  5829  09FC  1903               	skipnz
  5830  09FD  29FF               	goto	u3563
  5831  09FE  07BC               	addwf	___flmul@grs+3,f
  5832  09FF                     u3563:
  5833  09FF                     l2442:
  5834  09FF  0844               	movf	___flmul@temp+1,w
  5835  0A00  00B3               	movwf	??___flmul
  5836  0A01  01B4               	clrf	??___flmul+1
  5837  0A02  01B5               	clrf	??___flmul+2
  5838  0A03  01B6               	clrf	??___flmul+3
  5839  0A04  0833               	movf	??___flmul,w
  5840  0A05  07BF               	addwf	___flmul@prod,f
  5841  0A06  0834               	movf	??___flmul+1,w
  5842  0A07  1103               	clrz
  5843  0A08  1803               	skipnc
  5844  0A09  3E01               	addlw	1
  5845  0A0A  1903               	skipnz
  5846  0A0B  2A0D               	goto	u3571
  5847  0A0C  07C0               	addwf	___flmul@prod+1,f
  5848  0A0D                     u3571:
  5849  0A0D  0835               	movf	??___flmul+2,w
  5850  0A0E  1103               	clrz
  5851  0A0F  1803               	skipnc
  5852  0A10  3E01               	addlw	1
  5853  0A11  1903               	skipnz
  5854  0A12  2A14               	goto	u3572
  5855  0A13  07C1               	addwf	___flmul@prod+2,f
  5856  0A14                     u3572:
  5857  0A14  0836               	movf	??___flmul+3,w
  5858  0A15  1103               	clrz
  5859  0A16  1803               	skipnc
  5860  0A17  3E01               	addlw	1
  5861  0A18  1903               	skipnz
  5862  0A19  2A1B               	goto	u3573
  5863  0A1A  07C2               	addwf	___flmul@prod+3,f
  5864  0A1B                     u3573:
  5865  0A1B  082D               	movf	___flmul@b+2,w
  5866  0A1C  00B3               	movwf	??___flmul
  5867  0A1D  0833               	movf	??___flmul,w
  5868  0A1E  00F4               	movwf	__Umul8_16@multiplicand
  5869  0A1F  082F               	movf	___flmul@a,w
  5870  0A20  160A  158A  23F0  120A  158A  	fcall	__Umul8_16
  5871  0A25  0875               	movf	?__Umul8_16+1,w
  5872  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  5873  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  5874  0A28  00C4               	movwf	___flmul@temp+1
  5875  0A29  0874               	movf	?__Umul8_16,w
  5876  0A2A  00C3               	movwf	___flmul@temp
  5877  0A2B                     l2444:
  5878  0A2B  0843               	movf	___flmul@temp,w
  5879  0A2C  00B3               	movwf	??___flmul
  5880  0A2D  01B4               	clrf	??___flmul+1
  5881  0A2E  01B5               	clrf	??___flmul+2
  5882  0A2F  01B6               	clrf	??___flmul+3
  5883  0A30  0833               	movf	??___flmul,w
  5884  0A31  07B9               	addwf	___flmul@grs,f
  5885  0A32  0834               	movf	??___flmul+1,w
  5886  0A33  1103               	clrz
  5887  0A34  1803               	skipnc
  5888  0A35  3E01               	addlw	1
  5889  0A36  1903               	skipnz
  5890  0A37  2A39               	goto	u3581
  5891  0A38  07BA               	addwf	___flmul@grs+1,f
  5892  0A39                     u3581:
  5893  0A39  0835               	movf	??___flmul+2,w
  5894  0A3A  1103               	clrz
  5895  0A3B  1803               	skipnc
  5896  0A3C  3E01               	addlw	1
  5897  0A3D  1903               	skipnz
  5898  0A3E  2A40               	goto	u3582
  5899  0A3F  07BB               	addwf	___flmul@grs+2,f
  5900  0A40                     u3582:
  5901  0A40  0836               	movf	??___flmul+3,w
  5902  0A41  1103               	clrz
  5903  0A42  1803               	skipnc
  5904  0A43  3E01               	addlw	1
  5905  0A44  1903               	skipnz
  5906  0A45  2A47               	goto	u3583
  5907  0A46  07BC               	addwf	___flmul@grs+3,f
  5908  0A47                     u3583:
  5909  0A47                     l2446:
  5910  0A47  0844               	movf	___flmul@temp+1,w
  5911  0A48  00B3               	movwf	??___flmul
  5912  0A49  01B4               	clrf	??___flmul+1
  5913  0A4A  01B5               	clrf	??___flmul+2
  5914  0A4B  01B6               	clrf	??___flmul+3
  5915  0A4C  0833               	movf	??___flmul,w
  5916  0A4D  07BF               	addwf	___flmul@prod,f
  5917  0A4E  0834               	movf	??___flmul+1,w
  5918  0A4F  1103               	clrz
  5919  0A50  1803               	skipnc
  5920  0A51  3E01               	addlw	1
  5921  0A52  1903               	skipnz
  5922  0A53  2A55               	goto	u3591
  5923  0A54  07C0               	addwf	___flmul@prod+1,f
  5924  0A55                     u3591:
  5925  0A55  0835               	movf	??___flmul+2,w
  5926  0A56  1103               	clrz
  5927  0A57  1803               	skipnc
  5928  0A58  3E01               	addlw	1
  5929  0A59  1903               	skipnz
  5930  0A5A  2A5C               	goto	u3592
  5931  0A5B  07C1               	addwf	___flmul@prod+2,f
  5932  0A5C                     u3592:
  5933  0A5C  0836               	movf	??___flmul+3,w
  5934  0A5D  1103               	clrz
  5935  0A5E  1803               	skipnc
  5936  0A5F  3E01               	addlw	1
  5937  0A60  1903               	skipnz
  5938  0A61  2A63               	goto	u3593
  5939  0A62  07C2               	addwf	___flmul@prod+3,f
  5940  0A63                     u3593:
  5941  0A63                     l2448:
  5942  0A63  3008               	movlw	8
  5943  0A64  00B3               	movwf	??___flmul
  5944  0A65                     u3605:
  5945  0A65  1003               	clrc
  5946  0A66  0DB9               	rlf	___flmul@grs,f
  5947  0A67  0DBA               	rlf	___flmul@grs+1,f
  5948  0A68  0DBB               	rlf	___flmul@grs+2,f
  5949  0A69  0DBC               	rlf	___flmul@grs+3,f
  5950  0A6A  0BB3               	decfsz	??___flmul,f
  5951  0A6B  2A65               	goto	u3605
  5952  0A6C                     l2450:
  5953  0A6C  082C               	movf	___flmul@b+1,w
  5954  0A6D  00B3               	movwf	??___flmul
  5955  0A6E  0833               	movf	??___flmul,w
  5956  0A6F  00F4               	movwf	__Umul8_16@multiplicand
  5957  0A70  082F               	movf	___flmul@a,w
  5958  0A71  160A  158A  23F0  120A  158A  	fcall	__Umul8_16
  5959  0A76  0875               	movf	?__Umul8_16+1,w
  5960  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  5961  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  5962  0A79  00C4               	movwf	___flmul@temp+1
  5963  0A7A  0874               	movf	?__Umul8_16,w
  5964  0A7B  00C3               	movwf	___flmul@temp
  5965  0A7C                     l2452:
  5966  0A7C  0843               	movf	___flmul@temp,w
  5967  0A7D  00B3               	movwf	??___flmul
  5968  0A7E  0844               	movf	___flmul@temp+1,w
  5969  0A7F  00B4               	movwf	??___flmul+1
  5970  0A80  01B5               	clrf	??___flmul+2
  5971  0A81  01B6               	clrf	??___flmul+3
  5972  0A82  0833               	movf	??___flmul,w
  5973  0A83  07B9               	addwf	___flmul@grs,f
  5974  0A84  0834               	movf	??___flmul+1,w
  5975  0A85  1103               	clrz
  5976  0A86  1803               	skipnc
  5977  0A87  3E01               	addlw	1
  5978  0A88  1903               	skipnz
  5979  0A89  2A8B               	goto	u3611
  5980  0A8A  07BA               	addwf	___flmul@grs+1,f
  5981  0A8B                     u3611:
  5982  0A8B  0835               	movf	??___flmul+2,w
  5983  0A8C  1103               	clrz
  5984  0A8D  1803               	skipnc
  5985  0A8E  3E01               	addlw	1
  5986  0A8F  1903               	skipnz
  5987  0A90  2A92               	goto	u3612
  5988  0A91  07BB               	addwf	___flmul@grs+2,f
  5989  0A92                     u3612:
  5990  0A92  0836               	movf	??___flmul+3,w
  5991  0A93  1103               	clrz
  5992  0A94  1803               	skipnc
  5993  0A95  3E01               	addlw	1
  5994  0A96  1903               	skipnz
  5995  0A97  2A99               	goto	u3613
  5996  0A98  07BC               	addwf	___flmul@grs+3,f
  5997  0A99                     u3613:
  5998  0A99                     l2454:
  5999  0A99  082B               	movf	___flmul@b,w
  6000  0A9A  00B3               	movwf	??___flmul
  6001  0A9B  0833               	movf	??___flmul,w
  6002  0A9C  00F4               	movwf	__Umul8_16@multiplicand
  6003  0A9D  0830               	movf	___flmul@a+1,w
  6004  0A9E  160A  158A  23F0  120A  158A  	fcall	__Umul8_16
  6005  0AA3  0875               	movf	?__Umul8_16+1,w
  6006  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  6007  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  6008  0AA6  00C4               	movwf	___flmul@temp+1
  6009  0AA7  0874               	movf	?__Umul8_16,w
  6010  0AA8  00C3               	movwf	___flmul@temp
  6011  0AA9                     l2456:
  6012  0AA9  0843               	movf	___flmul@temp,w
  6013  0AAA  00B3               	movwf	??___flmul
  6014  0AAB  0844               	movf	___flmul@temp+1,w
  6015  0AAC  00B4               	movwf	??___flmul+1
  6016  0AAD  01B5               	clrf	??___flmul+2
  6017  0AAE  01B6               	clrf	??___flmul+3
  6018  0AAF  0833               	movf	??___flmul,w
  6019  0AB0  07B9               	addwf	___flmul@grs,f
  6020  0AB1  0834               	movf	??___flmul+1,w
  6021  0AB2  1103               	clrz
  6022  0AB3  1803               	skipnc
  6023  0AB4  3E01               	addlw	1
  6024  0AB5  1903               	skipnz
  6025  0AB6  2AB8               	goto	u3621
  6026  0AB7  07BA               	addwf	___flmul@grs+1,f
  6027  0AB8                     u3621:
  6028  0AB8  0835               	movf	??___flmul+2,w
  6029  0AB9  1103               	clrz
  6030  0ABA  1803               	skipnc
  6031  0ABB  3E01               	addlw	1
  6032  0ABC  1903               	skipnz
  6033  0ABD  2ABF               	goto	u3622
  6034  0ABE  07BB               	addwf	___flmul@grs+2,f
  6035  0ABF                     u3622:
  6036  0ABF  0836               	movf	??___flmul+3,w
  6037  0AC0  1103               	clrz
  6038  0AC1  1803               	skipnc
  6039  0AC2  3E01               	addlw	1
  6040  0AC3  1903               	skipnz
  6041  0AC4  2AC6               	goto	u3623
  6042  0AC5  07BC               	addwf	___flmul@grs+3,f
  6043  0AC6                     u3623:
  6044  0AC6                     l2458:
  6045  0AC6  3008               	movlw	8
  6046  0AC7  00B3               	movwf	??___flmul
  6047  0AC8                     u3635:
  6048  0AC8  1003               	clrc
  6049  0AC9  0DB9               	rlf	___flmul@grs,f
  6050  0ACA  0DBA               	rlf	___flmul@grs+1,f
  6051  0ACB  0DBB               	rlf	___flmul@grs+2,f
  6052  0ACC  0DBC               	rlf	___flmul@grs+3,f
  6053  0ACD  0BB3               	decfsz	??___flmul,f
  6054  0ACE  2AC8               	goto	u3635
  6055  0ACF  082B               	movf	___flmul@b,w
  6056  0AD0  00B3               	movwf	??___flmul
  6057  0AD1  0833               	movf	??___flmul,w
  6058  0AD2  00F4               	movwf	__Umul8_16@multiplicand
  6059  0AD3  082F               	movf	___flmul@a,w
  6060  0AD4  160A  158A  23F0  120A  158A  	fcall	__Umul8_16
  6061  0AD9  0875               	movf	?__Umul8_16+1,w
  6062  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  6063  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  6064  0ADC  00C4               	movwf	___flmul@temp+1
  6065  0ADD  0874               	movf	?__Umul8_16,w
  6066  0ADE  00C3               	movwf	___flmul@temp
  6067  0ADF                     l2460:
  6068  0ADF  0843               	movf	___flmul@temp,w
  6069  0AE0  00B3               	movwf	??___flmul
  6070  0AE1  0844               	movf	___flmul@temp+1,w
  6071  0AE2  00B4               	movwf	??___flmul+1
  6072  0AE3  01B5               	clrf	??___flmul+2
  6073  0AE4  01B6               	clrf	??___flmul+3
  6074  0AE5  0833               	movf	??___flmul,w
  6075  0AE6  07B9               	addwf	___flmul@grs,f
  6076  0AE7  0834               	movf	??___flmul+1,w
  6077  0AE8  1103               	clrz
  6078  0AE9  1803               	skipnc
  6079  0AEA  3E01               	addlw	1
  6080  0AEB  1903               	skipnz
  6081  0AEC  2AEE               	goto	u3641
  6082  0AED  07BA               	addwf	___flmul@grs+1,f
  6083  0AEE                     u3641:
  6084  0AEE  0835               	movf	??___flmul+2,w
  6085  0AEF  1103               	clrz
  6086  0AF0  1803               	skipnc
  6087  0AF1  3E01               	addlw	1
  6088  0AF2  1903               	skipnz
  6089  0AF3  2AF5               	goto	u3642
  6090  0AF4  07BB               	addwf	___flmul@grs+2,f
  6091  0AF5                     u3642:
  6092  0AF5  0836               	movf	??___flmul+3,w
  6093  0AF6  1103               	clrz
  6094  0AF7  1803               	skipnc
  6095  0AF8  3E01               	addlw	1
  6096  0AF9  1903               	skipnz
  6097  0AFA  2AFC               	goto	u3643
  6098  0AFB  07BC               	addwf	___flmul@grs+3,f
  6099  0AFC                     u3643:
  6100  0AFC                     l2462:
  6101  0AFC  082C               	movf	___flmul@b+1,w
  6102  0AFD  00B3               	movwf	??___flmul
  6103  0AFE  0833               	movf	??___flmul,w
  6104  0AFF  00F4               	movwf	__Umul8_16@multiplicand
  6105  0B00  0831               	movf	___flmul@a+2,w
  6106  0B01  160A  158A  23F0  120A  158A  	fcall	__Umul8_16
  6107  0B06  0875               	movf	?__Umul8_16+1,w
  6108  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  6109  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  6110  0B09  00C4               	movwf	___flmul@temp+1
  6111  0B0A  0874               	movf	?__Umul8_16,w
  6112  0B0B  00C3               	movwf	___flmul@temp
  6113  0B0C  0843               	movf	___flmul@temp,w
  6114  0B0D  00B3               	movwf	??___flmul
  6115  0B0E  0844               	movf	___flmul@temp+1,w
  6116  0B0F  00B4               	movwf	??___flmul+1
  6117  0B10  01B5               	clrf	??___flmul+2
  6118  0B11  01B6               	clrf	??___flmul+3
  6119  0B12  0833               	movf	??___flmul,w
  6120  0B13  07BF               	addwf	___flmul@prod,f
  6121  0B14  0834               	movf	??___flmul+1,w
  6122  0B15  1103               	clrz
  6123  0B16  1803               	skipnc
  6124  0B17  3E01               	addlw	1
  6125  0B18  1903               	skipnz
  6126  0B19  2B1B               	goto	u3651
  6127  0B1A  07C0               	addwf	___flmul@prod+1,f
  6128  0B1B                     u3651:
  6129  0B1B  0835               	movf	??___flmul+2,w
  6130  0B1C  1103               	clrz
  6131  0B1D  1803               	skipnc
  6132  0B1E  3E01               	addlw	1
  6133  0B1F  1903               	skipnz
  6134  0B20  2B22               	goto	u3652
  6135  0B21  07C1               	addwf	___flmul@prod+2,f
  6136  0B22                     u3652:
  6137  0B22  0836               	movf	??___flmul+3,w
  6138  0B23  1103               	clrz
  6139  0B24  1803               	skipnc
  6140  0B25  3E01               	addlw	1
  6141  0B26  1903               	skipnz
  6142  0B27  2B29               	goto	u3653
  6143  0B28  07C2               	addwf	___flmul@prod+3,f
  6144  0B29                     u3653:
  6145  0B29                     l2464:
  6146  0B29  082D               	movf	___flmul@b+2,w
  6147  0B2A  00B3               	movwf	??___flmul
  6148  0B2B  0833               	movf	??___flmul,w
  6149  0B2C  00F4               	movwf	__Umul8_16@multiplicand
  6150  0B2D  0830               	movf	___flmul@a+1,w
  6151  0B2E  160A  158A  23F0  120A  158A  	fcall	__Umul8_16
  6152  0B33  0875               	movf	?__Umul8_16+1,w
  6153  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  6154  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  6155  0B36  00C4               	movwf	___flmul@temp+1
  6156  0B37  0874               	movf	?__Umul8_16,w
  6157  0B38  00C3               	movwf	___flmul@temp
  6158  0B39                     l2466:
  6159  0B39  0843               	movf	___flmul@temp,w
  6160  0B3A  00B3               	movwf	??___flmul
  6161  0B3B  0844               	movf	___flmul@temp+1,w
  6162  0B3C  00B4               	movwf	??___flmul+1
  6163  0B3D  01B5               	clrf	??___flmul+2
  6164  0B3E  01B6               	clrf	??___flmul+3
  6165  0B3F  0833               	movf	??___flmul,w
  6166  0B40  07BF               	addwf	___flmul@prod,f
  6167  0B41  0834               	movf	??___flmul+1,w
  6168  0B42  1103               	clrz
  6169  0B43  1803               	skipnc
  6170  0B44  3E01               	addlw	1
  6171  0B45  1903               	skipnz
  6172  0B46  2B48               	goto	u3661
  6173  0B47  07C0               	addwf	___flmul@prod+1,f
  6174  0B48                     u3661:
  6175  0B48  0835               	movf	??___flmul+2,w
  6176  0B49  1103               	clrz
  6177  0B4A  1803               	skipnc
  6178  0B4B  3E01               	addlw	1
  6179  0B4C  1903               	skipnz
  6180  0B4D  2B4F               	goto	u3662
  6181  0B4E  07C1               	addwf	___flmul@prod+2,f
  6182  0B4F                     u3662:
  6183  0B4F  0836               	movf	??___flmul+3,w
  6184  0B50  1103               	clrz
  6185  0B51  1803               	skipnc
  6186  0B52  3E01               	addlw	1
  6187  0B53  1903               	skipnz
  6188  0B54  2B56               	goto	u3663
  6189  0B55  07C2               	addwf	___flmul@prod+3,f
  6190  0B56                     u3663:
  6191  0B56  082D               	movf	___flmul@b+2,w
  6192  0B57  00B3               	movwf	??___flmul
  6193  0B58  0833               	movf	??___flmul,w
  6194  0B59  00F4               	movwf	__Umul8_16@multiplicand
  6195  0B5A  0831               	movf	___flmul@a+2,w
  6196  0B5B  160A  158A  23F0  120A  158A  	fcall	__Umul8_16
  6197  0B60  0875               	movf	?__Umul8_16+1,w
  6198  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6199  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6200  0B63  00C4               	movwf	___flmul@temp+1
  6201  0B64  0874               	movf	?__Umul8_16,w
  6202  0B65  00C3               	movwf	___flmul@temp
  6203  0B66                     l2468:
  6204  0B66  0843               	movf	___flmul@temp,w
  6205  0B67  00B3               	movwf	??___flmul
  6206  0B68  0844               	movf	___flmul@temp+1,w
  6207  0B69  00B4               	movwf	??___flmul+1
  6208  0B6A  01B5               	clrf	??___flmul+2
  6209  0B6B  01B6               	clrf	??___flmul+3
  6210  0B6C  3008               	movlw	8
  6211  0B6D                     u3675:
  6212  0B6D  1003               	clrc
  6213  0B6E  0DB3               	rlf	??___flmul,f
  6214  0B6F  0DB4               	rlf	??___flmul+1,f
  6215  0B70  0DB5               	rlf	??___flmul+2,f
  6216  0B71  0DB6               	rlf	??___flmul+3,f
  6217  0B72                     u3670:
  6218  0B72  3EFF               	addlw	-1
  6219  0B73  1D03               	skipz
  6220  0B74  2B6D               	goto	u3675
  6221  0B75  0833               	movf	??___flmul,w
  6222  0B76  07BF               	addwf	___flmul@prod,f
  6223  0B77  0834               	movf	??___flmul+1,w
  6224  0B78  1103               	clrz
  6225  0B79  1803               	skipnc
  6226  0B7A  3E01               	addlw	1
  6227  0B7B  1903               	skipnz
  6228  0B7C  2B7E               	goto	u3681
  6229  0B7D  07C0               	addwf	___flmul@prod+1,f
  6230  0B7E                     u3681:
  6231  0B7E  0835               	movf	??___flmul+2,w
  6232  0B7F  1103               	clrz
  6233  0B80  1803               	skipnc
  6234  0B81  3E01               	addlw	1
  6235  0B82  1903               	skipnz
  6236  0B83  2B85               	goto	u3682
  6237  0B84  07C1               	addwf	___flmul@prod+2,f
  6238  0B85                     u3682:
  6239  0B85  0836               	movf	??___flmul+3,w
  6240  0B86  1103               	clrz
  6241  0B87  1803               	skipnc
  6242  0B88  3E01               	addlw	1
  6243  0B89  1903               	skipnz
  6244  0B8A  2B8C               	goto	u3683
  6245  0B8B  07C2               	addwf	___flmul@prod+3,f
  6246  0B8C                     u3683:
  6247  0B8C                     l2470:
  6248  0B8C  0839               	movf	___flmul@grs,w
  6249  0B8D  00B3               	movwf	??___flmul
  6250  0B8E  083A               	movf	___flmul@grs+1,w
  6251  0B8F  00B4               	movwf	??___flmul+1
  6252  0B90  083B               	movf	___flmul@grs+2,w
  6253  0B91  00B5               	movwf	??___flmul+2
  6254  0B92  083C               	movf	___flmul@grs+3,w
  6255  0B93  00B6               	movwf	??___flmul+3
  6256  0B94  3018               	movlw	24
  6257  0B95                     u3695:
  6258  0B95  1003               	clrc
  6259  0B96  0CB6               	rrf	??___flmul+3,f
  6260  0B97  0CB5               	rrf	??___flmul+2,f
  6261  0B98  0CB4               	rrf	??___flmul+1,f
  6262  0B99  0CB3               	rrf	??___flmul,f
  6263  0B9A                     u3690:
  6264  0B9A  3EFF               	addlw	-1
  6265  0B9B  1D03               	skipz
  6266  0B9C  2B95               	goto	u3695
  6267  0B9D  0833               	movf	??___flmul,w
  6268  0B9E  07BF               	addwf	___flmul@prod,f
  6269  0B9F  0834               	movf	??___flmul+1,w
  6270  0BA0  1103               	clrz
  6271  0BA1  1803               	skipnc
  6272  0BA2  3E01               	addlw	1
  6273  0BA3  1903               	skipnz
  6274  0BA4  2BA6               	goto	u3701
  6275  0BA5  07C0               	addwf	___flmul@prod+1,f
  6276  0BA6                     u3701:
  6277  0BA6  0835               	movf	??___flmul+2,w
  6278  0BA7  1103               	clrz
  6279  0BA8  1803               	skipnc
  6280  0BA9  3E01               	addlw	1
  6281  0BAA  1903               	skipnz
  6282  0BAB  2BAD               	goto	u3702
  6283  0BAC  07C1               	addwf	___flmul@prod+2,f
  6284  0BAD                     u3702:
  6285  0BAD  0836               	movf	??___flmul+3,w
  6286  0BAE  1103               	clrz
  6287  0BAF  1803               	skipnc
  6288  0BB0  3E01               	addlw	1
  6289  0BB1  1903               	skipnz
  6290  0BB2  2BB4               	goto	u3703
  6291  0BB3  07C2               	addwf	___flmul@prod+3,f
  6292  0BB4                     u3703:
  6293  0BB4                     l2472:
  6294  0BB4  3008               	movlw	8
  6295  0BB5  00B3               	movwf	??___flmul
  6296  0BB6                     u3715:
  6297  0BB6  1003               	clrc
  6298  0BB7  0DB9               	rlf	___flmul@grs,f
  6299  0BB8  0DBA               	rlf	___flmul@grs+1,f
  6300  0BB9  0DBB               	rlf	___flmul@grs+2,f
  6301  0BBA  0DBC               	rlf	___flmul@grs+3,f
  6302  0BBB  0BB3               	decfsz	??___flmul,f
  6303  0BBC  2BB6               	goto	u3715
  6304  0BBD                     l2474:
  6305  0BBD  083E               	movf	___flmul@bexp,w
  6306  0BBE  073D               	addwf	___flmul@aexp,w
  6307  0BBF  00B3               	movwf	??___flmul
  6308  0BC0  01B4               	clrf	??___flmul+1
  6309  0BC1  0DB4               	rlf	??___flmul+1,f
  6310  0BC2  0833               	movf	??___flmul,w
  6311  0BC3  3E82               	addlw	130
  6312  0BC4  00C3               	movwf	___flmul@temp
  6313  0BC5  0834               	movf	??___flmul+1,w
  6314  0BC6  1803               	skipnc
  6315  0BC7  3E01               	addlw	1
  6316  0BC8  3EFF               	addlw	255
  6317  0BC9  00C4               	movwf	___flmul@temp+1
  6318  0BCA  2BE8               	goto	l2486
  6319  0BCB                     l2476:
  6320  0BCB  3001               	movlw	1
  6321  0BCC  00B3               	movwf	??___flmul
  6322  0BCD                     u3725:
  6323  0BCD  1003               	clrc
  6324  0BCE  0DBF               	rlf	___flmul@prod,f
  6325  0BCF  0DC0               	rlf	___flmul@prod+1,f
  6326  0BD0  0DC1               	rlf	___flmul@prod+2,f
  6327  0BD1  0DC2               	rlf	___flmul@prod+3,f
  6328  0BD2  0BB3               	decfsz	??___flmul,f
  6329  0BD3  2BCD               	goto	u3725
  6330  0BD4                     l2478:
  6331  0BD4  1FBC               	btfss	___flmul@grs+3,7
  6332  0BD5  2BD7               	goto	u3731
  6333  0BD6  2BD8               	goto	u3730
  6334  0BD7                     u3731:
  6335  0BD7  2BD9               	goto	l2482
  6336  0BD8                     u3730:
  6337  0BD8                     l2480:
  6338  0BD8  143F               	bsf	___flmul@prod,0
  6339  0BD9                     l2482:
  6340  0BD9  3001               	movlw	1
  6341  0BDA  00B3               	movwf	??___flmul
  6342  0BDB                     u3745:
  6343  0BDB  1003               	clrc
  6344  0BDC  0DB9               	rlf	___flmul@grs,f
  6345  0BDD  0DBA               	rlf	___flmul@grs+1,f
  6346  0BDE  0DBB               	rlf	___flmul@grs+2,f
  6347  0BDF  0DBC               	rlf	___flmul@grs+3,f
  6348  0BE0  0BB3               	decfsz	??___flmul,f
  6349  0BE1  2BDB               	goto	u3745
  6350  0BE2                     l2484:
  6351  0BE2  30FF               	movlw	255
  6352  0BE3  07C3               	addwf	___flmul@temp,f
  6353  0BE4  1803               	skipnc
  6354  0BE5  0AC4               	incf	___flmul@temp+1,f
  6355  0BE6  30FF               	movlw	255
  6356  0BE7  07C4               	addwf	___flmul@temp+1,f
  6357  0BE8                     l2486:
  6358  0BE8  1FC1               	btfss	___flmul@prod+2,7
  6359  0BE9  2BEB               	goto	u3751
  6360  0BEA  2BEC               	goto	u3750
  6361  0BEB                     u3751:
  6362  0BEB  2BCB               	goto	l2476
  6363  0BEC                     u3750:
  6364  0BEC                     l2488:
  6365  0BEC  01BD               	clrf	___flmul@aexp
  6366  0BED                     l2490:
  6367  0BED  1FBC               	btfss	___flmul@grs+3,7
  6368  0BEE  2BF0               	goto	u3761
  6369  0BEF  2BF1               	goto	u3760
  6370  0BF0                     u3761:
  6371  0BF0  2C0D               	goto	l2498
  6372  0BF1                     u3760:
  6373  0BF1                     l2492:
  6374  0BF1  30FF               	movlw	255
  6375  0BF2  0539               	andwf	___flmul@grs,w
  6376  0BF3  00B3               	movwf	??___flmul
  6377  0BF4  30FF               	movlw	255
  6378  0BF5  053A               	andwf	___flmul@grs+1,w
  6379  0BF6  00B4               	movwf	??___flmul+1
  6380  0BF7  30FF               	movlw	255
  6381  0BF8  053B               	andwf	___flmul@grs+2,w
  6382  0BF9  00B5               	movwf	??___flmul+2
  6383  0BFA  307F               	movlw	127
  6384  0BFB  053C               	andwf	___flmul@grs+3,w
  6385  0BFC  00B6               	movwf	??___flmul+3
  6386  0BFD  0836               	movf	??___flmul+3,w
  6387  0BFE  0435               	iorwf	??___flmul+2,w
  6388  0BFF  0434               	iorwf	??___flmul+1,w
  6389  0C00  0433               	iorwf	??___flmul,w
  6390  0C01  1903               	skipnz
  6391  0C02  2C04               	goto	u3771
  6392  0C03  2C05               	goto	u3770
  6393  0C04                     u3771:
  6394  0C04  2C08               	goto	l698
  6395  0C05                     u3770:
  6396  0C05                     l2494:
  6397  0C05  01BD               	clrf	___flmul@aexp
  6398  0C06  0ABD               	incf	___flmul@aexp,f
  6399  0C07  2C0D               	goto	l2498
  6400  0C08                     l698:
  6401  0C08  1C3F               	btfss	___flmul@prod,0
  6402  0C09  2C0B               	goto	u3781
  6403  0C0A  2C0C               	goto	u3780
  6404  0C0B                     u3781:
  6405  0C0B  2C0D               	goto	l2498
  6406  0C0C                     u3780:
  6407  0C0C  2C05               	goto	l2494
  6408  0C0D                     l2498:
  6409  0C0D  083D               	movf	___flmul@aexp,w
  6410  0C0E  1903               	btfsc	3,2
  6411  0C0F  2C11               	goto	u3791
  6412  0C10  2C12               	goto	u3790
  6413  0C11                     u3791:
  6414  0C11  2C43               	goto	l2508
  6415  0C12                     u3790:
  6416  0C12                     l2500:
  6417  0C12  3001               	movlw	1
  6418  0C13  07BF               	addwf	___flmul@prod,f
  6419  0C14  3000               	movlw	0
  6420  0C15  1803               	skipnc
  6421  0C16  3001               	movlw	1
  6422  0C17  07C0               	addwf	___flmul@prod+1,f
  6423  0C18  3000               	movlw	0
  6424  0C19  1803               	skipnc
  6425  0C1A  3001               	movlw	1
  6426  0C1B  07C1               	addwf	___flmul@prod+2,f
  6427  0C1C  3000               	movlw	0
  6428  0C1D  1803               	skipnc
  6429  0C1E  3001               	movlw	1
  6430  0C1F  07C2               	addwf	___flmul@prod+3,f
  6431  0C20                     l2502:
  6432  0C20  1C42               	btfss	___flmul@prod+3,0
  6433  0C21  2C23               	goto	u3801
  6434  0C22  2C24               	goto	u3800
  6435  0C23                     u3801:
  6436  0C23  2C43               	goto	l2508
  6437  0C24                     u3800:
  6438  0C24                     l2504:
  6439  0C24  083F               	movf	___flmul@prod,w
  6440  0C25  00B3               	movwf	??___flmul
  6441  0C26  0840               	movf	___flmul@prod+1,w
  6442  0C27  00B4               	movwf	??___flmul+1
  6443  0C28  0841               	movf	___flmul@prod+2,w
  6444  0C29  00B5               	movwf	??___flmul+2
  6445  0C2A  0842               	movf	___flmul@prod+3,w
  6446  0C2B  00B6               	movwf	??___flmul+3
  6447  0C2C  3001               	movlw	1
  6448  0C2D  00B7               	movwf	??___flmul+4
  6449  0C2E                     u3815:
  6450  0C2E  0D36               	rlf	??___flmul+3,w
  6451  0C2F  0CB6               	rrf	??___flmul+3,f
  6452  0C30  0CB5               	rrf	??___flmul+2,f
  6453  0C31  0CB4               	rrf	??___flmul+1,f
  6454  0C32  0CB3               	rrf	??___flmul,f
  6455  0C33                     u3810:
  6456  0C33  0BB7               	decfsz	??___flmul+4,f
  6457  0C34  2C2E               	goto	u3815
  6458  0C35  0836               	movf	??___flmul+3,w
  6459  0C36  00C2               	movwf	___flmul@prod+3
  6460  0C37  0835               	movf	??___flmul+2,w
  6461  0C38  00C1               	movwf	___flmul@prod+2
  6462  0C39  0834               	movf	??___flmul+1,w
  6463  0C3A  00C0               	movwf	___flmul@prod+1
  6464  0C3B  0833               	movf	??___flmul,w
  6465  0C3C  00BF               	movwf	___flmul@prod
  6466  0C3D                     l2506:
  6467  0C3D  3001               	movlw	1
  6468  0C3E  07C3               	addwf	___flmul@temp,f
  6469  0C3F  1803               	skipnc
  6470  0C40  0AC4               	incf	___flmul@temp+1,f
  6471  0C41  3000               	movlw	0
  6472  0C42  07C4               	addwf	___flmul@temp+1,f
  6473  0C43                     l2508:
  6474  0C43  0844               	movf	___flmul@temp+1,w
  6475  0C44  3A80               	xorlw	128
  6476  0C45  00FF               	movwf	btemp+1
  6477  0C46  3080               	movlw	128
  6478  0C47  027F               	subwf	btemp+1,w
  6479  0C48  1D03               	skipz
  6480  0C49  2C4C               	goto	u3825
  6481  0C4A  30FF               	movlw	255
  6482  0C4B  0243               	subwf	___flmul@temp,w
  6483  0C4C                     u3825:
  6484  0C4C  1C03               	skipc
  6485  0C4D  2C4F               	goto	u3821
  6486  0C4E  2C50               	goto	u3820
  6487  0C4F                     u3821:
  6488  0C4F  2C5B               	goto	l2512
  6489  0C50                     u3820:
  6490  0C50                     l2510:
  6491  0C50  307F               	movlw	127
  6492  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6493  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6494  0C53  00C2               	movwf	___flmul@prod+3
  6495  0C54  3080               	movlw	128
  6496  0C55  00C1               	movwf	___flmul@prod+2
  6497  0C56  3000               	movlw	0
  6498  0C57  00C0               	movwf	___flmul@prod+1
  6499  0C58  3000               	movlw	0
  6500  0C59  00BF               	movwf	___flmul@prod
  6501  0C5A  2C90               	goto	l704
  6502  0C5B                     l2512:
  6503  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6504  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6505  0C5D  0844               	movf	___flmul@temp+1,w
  6506  0C5E  3A80               	xorlw	128
  6507  0C5F  00FF               	movwf	btemp+1
  6508  0C60  3080               	movlw	128
  6509  0C61  027F               	subwf	btemp+1,w
  6510  0C62  1D03               	skipz
  6511  0C63  2C66               	goto	u3835
  6512  0C64  3001               	movlw	1
  6513  0C65  0243               	subwf	___flmul@temp,w
  6514  0C66                     u3835:
  6515  0C66  1803               	skipnc
  6516  0C67  2C69               	goto	u3831
  6517  0C68  2C6A               	goto	u3830
  6518  0C69                     u3831:
  6519  0C69  2C76               	goto	l2518
  6520  0C6A                     u3830:
  6521  0C6A                     l2514:
  6522  0C6A  3000               	movlw	0
  6523  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6524  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6525  0C6D  00C2               	movwf	___flmul@prod+3
  6526  0C6E  3000               	movlw	0
  6527  0C6F  00C1               	movwf	___flmul@prod+2
  6528  0C70  3000               	movlw	0
  6529  0C71  00C0               	movwf	___flmul@prod+1
  6530  0C72  3000               	movlw	0
  6531  0C73  00BF               	movwf	___flmul@prod
  6532  0C74                     l2516:
  6533  0C74  01B8               	clrf	___flmul@sign
  6534  0C75  2C90               	goto	l704
  6535  0C76                     l2518:
  6536  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6537  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6538  0C78  0843               	movf	___flmul@temp,w
  6539  0C79  00B3               	movwf	??___flmul
  6540  0C7A  0833               	movf	??___flmul,w
  6541  0C7B  00BE               	movwf	___flmul@bexp
  6542  0C7C  30FF               	movlw	255
  6543  0C7D  05BF               	andwf	___flmul@prod,f
  6544  0C7E  30FF               	movlw	255
  6545  0C7F  05C0               	andwf	___flmul@prod+1,f
  6546  0C80  307F               	movlw	127
  6547  0C81  05C1               	andwf	___flmul@prod+2,f
  6548  0C82  3000               	movlw	0
  6549  0C83  05C2               	andwf	___flmul@prod+3,f
  6550  0C84                     l2520:
  6551  0C84  1C3E               	btfss	___flmul@bexp,0
  6552  0C85  2C87               	goto	u3841
  6553  0C86  2C88               	goto	u3840
  6554  0C87                     u3841:
  6555  0C87  2C89               	goto	l2524
  6556  0C88                     u3840:
  6557  0C88                     l2522:
  6558  0C88  17C1               	bsf	___flmul@prod+2,7
  6559  0C89                     l2524:
  6560  0C89  083E               	movf	___flmul@bexp,w
  6561  0C8A  00B3               	movwf	??___flmul
  6562  0C8B  1003               	clrc
  6563  0C8C  0C33               	rrf	??___flmul,w
  6564  0C8D  00B4               	movwf	??___flmul+1
  6565  0C8E  0834               	movf	??___flmul+1,w
  6566  0C8F  00C2               	movwf	___flmul@prod+3
  6567  0C90                     l704:
  6568  0C90  0838               	movf	___flmul@sign,w
  6569  0C91  00B3               	movwf	??___flmul
  6570  0C92  0833               	movf	??___flmul,w
  6571  0C93  04C2               	iorwf	___flmul@prod+3,f
  6572  0C94                     l2526:
  6573  0C94  0842               	movf	___flmul@prod+3,w
  6574  0C95  00AE               	movwf	?___flmul+3
  6575  0C96  0841               	movf	___flmul@prod+2,w
  6576  0C97  00AD               	movwf	?___flmul+2
  6577  0C98  0840               	movf	___flmul@prod+1,w
  6578  0C99  00AC               	movwf	?___flmul+1
  6579  0C9A  083F               	movf	___flmul@prod,w
  6580  0C9B  00AB               	movwf	?___flmul
  6581  0C9C                     l692:
  6582  0C9C  0008               	return
  6583  0C9D                     __end_of___flmul:
  6584                           
  6585                           	psect	text11
  6586  1BF0                     __ptext11:	
  6587 ;; *************** function __Umul8_16 *****************
  6588 ;; Defined at:
  6589 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;  multiplier      1    wreg     unsigned char 
  6592 ;;  multiplicand    1    4[COMMON] unsigned char 
  6593 ;; Auto vars:     Size  Location     Type
  6594 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6595 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6596 ;;  product         2    0[BANK0 ] unsigned int 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  2    4[COMMON] unsigned int 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6606 ;;      Params:         2       0       0       0       0
  6607 ;;      Locals:         0       5       0       0       0
  6608 ;;      Temps:          2       0       0       0       0
  6609 ;;      Totals:         4       5       0       0       0
  6610 ;;Total ram usage:        9 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:    1
  6613 ;; This function calls:
  6614 ;;		Nothing
  6615 ;; This function is called by:
  6616 ;;		___flmul
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           
  6621                           ;psect for function __Umul8_16
  6622  1BF0                     __Umul8_16:
  6623                           
  6624                           ;incstack = 0
  6625                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6626                           ;__Umul8_16@multiplier stored from wreg
  6627  1BF0  1283               	bcf	3,5	;RP0=0, select bank0
  6628  1BF1  1303               	bcf	3,6	;RP1=0, select bank0
  6629  1BF2  00A4               	movwf	__Umul8_16@multiplier
  6630  1BF3                     l2052:
  6631  1BF3  01A0               	clrf	__Umul8_16@product
  6632  1BF4  01A1               	clrf	__Umul8_16@product+1
  6633  1BF5                     l2054:
  6634  1BF5  0874               	movf	__Umul8_16@multiplicand,w
  6635  1BF6  00F6               	movwf	??__Umul8_16
  6636  1BF7  01F7               	clrf	??__Umul8_16+1
  6637  1BF8  0876               	movf	??__Umul8_16,w
  6638  1BF9  00A2               	movwf	__Umul8_16@word_mpld
  6639  1BFA  0877               	movf	??__Umul8_16+1,w
  6640  1BFB  00A3               	movwf	__Umul8_16@word_mpld+1
  6641  1BFC                     l2056:
  6642  1BFC  1C24               	btfss	__Umul8_16@multiplier,0
  6643  1BFD  2BFF               	goto	u2671
  6644  1BFE  2C00               	goto	u2670
  6645  1BFF                     u2671:
  6646  1BFF  2C06               	goto	l711
  6647  1C00                     u2670:
  6648  1C00                     l2058:
  6649  1C00  0822               	movf	__Umul8_16@word_mpld,w
  6650  1C01  07A0               	addwf	__Umul8_16@product,f
  6651  1C02  1803               	skipnc
  6652  1C03  0AA1               	incf	__Umul8_16@product+1,f
  6653  1C04  0823               	movf	__Umul8_16@word_mpld+1,w
  6654  1C05  07A1               	addwf	__Umul8_16@product+1,f
  6655  1C06                     l711:
  6656  1C06  3001               	movlw	1
  6657  1C07                     u2685:
  6658  1C07  1003               	clrc
  6659  1C08  0DA2               	rlf	__Umul8_16@word_mpld,f
  6660  1C09  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6661  1C0A  3EFF               	addlw	-1
  6662  1C0B  1D03               	skipz
  6663  1C0C  2C07               	goto	u2685
  6664  1C0D  1003               	clrc
  6665  1C0E  0CA4               	rrf	__Umul8_16@multiplier,f
  6666  1C0F                     l2060:
  6667  1C0F  0824               	movf	__Umul8_16@multiplier,w
  6668  1C10  1D03               	btfss	3,2
  6669  1C11  2C13               	goto	u2691
  6670  1C12  2C14               	goto	u2690
  6671  1C13                     u2691:
  6672  1C13  2BFC               	goto	l2056
  6673  1C14                     u2690:
  6674  1C14                     l2062:
  6675  1C14  0821               	movf	__Umul8_16@product+1,w
  6676  1C15  00F5               	movwf	?__Umul8_16+1
  6677  1C16  0820               	movf	__Umul8_16@product,w
  6678  1C17  00F4               	movwf	?__Umul8_16
  6679  1C18                     l713:
  6680  1C18  0008               	return
  6681  1C19                     __end_of__Umul8_16:
  6682                           
  6683                           	psect	text12
  6684  11F0                     __ptext12:	
  6685 ;; *************** function __tdiv_to_l_ *****************
  6686 ;; Defined at:
  6687 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;  f1              4    0[BANK0 ] float 
  6690 ;;  f2              4    4[BANK0 ] float 
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;  quot            4    8[BANK0 ] unsigned long 
  6693 ;;  exp1            1   13[BANK0 ] unsigned char 
  6694 ;;  cntr            1   12[BANK0 ] unsigned char 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  4    0[BANK0 ] unsigned long 
  6697 ;; Registers used:
  6698 ;;		wreg, status,2, status,0
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6704 ;;      Params:         0       8       0       0       0
  6705 ;;      Locals:         0       6       0       0       0
  6706 ;;      Temps:          4       0       0       0       0
  6707 ;;      Totals:         4      14       0       0       0
  6708 ;;Total ram usage:       18 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; Hardware stack levels required when called:    1
  6711 ;; This function calls:
  6712 ;;		Nothing
  6713 ;; This function is called by:
  6714 ;;		_sprintf
  6715 ;; This function uses a non-reentrant model
  6716 ;;
  6717                           
  6718                           
  6719                           ;psect for function __tdiv_to_l_
  6720  11F0                     __tdiv_to_l_:
  6721  11F0                     l2616:	
  6722                           ;incstack = 0
  6723                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6724                           
  6725  11F0  1283               	bcf	3,5	;RP0=0, select bank0
  6726  11F1  1303               	bcf	3,6	;RP1=0, select bank0
  6727  11F2  0820               	movf	__tdiv_to_l_@f1,w
  6728  11F3  00F4               	movwf	??__tdiv_to_l_
  6729  11F4  0821               	movf	__tdiv_to_l_@f1+1,w
  6730  11F5  00F5               	movwf	??__tdiv_to_l_+1
  6731  11F6  0822               	movf	__tdiv_to_l_@f1+2,w
  6732  11F7  00F6               	movwf	??__tdiv_to_l_+2
  6733  11F8  1003               	clrc
  6734  11F9  0D75               	rlf	??__tdiv_to_l_+1,w
  6735  11FA  0D76               	rlf	??__tdiv_to_l_+2,w
  6736  11FB  00F7               	movwf	??__tdiv_to_l_+3
  6737  11FC  0877               	movf	??__tdiv_to_l_+3,w
  6738  11FD  00AD               	movwf	__tdiv_to_l_@exp1
  6739  11FE  082D               	movf	__tdiv_to_l_@exp1,w
  6740  11FF  1D03               	btfss	3,2
  6741  1200  2A02               	goto	u4121
  6742  1201  2A03               	goto	u4120
  6743  1202                     u4121:
  6744  1202  2A0C               	goto	l2622
  6745  1203                     u4120:
  6746  1203                     l2618:
  6747  1203  3000               	movlw	0
  6748  1204  00A3               	movwf	?__tdiv_to_l_+3
  6749  1205  3000               	movlw	0
  6750  1206  00A2               	movwf	?__tdiv_to_l_+2
  6751  1207  3000               	movlw	0
  6752  1208  00A1               	movwf	?__tdiv_to_l_+1
  6753  1209  3000               	movlw	0
  6754  120A  00A0               	movwf	?__tdiv_to_l_
  6755  120B  2AAC               	goto	l486
  6756  120C                     l2622:
  6757  120C  0824               	movf	__tdiv_to_l_@f2,w
  6758  120D  00F4               	movwf	??__tdiv_to_l_
  6759  120E  0825               	movf	__tdiv_to_l_@f2+1,w
  6760  120F  00F5               	movwf	??__tdiv_to_l_+1
  6761  1210  0826               	movf	__tdiv_to_l_@f2+2,w
  6762  1211  00F6               	movwf	??__tdiv_to_l_+2
  6763  1212  1003               	clrc
  6764  1213  0D75               	rlf	??__tdiv_to_l_+1,w
  6765  1214  0D76               	rlf	??__tdiv_to_l_+2,w
  6766  1215  00F7               	movwf	??__tdiv_to_l_+3
  6767  1216  0877               	movf	??__tdiv_to_l_+3,w
  6768  1217  00AC               	movwf	__tdiv_to_l_@cntr
  6769  1218  082C               	movf	__tdiv_to_l_@cntr,w
  6770  1219  1D03               	btfss	3,2
  6771  121A  2A1C               	goto	u4131
  6772  121B  2A1D               	goto	u4130
  6773  121C                     u4131:
  6774  121C  2A1E               	goto	l487
  6775  121D                     u4130:
  6776  121D  2A03               	goto	l2618
  6777  121E                     l487:
  6778  121E  17A1               	bsf	__tdiv_to_l_@f1+1,7
  6779  121F                     l2628:
  6780  121F  30FF               	movlw	255
  6781  1220  05A0               	andwf	__tdiv_to_l_@f1,f
  6782  1221  30FF               	movlw	255
  6783  1222  05A1               	andwf	__tdiv_to_l_@f1+1,f
  6784  1223  3000               	movlw	0
  6785  1224  05A2               	andwf	__tdiv_to_l_@f1+2,f
  6786  1225                     l2630:
  6787  1225  17A5               	bsf	__tdiv_to_l_@f2+1,7
  6788  1226  30FF               	movlw	255
  6789  1227  05A4               	andwf	__tdiv_to_l_@f2,f
  6790  1228  30FF               	movlw	255
  6791  1229  05A5               	andwf	__tdiv_to_l_@f2+1,f
  6792  122A  3000               	movlw	0
  6793  122B  05A6               	andwf	__tdiv_to_l_@f2+2,f
  6794  122C  3000               	movlw	0
  6795  122D  00AB               	movwf	__tdiv_to_l_@quot+3
  6796  122E  3000               	movlw	0
  6797  122F  00AA               	movwf	__tdiv_to_l_@quot+2
  6798  1230  3000               	movlw	0
  6799  1231  00A9               	movwf	__tdiv_to_l_@quot+1
  6800  1232  3000               	movlw	0
  6801  1233  00A8               	movwf	__tdiv_to_l_@quot
  6802  1234                     l2632:
  6803  1234  307F               	movlw	127
  6804  1235  02AD               	subwf	__tdiv_to_l_@exp1,f
  6805  1236                     l2634:
  6806  1236  3098               	movlw	152
  6807  1237  072C               	addwf	__tdiv_to_l_@cntr,w
  6808  1238  00F4               	movwf	??__tdiv_to_l_
  6809  1239  0874               	movf	??__tdiv_to_l_,w
  6810  123A  02AD               	subwf	__tdiv_to_l_@exp1,f
  6811  123B  3018               	movlw	24
  6812  123C  00F4               	movwf	??__tdiv_to_l_
  6813  123D  0874               	movf	??__tdiv_to_l_,w
  6814  123E  00AC               	movwf	__tdiv_to_l_@cntr
  6815  123F                     l2636:
  6816  123F  3001               	movlw	1
  6817  1240  00F4               	movwf	??__tdiv_to_l_
  6818  1241                     u4145:
  6819  1241  1003               	clrc
  6820  1242  0DA8               	rlf	__tdiv_to_l_@quot,f
  6821  1243  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6822  1244  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6823  1245  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6824  1246  0BF4               	decfsz	??__tdiv_to_l_,f
  6825  1247  2A41               	goto	u4145
  6826  1248                     l2638:
  6827  1248  0826               	movf	__tdiv_to_l_@f2+2,w
  6828  1249  0222               	subwf	__tdiv_to_l_@f1+2,w
  6829  124A  1D03               	skipz
  6830  124B  2A52               	goto	u4155
  6831  124C  0825               	movf	__tdiv_to_l_@f2+1,w
  6832  124D  0221               	subwf	__tdiv_to_l_@f1+1,w
  6833  124E  1D03               	skipz
  6834  124F  2A52               	goto	u4155
  6835  1250  0824               	movf	__tdiv_to_l_@f2,w
  6836  1251  0220               	subwf	__tdiv_to_l_@f1,w
  6837  1252                     u4155:
  6838  1252  1C03               	skipc
  6839  1253  2A55               	goto	u4151
  6840  1254  2A56               	goto	u4150
  6841  1255                     u4151:
  6842  1255  2A61               	goto	l2644
  6843  1256                     u4150:
  6844  1256                     l2640:
  6845  1256  0824               	movf	__tdiv_to_l_@f2,w
  6846  1257  02A0               	subwf	__tdiv_to_l_@f1,f
  6847  1258  0825               	movf	__tdiv_to_l_@f2+1,w
  6848  1259  1C03               	skipc
  6849  125A  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  6850  125B  02A1               	subwf	__tdiv_to_l_@f1+1,f
  6851  125C  0826               	movf	__tdiv_to_l_@f2+2,w
  6852  125D  1C03               	skipc
  6853  125E  0A26               	incf	__tdiv_to_l_@f2+2,w
  6854  125F  02A2               	subwf	__tdiv_to_l_@f1+2,f
  6855  1260                     l2642:
  6856  1260  1428               	bsf	__tdiv_to_l_@quot,0
  6857  1261                     l2644:
  6858  1261  3001               	movlw	1
  6859  1262                     u4165:
  6860  1262  1003               	clrc
  6861  1263  0DA0               	rlf	__tdiv_to_l_@f1,f
  6862  1264  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  6863  1265  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  6864  1266  3EFF               	addlw	-1
  6865  1267  1D03               	skipz
  6866  1268  2A62               	goto	u4165
  6867  1269                     l2646:
  6868  1269  3001               	movlw	1
  6869  126A  02AC               	subwf	__tdiv_to_l_@cntr,f
  6870  126B  1D03               	btfss	3,2
  6871  126C  2A6E               	goto	u4171
  6872  126D  2A6F               	goto	u4170
  6873  126E                     u4171:
  6874  126E  2A3F               	goto	l2636
  6875  126F                     u4170:
  6876  126F                     l490:
  6877  126F  1FAD               	btfss	__tdiv_to_l_@exp1,7
  6878  1270  2A72               	goto	u4181
  6879  1271  2A73               	goto	u4180
  6880  1272                     u4181:
  6881  1272  2A8D               	goto	l2656
  6882  1273                     u4180:
  6883  1273                     l2648:
  6884  1273  082D               	movf	__tdiv_to_l_@exp1,w
  6885  1274  3A80               	xorlw	128
  6886  1275  3E97               	addlw	151
  6887  1276  1803               	skipnc
  6888  1277  2A79               	goto	u4191
  6889  1278  2A7A               	goto	u4190
  6890  1279                     u4191:
  6891  1279  2A7B               	goto	l2654
  6892  127A                     u4190:
  6893  127A  2A03               	goto	l2618
  6894  127B                     l2654:
  6895  127B  3001               	movlw	1
  6896  127C                     u4205:
  6897  127C  1003               	clrc
  6898  127D  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  6899  127E  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  6900  127F  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  6901  1280  0CA8               	rrf	__tdiv_to_l_@quot,f
  6902  1281  3EFF               	addlw	-1
  6903  1282  1D03               	skipz
  6904  1283  2A7C               	goto	u4205
  6905  1284  3001               	movlw	1
  6906  1285  00F4               	movwf	??__tdiv_to_l_
  6907  1286  0874               	movf	??__tdiv_to_l_,w
  6908  1287  07AD               	addwf	__tdiv_to_l_@exp1,f
  6909  1288  1D03               	btfss	3,2
  6910  1289  2A8B               	goto	u4211
  6911  128A  2A8C               	goto	u4210
  6912  128B                     u4211:
  6913  128B  2A7B               	goto	l2654
  6914  128C                     u4210:
  6915  128C  2AA4               	goto	l2664
  6916  128D                     l2656:
  6917  128D  3018               	movlw	24
  6918  128E  022D               	subwf	__tdiv_to_l_@exp1,w
  6919  128F  1C03               	skipc
  6920  1290  2A92               	goto	u4221
  6921  1291  2A93               	goto	u4220
  6922  1292                     u4221:
  6923  1292  2A9F               	goto	l497
  6924  1293                     u4220:
  6925  1293  2A03               	goto	l2618
  6926  1294                     l2662:
  6927  1294  3001               	movlw	1
  6928  1295  00F4               	movwf	??__tdiv_to_l_
  6929  1296                     u4235:
  6930  1296  1003               	clrc
  6931  1297  0DA8               	rlf	__tdiv_to_l_@quot,f
  6932  1298  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6933  1299  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6934  129A  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6935  129B  0BF4               	decfsz	??__tdiv_to_l_,f
  6936  129C  2A96               	goto	u4235
  6937  129D  3001               	movlw	1
  6938  129E  02AD               	subwf	__tdiv_to_l_@exp1,f
  6939  129F                     l497:
  6940  129F  082D               	movf	__tdiv_to_l_@exp1,w
  6941  12A0  1D03               	btfss	3,2
  6942  12A1  2AA3               	goto	u4241
  6943  12A2  2AA4               	goto	u4240
  6944  12A3                     u4241:
  6945  12A3  2A94               	goto	l2662
  6946  12A4                     u4240:
  6947  12A4                     l2664:
  6948  12A4  082B               	movf	__tdiv_to_l_@quot+3,w
  6949  12A5  00A3               	movwf	?__tdiv_to_l_+3
  6950  12A6  082A               	movf	__tdiv_to_l_@quot+2,w
  6951  12A7  00A2               	movwf	?__tdiv_to_l_+2
  6952  12A8  0829               	movf	__tdiv_to_l_@quot+1,w
  6953  12A9  00A1               	movwf	?__tdiv_to_l_+1
  6954  12AA  0828               	movf	__tdiv_to_l_@quot,w
  6955  12AB  00A0               	movwf	?__tdiv_to_l_
  6956  12AC                     l486:
  6957  12AC  0008               	return
  6958  12AD                     __end_of__tdiv_to_l_:
  6959                           
  6960                           	psect	text13
  6961  12AD                     __ptext13:	
  6962 ;; *************** function __div_to_l_ *****************
  6963 ;; Defined at:
  6964 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  f1              4    0[BANK0 ] unsigned long 
  6967 ;;  f2              4    4[BANK0 ] unsigned long 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  quot            4    8[BANK0 ] unsigned long 
  6970 ;;  exp1            1   13[BANK0 ] unsigned char 
  6971 ;;  cntr            1   12[BANK0 ] unsigned char 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  4    0[BANK0 ] unsigned long 
  6974 ;; Registers used:
  6975 ;;		wreg, status,2, status,0
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6981 ;;      Params:         0       8       0       0       0
  6982 ;;      Locals:         0       6       0       0       0
  6983 ;;      Temps:          1       0       0       0       0
  6984 ;;      Totals:         1      14       0       0       0
  6985 ;;Total ram usage:       15 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    1
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_sprintf
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           
  6996                           ;psect for function __div_to_l_
  6997  12AD                     __div_to_l_:
  6998  12AD                     l2668:	
  6999                           ;incstack = 0
  7000                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7001                           
  7002  12AD  1003               	clrc
  7003  12AE  1283               	bcf	3,5	;RP0=0, select bank0
  7004  12AF  1303               	bcf	3,6	;RP1=0, select bank0
  7005  12B0  0D22               	rlf	__div_to_l_@f1+2,w
  7006  12B1  0D23               	rlf	__div_to_l_@f1+3,w
  7007  12B2  00F4               	movwf	??__div_to_l_
  7008  12B3  0874               	movf	??__div_to_l_,w
  7009  12B4  00AD               	movwf	__div_to_l_@exp1
  7010  12B5  082D               	movf	__div_to_l_@exp1,w
  7011  12B6  1D03               	btfss	3,2
  7012  12B7  2AB9               	goto	u4251
  7013  12B8  2ABA               	goto	u4250
  7014  12B9                     u4251:
  7015  12B9  2AC3               	goto	l2674
  7016  12BA                     u4250:
  7017  12BA                     l2670:
  7018  12BA  3000               	movlw	0
  7019  12BB  00A3               	movwf	?__div_to_l_+3
  7020  12BC  3000               	movlw	0
  7021  12BD  00A2               	movwf	?__div_to_l_+2
  7022  12BE  3000               	movlw	0
  7023  12BF  00A1               	movwf	?__div_to_l_+1
  7024  12C0  3000               	movlw	0
  7025  12C1  00A0               	movwf	?__div_to_l_
  7026  12C2  2B6A               	goto	l439
  7027  12C3                     l2674:
  7028  12C3  1003               	clrc
  7029  12C4  0D26               	rlf	__div_to_l_@f2+2,w
  7030  12C5  0D27               	rlf	__div_to_l_@f2+3,w
  7031  12C6  00F4               	movwf	??__div_to_l_
  7032  12C7  0874               	movf	??__div_to_l_,w
  7033  12C8  00AC               	movwf	__div_to_l_@cntr
  7034  12C9  082C               	movf	__div_to_l_@cntr,w
  7035  12CA  1D03               	btfss	3,2
  7036  12CB  2ACD               	goto	u4261
  7037  12CC  2ACE               	goto	u4260
  7038  12CD                     u4261:
  7039  12CD  2ACF               	goto	l440
  7040  12CE                     u4260:
  7041  12CE  2ABA               	goto	l2670
  7042  12CF                     l440:
  7043  12CF  17A2               	bsf	__div_to_l_@f1+2,7
  7044  12D0                     l2680:
  7045  12D0  30FF               	movlw	255
  7046  12D1  05A0               	andwf	__div_to_l_@f1,f
  7047  12D2  30FF               	movlw	255
  7048  12D3  05A1               	andwf	__div_to_l_@f1+1,f
  7049  12D4  30FF               	movlw	255
  7050  12D5  05A2               	andwf	__div_to_l_@f1+2,f
  7051  12D6  3000               	movlw	0
  7052  12D7  05A3               	andwf	__div_to_l_@f1+3,f
  7053  12D8                     l2682:
  7054  12D8  17A6               	bsf	__div_to_l_@f2+2,7
  7055  12D9  30FF               	movlw	255
  7056  12DA  05A4               	andwf	__div_to_l_@f2,f
  7057  12DB  30FF               	movlw	255
  7058  12DC  05A5               	andwf	__div_to_l_@f2+1,f
  7059  12DD  30FF               	movlw	255
  7060  12DE  05A6               	andwf	__div_to_l_@f2+2,f
  7061  12DF  3000               	movlw	0
  7062  12E0  05A7               	andwf	__div_to_l_@f2+3,f
  7063  12E1  3000               	movlw	0
  7064  12E2  00AB               	movwf	__div_to_l_@quot+3
  7065  12E3  3000               	movlw	0
  7066  12E4  00AA               	movwf	__div_to_l_@quot+2
  7067  12E5  3000               	movlw	0
  7068  12E6  00A9               	movwf	__div_to_l_@quot+1
  7069  12E7  3000               	movlw	0
  7070  12E8  00A8               	movwf	__div_to_l_@quot
  7071  12E9                     l2684:
  7072  12E9  307F               	movlw	127
  7073  12EA  02AD               	subwf	__div_to_l_@exp1,f
  7074  12EB                     l2686:
  7075  12EB  30A0               	movlw	160
  7076  12EC  072C               	addwf	__div_to_l_@cntr,w
  7077  12ED  00F4               	movwf	??__div_to_l_
  7078  12EE  0874               	movf	??__div_to_l_,w
  7079  12EF  02AD               	subwf	__div_to_l_@exp1,f
  7080  12F0  3020               	movlw	32
  7081  12F1  00F4               	movwf	??__div_to_l_
  7082  12F2  0874               	movf	??__div_to_l_,w
  7083  12F3  00AC               	movwf	__div_to_l_@cntr
  7084  12F4                     l2688:
  7085  12F4  3001               	movlw	1
  7086  12F5  00F4               	movwf	??__div_to_l_
  7087  12F6                     u4275:
  7088  12F6  1003               	clrc
  7089  12F7  0DA8               	rlf	__div_to_l_@quot,f
  7090  12F8  0DA9               	rlf	__div_to_l_@quot+1,f
  7091  12F9  0DAA               	rlf	__div_to_l_@quot+2,f
  7092  12FA  0DAB               	rlf	__div_to_l_@quot+3,f
  7093  12FB  0BF4               	decfsz	??__div_to_l_,f
  7094  12FC  2AF6               	goto	u4275
  7095  12FD                     l2690:
  7096  12FD  0827               	movf	__div_to_l_@f2+3,w
  7097  12FE  0223               	subwf	__div_to_l_@f1+3,w
  7098  12FF  1D03               	skipz
  7099  1300  2B0B               	goto	u4285
  7100  1301  0826               	movf	__div_to_l_@f2+2,w
  7101  1302  0222               	subwf	__div_to_l_@f1+2,w
  7102  1303  1D03               	skipz
  7103  1304  2B0B               	goto	u4285
  7104  1305  0825               	movf	__div_to_l_@f2+1,w
  7105  1306  0221               	subwf	__div_to_l_@f1+1,w
  7106  1307  1D03               	skipz
  7107  1308  2B0B               	goto	u4285
  7108  1309  0824               	movf	__div_to_l_@f2,w
  7109  130A  0220               	subwf	__div_to_l_@f1,w
  7110  130B                     u4285:
  7111  130B  1C03               	skipc
  7112  130C  2B0E               	goto	u4281
  7113  130D  2B0F               	goto	u4280
  7114  130E                     u4281:
  7115  130E  2B1E               	goto	l2696
  7116  130F                     u4280:
  7117  130F                     l2692:
  7118  130F  0824               	movf	__div_to_l_@f2,w
  7119  1310  02A0               	subwf	__div_to_l_@f1,f
  7120  1311  0825               	movf	__div_to_l_@f2+1,w
  7121  1312  1C03               	skipc
  7122  1313  0F25               	incfsz	__div_to_l_@f2+1,w
  7123  1314  02A1               	subwf	__div_to_l_@f1+1,f
  7124  1315  0826               	movf	__div_to_l_@f2+2,w
  7125  1316  1C03               	skipc
  7126  1317  0F26               	incfsz	__div_to_l_@f2+2,w
  7127  1318  02A2               	subwf	__div_to_l_@f1+2,f
  7128  1319  0827               	movf	__div_to_l_@f2+3,w
  7129  131A  1C03               	skipc
  7130  131B  0F27               	incfsz	__div_to_l_@f2+3,w
  7131  131C  02A3               	subwf	__div_to_l_@f1+3,f
  7132  131D                     l2694:
  7133  131D  1428               	bsf	__div_to_l_@quot,0
  7134  131E                     l2696:
  7135  131E  3001               	movlw	1
  7136  131F  00F4               	movwf	??__div_to_l_
  7137  1320                     u4295:
  7138  1320  1003               	clrc
  7139  1321  0DA0               	rlf	__div_to_l_@f1,f
  7140  1322  0DA1               	rlf	__div_to_l_@f1+1,f
  7141  1323  0DA2               	rlf	__div_to_l_@f1+2,f
  7142  1324  0DA3               	rlf	__div_to_l_@f1+3,f
  7143  1325  0BF4               	decfsz	??__div_to_l_,f
  7144  1326  2B20               	goto	u4295
  7145  1327                     l2698:
  7146  1327  3001               	movlw	1
  7147  1328  02AC               	subwf	__div_to_l_@cntr,f
  7148  1329  1D03               	btfss	3,2
  7149  132A  2B2C               	goto	u4301
  7150  132B  2B2D               	goto	u4300
  7151  132C                     u4301:
  7152  132C  2AF4               	goto	l2688
  7153  132D                     u4300:
  7154  132D                     l443:
  7155  132D  1FAD               	btfss	__div_to_l_@exp1,7
  7156  132E  2B30               	goto	u4311
  7157  132F  2B31               	goto	u4310
  7158  1330                     u4311:
  7159  1330  2B4B               	goto	l2708
  7160  1331                     u4310:
  7161  1331                     l2700:
  7162  1331  082D               	movf	__div_to_l_@exp1,w
  7163  1332  3A80               	xorlw	128
  7164  1333  3E9F               	addlw	159
  7165  1334  1803               	skipnc
  7166  1335  2B37               	goto	u4321
  7167  1336  2B38               	goto	u4320
  7168  1337                     u4321:
  7169  1337  2B39               	goto	l2706
  7170  1338                     u4320:
  7171  1338  2ABA               	goto	l2670
  7172  1339                     l2706:
  7173  1339  3001               	movlw	1
  7174  133A                     u4335:
  7175  133A  1003               	clrc
  7176  133B  0CAB               	rrf	__div_to_l_@quot+3,f
  7177  133C  0CAA               	rrf	__div_to_l_@quot+2,f
  7178  133D  0CA9               	rrf	__div_to_l_@quot+1,f
  7179  133E  0CA8               	rrf	__div_to_l_@quot,f
  7180  133F  3EFF               	addlw	-1
  7181  1340  1D03               	skipz
  7182  1341  2B3A               	goto	u4335
  7183  1342  3001               	movlw	1
  7184  1343  00F4               	movwf	??__div_to_l_
  7185  1344  0874               	movf	??__div_to_l_,w
  7186  1345  07AD               	addwf	__div_to_l_@exp1,f
  7187  1346  1D03               	btfss	3,2
  7188  1347  2B49               	goto	u4341
  7189  1348  2B4A               	goto	u4340
  7190  1349                     u4341:
  7191  1349  2B39               	goto	l2706
  7192  134A                     u4340:
  7193  134A  2B62               	goto	l2716
  7194  134B                     l2708:
  7195  134B  3020               	movlw	32
  7196  134C  022D               	subwf	__div_to_l_@exp1,w
  7197  134D  1C03               	skipc
  7198  134E  2B50               	goto	u4351
  7199  134F  2B51               	goto	u4350
  7200  1350                     u4351:
  7201  1350  2B5D               	goto	l450
  7202  1351                     u4350:
  7203  1351  2ABA               	goto	l2670
  7204  1352                     l2714:
  7205  1352  3001               	movlw	1
  7206  1353  00F4               	movwf	??__div_to_l_
  7207  1354                     u4365:
  7208  1354  1003               	clrc
  7209  1355  0DA8               	rlf	__div_to_l_@quot,f
  7210  1356  0DA9               	rlf	__div_to_l_@quot+1,f
  7211  1357  0DAA               	rlf	__div_to_l_@quot+2,f
  7212  1358  0DAB               	rlf	__div_to_l_@quot+3,f
  7213  1359  0BF4               	decfsz	??__div_to_l_,f
  7214  135A  2B54               	goto	u4365
  7215  135B  3001               	movlw	1
  7216  135C  02AD               	subwf	__div_to_l_@exp1,f
  7217  135D                     l450:
  7218  135D  082D               	movf	__div_to_l_@exp1,w
  7219  135E  1D03               	btfss	3,2
  7220  135F  2B61               	goto	u4371
  7221  1360  2B62               	goto	u4370
  7222  1361                     u4371:
  7223  1361  2B52               	goto	l2714
  7224  1362                     u4370:
  7225  1362                     l2716:
  7226  1362  082B               	movf	__div_to_l_@quot+3,w
  7227  1363  00A3               	movwf	?__div_to_l_+3
  7228  1364  082A               	movf	__div_to_l_@quot+2,w
  7229  1365  00A2               	movwf	?__div_to_l_+2
  7230  1366  0829               	movf	__div_to_l_@quot+1,w
  7231  1367  00A1               	movwf	?__div_to_l_+1
  7232  1368  0828               	movf	__div_to_l_@quot,w
  7233  1369  00A0               	movwf	?__div_to_l_
  7234  136A                     l439:
  7235  136A  0008               	return
  7236  136B                     __end_of__div_to_l_:
  7237                           
  7238                           	psect	text14
  7239  1134                     __ptext14:	
  7240 ;; *************** function ___xxtofl *****************
  7241 ;; Defined at:
  7242 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  sign            1    wreg     unsigned char 
  7245 ;;  val             4   11[BANK0 ] long 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  sign            1   19[BANK0 ] unsigned char 
  7248 ;;  arg             4   21[BANK0 ] unsigned long 
  7249 ;;  exp             1   20[BANK0 ] unsigned char 
  7250 ;; Return value:  Size  Location     Type
  7251 ;;                  4   11[BANK0 ] unsigned char 
  7252 ;; Registers used:
  7253 ;;		wreg, status,2, status,0
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7259 ;;      Params:         0       4       0       0       0
  7260 ;;      Locals:         0       6       0       0       0
  7261 ;;      Temps:          0       4       0       0       0
  7262 ;;      Totals:         0      14       0       0       0
  7263 ;;Total ram usage:       14 bytes
  7264 ;; Hardware stack levels used:    1
  7265 ;; Hardware stack levels required when called:    1
  7266 ;; This function calls:
  7267 ;;		Nothing
  7268 ;; This function is called by:
  7269 ;;		_conversion
  7270 ;;		_sprintf
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           
  7275                           ;psect for function ___xxtofl
  7276  1134                     ___xxtofl:
  7277                           
  7278                           ;incstack = 0
  7279                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7280                           ;___xxtofl@sign stored from wreg
  7281  1134  1283               	bcf	3,5	;RP0=0, select bank0
  7282  1135  1303               	bcf	3,6	;RP1=0, select bank0
  7283  1136  00B3               	movwf	___xxtofl@sign
  7284  1137                     l2860:
  7285  1137  0833               	movf	___xxtofl@sign,w
  7286  1138  1903               	btfsc	3,2
  7287  1139  293B               	goto	u4761
  7288  113A  293C               	goto	u4760
  7289  113B                     u4761:
  7290  113B  2950               	goto	l2866
  7291  113C                     u4760:
  7292  113C                     l2862:
  7293  113C  1FAE               	btfss	___xxtofl@val+3,7
  7294  113D  293F               	goto	u4771
  7295  113E  2940               	goto	u4770
  7296  113F                     u4771:
  7297  113F  2950               	goto	l2866
  7298  1140                     u4770:
  7299  1140                     l2864:
  7300  1140  092B               	comf	___xxtofl@val,w
  7301  1141  00B5               	movwf	___xxtofl@arg
  7302  1142  092C               	comf	___xxtofl@val+1,w
  7303  1143  00B6               	movwf	___xxtofl@arg+1
  7304  1144  092D               	comf	___xxtofl@val+2,w
  7305  1145  00B7               	movwf	___xxtofl@arg+2
  7306  1146  092E               	comf	___xxtofl@val+3,w
  7307  1147  00B8               	movwf	___xxtofl@arg+3
  7308  1148  0AB5               	incf	___xxtofl@arg,f
  7309  1149  1903               	skipnz
  7310  114A  0AB6               	incf	___xxtofl@arg+1,f
  7311  114B  1903               	skipnz
  7312  114C  0AB7               	incf	___xxtofl@arg+2,f
  7313  114D  1903               	skipnz
  7314  114E  0AB8               	incf	___xxtofl@arg+3,f
  7315  114F  2958               	goto	l736
  7316  1150                     l2866:
  7317  1150  082E               	movf	___xxtofl@val+3,w
  7318  1151  00B8               	movwf	___xxtofl@arg+3
  7319  1152  082D               	movf	___xxtofl@val+2,w
  7320  1153  00B7               	movwf	___xxtofl@arg+2
  7321  1154  082C               	movf	___xxtofl@val+1,w
  7322  1155  00B6               	movwf	___xxtofl@arg+1
  7323  1156  082B               	movf	___xxtofl@val,w
  7324  1157  00B5               	movwf	___xxtofl@arg
  7325  1158                     l736:
  7326  1158  082E               	movf	___xxtofl@val+3,w
  7327  1159  042D               	iorwf	___xxtofl@val+2,w
  7328  115A  042C               	iorwf	___xxtofl@val+1,w
  7329  115B  042B               	iorwf	___xxtofl@val,w
  7330  115C  1D03               	skipz
  7331  115D  295F               	goto	u4781
  7332  115E  2960               	goto	u4780
  7333  115F                     u4781:
  7334  115F  2969               	goto	l2872
  7335  1160                     u4780:
  7336  1160                     l2868:
  7337  1160  3000               	movlw	0
  7338  1161  00AE               	movwf	?___xxtofl+3
  7339  1162  3000               	movlw	0
  7340  1163  00AD               	movwf	?___xxtofl+2
  7341  1164  3000               	movlw	0
  7342  1165  00AC               	movwf	?___xxtofl+1
  7343  1166  3000               	movlw	0
  7344  1167  00AB               	movwf	?___xxtofl
  7345  1168  29EF               	goto	l738
  7346  1169                     l2872:
  7347  1169  3096               	movlw	150
  7348  116A  00AF               	movwf	??___xxtofl
  7349  116B  082F               	movf	??___xxtofl,w
  7350  116C  00B4               	movwf	___xxtofl@exp
  7351  116D  297B               	goto	l2876
  7352  116E                     l2874:
  7353  116E  3001               	movlw	1
  7354  116F  00AF               	movwf	??___xxtofl
  7355  1170  082F               	movf	??___xxtofl,w
  7356  1171  07B4               	addwf	___xxtofl@exp,f
  7357  1172  3001               	movlw	1
  7358  1173                     u4795:
  7359  1173  1003               	clrc
  7360  1174  0CB8               	rrf	___xxtofl@arg+3,f
  7361  1175  0CB7               	rrf	___xxtofl@arg+2,f
  7362  1176  0CB6               	rrf	___xxtofl@arg+1,f
  7363  1177  0CB5               	rrf	___xxtofl@arg,f
  7364  1178  3EFF               	addlw	-1
  7365  1179  1D03               	skipz
  7366  117A  2973               	goto	u4795
  7367  117B                     l2876:
  7368  117B  30FE               	movlw	254
  7369  117C  0538               	andwf	___xxtofl@arg+3,w
  7370  117D  1D03               	btfss	3,2
  7371  117E  2980               	goto	u4801
  7372  117F  2981               	goto	u4800
  7373  1180                     u4801:
  7374  1180  296E               	goto	l2874
  7375  1181                     u4800:
  7376  1181  299D               	goto	l742
  7377  1182                     l2878:
  7378  1182  3001               	movlw	1
  7379  1183  00AF               	movwf	??___xxtofl
  7380  1184  082F               	movf	??___xxtofl,w
  7381  1185  07B4               	addwf	___xxtofl@exp,f
  7382  1186                     l2880:
  7383  1186  3001               	movlw	1
  7384  1187  07B5               	addwf	___xxtofl@arg,f
  7385  1188  3000               	movlw	0
  7386  1189  1803               	skipnc
  7387  118A  3001               	movlw	1
  7388  118B  07B6               	addwf	___xxtofl@arg+1,f
  7389  118C  3000               	movlw	0
  7390  118D  1803               	skipnc
  7391  118E  3001               	movlw	1
  7392  118F  07B7               	addwf	___xxtofl@arg+2,f
  7393  1190  3000               	movlw	0
  7394  1191  1803               	skipnc
  7395  1192  3001               	movlw	1
  7396  1193  07B8               	addwf	___xxtofl@arg+3,f
  7397  1194                     l2882:
  7398  1194  3001               	movlw	1
  7399  1195                     u4815:
  7400  1195  1003               	clrc
  7401  1196  0CB8               	rrf	___xxtofl@arg+3,f
  7402  1197  0CB7               	rrf	___xxtofl@arg+2,f
  7403  1198  0CB6               	rrf	___xxtofl@arg+1,f
  7404  1199  0CB5               	rrf	___xxtofl@arg,f
  7405  119A  3EFF               	addlw	-1
  7406  119B  1D03               	skipz
  7407  119C  2995               	goto	u4815
  7408  119D                     l742:
  7409  119D  30FF               	movlw	255
  7410  119E  0538               	andwf	___xxtofl@arg+3,w
  7411  119F  1D03               	btfss	3,2
  7412  11A0  29A2               	goto	u4821
  7413  11A1  29A3               	goto	u4820
  7414  11A2                     u4821:
  7415  11A2  2982               	goto	l2878
  7416  11A3                     u4820:
  7417  11A3  29AF               	goto	l2886
  7418  11A4                     l2884:
  7419  11A4  3001               	movlw	1
  7420  11A5  02B4               	subwf	___xxtofl@exp,f
  7421  11A6  3001               	movlw	1
  7422  11A7  00AF               	movwf	??___xxtofl
  7423  11A8                     u4835:
  7424  11A8  1003               	clrc
  7425  11A9  0DB5               	rlf	___xxtofl@arg,f
  7426  11AA  0DB6               	rlf	___xxtofl@arg+1,f
  7427  11AB  0DB7               	rlf	___xxtofl@arg+2,f
  7428  11AC  0DB8               	rlf	___xxtofl@arg+3,f
  7429  11AD  0BAF               	decfsz	??___xxtofl,f
  7430  11AE  29A8               	goto	u4835
  7431  11AF                     l2886:
  7432  11AF  1BB7               	btfsc	___xxtofl@arg+2,7
  7433  11B0  29B2               	goto	u4841
  7434  11B1  29B3               	goto	u4840
  7435  11B2                     u4841:
  7436  11B2  29B9               	goto	l749
  7437  11B3                     u4840:
  7438  11B3                     l2888:
  7439  11B3  3002               	movlw	2
  7440  11B4  0234               	subwf	___xxtofl@exp,w
  7441  11B5  1803               	skipnc
  7442  11B6  29B8               	goto	u4851
  7443  11B7  29B9               	goto	u4850
  7444  11B8                     u4851:
  7445  11B8  29A4               	goto	l2884
  7446  11B9                     u4850:
  7447  11B9                     l749:
  7448  11B9  1834               	btfsc	___xxtofl@exp,0
  7449  11BA  29BC               	goto	u4861
  7450  11BB  29BD               	goto	u4860
  7451  11BC                     u4861:
  7452  11BC  29C5               	goto	l750
  7453  11BD                     u4860:
  7454  11BD                     l2890:
  7455  11BD  30FF               	movlw	255
  7456  11BE  05B5               	andwf	___xxtofl@arg,f
  7457  11BF  30FF               	movlw	255
  7458  11C0  05B6               	andwf	___xxtofl@arg+1,f
  7459  11C1  307F               	movlw	127
  7460  11C2  05B7               	andwf	___xxtofl@arg+2,f
  7461  11C3  30FF               	movlw	255
  7462  11C4  05B8               	andwf	___xxtofl@arg+3,f
  7463  11C5                     l750:
  7464  11C5  1003               	clrc
  7465  11C6  0CB4               	rrf	___xxtofl@exp,f
  7466  11C7                     l2892:
  7467  11C7  0834               	movf	___xxtofl@exp,w
  7468  11C8  00AF               	movwf	??___xxtofl
  7469  11C9  01B0               	clrf	??___xxtofl+1
  7470  11CA  01B1               	clrf	??___xxtofl+2
  7471  11CB  01B2               	clrf	??___xxtofl+3
  7472  11CC  3018               	movlw	24
  7473  11CD                     u4875:
  7474  11CD  1003               	clrc
  7475  11CE  0DAF               	rlf	??___xxtofl,f
  7476  11CF  0DB0               	rlf	??___xxtofl+1,f
  7477  11D0  0DB1               	rlf	??___xxtofl+2,f
  7478  11D1  0DB2               	rlf	??___xxtofl+3,f
  7479  11D2                     u4870:
  7480  11D2  3EFF               	addlw	-1
  7481  11D3  1D03               	skipz
  7482  11D4  29CD               	goto	u4875
  7483  11D5  082F               	movf	??___xxtofl,w
  7484  11D6  04B5               	iorwf	___xxtofl@arg,f
  7485  11D7  0830               	movf	??___xxtofl+1,w
  7486  11D8  04B6               	iorwf	___xxtofl@arg+1,f
  7487  11D9  0831               	movf	??___xxtofl+2,w
  7488  11DA  04B7               	iorwf	___xxtofl@arg+2,f
  7489  11DB  0832               	movf	??___xxtofl+3,w
  7490  11DC  04B8               	iorwf	___xxtofl@arg+3,f
  7491  11DD                     l2894:
  7492  11DD  0833               	movf	___xxtofl@sign,w
  7493  11DE  1903               	btfsc	3,2
  7494  11DF  29E1               	goto	u4881
  7495  11E0  29E2               	goto	u4880
  7496  11E1                     u4881:
  7497  11E1  29E7               	goto	l2900
  7498  11E2                     u4880:
  7499  11E2                     l2896:
  7500  11E2  1FAE               	btfss	___xxtofl@val+3,7
  7501  11E3  29E5               	goto	u4891
  7502  11E4  29E6               	goto	u4890
  7503  11E5                     u4891:
  7504  11E5  29E7               	goto	l2900
  7505  11E6                     u4890:
  7506  11E6                     l2898:
  7507  11E6  17B8               	bsf	___xxtofl@arg+3,7
  7508  11E7                     l2900:
  7509  11E7  0838               	movf	___xxtofl@arg+3,w
  7510  11E8  00AE               	movwf	?___xxtofl+3
  7511  11E9  0837               	movf	___xxtofl@arg+2,w
  7512  11EA  00AD               	movwf	?___xxtofl+2
  7513  11EB  0836               	movf	___xxtofl@arg+1,w
  7514  11EC  00AC               	movwf	?___xxtofl+1
  7515  11ED  0835               	movf	___xxtofl@arg,w
  7516  11EE  00AB               	movwf	?___xxtofl
  7517  11EF                     l738:
  7518  11EF  0008               	return
  7519  11F0                     __end_of___xxtofl:
  7520                           
  7521                           	psect	text15
  7522  1BA5                     __ptext15:	
  7523 ;; *************** function ___wmul *****************
  7524 ;; Defined at:
  7525 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;  multiplier      2    4[COMMON] unsigned int 
  7528 ;;  multiplicand    2    6[COMMON] unsigned int 
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;  product         2    8[COMMON] unsigned int 
  7531 ;; Return value:  Size  Location     Type
  7532 ;;                  2    4[COMMON] unsigned int 
  7533 ;; Registers used:
  7534 ;;		wreg, status,2, status,0
  7535 ;; Tracked objects:
  7536 ;;		On entry : 0/0
  7537 ;;		On exit  : 0/0
  7538 ;;		Unchanged: 0/0
  7539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7540 ;;      Params:         4       0       0       0       0
  7541 ;;      Locals:         2       0       0       0       0
  7542 ;;      Temps:          0       0       0       0       0
  7543 ;;      Totals:         6       0       0       0       0
  7544 ;;Total ram usage:        6 bytes
  7545 ;; Hardware stack levels used:    1
  7546 ;; Hardware stack levels required when called:    1
  7547 ;; This function calls:
  7548 ;;		Nothing
  7549 ;; This function is called by:
  7550 ;;		_conversion
  7551 ;;		_sprintf
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           
  7556                           ;psect for function ___wmul
  7557  1BA5                     ___wmul:
  7558  1BA5                     l2720:	
  7559                           ;incstack = 0
  7560                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7561                           
  7562  1BA5  01F8               	clrf	___wmul@product
  7563  1BA6  01F9               	clrf	___wmul@product+1
  7564  1BA7                     l2722:
  7565  1BA7  1C74               	btfss	___wmul@multiplier,0
  7566  1BA8  2BAA               	goto	u4381
  7567  1BA9  2BAB               	goto	u4380
  7568  1BAA                     u4381:
  7569  1BAA  2BB1               	goto	l269
  7570  1BAB                     u4380:
  7571  1BAB                     l2724:
  7572  1BAB  0876               	movf	___wmul@multiplicand,w
  7573  1BAC  07F8               	addwf	___wmul@product,f
  7574  1BAD  1803               	skipnc
  7575  1BAE  0AF9               	incf	___wmul@product+1,f
  7576  1BAF  0877               	movf	___wmul@multiplicand+1,w
  7577  1BB0  07F9               	addwf	___wmul@product+1,f
  7578  1BB1                     l269:
  7579  1BB1  3001               	movlw	1
  7580  1BB2                     u4395:
  7581  1BB2  1003               	clrc
  7582  1BB3  0DF6               	rlf	___wmul@multiplicand,f
  7583  1BB4  0DF7               	rlf	___wmul@multiplicand+1,f
  7584  1BB5  3EFF               	addlw	-1
  7585  1BB6  1D03               	skipz
  7586  1BB7  2BB2               	goto	u4395
  7587  1BB8                     l2726:
  7588  1BB8  3001               	movlw	1
  7589  1BB9                     u4405:
  7590  1BB9  1003               	clrc
  7591  1BBA  0CF5               	rrf	___wmul@multiplier+1,f
  7592  1BBB  0CF4               	rrf	___wmul@multiplier,f
  7593  1BBC  3EFF               	addlw	-1
  7594  1BBD  1D03               	skipz
  7595  1BBE  2BB9               	goto	u4405
  7596  1BBF                     l2728:
  7597  1BBF  0874               	movf	___wmul@multiplier,w
  7598  1BC0  0475               	iorwf	___wmul@multiplier+1,w
  7599  1BC1  1D03               	btfss	3,2
  7600  1BC2  2BC4               	goto	u4411
  7601  1BC3  2BC5               	goto	u4410
  7602  1BC4                     u4411:
  7603  1BC4  2BA7               	goto	l2722
  7604  1BC5                     u4410:
  7605  1BC5                     l2730:
  7606  1BC5  0879               	movf	___wmul@product+1,w
  7607  1BC6  00F5               	movwf	?___wmul+1
  7608  1BC7  0878               	movf	___wmul@product,w
  7609  1BC8  00F4               	movwf	?___wmul
  7610  1BC9                     l271:
  7611  1BC9  0008               	return
  7612  1BCA                     __end_of___wmul:
  7613                           
  7614                           	psect	text16
  7615  07A8                     __ptext16:	
  7616 ;; *************** function ___llmod *****************
  7617 ;; Defined at:
  7618 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;  divisor         4    0[BANK0 ] unsigned long 
  7621 ;;  dividend        4    4[BANK0 ] unsigned long 
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;  counter         1    5[COMMON] unsigned char 
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  4    0[BANK0 ] unsigned long 
  7626 ;; Registers used:
  7627 ;;		wreg, status,2, status,0
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7633 ;;      Params:         0       8       0       0       0
  7634 ;;      Locals:         1       0       0       0       0
  7635 ;;      Temps:          1       0       0       0       0
  7636 ;;      Totals:         2       8       0       0       0
  7637 ;;Total ram usage:       10 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; Hardware stack levels required when called:    1
  7640 ;; This function calls:
  7641 ;;		Nothing
  7642 ;; This function is called by:
  7643 ;;		_sprintf
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           
  7648                           ;psect for function ___llmod
  7649  07A8                     ___llmod:
  7650  07A8                     l2834:	
  7651                           ;incstack = 0
  7652                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7653                           
  7654  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  7655  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  7656  07AA  0823               	movf	___llmod@divisor+3,w
  7657  07AB  0422               	iorwf	___llmod@divisor+2,w
  7658  07AC  0421               	iorwf	___llmod@divisor+1,w
  7659  07AD  0420               	iorwf	___llmod@divisor,w
  7660  07AE  1903               	skipnz
  7661  07AF  2FB1               	goto	u4701
  7662  07B0  2FB2               	goto	u4700
  7663  07B1                     u4701:
  7664  07B1  2FF5               	goto	l2850
  7665  07B2                     u4700:
  7666  07B2                     l2836:
  7667  07B2  01F5               	clrf	___llmod@counter
  7668  07B3  0AF5               	incf	___llmod@counter,f
  7669  07B4  2FC2               	goto	l2840
  7670  07B5                     l2838:
  7671  07B5  3001               	movlw	1
  7672  07B6  00F4               	movwf	??___llmod
  7673  07B7                     u4715:
  7674  07B7  1003               	clrc
  7675  07B8  0DA0               	rlf	___llmod@divisor,f
  7676  07B9  0DA1               	rlf	___llmod@divisor+1,f
  7677  07BA  0DA2               	rlf	___llmod@divisor+2,f
  7678  07BB  0DA3               	rlf	___llmod@divisor+3,f
  7679  07BC  0BF4               	decfsz	??___llmod,f
  7680  07BD  2FB7               	goto	u4715
  7681  07BE  3001               	movlw	1
  7682  07BF  00F4               	movwf	??___llmod
  7683  07C0  0874               	movf	??___llmod,w
  7684  07C1  07F5               	addwf	___llmod@counter,f
  7685  07C2                     l2840:
  7686  07C2  1FA3               	btfss	___llmod@divisor+3,7
  7687  07C3  2FC5               	goto	u4721
  7688  07C4  2FC6               	goto	u4720
  7689  07C5                     u4721:
  7690  07C5  2FB5               	goto	l2838
  7691  07C6                     u4720:
  7692  07C6                     l2842:
  7693  07C6  0823               	movf	___llmod@divisor+3,w
  7694  07C7  0227               	subwf	___llmod@dividend+3,w
  7695  07C8  1D03               	skipz
  7696  07C9  2FD4               	goto	u4735
  7697  07CA  0822               	movf	___llmod@divisor+2,w
  7698  07CB  0226               	subwf	___llmod@dividend+2,w
  7699  07CC  1D03               	skipz
  7700  07CD  2FD4               	goto	u4735
  7701  07CE  0821               	movf	___llmod@divisor+1,w
  7702  07CF  0225               	subwf	___llmod@dividend+1,w
  7703  07D0  1D03               	skipz
  7704  07D1  2FD4               	goto	u4735
  7705  07D2  0820               	movf	___llmod@divisor,w
  7706  07D3  0224               	subwf	___llmod@dividend,w
  7707  07D4                     u4735:
  7708  07D4  1C03               	skipc
  7709  07D5  2FD7               	goto	u4731
  7710  07D6  2FD8               	goto	u4730
  7711  07D7                     u4731:
  7712  07D7  2FE6               	goto	l2846
  7713  07D8                     u4730:
  7714  07D8                     l2844:
  7715  07D8  0820               	movf	___llmod@divisor,w
  7716  07D9  02A4               	subwf	___llmod@dividend,f
  7717  07DA  0821               	movf	___llmod@divisor+1,w
  7718  07DB  1C03               	skipc
  7719  07DC  0F21               	incfsz	___llmod@divisor+1,w
  7720  07DD  02A5               	subwf	___llmod@dividend+1,f
  7721  07DE  0822               	movf	___llmod@divisor+2,w
  7722  07DF  1C03               	skipc
  7723  07E0  0F22               	incfsz	___llmod@divisor+2,w
  7724  07E1  02A6               	subwf	___llmod@dividend+2,f
  7725  07E2  0823               	movf	___llmod@divisor+3,w
  7726  07E3  1C03               	skipc
  7727  07E4  0F23               	incfsz	___llmod@divisor+3,w
  7728  07E5  02A7               	subwf	___llmod@dividend+3,f
  7729  07E6                     l2846:
  7730  07E6  3001               	movlw	1
  7731  07E7                     u4745:
  7732  07E7  1003               	clrc
  7733  07E8  0CA3               	rrf	___llmod@divisor+3,f
  7734  07E9  0CA2               	rrf	___llmod@divisor+2,f
  7735  07EA  0CA1               	rrf	___llmod@divisor+1,f
  7736  07EB  0CA0               	rrf	___llmod@divisor,f
  7737  07EC  3EFF               	addlw	-1
  7738  07ED  1D03               	skipz
  7739  07EE  2FE7               	goto	u4745
  7740  07EF                     l2848:
  7741  07EF  3001               	movlw	1
  7742  07F0  02F5               	subwf	___llmod@counter,f
  7743  07F1  1D03               	btfss	3,2
  7744  07F2  2FF4               	goto	u4751
  7745  07F3  2FF5               	goto	u4750
  7746  07F4                     u4751:
  7747  07F4  2FC6               	goto	l2842
  7748  07F5                     u4750:
  7749  07F5                     l2850:
  7750  07F5  0827               	movf	___llmod@dividend+3,w
  7751  07F6  00A3               	movwf	?___llmod+3
  7752  07F7  0826               	movf	___llmod@dividend+2,w
  7753  07F8  00A2               	movwf	?___llmod+2
  7754  07F9  0825               	movf	___llmod@dividend+1,w
  7755  07FA  00A1               	movwf	?___llmod+1
  7756  07FB  0824               	movf	___llmod@dividend,w
  7757  07FC  00A0               	movwf	?___llmod
  7758  07FD                     l525:
  7759  07FD  0008               	return
  7760  07FE                     __end_of___llmod:
  7761                           
  7762                           	psect	text17
  7763  1D79                     __ptext17:	
  7764 ;; *************** function ___lldiv *****************
  7765 ;; Defined at:
  7766 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7767 ;; Parameters:    Size  Location     Type
  7768 ;;  divisor         4    0[BANK0 ] unsigned long 
  7769 ;;  dividend        4    4[BANK0 ] unsigned long 
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;  quotient        4    5[COMMON] unsigned long 
  7772 ;;  counter         1    9[COMMON] unsigned char 
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  4    0[BANK0 ] unsigned long 
  7775 ;; Registers used:
  7776 ;;		wreg, status,2, status,0
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7782 ;;      Params:         0       8       0       0       0
  7783 ;;      Locals:         5       0       0       0       0
  7784 ;;      Temps:          1       0       0       0       0
  7785 ;;      Totals:         6       8       0       0       0
  7786 ;;Total ram usage:       14 bytes
  7787 ;; Hardware stack levels used:    1
  7788 ;; Hardware stack levels required when called:    1
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		_sprintf
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           
  7797                           ;psect for function ___lldiv
  7798  1D79                     ___lldiv:
  7799  1D79                     l2734:	
  7800                           ;incstack = 0
  7801                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7802                           
  7803  1D79  3000               	movlw	0
  7804  1D7A  00F8               	movwf	___lldiv@quotient+3
  7805  1D7B  3000               	movlw	0
  7806  1D7C  00F7               	movwf	___lldiv@quotient+2
  7807  1D7D  3000               	movlw	0
  7808  1D7E  00F6               	movwf	___lldiv@quotient+1
  7809  1D7F  3000               	movlw	0
  7810  1D80  00F5               	movwf	___lldiv@quotient
  7811  1D81  1283               	bcf	3,5	;RP0=0, select bank0
  7812  1D82  1303               	bcf	3,6	;RP1=0, select bank0
  7813  1D83  0823               	movf	___lldiv@divisor+3,w
  7814  1D84  0422               	iorwf	___lldiv@divisor+2,w
  7815  1D85  0421               	iorwf	___lldiv@divisor+1,w
  7816  1D86  0420               	iorwf	___lldiv@divisor,w
  7817  1D87  1903               	skipnz
  7818  1D88  2D8A               	goto	u4421
  7819  1D89  2D8B               	goto	u4420
  7820  1D8A                     u4421:
  7821  1D8A  2DD8               	goto	l2754
  7822  1D8B                     u4420:
  7823  1D8B                     l2736:
  7824  1D8B  01F9               	clrf	___lldiv@counter
  7825  1D8C  0AF9               	incf	___lldiv@counter,f
  7826  1D8D  2D9B               	goto	l2740
  7827  1D8E                     l2738:
  7828  1D8E  3001               	movlw	1
  7829  1D8F  00F4               	movwf	??___lldiv
  7830  1D90                     u4435:
  7831  1D90  1003               	clrc
  7832  1D91  0DA0               	rlf	___lldiv@divisor,f
  7833  1D92  0DA1               	rlf	___lldiv@divisor+1,f
  7834  1D93  0DA2               	rlf	___lldiv@divisor+2,f
  7835  1D94  0DA3               	rlf	___lldiv@divisor+3,f
  7836  1D95  0BF4               	decfsz	??___lldiv,f
  7837  1D96  2D90               	goto	u4435
  7838  1D97  3001               	movlw	1
  7839  1D98  00F4               	movwf	??___lldiv
  7840  1D99  0874               	movf	??___lldiv,w
  7841  1D9A  07F9               	addwf	___lldiv@counter,f
  7842  1D9B                     l2740:
  7843  1D9B  1FA3               	btfss	___lldiv@divisor+3,7
  7844  1D9C  2D9E               	goto	u4441
  7845  1D9D  2D9F               	goto	u4440
  7846  1D9E                     u4441:
  7847  1D9E  2D8E               	goto	l2738
  7848  1D9F                     u4440:
  7849  1D9F                     l2742:
  7850  1D9F  3001               	movlw	1
  7851  1DA0  00F4               	movwf	??___lldiv
  7852  1DA1                     u4455:
  7853  1DA1  1003               	clrc
  7854  1DA2  0DF5               	rlf	___lldiv@quotient,f
  7855  1DA3  0DF6               	rlf	___lldiv@quotient+1,f
  7856  1DA4  0DF7               	rlf	___lldiv@quotient+2,f
  7857  1DA5  0DF8               	rlf	___lldiv@quotient+3,f
  7858  1DA6  0BF4               	decfsz	??___lldiv,f
  7859  1DA7  2DA1               	goto	u4455
  7860  1DA8                     l2744:
  7861  1DA8  0823               	movf	___lldiv@divisor+3,w
  7862  1DA9  0227               	subwf	___lldiv@dividend+3,w
  7863  1DAA  1D03               	skipz
  7864  1DAB  2DB6               	goto	u4465
  7865  1DAC  0822               	movf	___lldiv@divisor+2,w
  7866  1DAD  0226               	subwf	___lldiv@dividend+2,w
  7867  1DAE  1D03               	skipz
  7868  1DAF  2DB6               	goto	u4465
  7869  1DB0  0821               	movf	___lldiv@divisor+1,w
  7870  1DB1  0225               	subwf	___lldiv@dividend+1,w
  7871  1DB2  1D03               	skipz
  7872  1DB3  2DB6               	goto	u4465
  7873  1DB4  0820               	movf	___lldiv@divisor,w
  7874  1DB5  0224               	subwf	___lldiv@dividend,w
  7875  1DB6                     u4465:
  7876  1DB6  1C03               	skipc
  7877  1DB7  2DB9               	goto	u4461
  7878  1DB8  2DBA               	goto	u4460
  7879  1DB9                     u4461:
  7880  1DB9  2DC9               	goto	l2750
  7881  1DBA                     u4460:
  7882  1DBA                     l2746:
  7883  1DBA  0820               	movf	___lldiv@divisor,w
  7884  1DBB  02A4               	subwf	___lldiv@dividend,f
  7885  1DBC  0821               	movf	___lldiv@divisor+1,w
  7886  1DBD  1C03               	skipc
  7887  1DBE  0F21               	incfsz	___lldiv@divisor+1,w
  7888  1DBF  02A5               	subwf	___lldiv@dividend+1,f
  7889  1DC0  0822               	movf	___lldiv@divisor+2,w
  7890  1DC1  1C03               	skipc
  7891  1DC2  0F22               	incfsz	___lldiv@divisor+2,w
  7892  1DC3  02A6               	subwf	___lldiv@dividend+2,f
  7893  1DC4  0823               	movf	___lldiv@divisor+3,w
  7894  1DC5  1C03               	skipc
  7895  1DC6  0F23               	incfsz	___lldiv@divisor+3,w
  7896  1DC7  02A7               	subwf	___lldiv@dividend+3,f
  7897  1DC8                     l2748:
  7898  1DC8  1475               	bsf	___lldiv@quotient,0
  7899  1DC9                     l2750:
  7900  1DC9  3001               	movlw	1
  7901  1DCA                     u4475:
  7902  1DCA  1003               	clrc
  7903  1DCB  0CA3               	rrf	___lldiv@divisor+3,f
  7904  1DCC  0CA2               	rrf	___lldiv@divisor+2,f
  7905  1DCD  0CA1               	rrf	___lldiv@divisor+1,f
  7906  1DCE  0CA0               	rrf	___lldiv@divisor,f
  7907  1DCF  3EFF               	addlw	-1
  7908  1DD0  1D03               	skipz
  7909  1DD1  2DCA               	goto	u4475
  7910  1DD2                     l2752:
  7911  1DD2  3001               	movlw	1
  7912  1DD3  02F9               	subwf	___lldiv@counter,f
  7913  1DD4  1D03               	btfss	3,2
  7914  1DD5  2DD7               	goto	u4481
  7915  1DD6  2DD8               	goto	u4480
  7916  1DD7                     u4481:
  7917  1DD7  2D9F               	goto	l2742
  7918  1DD8                     u4480:
  7919  1DD8                     l2754:
  7920  1DD8  0878               	movf	___lldiv@quotient+3,w
  7921  1DD9  00A3               	movwf	?___lldiv+3
  7922  1DDA  0877               	movf	___lldiv@quotient+2,w
  7923  1DDB  00A2               	movwf	?___lldiv+2
  7924  1DDC  0876               	movf	___lldiv@quotient+1,w
  7925  1DDD  00A1               	movwf	?___lldiv+1
  7926  1DDE  0875               	movf	___lldiv@quotient,w
  7927  1DDF  00A0               	movwf	?___lldiv
  7928  1DE0                     l305:
  7929  1DE0  0008               	return
  7930  1DE1                     __end_of___lldiv:
  7931                           
  7932                           	psect	text18
  7933  1E4A                     __ptext18:	
  7934 ;; *************** function ___fltol *****************
  7935 ;; Defined at:
  7936 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;  f1              4   56[BANK0 ] unsigned long 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;  exp1            1   66[BANK0 ] unsigned char 
  7941 ;;  sign1           1   65[BANK0 ] unsigned char 
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  4   56[BANK0 ] long 
  7944 ;; Registers used:
  7945 ;;		wreg, status,2, status,0
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7951 ;;      Params:         0       4       0       0       0
  7952 ;;      Locals:         0       2       0       0       0
  7953 ;;      Temps:          0       5       0       0       0
  7954 ;;      Totals:         0      11       0       0       0
  7955 ;;Total ram usage:       11 bytes
  7956 ;; Hardware stack levels used:    1
  7957 ;; Hardware stack levels required when called:    1
  7958 ;; This function calls:
  7959 ;;		Nothing
  7960 ;; This function is called by:
  7961 ;;		_sprintf
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           
  7966                           ;psect for function ___fltol
  7967  1E4A                     ___fltol:
  7968  1E4A                     l2798:	
  7969                           ;incstack = 0
  7970                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7971                           
  7972  1E4A  1003               	clrc
  7973  1E4B  1283               	bcf	3,5	;RP0=0, select bank0
  7974  1E4C  1303               	bcf	3,6	;RP1=0, select bank0
  7975  1E4D  0D5A               	rlf	___fltol@f1+2,w
  7976  1E4E  0D5B               	rlf	___fltol@f1+3,w
  7977  1E4F  00DC               	movwf	??___fltol
  7978  1E50  085C               	movf	??___fltol,w
  7979  1E51  00E2               	movwf	___fltol@exp1
  7980  1E52  0862               	movf	___fltol@exp1,w
  7981  1E53  1D03               	btfss	3,2
  7982  1E54  2E56               	goto	u4601
  7983  1E55  2E57               	goto	u4600
  7984  1E56                     u4601:
  7985  1E56  2E60               	goto	l2804
  7986  1E57                     u4600:
  7987  1E57                     l2800:
  7988  1E57  3000               	movlw	0
  7989  1E58  00DB               	movwf	?___fltol+3
  7990  1E59  3000               	movlw	0
  7991  1E5A  00DA               	movwf	?___fltol+2
  7992  1E5B  3000               	movlw	0
  7993  1E5C  00D9               	movwf	?___fltol+1
  7994  1E5D  3000               	movlw	0
  7995  1E5E  00D8               	movwf	?___fltol
  7996  1E5F  2EC5               	goto	l472
  7997  1E60                     l2804:
  7998  1E60  0858               	movf	___fltol@f1,w
  7999  1E61  00DC               	movwf	??___fltol
  8000  1E62  0859               	movf	___fltol@f1+1,w
  8001  1E63  00DD               	movwf	??___fltol+1
  8002  1E64  085A               	movf	___fltol@f1+2,w
  8003  1E65  00DE               	movwf	??___fltol+2
  8004  1E66  085B               	movf	___fltol@f1+3,w
  8005  1E67  00DF               	movwf	??___fltol+3
  8006  1E68  301F               	movlw	31
  8007  1E69                     u4615:
  8008  1E69  1003               	clrc
  8009  1E6A  0CDF               	rrf	??___fltol+3,f
  8010  1E6B  0CDE               	rrf	??___fltol+2,f
  8011  1E6C  0CDD               	rrf	??___fltol+1,f
  8012  1E6D  0CDC               	rrf	??___fltol,f
  8013  1E6E                     u4610:
  8014  1E6E  3EFF               	addlw	-1
  8015  1E6F  1D03               	skipz
  8016  1E70  2E69               	goto	u4615
  8017  1E71  085C               	movf	??___fltol,w
  8018  1E72  00E0               	movwf	??___fltol+4
  8019  1E73  0860               	movf	??___fltol+4,w
  8020  1E74  00E1               	movwf	___fltol@sign1
  8021  1E75                     l2806:
  8022  1E75  17DA               	bsf	___fltol@f1+2,7
  8023  1E76                     l2808:
  8024  1E76  30FF               	movlw	255
  8025  1E77  05D8               	andwf	___fltol@f1,f
  8026  1E78  30FF               	movlw	255
  8027  1E79  05D9               	andwf	___fltol@f1+1,f
  8028  1E7A  30FF               	movlw	255
  8029  1E7B  05DA               	andwf	___fltol@f1+2,f
  8030  1E7C  3000               	movlw	0
  8031  1E7D  05DB               	andwf	___fltol@f1+3,f
  8032  1E7E                     l2810:
  8033  1E7E  3096               	movlw	150
  8034  1E7F  02E2               	subwf	___fltol@exp1,f
  8035  1E80                     l2812:
  8036  1E80  1FE2               	btfss	___fltol@exp1,7
  8037  1E81  2E83               	goto	u4621
  8038  1E82  2E84               	goto	u4620
  8039  1E83                     u4621:
  8040  1E83  2E9E               	goto	l2822
  8041  1E84                     u4620:
  8042  1E84                     l2814:
  8043  1E84  0862               	movf	___fltol@exp1,w
  8044  1E85  3A80               	xorlw	128
  8045  1E86  3E97               	addlw	151
  8046  1E87  1803               	skipnc
  8047  1E88  2E8A               	goto	u4631
  8048  1E89  2E8B               	goto	u4630
  8049  1E8A                     u4631:
  8050  1E8A  2E8C               	goto	l2820
  8051  1E8B                     u4630:
  8052  1E8B  2E57               	goto	l2800
  8053  1E8C                     l2820:
  8054  1E8C  3001               	movlw	1
  8055  1E8D                     u4645:
  8056  1E8D  1003               	clrc
  8057  1E8E  0CDB               	rrf	___fltol@f1+3,f
  8058  1E8F  0CDA               	rrf	___fltol@f1+2,f
  8059  1E90  0CD9               	rrf	___fltol@f1+1,f
  8060  1E91  0CD8               	rrf	___fltol@f1,f
  8061  1E92  3EFF               	addlw	-1
  8062  1E93  1D03               	skipz
  8063  1E94  2E8D               	goto	u4645
  8064  1E95  3001               	movlw	1
  8065  1E96  00DC               	movwf	??___fltol
  8066  1E97  085C               	movf	??___fltol,w
  8067  1E98  07E2               	addwf	___fltol@exp1,f
  8068  1E99  1D03               	btfss	3,2
  8069  1E9A  2E9C               	goto	u4651
  8070  1E9B  2E9D               	goto	u4650
  8071  1E9C                     u4651:
  8072  1E9C  2E8C               	goto	l2820
  8073  1E9D                     u4650:
  8074  1E9D  2EB5               	goto	l2830
  8075  1E9E                     l2822:
  8076  1E9E  3020               	movlw	32
  8077  1E9F  0262               	subwf	___fltol@exp1,w
  8078  1EA0  1C03               	skipc
  8079  1EA1  2EA3               	goto	u4661
  8080  1EA2  2EA4               	goto	u4660
  8081  1EA3                     u4661:
  8082  1EA3  2EB0               	goto	l479
  8083  1EA4                     u4660:
  8084  1EA4  2E57               	goto	l2800
  8085  1EA5                     l2828:
  8086  1EA5  3001               	movlw	1
  8087  1EA6  00DC               	movwf	??___fltol
  8088  1EA7                     u4675:
  8089  1EA7  1003               	clrc
  8090  1EA8  0DD8               	rlf	___fltol@f1,f
  8091  1EA9  0DD9               	rlf	___fltol@f1+1,f
  8092  1EAA  0DDA               	rlf	___fltol@f1+2,f
  8093  1EAB  0DDB               	rlf	___fltol@f1+3,f
  8094  1EAC  0BDC               	decfsz	??___fltol,f
  8095  1EAD  2EA7               	goto	u4675
  8096  1EAE  3001               	movlw	1
  8097  1EAF  02E2               	subwf	___fltol@exp1,f
  8098  1EB0                     l479:
  8099  1EB0  0862               	movf	___fltol@exp1,w
  8100  1EB1  1D03               	btfss	3,2
  8101  1EB2  2EB4               	goto	u4681
  8102  1EB3  2EB5               	goto	u4680
  8103  1EB4                     u4681:
  8104  1EB4  2EA5               	goto	l2828
  8105  1EB5                     u4680:
  8106  1EB5                     l2830:
  8107  1EB5  0861               	movf	___fltol@sign1,w
  8108  1EB6  1903               	btfsc	3,2
  8109  1EB7  2EB9               	goto	u4691
  8110  1EB8  2EBA               	goto	u4690
  8111  1EB9                     u4691:
  8112  1EB9  2EC5               	goto	l482
  8113  1EBA                     u4690:
  8114  1EBA                     l2832:
  8115  1EBA  09D8               	comf	___fltol@f1,f
  8116  1EBB  09D9               	comf	___fltol@f1+1,f
  8117  1EBC  09DA               	comf	___fltol@f1+2,f
  8118  1EBD  09DB               	comf	___fltol@f1+3,f
  8119  1EBE  0AD8               	incf	___fltol@f1,f
  8120  1EBF  1903               	skipnz
  8121  1EC0  0AD9               	incf	___fltol@f1+1,f
  8122  1EC1  1903               	skipnz
  8123  1EC2  0ADA               	incf	___fltol@f1+2,f
  8124  1EC3  1903               	skipnz
  8125  1EC4  0ADB               	incf	___fltol@f1+3,f
  8126  1EC5                     l482:
  8127  1EC5                     l472:
  8128  1EC5  0008               	return
  8129  1EC6                     __end_of___fltol:
  8130                           
  8131                           	psect	text19
  8132  1D29                     __ptext19:	
  8133 ;; *************** function ___flsub *****************
  8134 ;; Defined at:
  8135 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  a               4    0[BANK1 ] long 
  8138 ;;  b               4    4[BANK1 ] long 
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;		None
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  4    0[BANK1 ] long 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8150 ;;      Params:         0       0       8       0       0
  8151 ;;      Locals:         0       0       0       0       0
  8152 ;;      Temps:          0       0       0       0       0
  8153 ;;      Totals:         0       0       8       0       0
  8154 ;;Total ram usage:        8 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; Hardware stack levels required when called:    2
  8157 ;; This function calls:
  8158 ;;		___fladd
  8159 ;; This function is called by:
  8160 ;;		_sprintf
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164                           
  8165                           ;psect for function ___flsub
  8166  1D29                     ___flsub:
  8167  1D29                     l2854:	
  8168                           ;incstack = 0
  8169                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8170                           
  8171  1D29  3080               	movlw	128
  8172  1D2A  1683               	bsf	3,5	;RP0=1, select bank1
  8173  1D2B  1303               	bcf	3,6	;RP1=0, select bank1
  8174  1D2C  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8175  1D2D                     l2856:
  8176  1D2D  0827               	movf	(___flsub@b+3)^(0+128),w
  8177  1D2E  1283               	bcf	3,5	;RP0=0, select bank0
  8178  1D2F  1303               	bcf	3,6	;RP1=0, select bank0
  8179  1D30  00DC               	movwf	___fladd@b+3
  8180  1D31  1683               	bsf	3,5	;RP0=1, select bank1
  8181  1D32  1303               	bcf	3,6	;RP1=0, select bank1
  8182  1D33  0826               	movf	(___flsub@b+2)^(0+128),w
  8183  1D34  1283               	bcf	3,5	;RP0=0, select bank0
  8184  1D35  1303               	bcf	3,6	;RP1=0, select bank0
  8185  1D36  00DB               	movwf	___fladd@b+2
  8186  1D37  1683               	bsf	3,5	;RP0=1, select bank1
  8187  1D38  1303               	bcf	3,6	;RP1=0, select bank1
  8188  1D39  0825               	movf	(___flsub@b+1)^(0+128),w
  8189  1D3A  1283               	bcf	3,5	;RP0=0, select bank0
  8190  1D3B  1303               	bcf	3,6	;RP1=0, select bank0
  8191  1D3C  00DA               	movwf	___fladd@b+1
  8192  1D3D  1683               	bsf	3,5	;RP0=1, select bank1
  8193  1D3E  1303               	bcf	3,6	;RP1=0, select bank1
  8194  1D3F  0824               	movf	___flsub@b^(0+128),w
  8195  1D40  1283               	bcf	3,5	;RP0=0, select bank0
  8196  1D41  1303               	bcf	3,6	;RP1=0, select bank0
  8197  1D42  00D9               	movwf	___fladd@b
  8198  1D43  1683               	bsf	3,5	;RP0=1, select bank1
  8199  1D44  1303               	bcf	3,6	;RP1=0, select bank1
  8200  1D45  0823               	movf	(___flsub@a+3)^(0+128),w
  8201  1D46  1283               	bcf	3,5	;RP0=0, select bank0
  8202  1D47  1303               	bcf	3,6	;RP1=0, select bank0
  8203  1D48  00E0               	movwf	___fladd@a+3
  8204  1D49  1683               	bsf	3,5	;RP0=1, select bank1
  8205  1D4A  1303               	bcf	3,6	;RP1=0, select bank1
  8206  1D4B  0822               	movf	(___flsub@a+2)^(0+128),w
  8207  1D4C  1283               	bcf	3,5	;RP0=0, select bank0
  8208  1D4D  1303               	bcf	3,6	;RP1=0, select bank0
  8209  1D4E  00DF               	movwf	___fladd@a+2
  8210  1D4F  1683               	bsf	3,5	;RP0=1, select bank1
  8211  1D50  1303               	bcf	3,6	;RP1=0, select bank1
  8212  1D51  0821               	movf	(___flsub@a+1)^(0+128),w
  8213  1D52  1283               	bcf	3,5	;RP0=0, select bank0
  8214  1D53  1303               	bcf	3,6	;RP1=0, select bank0
  8215  1D54  00DE               	movwf	___fladd@a+1
  8216  1D55  1683               	bsf	3,5	;RP0=1, select bank1
  8217  1D56  1303               	bcf	3,6	;RP1=0, select bank1
  8218  1D57  0820               	movf	___flsub@a^(0+128),w
  8219  1D58  1283               	bcf	3,5	;RP0=0, select bank0
  8220  1D59  1303               	bcf	3,6	;RP1=0, select bank0
  8221  1D5A  00DD               	movwf	___fladd@a
  8222  1D5B  160A  118A  2578  160A  158A  	fcall	___fladd
  8223  1D60  1283               	bcf	3,5	;RP0=0, select bank0
  8224  1D61  1303               	bcf	3,6	;RP1=0, select bank0
  8225  1D62  085C               	movf	?___fladd+3,w
  8226  1D63  1683               	bsf	3,5	;RP0=1, select bank1
  8227  1D64  1303               	bcf	3,6	;RP1=0, select bank1
  8228  1D65  00A3               	movwf	(?___flsub+3)^(0+128)
  8229  1D66  1283               	bcf	3,5	;RP0=0, select bank0
  8230  1D67  1303               	bcf	3,6	;RP1=0, select bank0
  8231  1D68  085B               	movf	?___fladd+2,w
  8232  1D69  1683               	bsf	3,5	;RP0=1, select bank1
  8233  1D6A  1303               	bcf	3,6	;RP1=0, select bank1
  8234  1D6B  00A2               	movwf	(?___flsub+2)^(0+128)
  8235  1D6C  1283               	bcf	3,5	;RP0=0, select bank0
  8236  1D6D  1303               	bcf	3,6	;RP1=0, select bank0
  8237  1D6E  085A               	movf	?___fladd+1,w
  8238  1D6F  1683               	bsf	3,5	;RP0=1, select bank1
  8239  1D70  1303               	bcf	3,6	;RP1=0, select bank1
  8240  1D71  00A1               	movwf	(?___flsub+1)^(0+128)
  8241  1D72  1283               	bcf	3,5	;RP0=0, select bank0
  8242  1D73  1303               	bcf	3,6	;RP1=0, select bank0
  8243  1D74  0859               	movf	?___fladd,w
  8244  1D75  1683               	bsf	3,5	;RP0=1, select bank1
  8245  1D76  1303               	bcf	3,6	;RP1=0, select bank1
  8246  1D77  00A0               	movwf	?___flsub^(0+128)
  8247  1D78                     l642:
  8248  1D78  0008               	return
  8249  1D79                     __end_of___flsub:
  8250                           
  8251                           	psect	text20
  8252  1578                     __ptext20:	
  8253 ;; *************** function ___fladd *****************
  8254 ;; Defined at:
  8255 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  b               4   57[BANK0 ] long 
  8258 ;;  a               4   61[BANK0 ] long 
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;  grs             1   76[BANK0 ] unsigned char 
  8261 ;;  bexp            1   75[BANK0 ] unsigned char 
  8262 ;;  aexp            1   74[BANK0 ] unsigned char 
  8263 ;;  signs           1   73[BANK0 ] unsigned char 
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  4   57[BANK0 ] unsigned char 
  8266 ;; Registers used:
  8267 ;;		wreg, status,2, status,0, btemp+1
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8273 ;;      Params:         0       8       0       0       0
  8274 ;;      Locals:         0       4       0       0       0
  8275 ;;      Temps:          0       8       0       0       0
  8276 ;;      Totals:         0      20       0       0       0
  8277 ;;Total ram usage:       20 bytes
  8278 ;; Hardware stack levels used:    1
  8279 ;; Hardware stack levels required when called:    1
  8280 ;; This function calls:
  8281 ;;		Nothing
  8282 ;; This function is called by:
  8283 ;;		_sprintf
  8284 ;;		___flsub
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           
  8289                           ;psect for function ___fladd
  8290  1578                     ___fladd:
  8291  1578                     l2196:	
  8292                           ;incstack = 0
  8293                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8294                           
  8295  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8296  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8297  157A  085C               	movf	___fladd@b+3,w
  8298  157B  3980               	andlw	128
  8299  157C  00E1               	movwf	??___fladd
  8300  157D  0861               	movf	??___fladd,w
  8301  157E  00E9               	movwf	___fladd@signs
  8302  157F                     l2198:
  8303  157F  085C               	movf	___fladd@b+3,w
  8304  1580  00E1               	movwf	??___fladd
  8305  1581  0761               	addwf	??___fladd,w
  8306  1582  00E2               	movwf	??___fladd+1
  8307  1583  0862               	movf	??___fladd+1,w
  8308  1584  00EB               	movwf	___fladd@bexp
  8309  1585                     l2200:
  8310  1585  1FDB               	btfss	___fladd@b+2,7
  8311  1586  2D88               	goto	u3021
  8312  1587  2D89               	goto	u3020
  8313  1588                     u3021:
  8314  1588  2D8A               	goto	l2204
  8315  1589                     u3020:
  8316  1589                     l2202:
  8317  1589  146B               	bsf	___fladd@bexp,0
  8318  158A                     l2204:
  8319  158A  086B               	movf	___fladd@bexp,w
  8320  158B  1903               	btfsc	3,2
  8321  158C  2D8E               	goto	u3031
  8322  158D  2D8F               	goto	u3030
  8323  158E                     u3031:
  8324  158E  2D9F               	goto	l2214
  8325  158F                     u3030:
  8326  158F                     l2206:
  8327  158F  0A6B               	incf	___fladd@bexp,w
  8328  1590  1D03               	btfss	3,2
  8329  1591  2D93               	goto	u3041
  8330  1592  2D94               	goto	u3040
  8331  1593                     u3041:
  8332  1593  2D9C               	goto	l2210
  8333  1594                     u3040:
  8334  1594                     l2208:
  8335  1594  3000               	movlw	0
  8336  1595  00DC               	movwf	___fladd@b+3
  8337  1596  3000               	movlw	0
  8338  1597  00DB               	movwf	___fladd@b+2
  8339  1598  3000               	movlw	0
  8340  1599  00DA               	movwf	___fladd@b+1
  8341  159A  3000               	movlw	0
  8342  159B  00D9               	movwf	___fladd@b
  8343  159C                     l2210:
  8344  159C  17DB               	bsf	___fladd@b+2,7
  8345  159D                     l2212:
  8346  159D  01DC               	clrf	___fladd@b+3
  8347  159E  2DA7               	goto	l2216
  8348  159F                     l2214:
  8349  159F  3000               	movlw	0
  8350  15A0  00DC               	movwf	___fladd@b+3
  8351  15A1  3000               	movlw	0
  8352  15A2  00DB               	movwf	___fladd@b+2
  8353  15A3  3000               	movlw	0
  8354  15A4  00DA               	movwf	___fladd@b+1
  8355  15A5  3000               	movlw	0
  8356  15A6  00D9               	movwf	___fladd@b
  8357  15A7                     l2216:
  8358  15A7  0860               	movf	___fladd@a+3,w
  8359  15A8  3980               	andlw	128
  8360  15A9  00E1               	movwf	??___fladd
  8361  15AA  0861               	movf	??___fladd,w
  8362  15AB  00EA               	movwf	___fladd@aexp
  8363  15AC                     l2218:
  8364  15AC  086A               	movf	___fladd@aexp,w
  8365  15AD  0669               	xorwf	___fladd@signs,w
  8366  15AE  1903               	skipnz
  8367  15AF  2DB1               	goto	u3051
  8368  15B0  2DB2               	goto	u3050
  8369  15B1                     u3051:
  8370  15B1  2DB3               	goto	l2222
  8371  15B2                     u3050:
  8372  15B2                     l2220:
  8373  15B2  1769               	bsf	___fladd@signs,6
  8374  15B3                     l2222:
  8375  15B3  0860               	movf	___fladd@a+3,w
  8376  15B4  00E1               	movwf	??___fladd
  8377  15B5  0761               	addwf	??___fladd,w
  8378  15B6  00E2               	movwf	??___fladd+1
  8379  15B7  0862               	movf	??___fladd+1,w
  8380  15B8  00EA               	movwf	___fladd@aexp
  8381  15B9                     l2224:
  8382  15B9  1FDF               	btfss	___fladd@a+2,7
  8383  15BA  2DBC               	goto	u3061
  8384  15BB  2DBD               	goto	u3060
  8385  15BC                     u3061:
  8386  15BC  2DBE               	goto	l2228
  8387  15BD                     u3060:
  8388  15BD                     l2226:
  8389  15BD  146A               	bsf	___fladd@aexp,0
  8390  15BE                     l2228:
  8391  15BE  086A               	movf	___fladd@aexp,w
  8392  15BF  1903               	btfsc	3,2
  8393  15C0  2DC2               	goto	u3071
  8394  15C1  2DC3               	goto	u3070
  8395  15C2                     u3071:
  8396  15C2  2DD3               	goto	l2238
  8397  15C3                     u3070:
  8398  15C3                     l2230:
  8399  15C3  0A6A               	incf	___fladd@aexp,w
  8400  15C4  1D03               	btfss	3,2
  8401  15C5  2DC7               	goto	u3081
  8402  15C6  2DC8               	goto	u3080
  8403  15C7                     u3081:
  8404  15C7  2DD0               	goto	l2234
  8405  15C8                     u3080:
  8406  15C8                     l2232:
  8407  15C8  3000               	movlw	0
  8408  15C9  00E0               	movwf	___fladd@a+3
  8409  15CA  3000               	movlw	0
  8410  15CB  00DF               	movwf	___fladd@a+2
  8411  15CC  3000               	movlw	0
  8412  15CD  00DE               	movwf	___fladd@a+1
  8413  15CE  3000               	movlw	0
  8414  15CF  00DD               	movwf	___fladd@a
  8415  15D0                     l2234:
  8416  15D0  17DF               	bsf	___fladd@a+2,7
  8417  15D1                     l2236:
  8418  15D1  01E0               	clrf	___fladd@a+3
  8419  15D2  2DDB               	goto	l596
  8420  15D3                     l2238:
  8421  15D3  3000               	movlw	0
  8422  15D4  00E0               	movwf	___fladd@a+3
  8423  15D5  3000               	movlw	0
  8424  15D6  00DF               	movwf	___fladd@a+2
  8425  15D7  3000               	movlw	0
  8426  15D8  00DE               	movwf	___fladd@a+1
  8427  15D9  3000               	movlw	0
  8428  15DA  00DD               	movwf	___fladd@a
  8429  15DB                     l596:
  8430  15DB  086B               	movf	___fladd@bexp,w
  8431  15DC  026A               	subwf	___fladd@aexp,w
  8432  15DD  1803               	skipnc
  8433  15DE  2DE0               	goto	u3091
  8434  15DF  2DE1               	goto	u3090
  8435  15E0                     u3091:
  8436  15E0  2E25               	goto	l2274
  8437  15E1                     u3090:
  8438  15E1                     l2240:
  8439  15E1  1F69               	btfss	___fladd@signs,6
  8440  15E2  2DE4               	goto	u3101
  8441  15E3  2DE5               	goto	u3100
  8442  15E4                     u3101:
  8443  15E4  2DE9               	goto	l2244
  8444  15E5                     u3100:
  8445  15E5                     l2242:
  8446  15E5  3080               	movlw	128
  8447  15E6  00E1               	movwf	??___fladd
  8448  15E7  0861               	movf	??___fladd,w
  8449  15E8  06E9               	xorwf	___fladd@signs,f
  8450  15E9                     l2244:
  8451  15E9  086B               	movf	___fladd@bexp,w
  8452  15EA  00E1               	movwf	??___fladd
  8453  15EB  0861               	movf	??___fladd,w
  8454  15EC  00EC               	movwf	___fladd@grs
  8455  15ED                     l2246:
  8456  15ED  086A               	movf	___fladd@aexp,w
  8457  15EE  00E1               	movwf	??___fladd
  8458  15EF  0861               	movf	??___fladd,w
  8459  15F0  00EB               	movwf	___fladd@bexp
  8460  15F1                     l2248:
  8461  15F1  086C               	movf	___fladd@grs,w
  8462  15F2  00E1               	movwf	??___fladd
  8463  15F3  0861               	movf	??___fladd,w
  8464  15F4  00EA               	movwf	___fladd@aexp
  8465  15F5                     l2250:
  8466  15F5  0859               	movf	___fladd@b,w
  8467  15F6  00E1               	movwf	??___fladd
  8468  15F7  0861               	movf	??___fladd,w
  8469  15F8  00EC               	movwf	___fladd@grs
  8470  15F9                     l2252:
  8471  15F9  085D               	movf	___fladd@a,w
  8472  15FA  00E1               	movwf	??___fladd
  8473  15FB  0861               	movf	??___fladd,w
  8474  15FC  00D9               	movwf	___fladd@b
  8475  15FD                     l2254:
  8476  15FD  086C               	movf	___fladd@grs,w
  8477  15FE  00E1               	movwf	??___fladd
  8478  15FF  0861               	movf	??___fladd,w
  8479  1600  00DD               	movwf	___fladd@a
  8480  1601                     l2256:
  8481  1601  085A               	movf	___fladd@b+1,w
  8482  1602  00E1               	movwf	??___fladd
  8483  1603  0861               	movf	??___fladd,w
  8484  1604  00EC               	movwf	___fladd@grs
  8485  1605                     l2258:
  8486  1605  085E               	movf	___fladd@a+1,w
  8487  1606  00E1               	movwf	??___fladd
  8488  1607  0861               	movf	??___fladd,w
  8489  1608  00DA               	movwf	___fladd@b+1
  8490  1609                     l2260:
  8491  1609  086C               	movf	___fladd@grs,w
  8492  160A  00E1               	movwf	??___fladd
  8493  160B  0861               	movf	??___fladd,w
  8494  160C  00DE               	movwf	___fladd@a+1
  8495  160D                     l2262:
  8496  160D  085B               	movf	___fladd@b+2,w
  8497  160E  00E1               	movwf	??___fladd
  8498  160F  0861               	movf	??___fladd,w
  8499  1610  00EC               	movwf	___fladd@grs
  8500  1611                     l2264:
  8501  1611  085F               	movf	___fladd@a+2,w
  8502  1612  00E1               	movwf	??___fladd
  8503  1613  0861               	movf	??___fladd,w
  8504  1614  00DB               	movwf	___fladd@b+2
  8505  1615                     l2266:
  8506  1615  086C               	movf	___fladd@grs,w
  8507  1616  00E1               	movwf	??___fladd
  8508  1617  0861               	movf	??___fladd,w
  8509  1618  00DF               	movwf	___fladd@a+2
  8510  1619                     l2268:
  8511  1619  085C               	movf	___fladd@b+3,w
  8512  161A  00E1               	movwf	??___fladd
  8513  161B  0861               	movf	??___fladd,w
  8514  161C  00EC               	movwf	___fladd@grs
  8515  161D                     l2270:
  8516  161D  0860               	movf	___fladd@a+3,w
  8517  161E  00E1               	movwf	??___fladd
  8518  161F  0861               	movf	??___fladd,w
  8519  1620  00DC               	movwf	___fladd@b+3
  8520  1621                     l2272:
  8521  1621  086C               	movf	___fladd@grs,w
  8522  1622  00E1               	movwf	??___fladd
  8523  1623  0861               	movf	??___fladd,w
  8524  1624  00E0               	movwf	___fladd@a+3
  8525  1625                     l2274:
  8526  1625  01EC               	clrf	___fladd@grs
  8527  1626                     l2276:
  8528  1626  086A               	movf	___fladd@aexp,w
  8529  1627  00E1               	movwf	??___fladd
  8530  1628  01E2               	clrf	??___fladd+1
  8531  1629  0862               	movf	??___fladd+1,w
  8532  162A  00E4               	movwf	??___fladd+3
  8533  162B  086B               	movf	___fladd@bexp,w
  8534  162C  0261               	subwf	??___fladd,w
  8535  162D  00E3               	movwf	??___fladd+2
  8536  162E  1C03               	skipc
  8537  162F  03E4               	decf	??___fladd+3,f
  8538  1630  0864               	movf	??___fladd+3,w
  8539  1631  3A80               	xorlw	128
  8540  1632  00FF               	movwf	btemp+1
  8541  1633  3080               	movlw	128
  8542  1634  027F               	subwf	btemp+1,w
  8543  1635  1D03               	skipz
  8544  1636  2E39               	goto	u3115
  8545  1637  301A               	movlw	26
  8546  1638  0263               	subwf	??___fladd+2,w
  8547  1639                     u3115:
  8548  1639  1C03               	skipc
  8549  163A  2E3C               	goto	u3111
  8550  163B  2E3D               	goto	u3110
  8551  163C                     u3111:
  8552  163C  2E7A               	goto	l2292
  8553  163D                     u3110:
  8554  163D                     l2278:
  8555  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8556  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8557  163F  085C               	movf	___fladd@b+3,w
  8558  1640  045B               	iorwf	___fladd@b+2,w
  8559  1641  045A               	iorwf	___fladd@b+1,w
  8560  1642  0459               	iorwf	___fladd@b,w
  8561  1643  1D03               	skipz
  8562  1644  2E46               	goto	u3121
  8563  1645  2E48               	goto	u3120
  8564  1646                     u3121:
  8565  1646  3001               	movlw	1
  8566  1647  2E49               	goto	u3130
  8567  1648                     u3120:
  8568  1648  3000               	movlw	0
  8569  1649                     u3130:
  8570  1649  00E1               	movwf	??___fladd
  8571  164A  0861               	movf	??___fladd,w
  8572  164B  00EC               	movwf	___fladd@grs
  8573  164C  3000               	movlw	0
  8574  164D  00DC               	movwf	___fladd@b+3
  8575  164E  3000               	movlw	0
  8576  164F  00DB               	movwf	___fladd@b+2
  8577  1650  3000               	movlw	0
  8578  1651  00DA               	movwf	___fladd@b+1
  8579  1652  3000               	movlw	0
  8580  1653  00D9               	movwf	___fladd@b
  8581  1654  086A               	movf	___fladd@aexp,w
  8582  1655  00E1               	movwf	??___fladd
  8583  1656  0861               	movf	??___fladd,w
  8584  1657  00EB               	movwf	___fladd@bexp
  8585  1658  2E82               	goto	l600
  8586  1659                     l602:
  8587  1659  1C6C               	btfss	___fladd@grs,0
  8588  165A  2E5C               	goto	u3141
  8589  165B  2E5D               	goto	u3140
  8590  165C                     u3141:
  8591  165C  2E66               	goto	l2282
  8592  165D                     u3140:
  8593  165D                     l2280:
  8594  165D  086C               	movf	___fladd@grs,w
  8595  165E  00E1               	movwf	??___fladd
  8596  165F  1003               	clrc
  8597  1660  0C61               	rrf	??___fladd,w
  8598  1661  3801               	iorlw	1
  8599  1662  00E2               	movwf	??___fladd+1
  8600  1663  0862               	movf	??___fladd+1,w
  8601  1664  00EC               	movwf	___fladd@grs
  8602  1665  2E68               	goto	l2284
  8603  1666                     l2282:
  8604  1666  1003               	clrc
  8605  1667  0CEC               	rrf	___fladd@grs,f
  8606  1668                     l2284:
  8607  1668  1C59               	btfss	___fladd@b,0
  8608  1669  2E6B               	goto	u3151
  8609  166A  2E6C               	goto	u3150
  8610  166B                     u3151:
  8611  166B  2E6D               	goto	l2288
  8612  166C                     u3150:
  8613  166C                     l2286:
  8614  166C  17EC               	bsf	___fladd@grs,7
  8615  166D                     l2288:
  8616  166D  3001               	movlw	1
  8617  166E  00E1               	movwf	??___fladd
  8618  166F                     u3165:
  8619  166F  0D5C               	rlf	___fladd@b+3,w
  8620  1670  0CDC               	rrf	___fladd@b+3,f
  8621  1671  0CDB               	rrf	___fladd@b+2,f
  8622  1672  0CDA               	rrf	___fladd@b+1,f
  8623  1673  0CD9               	rrf	___fladd@b,f
  8624  1674  0BE1               	decfsz	??___fladd& (0+127),f
  8625  1675  2E6F               	goto	u3165
  8626  1676                     l2290:
  8627  1676  3001               	movlw	1
  8628  1677  00E1               	movwf	??___fladd
  8629  1678  0861               	movf	??___fladd,w
  8630  1679  07EB               	addwf	___fladd@bexp,f
  8631  167A                     l2292:
  8632  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8633  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8634  167C  086A               	movf	___fladd@aexp,w
  8635  167D  026B               	subwf	___fladd@bexp,w
  8636  167E  1C03               	skipc
  8637  167F  2E81               	goto	u3171
  8638  1680  2E82               	goto	u3170
  8639  1681                     u3171:
  8640  1681  2E59               	goto	l602
  8641  1682                     u3170:
  8642  1682                     l600:
  8643  1682  1B69               	btfsc	___fladd@signs,6
  8644  1683  2E85               	goto	u3181
  8645  1684  2E86               	goto	u3180
  8646  1685                     u3181:
  8647  1685  2ED1               	goto	l2318
  8648  1686                     u3180:
  8649  1686                     l2294:
  8650  1686  086B               	movf	___fladd@bexp,w
  8651  1687  1D03               	btfss	3,2
  8652  1688  2E8A               	goto	u3191
  8653  1689  2E8B               	goto	u3190
  8654  168A                     u3191:
  8655  168A  2E94               	goto	l2300
  8656  168B                     u3190:
  8657  168B                     l2296:
  8658  168B  3000               	movlw	0
  8659  168C  00DC               	movwf	?___fladd+3
  8660  168D  3000               	movlw	0
  8661  168E  00DB               	movwf	?___fladd+2
  8662  168F  3000               	movlw	0
  8663  1690  00DA               	movwf	?___fladd+1
  8664  1691  3000               	movlw	0
  8665  1692  00D9               	movwf	?___fladd
  8666  1693  2FFF               	goto	l609
  8667  1694                     l2300:
  8668  1694  085D               	movf	___fladd@a,w
  8669  1695  07D9               	addwf	___fladd@b,f
  8670  1696  085E               	movf	___fladd@a+1,w
  8671  1697  1103               	clrz
  8672  1698  1803               	skipnc
  8673  1699  3E01               	addlw	1
  8674  169A  1903               	skipnz
  8675  169B  2E9D               	goto	u3201
  8676  169C  07DA               	addwf	___fladd@b+1,f
  8677  169D                     u3201:
  8678  169D  085F               	movf	___fladd@a+2,w
  8679  169E  1103               	clrz
  8680  169F  1803               	skipnc
  8681  16A0  3E01               	addlw	1
  8682  16A1  1903               	skipnz
  8683  16A2  2EA4               	goto	u3202
  8684  16A3  07DB               	addwf	___fladd@b+2,f
  8685  16A4                     u3202:
  8686  16A4  0860               	movf	___fladd@a+3,w
  8687  16A5  1103               	clrz
  8688  16A6  1803               	skipnc
  8689  16A7  3E01               	addlw	1
  8690  16A8  1903               	skipnz
  8691  16A9  2EAB               	goto	u3203
  8692  16AA  07DC               	addwf	___fladd@b+3,f
  8693  16AB                     u3203:
  8694  16AB                     l2302:
  8695  16AB  1C5C               	btfss	___fladd@b+3,0
  8696  16AC  2EAE               	goto	u3211
  8697  16AD  2EAF               	goto	u3210
  8698  16AE                     u3211:
  8699  16AE  2F85               	goto	l2352
  8700  16AF                     u3210:
  8701  16AF                     l2304:
  8702  16AF  1C6C               	btfss	___fladd@grs,0
  8703  16B0  2EB2               	goto	u3221
  8704  16B1  2EB3               	goto	u3220
  8705  16B2                     u3221:
  8706  16B2  2EBC               	goto	l2308
  8707  16B3                     u3220:
  8708  16B3                     l2306:
  8709  16B3  086C               	movf	___fladd@grs,w
  8710  16B4  00E1               	movwf	??___fladd
  8711  16B5  1003               	clrc
  8712  16B6  0C61               	rrf	??___fladd,w
  8713  16B7  3801               	iorlw	1
  8714  16B8  00E2               	movwf	??___fladd+1
  8715  16B9  0862               	movf	??___fladd+1,w
  8716  16BA  00EC               	movwf	___fladd@grs
  8717  16BB  2EBE               	goto	l2310
  8718  16BC                     l2308:
  8719  16BC  1003               	clrc
  8720  16BD  0CEC               	rrf	___fladd@grs,f
  8721  16BE                     l2310:
  8722  16BE  1C59               	btfss	___fladd@b,0
  8723  16BF  2EC1               	goto	u3231
  8724  16C0  2EC2               	goto	u3230
  8725  16C1                     u3231:
  8726  16C1  2EC3               	goto	l2314
  8727  16C2                     u3230:
  8728  16C2                     l2312:
  8729  16C2  17EC               	bsf	___fladd@grs,7
  8730  16C3                     l2314:
  8731  16C3  3001               	movlw	1
  8732  16C4  00E1               	movwf	??___fladd
  8733  16C5                     u3245:
  8734  16C5  0D5C               	rlf	___fladd@b+3,w
  8735  16C6  0CDC               	rrf	___fladd@b+3,f
  8736  16C7  0CDB               	rrf	___fladd@b+2,f
  8737  16C8  0CDA               	rrf	___fladd@b+1,f
  8738  16C9  0CD9               	rrf	___fladd@b,f
  8739  16CA  0BE1               	decfsz	??___fladd& (0+127),f
  8740  16CB  2EC5               	goto	u3245
  8741  16CC                     l2316:
  8742  16CC  3001               	movlw	1
  8743  16CD  00E1               	movwf	??___fladd
  8744  16CE  0861               	movf	??___fladd,w
  8745  16CF  07EB               	addwf	___fladd@bexp,f
  8746  16D0  2F85               	goto	l2352
  8747  16D1                     l2318:
  8748  16D1  085C               	movf	___fladd@b+3,w
  8749  16D2  3A80               	xorlw	128
  8750  16D3  00FF               	movwf	btemp+1
  8751  16D4  0860               	movf	___fladd@a+3,w
  8752  16D5  3A80               	xorlw	128
  8753  16D6  027F               	subwf	btemp+1,w
  8754  16D7  1D03               	skipz
  8755  16D8  2EE3               	goto	u3253
  8756  16D9  085F               	movf	___fladd@a+2,w
  8757  16DA  025B               	subwf	___fladd@b+2,w
  8758  16DB  1D03               	skipz
  8759  16DC  2EE3               	goto	u3253
  8760  16DD  085E               	movf	___fladd@a+1,w
  8761  16DE  025A               	subwf	___fladd@b+1,w
  8762  16DF  1D03               	skipz
  8763  16E0  2EE3               	goto	u3253
  8764  16E1  085D               	movf	___fladd@a,w
  8765  16E2  0259               	subwf	___fladd@b,w
  8766  16E3                     u3253:
  8767  16E3  1803               	skipnc
  8768  16E4  2EE6               	goto	u3251
  8769  16E5  2EE7               	goto	u3250
  8770  16E6                     u3251:
  8771  16E6  2F3F               	goto	l2328
  8772  16E7                     u3250:
  8773  16E7                     l2320:
  8774  16E7  30FF               	movlw	255
  8775  16E8  00E1               	movwf	??___fladd
  8776  16E9  30FF               	movlw	255
  8777  16EA  00E2               	movwf	??___fladd+1
  8778  16EB  30FF               	movlw	255
  8779  16EC  00E3               	movwf	??___fladd+2
  8780  16ED  30FF               	movlw	255
  8781  16EE  00E4               	movwf	??___fladd+3
  8782  16EF  085D               	movf	___fladd@a,w
  8783  16F0  00E5               	movwf	??___fladd+4
  8784  16F1  085E               	movf	___fladd@a+1,w
  8785  16F2  00E6               	movwf	??___fladd+5
  8786  16F3  085F               	movf	___fladd@a+2,w
  8787  16F4  00E7               	movwf	??___fladd+6
  8788  16F5  0860               	movf	___fladd@a+3,w
  8789  16F6  00E8               	movwf	??___fladd+7
  8790  16F7  0859               	movf	___fladd@b,w
  8791  16F8  02E5               	subwf	??___fladd+4,f
  8792  16F9  085A               	movf	___fladd@b+1,w
  8793  16FA  1C03               	skipc
  8794  16FB  0F5A               	incfsz	___fladd@b+1,w
  8795  16FC  2EFE               	goto	u3261
  8796  16FD  2EFF               	goto	u3262
  8797  16FE                     u3261:
  8798  16FE  02E6               	subwf	??___fladd+5,f
  8799  16FF                     u3262:
  8800  16FF  085B               	movf	___fladd@b+2,w
  8801  1700  1C03               	skipc
  8802  1701  0F5B               	incfsz	___fladd@b+2,w
  8803  1702  2F04               	goto	u3263
  8804  1703  2F05               	goto	u3264
  8805  1704                     u3263:
  8806  1704  02E7               	subwf	??___fladd+6,f
  8807  1705                     u3264:
  8808  1705  085C               	movf	___fladd@b+3,w
  8809  1706  1C03               	skipc
  8810  1707  0F5C               	incfsz	___fladd@b+3,w
  8811  1708  2F0A               	goto	u3265
  8812  1709  2F0B               	goto	u3266
  8813  170A                     u3265:
  8814  170A  02E8               	subwf	??___fladd+7,f
  8815  170B                     u3266:
  8816  170B  0865               	movf	??___fladd+4,w
  8817  170C  07E1               	addwf	??___fladd,f
  8818  170D  0866               	movf	??___fladd+5,w
  8819  170E  1803               	skipnc
  8820  170F  0F66               	incfsz	??___fladd+5,w
  8821  1710  2F12               	goto	u3270
  8822  1711  2F13               	goto	u3271
  8823  1712                     u3270:
  8824  1712  07E2               	addwf	??___fladd+1,f
  8825  1713                     u3271:
  8826  1713  0867               	movf	??___fladd+6,w
  8827  1714  1803               	skipnc
  8828  1715  0F67               	incfsz	??___fladd+6,w
  8829  1716  2F18               	goto	u3272
  8830  1717  2F19               	goto	u3273
  8831  1718                     u3272:
  8832  1718  07E3               	addwf	??___fladd+2,f
  8833  1719                     u3273:
  8834  1719  0868               	movf	??___fladd+7,w
  8835  171A  1803               	skipnc
  8836  171B  0A68               	incf	??___fladd+7,w
  8837  171C  07E4               	addwf	??___fladd+3,f
  8838  171D  0864               	movf	??___fladd+3,w
  8839  171E  00DC               	movwf	___fladd@b+3
  8840  171F  0863               	movf	??___fladd+2,w
  8841  1720  00DB               	movwf	___fladd@b+2
  8842  1721  0862               	movf	??___fladd+1,w
  8843  1722  00DA               	movwf	___fladd@b+1
  8844  1723  0861               	movf	??___fladd,w
  8845  1724  00D9               	movwf	___fladd@b
  8846  1725                     l2322:
  8847  1725  3080               	movlw	128
  8848  1726  00E1               	movwf	??___fladd
  8849  1727  0861               	movf	??___fladd,w
  8850  1728  06E9               	xorwf	___fladd@signs,f
  8851  1729  09EC               	comf	___fladd@grs,f
  8852  172A  0AEC               	incf	___fladd@grs,f
  8853  172B                     l2324:
  8854  172B  086C               	movf	___fladd@grs,w
  8855  172C  1D03               	btfss	3,2
  8856  172D  2F2F               	goto	u3281
  8857  172E  2F30               	goto	u3280
  8858  172F                     u3281:
  8859  172F  2F4D               	goto	l617
  8860  1730                     u3280:
  8861  1730                     l2326:
  8862  1730  3001               	movlw	1
  8863  1731  07D9               	addwf	___fladd@b,f
  8864  1732  3000               	movlw	0
  8865  1733  1803               	skipnc
  8866  1734  3001               	movlw	1
  8867  1735  07DA               	addwf	___fladd@b+1,f
  8868  1736  3000               	movlw	0
  8869  1737  1803               	skipnc
  8870  1738  3001               	movlw	1
  8871  1739  07DB               	addwf	___fladd@b+2,f
  8872  173A  3000               	movlw	0
  8873  173B  1803               	skipnc
  8874  173C  3001               	movlw	1
  8875  173D  07DC               	addwf	___fladd@b+3,f
  8876  173E  2F4D               	goto	l617
  8877  173F                     l2328:
  8878  173F  085D               	movf	___fladd@a,w
  8879  1740  02D9               	subwf	___fladd@b,f
  8880  1741  085E               	movf	___fladd@a+1,w
  8881  1742  1C03               	skipc
  8882  1743  0F5E               	incfsz	___fladd@a+1,w
  8883  1744  02DA               	subwf	___fladd@b+1,f
  8884  1745  085F               	movf	___fladd@a+2,w
  8885  1746  1C03               	skipc
  8886  1747  0F5F               	incfsz	___fladd@a+2,w
  8887  1748  02DB               	subwf	___fladd@b+2,f
  8888  1749  0860               	movf	___fladd@a+3,w
  8889  174A  1C03               	skipc
  8890  174B  0F60               	incfsz	___fladd@a+3,w
  8891  174C  02DC               	subwf	___fladd@b+3,f
  8892  174D                     l617:
  8893  174D  085C               	movf	___fladd@b+3,w
  8894  174E  045B               	iorwf	___fladd@b+2,w
  8895  174F  045A               	iorwf	___fladd@b+1,w
  8896  1750  0459               	iorwf	___fladd@b,w
  8897  1751  1D03               	skipz
  8898  1752  2F54               	goto	u3291
  8899  1753  2F55               	goto	u3290
  8900  1754                     u3291:
  8901  1754  2F81               	goto	l2350
  8902  1755                     u3290:
  8903  1755                     l2330:
  8904  1755  086C               	movf	___fladd@grs,w
  8905  1756  1D03               	btfss	3,2
  8906  1757  2F59               	goto	u3301
  8907  1758  2F5A               	goto	u3300
  8908  1759                     u3301:
  8909  1759  2F81               	goto	l2350
  8910  175A                     u3300:
  8911  175A                     l2332:
  8912  175A  3000               	movlw	0
  8913  175B  00DC               	movwf	?___fladd+3
  8914  175C  3000               	movlw	0
  8915  175D  00DB               	movwf	?___fladd+2
  8916  175E  3000               	movlw	0
  8917  175F  00DA               	movwf	?___fladd+1
  8918  1760  3000               	movlw	0
  8919  1761  00D9               	movwf	?___fladd
  8920  1762  2FFF               	goto	l609
  8921  1763                     l2336:
  8922  1763  3001               	movlw	1
  8923  1764  00E1               	movwf	??___fladd
  8924  1765                     u3315:
  8925  1765  1003               	clrc
  8926  1766  0DD9               	rlf	___fladd@b,f
  8927  1767  0DDA               	rlf	___fladd@b+1,f
  8928  1768  0DDB               	rlf	___fladd@b+2,f
  8929  1769  0DDC               	rlf	___fladd@b+3,f
  8930  176A  0BE1               	decfsz	??___fladd,f
  8931  176B  2F65               	goto	u3315
  8932  176C                     l2338:
  8933  176C  1FEC               	btfss	___fladd@grs,7
  8934  176D  2F6F               	goto	u3321
  8935  176E  2F70               	goto	u3320
  8936  176F                     u3321:
  8937  176F  2F71               	goto	l621
  8938  1770                     u3320:
  8939  1770                     l2340:
  8940  1770  1459               	bsf	___fladd@b,0
  8941  1771                     l621:
  8942  1771  1C6C               	btfss	___fladd@grs,0
  8943  1772  2F74               	goto	u3331
  8944  1773  2F75               	goto	u3330
  8945  1774                     u3331:
  8946  1774  2F78               	goto	l2344
  8947  1775                     u3330:
  8948  1775                     l2342:
  8949  1775  1403               	setc
  8950  1776  0DEC               	rlf	___fladd@grs,f
  8951  1777  2F7A               	goto	l2346
  8952  1778                     l2344:
  8953  1778  1003               	clrc
  8954  1779  0DEC               	rlf	___fladd@grs,f
  8955  177A                     l2346:
  8956  177A  086B               	movf	___fladd@bexp,w
  8957  177B  1903               	btfsc	3,2
  8958  177C  2F7E               	goto	u3341
  8959  177D  2F7F               	goto	u3340
  8960  177E                     u3341:
  8961  177E  2F81               	goto	l2350
  8962  177F                     u3340:
  8963  177F                     l2348:
  8964  177F  3001               	movlw	1
  8965  1780  02EB               	subwf	___fladd@bexp,f
  8966  1781                     l2350:
  8967  1781  1FDB               	btfss	___fladd@b+2,7
  8968  1782  2F84               	goto	u3351
  8969  1783  2F85               	goto	u3350
  8970  1784                     u3351:
  8971  1784  2F63               	goto	l2336
  8972  1785                     u3350:
  8973  1785                     l2352:
  8974  1785  01EA               	clrf	___fladd@aexp
  8975  1786                     l2354:
  8976  1786  1FEC               	btfss	___fladd@grs,7
  8977  1787  2F89               	goto	u3361
  8978  1788  2F8A               	goto	u3360
  8979  1789                     u3361:
  8980  1789  2F98               	goto	l2362
  8981  178A                     u3360:
  8982  178A                     l2356:
  8983  178A  086C               	movf	___fladd@grs,w
  8984  178B  397F               	andlw	127
  8985  178C  1903               	btfsc	3,2
  8986  178D  2F8F               	goto	u3371
  8987  178E  2F90               	goto	u3370
  8988  178F                     u3371:
  8989  178F  2F93               	goto	l627
  8990  1790                     u3370:
  8991  1790                     l2358:
  8992  1790  01EA               	clrf	___fladd@aexp
  8993  1791  0AEA               	incf	___fladd@aexp,f
  8994  1792  2F98               	goto	l2362
  8995  1793                     l627:
  8996  1793  1C59               	btfss	___fladd@b,0
  8997  1794  2F96               	goto	u3381
  8998  1795  2F97               	goto	u3380
  8999  1796                     u3381:
  9000  1796  2F98               	goto	l2362
  9001  1797                     u3380:
  9002  1797  2F90               	goto	l2358
  9003  1798                     l2362:
  9004  1798  086A               	movf	___fladd@aexp,w
  9005  1799  1903               	btfsc	3,2
  9006  179A  2F9C               	goto	u3391
  9007  179B  2F9D               	goto	u3390
  9008  179C                     u3391:
  9009  179C  2FD1               	goto	l630
  9010  179D                     u3390:
  9011  179D                     l2364:
  9012  179D  3001               	movlw	1
  9013  179E  07D9               	addwf	___fladd@b,f
  9014  179F  3000               	movlw	0
  9015  17A0  1803               	skipnc
  9016  17A1  3001               	movlw	1
  9017  17A2  07DA               	addwf	___fladd@b+1,f
  9018  17A3  3000               	movlw	0
  9019  17A4  1803               	skipnc
  9020  17A5  3001               	movlw	1
  9021  17A6  07DB               	addwf	___fladd@b+2,f
  9022  17A7  3000               	movlw	0
  9023  17A8  1803               	skipnc
  9024  17A9  3001               	movlw	1
  9025  17AA  07DC               	addwf	___fladd@b+3,f
  9026  17AB                     l2366:
  9027  17AB  1C5C               	btfss	___fladd@b+3,0
  9028  17AC  2FAE               	goto	u3401
  9029  17AD  2FAF               	goto	u3400
  9030  17AE                     u3401:
  9031  17AE  2FD1               	goto	l630
  9032  17AF                     u3400:
  9033  17AF                     l2368:
  9034  17AF  0859               	movf	___fladd@b,w
  9035  17B0  00E1               	movwf	??___fladd
  9036  17B1  085A               	movf	___fladd@b+1,w
  9037  17B2  00E2               	movwf	??___fladd+1
  9038  17B3  085B               	movf	___fladd@b+2,w
  9039  17B4  00E3               	movwf	??___fladd+2
  9040  17B5  085C               	movf	___fladd@b+3,w
  9041  17B6  00E4               	movwf	??___fladd+3
  9042  17B7  3001               	movlw	1
  9043  17B8  00E5               	movwf	??___fladd+4
  9044  17B9                     u3415:
  9045  17B9  0D64               	rlf	??___fladd+3,w
  9046  17BA  0CE4               	rrf	??___fladd+3,f
  9047  17BB  0CE3               	rrf	??___fladd+2,f
  9048  17BC  0CE2               	rrf	??___fladd+1,f
  9049  17BD  0CE1               	rrf	??___fladd,f
  9050  17BE                     u3410:
  9051  17BE  0BE5               	decfsz	??___fladd+4,f
  9052  17BF  2FB9               	goto	u3415
  9053  17C0  0864               	movf	??___fladd+3,w
  9054  17C1  00DC               	movwf	___fladd@b+3
  9055  17C2  0863               	movf	??___fladd+2,w
  9056  17C3  00DB               	movwf	___fladd@b+2
  9057  17C4  0862               	movf	??___fladd+1,w
  9058  17C5  00DA               	movwf	___fladd@b+1
  9059  17C6  0861               	movf	??___fladd,w
  9060  17C7  00D9               	movwf	___fladd@b
  9061  17C8  0A6B               	incf	___fladd@bexp,w
  9062  17C9  1903               	btfsc	3,2
  9063  17CA  2FCC               	goto	u3421
  9064  17CB  2FCD               	goto	u3420
  9065  17CC                     u3421:
  9066  17CC  2FD1               	goto	l630
  9067  17CD                     u3420:
  9068  17CD                     l2370:
  9069  17CD  3001               	movlw	1
  9070  17CE  00E1               	movwf	??___fladd
  9071  17CF  0861               	movf	??___fladd,w
  9072  17D0  07EB               	addwf	___fladd@bexp,f
  9073  17D1                     l630:
  9074  17D1  0A6B               	incf	___fladd@bexp,w
  9075  17D2  1903               	btfsc	3,2
  9076  17D3  2FD5               	goto	u3431
  9077  17D4  2FD6               	goto	u3430
  9078  17D5                     u3431:
  9079  17D5  2FDB               	goto	l2374
  9080  17D6                     u3430:
  9081  17D6                     l2372:
  9082  17D6  086B               	movf	___fladd@bexp,w
  9083  17D7  1D03               	btfss	3,2
  9084  17D8  2FDA               	goto	u3441
  9085  17D9  2FDB               	goto	u3440
  9086  17DA                     u3441:
  9087  17DA  2FE9               	goto	l2380
  9088  17DB                     u3440:
  9089  17DB                     l2374:
  9090  17DB  3000               	movlw	0
  9091  17DC  00DC               	movwf	___fladd@b+3
  9092  17DD  3000               	movlw	0
  9093  17DE  00DB               	movwf	___fladd@b+2
  9094  17DF  3000               	movlw	0
  9095  17E0  00DA               	movwf	___fladd@b+1
  9096  17E1  3000               	movlw	0
  9097  17E2  00D9               	movwf	___fladd@b
  9098  17E3                     l2376:
  9099  17E3  086B               	movf	___fladd@bexp,w
  9100  17E4  1D03               	btfss	3,2
  9101  17E5  2FE7               	goto	u3451
  9102  17E6  2FE8               	goto	u3450
  9103  17E7                     u3451:
  9104  17E7  2FE9               	goto	l2380
  9105  17E8                     u3450:
  9106  17E8                     l2378:
  9107  17E8  01E9               	clrf	___fladd@signs
  9108  17E9                     l2380:
  9109  17E9  1C6B               	btfss	___fladd@bexp,0
  9110  17EA  2FEC               	goto	u3461
  9111  17EB  2FED               	goto	u3460
  9112  17EC                     u3461:
  9113  17EC  2FEF               	goto	l2384
  9114  17ED                     u3460:
  9115  17ED                     l2382:
  9116  17ED  17DB               	bsf	___fladd@b+2,7
  9117  17EE  2FF3               	goto	l638
  9118  17EF                     l2384:
  9119  17EF  307F               	movlw	127
  9120  17F0  00E1               	movwf	??___fladd
  9121  17F1  0861               	movf	??___fladd,w
  9122  17F2  05DB               	andwf	___fladd@b+2,f
  9123  17F3                     l638:
  9124  17F3  086B               	movf	___fladd@bexp,w
  9125  17F4  00E1               	movwf	??___fladd
  9126  17F5  1003               	clrc
  9127  17F6  0C61               	rrf	??___fladd,w
  9128  17F7  00E2               	movwf	??___fladd+1
  9129  17F8  0862               	movf	??___fladd+1,w
  9130  17F9  00DC               	movwf	___fladd@b+3
  9131  17FA                     l2386:
  9132  17FA  1FE9               	btfss	___fladd@signs,7
  9133  17FB  2FFD               	goto	u3471
  9134  17FC  2FFE               	goto	u3470
  9135  17FD                     u3471:
  9136  17FD  2FFF               	goto	l639
  9137  17FE                     u3470:
  9138  17FE                     l2388:
  9139  17FE  17DC               	bsf	___fladd@b+3,7
  9140  17FF                     l639:
  9141  17FF                     l609:
  9142  17FF  0008               	return
  9143  1800                     __end_of___fladd:
  9144                           
  9145                           	psect	text21
  9146  1B18                     __ptext21:	
  9147 ;; *************** function ___flneg *****************
  9148 ;; Defined at:
  9149 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;  f1              4    4[COMMON] unsigned char 
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;		None
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  4    4[COMMON] unsigned char 
  9156 ;; Registers used:
  9157 ;;		wreg
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9163 ;;      Params:         4       0       0       0       0
  9164 ;;      Locals:         0       0       0       0       0
  9165 ;;      Temps:          0       0       0       0       0
  9166 ;;      Totals:         4       0       0       0       0
  9167 ;;Total ram usage:        4 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:    1
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_sprintf
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           
  9178                           ;psect for function ___flneg
  9179  1B18                     ___flneg:
  9180  1B18                     l2790:	
  9181                           ;incstack = 0
  9182                           ; Regs used in ___flneg: [wreg]
  9183                           
  9184  1B18  0877               	movf	___flneg@f1+3,w
  9185  1B19  0476               	iorwf	___flneg@f1+2,w
  9186  1B1A  0475               	iorwf	___flneg@f1+1,w
  9187  1B1B  0474               	iorwf	___flneg@f1,w
  9188  1B1C  1903               	skipnz
  9189  1B1D  2B1F               	goto	u4591
  9190  1B1E  2B20               	goto	u4590
  9191  1B1F                     u4591:
  9192  1B1F  2B22               	goto	l2794
  9193  1B20                     u4590:
  9194  1B20                     l2792:
  9195  1B20  3080               	movlw	128
  9196  1B21  06F7               	xorwf	___flneg@f1+3,f
  9197  1B22                     l2794:
  9198  1B22                     l468:
  9199  1B22  0008               	return
  9200  1B23                     __end_of___flneg:
  9201                           
  9202                           	psect	text22
  9203  1F5C                     __ptext22:	
  9204 ;; *************** function ___flge *****************
  9205 ;; Defined at:
  9206 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  9207 ;; Parameters:    Size  Location     Type
  9208 ;;  ff1             4    0[BANK0 ] unsigned char 
  9209 ;;  ff2             4    4[BANK0 ] unsigned char 
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;		None
  9212 ;; Return value:  Size  Location     Type
  9213 ;;		None               void
  9214 ;; Registers used:
  9215 ;;		wreg, status,2, status,0
  9216 ;; Tracked objects:
  9217 ;;		On entry : 0/0
  9218 ;;		On exit  : 0/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9221 ;;      Params:         0       8       0       0       0
  9222 ;;      Locals:         0       0       0       0       0
  9223 ;;      Temps:          4       0       0       0       0
  9224 ;;      Totals:         4       8       0       0       0
  9225 ;;Total ram usage:       12 bytes
  9226 ;; Hardware stack levels used:    1
  9227 ;; Hardware stack levels required when called:    1
  9228 ;; This function calls:
  9229 ;;		Nothing
  9230 ;; This function is called by:
  9231 ;;		_sprintf
  9232 ;; This function uses a non-reentrant model
  9233 ;;
  9234                           
  9235                           
  9236                           ;psect for function ___flge
  9237  1F5C                     ___flge:
  9238  1F5C                     l2770:	
  9239                           ;incstack = 0
  9240                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9241                           
  9242  1F5C  3000               	movlw	0
  9243  1F5D  1283               	bcf	3,5	;RP0=0, select bank0
  9244  1F5E  1303               	bcf	3,6	;RP1=0, select bank0
  9245  1F5F  0520               	andwf	___flge@ff1,w
  9246  1F60  00F4               	movwf	??___flge
  9247  1F61  3000               	movlw	0
  9248  1F62  0521               	andwf	___flge@ff1+1,w
  9249  1F63  00F5               	movwf	??___flge+1
  9250  1F64  3080               	movlw	128
  9251  1F65  0522               	andwf	___flge@ff1+2,w
  9252  1F66  00F6               	movwf	??___flge+2
  9253  1F67  307F               	movlw	127
  9254  1F68  0523               	andwf	___flge@ff1+3,w
  9255  1F69  00F7               	movwf	??___flge+3
  9256  1F6A  0877               	movf	??___flge+3,w
  9257  1F6B  0476               	iorwf	??___flge+2,w
  9258  1F6C  0475               	iorwf	??___flge+1,w
  9259  1F6D  0474               	iorwf	??___flge,w
  9260  1F6E  1D03               	skipz
  9261  1F6F  2F71               	goto	u4521
  9262  1F70  2F72               	goto	u4520
  9263  1F71                     u4521:
  9264  1F71  2F7A               	goto	l460
  9265  1F72                     u4520:
  9266  1F72                     l2772:
  9267  1F72  3000               	movlw	0
  9268  1F73  00A3               	movwf	___flge@ff1+3
  9269  1F74  3000               	movlw	0
  9270  1F75  00A2               	movwf	___flge@ff1+2
  9271  1F76  3000               	movlw	0
  9272  1F77  00A1               	movwf	___flge@ff1+1
  9273  1F78  3000               	movlw	0
  9274  1F79  00A0               	movwf	___flge@ff1
  9275  1F7A                     l460:
  9276  1F7A  3000               	movlw	0
  9277  1F7B  0524               	andwf	___flge@ff2,w
  9278  1F7C  00F4               	movwf	??___flge
  9279  1F7D  3000               	movlw	0
  9280  1F7E  0525               	andwf	___flge@ff2+1,w
  9281  1F7F  00F5               	movwf	??___flge+1
  9282  1F80  3080               	movlw	128
  9283  1F81  0526               	andwf	___flge@ff2+2,w
  9284  1F82  00F6               	movwf	??___flge+2
  9285  1F83  307F               	movlw	127
  9286  1F84  0527               	andwf	___flge@ff2+3,w
  9287  1F85  00F7               	movwf	??___flge+3
  9288  1F86  0877               	movf	??___flge+3,w
  9289  1F87  0476               	iorwf	??___flge+2,w
  9290  1F88  0475               	iorwf	??___flge+1,w
  9291  1F89  0474               	iorwf	??___flge,w
  9292  1F8A  1D03               	skipz
  9293  1F8B  2F8D               	goto	u4531
  9294  1F8C  2F8E               	goto	u4530
  9295  1F8D                     u4531:
  9296  1F8D  2F96               	goto	l2776
  9297  1F8E                     u4530:
  9298  1F8E                     l2774:
  9299  1F8E  3000               	movlw	0
  9300  1F8F  00A7               	movwf	___flge@ff2+3
  9301  1F90  3000               	movlw	0
  9302  1F91  00A6               	movwf	___flge@ff2+2
  9303  1F92  3000               	movlw	0
  9304  1F93  00A5               	movwf	___flge@ff2+1
  9305  1F94  3000               	movlw	0
  9306  1F95  00A4               	movwf	___flge@ff2
  9307  1F96                     l2776:
  9308  1F96  1FA3               	btfss	___flge@ff1+3,7
  9309  1F97  2F99               	goto	u4541
  9310  1F98  2F9A               	goto	u4540
  9311  1F99                     u4541:
  9312  1F99  2FBE               	goto	l2780
  9313  1F9A                     u4540:
  9314  1F9A                     l2778:
  9315  1F9A  3000               	movlw	0
  9316  1F9B  00F4               	movwf	??___flge
  9317  1F9C  3000               	movlw	0
  9318  1F9D  00F5               	movwf	??___flge+1
  9319  1F9E  3000               	movlw	0
  9320  1F9F  00F6               	movwf	??___flge+2
  9321  1FA0  3080               	movlw	128
  9322  1FA1  00F7               	movwf	??___flge+3
  9323  1FA2  0820               	movf	___flge@ff1,w
  9324  1FA3  02F4               	subwf	??___flge,f
  9325  1FA4  0821               	movf	___flge@ff1+1,w
  9326  1FA5  1C03               	skipc
  9327  1FA6  0F21               	incfsz	___flge@ff1+1,w
  9328  1FA7  2FA9               	goto	u4551
  9329  1FA8  2FAA               	goto	u4552
  9330  1FA9                     u4551:
  9331  1FA9  02F5               	subwf	??___flge+1,f
  9332  1FAA                     u4552:
  9333  1FAA  0822               	movf	___flge@ff1+2,w
  9334  1FAB  1C03               	skipc
  9335  1FAC  0F22               	incfsz	___flge@ff1+2,w
  9336  1FAD  2FAF               	goto	u4553
  9337  1FAE  2FB0               	goto	u4554
  9338  1FAF                     u4553:
  9339  1FAF  02F6               	subwf	??___flge+2,f
  9340  1FB0                     u4554:
  9341  1FB0  0823               	movf	___flge@ff1+3,w
  9342  1FB1  1C03               	skipc
  9343  1FB2  0F23               	incfsz	___flge@ff1+3,w
  9344  1FB3  2FB5               	goto	u4555
  9345  1FB4  2FB6               	goto	u4556
  9346  1FB5                     u4555:
  9347  1FB5  02F7               	subwf	??___flge+3,f
  9348  1FB6                     u4556:
  9349  1FB6  0877               	movf	??___flge+3,w
  9350  1FB7  00A3               	movwf	___flge@ff1+3
  9351  1FB8  0876               	movf	??___flge+2,w
  9352  1FB9  00A2               	movwf	___flge@ff1+2
  9353  1FBA  0875               	movf	??___flge+1,w
  9354  1FBB  00A1               	movwf	___flge@ff1+1
  9355  1FBC  0874               	movf	??___flge,w
  9356  1FBD  00A0               	movwf	___flge@ff1
  9357  1FBE                     l2780:
  9358  1FBE  1FA7               	btfss	___flge@ff2+3,7
  9359  1FBF  2FC1               	goto	u4561
  9360  1FC0  2FC2               	goto	u4560
  9361  1FC1                     u4561:
  9362  1FC1  2FE6               	goto	l463
  9363  1FC2                     u4560:
  9364  1FC2                     l2782:
  9365  1FC2  3000               	movlw	0
  9366  1FC3  00F4               	movwf	??___flge
  9367  1FC4  3000               	movlw	0
  9368  1FC5  00F5               	movwf	??___flge+1
  9369  1FC6  3000               	movlw	0
  9370  1FC7  00F6               	movwf	??___flge+2
  9371  1FC8  3080               	movlw	128
  9372  1FC9  00F7               	movwf	??___flge+3
  9373  1FCA  0824               	movf	___flge@ff2,w
  9374  1FCB  02F4               	subwf	??___flge,f
  9375  1FCC  0825               	movf	___flge@ff2+1,w
  9376  1FCD  1C03               	skipc
  9377  1FCE  0F25               	incfsz	___flge@ff2+1,w
  9378  1FCF  2FD1               	goto	u4571
  9379  1FD0  2FD2               	goto	u4572
  9380  1FD1                     u4571:
  9381  1FD1  02F5               	subwf	??___flge+1,f
  9382  1FD2                     u4572:
  9383  1FD2  0826               	movf	___flge@ff2+2,w
  9384  1FD3  1C03               	skipc
  9385  1FD4  0F26               	incfsz	___flge@ff2+2,w
  9386  1FD5  2FD7               	goto	u4573
  9387  1FD6  2FD8               	goto	u4574
  9388  1FD7                     u4573:
  9389  1FD7  02F6               	subwf	??___flge+2,f
  9390  1FD8                     u4574:
  9391  1FD8  0827               	movf	___flge@ff2+3,w
  9392  1FD9  1C03               	skipc
  9393  1FDA  0F27               	incfsz	___flge@ff2+3,w
  9394  1FDB  2FDD               	goto	u4575
  9395  1FDC  2FDE               	goto	u4576
  9396  1FDD                     u4575:
  9397  1FDD  02F7               	subwf	??___flge+3,f
  9398  1FDE                     u4576:
  9399  1FDE  0877               	movf	??___flge+3,w
  9400  1FDF  00A7               	movwf	___flge@ff2+3
  9401  1FE0  0876               	movf	??___flge+2,w
  9402  1FE1  00A6               	movwf	___flge@ff2+2
  9403  1FE2  0875               	movf	??___flge+1,w
  9404  1FE3  00A5               	movwf	___flge@ff2+1
  9405  1FE4  0874               	movf	??___flge,w
  9406  1FE5  00A4               	movwf	___flge@ff2
  9407  1FE6                     l463:
  9408  1FE6  3080               	movlw	128
  9409  1FE7  06A3               	xorwf	___flge@ff1+3,f
  9410  1FE8  3080               	movlw	128
  9411  1FE9  06A7               	xorwf	___flge@ff2+3,f
  9412  1FEA  0827               	movf	___flge@ff2+3,w
  9413  1FEB  0223               	subwf	___flge@ff1+3,w
  9414  1FEC  1D03               	skipz
  9415  1FED  2FF8               	goto	u4585
  9416  1FEE  0826               	movf	___flge@ff2+2,w
  9417  1FEF  0222               	subwf	___flge@ff1+2,w
  9418  1FF0  1D03               	skipz
  9419  1FF1  2FF8               	goto	u4585
  9420  1FF2  0825               	movf	___flge@ff2+1,w
  9421  1FF3  0221               	subwf	___flge@ff1+1,w
  9422  1FF4  1D03               	skipz
  9423  1FF5  2FF8               	goto	u4585
  9424  1FF6  0824               	movf	___flge@ff2,w
  9425  1FF7  0220               	subwf	___flge@ff1,w
  9426  1FF8                     u4585:
  9427  1FF8  1803               	skipnc
  9428  1FF9  2FFB               	goto	u4581
  9429  1FFA  2FFC               	goto	u4580
  9430  1FFB                     u4581:
  9431  1FFB  2FFE               	goto	l2786
  9432  1FFC                     u4580:
  9433  1FFC                     l2784:
  9434  1FFC  1003               	clrc
  9435  1FFD  2FFF               	goto	l464
  9436  1FFE                     l2786:
  9437  1FFE  1403               	setc
  9438  1FFF                     l464:
  9439  1FFF  0008               	return
  9440  2000                     __end_of___flge:
  9441                           
  9442                           	psect	text23
  9443  1CD9                     __ptext23:	
  9444 ;; *************** function ___fleq *****************
  9445 ;; Defined at:
  9446 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;  ff1             4    0[BANK0 ] unsigned char 
  9449 ;;  ff2             4    4[BANK0 ] unsigned char 
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;		None
  9452 ;; Return value:  Size  Location     Type
  9453 ;;		None               void
  9454 ;; Registers used:
  9455 ;;		wreg, status,2, status,0
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9461 ;;      Params:         0       8       0       0       0
  9462 ;;      Locals:         0       0       0       0       0
  9463 ;;      Temps:          4       0       0       0       0
  9464 ;;      Totals:         4       8       0       0       0
  9465 ;;Total ram usage:       12 bytes
  9466 ;; Hardware stack levels used:    1
  9467 ;; Hardware stack levels required when called:    1
  9468 ;; This function calls:
  9469 ;;		Nothing
  9470 ;; This function is called by:
  9471 ;;		_sprintf
  9472 ;; This function uses a non-reentrant model
  9473 ;;
  9474                           
  9475                           
  9476                           ;psect for function ___fleq
  9477  1CD9                     ___fleq:
  9478  1CD9                     l2758:	
  9479                           ;incstack = 0
  9480                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9481                           
  9482  1CD9  3000               	movlw	0
  9483  1CDA  1283               	bcf	3,5	;RP0=0, select bank0
  9484  1CDB  1303               	bcf	3,6	;RP1=0, select bank0
  9485  1CDC  0520               	andwf	___fleq@ff1,w
  9486  1CDD  00F4               	movwf	??___fleq
  9487  1CDE  3000               	movlw	0
  9488  1CDF  0521               	andwf	___fleq@ff1+1,w
  9489  1CE0  00F5               	movwf	??___fleq+1
  9490  1CE1  3080               	movlw	128
  9491  1CE2  0522               	andwf	___fleq@ff1+2,w
  9492  1CE3  00F6               	movwf	??___fleq+2
  9493  1CE4  307F               	movlw	127
  9494  1CE5  0523               	andwf	___fleq@ff1+3,w
  9495  1CE6  00F7               	movwf	??___fleq+3
  9496  1CE7  0877               	movf	??___fleq+3,w
  9497  1CE8  0476               	iorwf	??___fleq+2,w
  9498  1CE9  0475               	iorwf	??___fleq+1,w
  9499  1CEA  0474               	iorwf	??___fleq,w
  9500  1CEB  1D03               	skipz
  9501  1CEC  2CEE               	goto	u4491
  9502  1CED  2CEF               	goto	u4490
  9503  1CEE                     u4491:
  9504  1CEE  2CF7               	goto	l455
  9505  1CEF                     u4490:
  9506  1CEF                     l2760:
  9507  1CEF  3000               	movlw	0
  9508  1CF0  00A3               	movwf	___fleq@ff1+3
  9509  1CF1  3000               	movlw	0
  9510  1CF2  00A2               	movwf	___fleq@ff1+2
  9511  1CF3  3000               	movlw	0
  9512  1CF4  00A1               	movwf	___fleq@ff1+1
  9513  1CF5  3000               	movlw	0
  9514  1CF6  00A0               	movwf	___fleq@ff1
  9515  1CF7                     l455:
  9516  1CF7  3000               	movlw	0
  9517  1CF8  0524               	andwf	___fleq@ff2,w
  9518  1CF9  00F4               	movwf	??___fleq
  9519  1CFA  3000               	movlw	0
  9520  1CFB  0525               	andwf	___fleq@ff2+1,w
  9521  1CFC  00F5               	movwf	??___fleq+1
  9522  1CFD  3080               	movlw	128
  9523  1CFE  0526               	andwf	___fleq@ff2+2,w
  9524  1CFF  00F6               	movwf	??___fleq+2
  9525  1D00  307F               	movlw	127
  9526  1D01  0527               	andwf	___fleq@ff2+3,w
  9527  1D02  00F7               	movwf	??___fleq+3
  9528  1D03  0877               	movf	??___fleq+3,w
  9529  1D04  0476               	iorwf	??___fleq+2,w
  9530  1D05  0475               	iorwf	??___fleq+1,w
  9531  1D06  0474               	iorwf	??___fleq,w
  9532  1D07  1D03               	skipz
  9533  1D08  2D0A               	goto	u4501
  9534  1D09  2D0B               	goto	u4500
  9535  1D0A                     u4501:
  9536  1D0A  2D13               	goto	l456
  9537  1D0B                     u4500:
  9538  1D0B                     l2762:
  9539  1D0B  3000               	movlw	0
  9540  1D0C  00A7               	movwf	___fleq@ff2+3
  9541  1D0D  3000               	movlw	0
  9542  1D0E  00A6               	movwf	___fleq@ff2+2
  9543  1D0F  3000               	movlw	0
  9544  1D10  00A5               	movwf	___fleq@ff2+1
  9545  1D11  3000               	movlw	0
  9546  1D12  00A4               	movwf	___fleq@ff2
  9547  1D13                     l456:
  9548  1D13  0827               	movf	___fleq@ff2+3,w
  9549  1D14  0623               	xorwf	___fleq@ff1+3,w
  9550  1D15  1D03               	skipz
  9551  1D16  2D21               	goto	u4515
  9552  1D17  0826               	movf	___fleq@ff2+2,w
  9553  1D18  0622               	xorwf	___fleq@ff1+2,w
  9554  1D19  1D03               	skipz
  9555  1D1A  2D21               	goto	u4515
  9556  1D1B  0825               	movf	___fleq@ff2+1,w
  9557  1D1C  0621               	xorwf	___fleq@ff1+1,w
  9558  1D1D  1D03               	skipz
  9559  1D1E  2D21               	goto	u4515
  9560  1D1F  0824               	movf	___fleq@ff2,w
  9561  1D20  0620               	xorwf	___fleq@ff1,w
  9562  1D21                     u4515:
  9563  1D21  1903               	skipnz
  9564  1D22  2D24               	goto	u4511
  9565  1D23  2D25               	goto	u4510
  9566  1D24                     u4511:
  9567  1D24  2D27               	goto	l2766
  9568  1D25                     u4510:
  9569  1D25                     l2764:
  9570  1D25  1003               	clrc
  9571  1D26  2D28               	goto	l457
  9572  1D27                     l2766:
  9573  1D27  1403               	setc
  9574  1D28                     l457:
  9575  1D28  0008               	return
  9576  1D29                     __end_of___fleq:
  9577                           
  9578                           	psect	text24
  9579  1C4F                     __ptext24:	
  9580 ;; *************** function _Lcd_Write_String *****************
  9581 ;; Defined at:
  9582 ;;		line 88 in file "./Libreria2.h"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;  a               2    6[COMMON] PTR unsigned char 
  9585 ;;		 -> buffer(1), STR_5(5), STR_4(6), STR_3(6), 
  9586 ;;		 -> STR_2(17), STR_1(10), 
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;  i               2    8[COMMON] int 
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  1    wreg      void 
  9591 ;; Registers used:
  9592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9598 ;;      Params:         2       0       0       0       0
  9599 ;;      Locals:         2       0       0       0       0
  9600 ;;      Temps:          0       3       0       0       0
  9601 ;;      Totals:         4       3       0       0       0
  9602 ;;Total ram usage:        7 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:    2
  9605 ;; This function calls:
  9606 ;;		_Lcd_Write_Char
  9607 ;; This function is called by:
  9608 ;;		_main
  9609 ;;		_conversion
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           
  9613                           
  9614                           ;psect for function _Lcd_Write_String
  9615  1C4F                     _Lcd_Write_String:
  9616  1C4F                     l2924:	
  9617                           ;incstack = 0
  9618                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9619                           
  9620                           
  9621                           ;./Libreria2.h: 88:      Lcd_Write_Char(a[i]);;./Libreria2.h: 89: };./Libreria2.h: 90: ;
      +                          ./Libreria2.h: 91: void Lcd_Init(){
  9622  1C4F  01F8               	clrf	Lcd_Write_String@i
  9623  1C50  01F9               	clrf	Lcd_Write_String@i+1
  9624  1C51  2C74               	goto	l2930
  9625  1C52                     l2926:
  9626                           
  9627                           ;./Libreria2.h: 92: 
  9628  1C52  0878               	movf	Lcd_Write_String@i,w
  9629  1C53  0776               	addwf	Lcd_Write_String@a,w
  9630  1C54  00A1               	movwf	??_Lcd_Write_String+1
  9631  1C55  0877               	movf	Lcd_Write_String@a+1,w
  9632  1C56  00A0               	movwf	??_Lcd_Write_String
  9633  1C57  1803               	skipnc
  9634  1C58  0AA0               	incf	??_Lcd_Write_String,f
  9635  1C59  1FF8               	btfss	Lcd_Write_String@i,7
  9636  1C5A  2C5C               	goto	u4920
  9637  1C5B  03A0               	decf	??_Lcd_Write_String,f
  9638  1C5C                     u4920:
  9639  1C5C  1283               	bcf	3,5	;RP0=0, select bank0
  9640  1C5D  1303               	bcf	3,6	;RP1=0, select bank0
  9641  1C5E  0820               	movf	??_Lcd_Write_String,w
  9642  1C5F  00A2               	movwf	??_Lcd_Write_String+2
  9643  1C60  0822               	movf	??_Lcd_Write_String+2,w
  9644  1C61  00FF               	movwf	btemp+1
  9645  1C62  0821               	movf	??_Lcd_Write_String+1,w
  9646  1C63  0084               	movwf	4
  9647  1C64  160A  118A  2000  160A  158A  	fcall	stringtab
  9648  1C69  160A  158A  2330  160A  158A  	fcall	_Lcd_Write_Char
  9649  1C6E                     l2928:
  9650  1C6E  3001               	movlw	1
  9651  1C6F  07F8               	addwf	Lcd_Write_String@i,f
  9652  1C70  1803               	skipnc
  9653  1C71  0AF9               	incf	Lcd_Write_String@i+1,f
  9654  1C72  3000               	movlw	0
  9655  1C73  07F9               	addwf	Lcd_Write_String@i+1,f
  9656  1C74                     l2930:
  9657  1C74  0878               	movf	Lcd_Write_String@i,w
  9658  1C75  0776               	addwf	Lcd_Write_String@a,w
  9659  1C76  1283               	bcf	3,5	;RP0=0, select bank0
  9660  1C77  1303               	bcf	3,6	;RP1=0, select bank0
  9661  1C78  00A1               	movwf	??_Lcd_Write_String+1
  9662  1C79  0877               	movf	Lcd_Write_String@a+1,w
  9663  1C7A  00A0               	movwf	??_Lcd_Write_String
  9664  1C7B  1803               	skipnc
  9665  1C7C  0AA0               	incf	??_Lcd_Write_String,f
  9666  1C7D  1FF8               	btfss	Lcd_Write_String@i,7
  9667  1C7E  2C80               	goto	u4930
  9668  1C7F  03A0               	decf	??_Lcd_Write_String,f
  9669  1C80                     u4930:
  9670  1C80  1283               	bcf	3,5	;RP0=0, select bank0
  9671  1C81  1303               	bcf	3,6	;RP1=0, select bank0
  9672  1C82  0820               	movf	??_Lcd_Write_String,w
  9673  1C83  00A2               	movwf	??_Lcd_Write_String+2
  9674  1C84  0822               	movf	??_Lcd_Write_String+2,w
  9675  1C85  00FF               	movwf	btemp+1
  9676  1C86  0821               	movf	??_Lcd_Write_String+1,w
  9677  1C87  0084               	movwf	4
  9678  1C88  160A  118A  2000  160A  158A  	fcall	stringtab
  9679  1C8D  3A00               	xorlw	0
  9680  1C8E  1D03               	skipz
  9681  1C8F  2C91               	goto	u4941
  9682  1C90  2C92               	goto	u4940
  9683  1C91                     u4941:
  9684  1C91  2C52               	goto	l2926
  9685  1C92                     u4940:
  9686  1C92                     l68:
  9687  1C92  0008               	return
  9688  1C93                     __end_of_Lcd_Write_String:
  9689                           
  9690                           	psect	text25
  9691  1B30                     __ptext25:	
  9692 ;; *************** function _Lcd_Write_Char *****************
  9693 ;; Defined at:
  9694 ;;		line 80 in file "./Libreria2.h"
  9695 ;; Parameters:    Size  Location     Type
  9696 ;;  a               1    wreg     unsigned char 
  9697 ;; Auto vars:     Size  Location     Type
  9698 ;;  a               1    5[COMMON] unsigned char 
  9699 ;; Return value:  Size  Location     Type
  9700 ;;                  1    wreg      void 
  9701 ;; Registers used:
  9702 ;;		wreg
  9703 ;; Tracked objects:
  9704 ;;		On entry : 0/0
  9705 ;;		On exit  : 0/0
  9706 ;;		Unchanged: 0/0
  9707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9708 ;;      Params:         0       0       0       0       0
  9709 ;;      Locals:         1       0       0       0       0
  9710 ;;      Temps:          1       0       0       0       0
  9711 ;;      Totals:         2       0       0       0       0
  9712 ;;Total ram usage:        2 bytes
  9713 ;; Hardware stack levels used:    1
  9714 ;; Hardware stack levels required when called:    1
  9715 ;; This function calls:
  9716 ;;		Nothing
  9717 ;; This function is called by:
  9718 ;;		_Lcd_Write_String
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           
  9723                           ;psect for function _Lcd_Write_Char
  9724  1B30                     _Lcd_Write_Char:
  9725                           
  9726                           ;incstack = 0
  9727                           ; Regs used in _Lcd_Write_Char: [wreg]
  9728                           ;Lcd_Write_Char@a stored from wreg
  9729  1B30  00F5               	movwf	Lcd_Write_Char@a
  9730  1B31                     l2538:
  9731                           
  9732                           ;./Libreria2.h: 81:     PORTDbits.RD3=0;
  9733  1B31  1283               	bcf	3,5	;RP0=0, select bank0
  9734  1B32  1303               	bcf	3,6	;RP1=0, select bank0
  9735  1B33  1508               	bsf	8,2	;volatile
  9736  1B34                     l2540:
  9737                           
  9738                           ;./Libreria2.h: 82: }
  9739  1B34  0875               	movf	Lcd_Write_Char@a,w
  9740  1B35  0086               	movwf	6	;volatile
  9741  1B36                     l2542:
  9742                           
  9743                           ;./Libreria2.h: 83: 
  9744  1B36  1588               	bsf	8,3	;volatile
  9745                           
  9746                           ;./Libreria2.h: 84: void Lcd_Write_String(char *a)
  9747  1B37  301D               	movlw	29
  9748  1B38  00F4               	movwf	??_Lcd_Write_Char
  9749  1B39                     u5347:
  9750  1B39  0BF4               	decfsz	??_Lcd_Write_Char,f
  9751  1B3A  2B39               	goto	u5347
  9752  1B3B  2B3C               	nop2
  9753  1B3C                     l2544:
  9754                           
  9755                           ;./Libreria2.h: 85: {
  9756  1B3C  1283               	bcf	3,5	;RP0=0, select bank0
  9757  1B3D  1303               	bcf	3,6	;RP1=0, select bank0
  9758  1B3E  1188               	bcf	8,3	;volatile
  9759  1B3F                     l62:
  9760  1B3F  0008               	return
  9761  1B40                     __end_of_Lcd_Write_Char:
  9762                           
  9763                           	psect	text26
  9764  1BCA                     __ptext26:	
  9765 ;; *************** function _Lcd_Set_Cursor *****************
  9766 ;; Defined at:
  9767 ;;		line 59 in file "./Libreria2.h"
  9768 ;; Parameters:    Size  Location     Type
  9769 ;;  a               1    wreg     unsigned char 
  9770 ;;  b               1    7[COMMON] unsigned char 
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;  a               1    2[BANK0 ] unsigned char 
  9773 ;;  temp            1    3[BANK0 ] unsigned char 
  9774 ;;  y               1    0        unsigned char 
  9775 ;;  z               1    0        unsigned char 
  9776 ;; Return value:  Size  Location     Type
  9777 ;;                  1    wreg      void 
  9778 ;; Registers used:
  9779 ;;		wreg, status,2, status,0, pclath, cstack
  9780 ;; Tracked objects:
  9781 ;;		On entry : 0/0
  9782 ;;		On exit  : 0/0
  9783 ;;		Unchanged: 0/0
  9784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9785 ;;      Params:         1       0       0       0       0
  9786 ;;      Locals:         0       4       0       0       0
  9787 ;;      Temps:          1       0       0       0       0
  9788 ;;      Totals:         2       4       0       0       0
  9789 ;;Total ram usage:        6 bytes
  9790 ;; Hardware stack levels used:    1
  9791 ;; Hardware stack levels required when called:    2
  9792 ;; This function calls:
  9793 ;;		_Lcd_Cmd
  9794 ;; This function is called by:
  9795 ;;		_main
  9796 ;;		_conversion
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           
  9801                           ;psect for function _Lcd_Set_Cursor
  9802  1BCA                     _Lcd_Set_Cursor:
  9803                           
  9804                           ;incstack = 0
  9805                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9806                           ;Lcd_Set_Cursor@a stored from wreg
  9807  1BCA  1283               	bcf	3,5	;RP0=0, select bank0
  9808  1BCB  1303               	bcf	3,6	;RP1=0, select bank0
  9809  1BCC  00A2               	movwf	Lcd_Set_Cursor@a
  9810  1BCD                     l2904:
  9811                           
  9812                           ;./Libreria2.h: 59:  {;./Libreria2.h: 60:    temp = 0x80 + b - 1;;./Libreria2.h: 61:   z
      +                           = temp>>8;;./Libreria2.h: 62:   y = temp & 0x0F;
  9813  1BCD  0322               	decf	Lcd_Set_Cursor@a,w
  9814  1BCE  1D03               	btfss	3,2
  9815  1BCF  2BD1               	goto	u4901
  9816  1BD0  2BD2               	goto	u4900
  9817  1BD1                     u4901:
  9818  1BD1  2BDE               	goto	l2914
  9819  1BD2                     u4900:
  9820  1BD2                     l2906:
  9821                           
  9822                           ;./Libreria2.h: 63:   Lcd_Cmd(temp);;./Libreria2.h: 64: 
  9823  1BD2  0877               	movf	Lcd_Set_Cursor@b,w
  9824  1BD3  3E7F               	addlw	127
  9825  1BD4  00F8               	movwf	??_Lcd_Set_Cursor
  9826  1BD5  0878               	movf	??_Lcd_Set_Cursor,w
  9827  1BD6  00A3               	movwf	Lcd_Set_Cursor@temp
  9828  1BD7                     l2908:
  9829  1BD7                     l2910:
  9830  1BD7                     l2912:
  9831                           
  9832                           ;./Libreria2.h: 67:  {
  9833  1BD7  0823               	movf	Lcd_Set_Cursor@temp,w
  9834  1BD8  160A  158A  2352  160A  158A  	fcall	_Lcd_Cmd
  9835                           
  9836                           ;./Libreria2.h: 69:   z = temp>>8;
  9837  1BDD  2BEF               	goto	l59
  9838  1BDE                     l2914:
  9839  1BDE  3002               	movlw	2
  9840  1BDF  0622               	xorwf	Lcd_Set_Cursor@a,w
  9841  1BE0  1D03               	btfss	3,2
  9842  1BE1  2BE3               	goto	u4911
  9843  1BE2  2BE4               	goto	u4910
  9844  1BE3                     u4911:
  9845  1BE3  2BEF               	goto	l59
  9846  1BE4                     u4910:
  9847  1BE4                     l2916:
  9848                           
  9849                           ;./Libreria2.h: 71:   Lcd_Cmd(temp);;./Libreria2.h: 72: 
  9850  1BE4  0877               	movf	Lcd_Set_Cursor@b,w
  9851  1BE5  3EBF               	addlw	191
  9852  1BE6  00F8               	movwf	??_Lcd_Set_Cursor
  9853  1BE7  0878               	movf	??_Lcd_Set_Cursor,w
  9854  1BE8  00A3               	movwf	Lcd_Set_Cursor@temp
  9855  1BE9                     l2918:
  9856  1BE9                     l2920:
  9857  1BE9                     l2922:
  9858                           
  9859                           ;./Libreria2.h: 75: 
  9860  1BE9  0823               	movf	Lcd_Set_Cursor@temp,w
  9861  1BEA  160A  158A  2352  160A  158A  	fcall	_Lcd_Cmd
  9862  1BEF                     l59:
  9863  1BEF  0008               	return
  9864  1BF0                     __end_of_Lcd_Set_Cursor:
  9865                           
  9866                           	psect	text27
  9867  1B65                     __ptext27:	
  9868 ;; *************** function _config *****************
  9869 ;; Defined at:
  9870 ;;		line 19 in file "./Libreria2.h"
  9871 ;; Parameters:    Size  Location     Type
  9872 ;;		None
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;		None
  9875 ;; Return value:  Size  Location     Type
  9876 ;;                  1    wreg      void 
  9877 ;; Registers used:
  9878 ;;		wreg, status,2
  9879 ;; Tracked objects:
  9880 ;;		On entry : 0/0
  9881 ;;		On exit  : 0/0
  9882 ;;		Unchanged: 0/0
  9883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9884 ;;      Params:         0       0       0       0       0
  9885 ;;      Locals:         0       0       0       0       0
  9886 ;;      Temps:          0       0       0       0       0
  9887 ;;      Totals:         0       0       0       0       0
  9888 ;;Total ram usage:        0 bytes
  9889 ;; Hardware stack levels used:    1
  9890 ;; Hardware stack levels required when called:    1
  9891 ;; This function calls:
  9892 ;;		Nothing
  9893 ;; This function is called by:
  9894 ;;		_main
  9895 ;; This function uses a non-reentrant model
  9896 ;;
  9897                           
  9898                           
  9899                           ;psect for function _config
  9900  1B65                     _config:
  9901  1B65                     l1926:	
  9902                           ;incstack = 0
  9903                           ; Regs used in _config: [wreg+status,2]
  9904                           
  9905                           
  9906                           ;./Libreria2.h: 21:     TRISA = 0b00000011;
  9907  1B65  1683               	bsf	3,5	;RP0=1, select bank3
  9908  1B66  1703               	bsf	3,6	;RP1=1, select bank3
  9909  1B67  0188               	clrf	8	;volatile
  9910                           
  9911                           ;./Libreria2.h: 22:     TRISB = 0b00000000;
  9912  1B68  0189               	clrf	9	;volatile
  9913                           
  9914                           ;./Libreria2.h: 24: 
  9915  1B69  1283               	bcf	3,5	;RP0=0, select bank0
  9916  1B6A  1303               	bcf	3,6	;RP1=0, select bank0
  9917  1B6B  0186               	clrf	6	;volatile
  9918  1B6C                     l1928:
  9919                           
  9920                           ;./Libreria2.h: 25:     ANSELbits.ANS0 = 1;
  9921  1B6C  3003               	movlw	3
  9922  1B6D  1683               	bsf	3,5	;RP0=1, select bank1
  9923  1B6E  1303               	bcf	3,6	;RP1=0, select bank1
  9924  1B6F  0085               	movwf	5	;volatile
  9925  1B70                     l1930:
  9926                           
  9927                           ;./Libreria2.h: 26:     ANSELbits.ANS1 = 1;
  9928  1B70  0186               	clrf	6	;volatile
  9929  1B71                     l1932:
  9930                           
  9931                           ;./Libreria2.h: 27: 
  9932  1B71  0188               	clrf	8	;volatile
  9933  1B72                     l1934:
  9934                           
  9935                           ;./Libreria2.h: 29:     ADCON0bits.ADON=1;
  9936  1B72  1683               	bsf	3,5	;RP0=1, select bank3
  9937  1B73  1703               	bsf	3,6	;RP1=1, select bank3
  9938  1B74  1408               	bsf	8,0	;volatile
  9939  1B75                     l1936:
  9940                           
  9941                           ;./Libreria2.h: 30:     ADCON1bits.ADFM=0;
  9942  1B75  1488               	bsf	8,1	;volatile
  9943  1B76                     l1938:
  9944                           
  9945                           ;./Libreria2.h: 33:     INTCONbits.PEIE = 1;
  9946  1B76  1283               	bcf	3,5	;RP0=0, select bank0
  9947  1B77  1303               	bcf	3,6	;RP1=0, select bank0
  9948  1B78  141F               	bsf	31,0	;volatile
  9949  1B79                     l1940:
  9950                           
  9951                           ;./Libreria2.h: 34: 
  9952  1B79  1683               	bsf	3,5	;RP0=1, select bank1
  9953  1B7A  1303               	bcf	3,6	;RP1=0, select bank1
  9954  1B7B  139F               	bcf	31,7	;volatile
  9955  1B7C                     l1942:
  9956                           
  9957                           ;./Libreria2.h: 36:     PIR1bits.ADIF = 0;
  9958  1B7C  178B               	bsf	11,7	;volatile
  9959  1B7D                     l1944:
  9960                           
  9961                           ;./Libreria2.h: 37: 
  9962  1B7D  170B               	bsf	11,6	;volatile
  9963  1B7E                     l1946:
  9964                           
  9965                           ;./Libreria2.h: 39: }
  9966  1B7E  170C               	bsf	12,6	;volatile
  9967  1B7F                     l1948:
  9968                           
  9969                           ;./Libreria2.h: 40: 
  9970  1B7F  1283               	bcf	3,5	;RP0=0, select bank0
  9971  1B80  1303               	bcf	3,6	;RP1=0, select bank0
  9972  1B81  130C               	bcf	12,6	;volatile
  9973  1B82                     l47:
  9974  1B82  0008               	return
  9975  1B83                     __end_of_config:
  9976                           
  9977                           	psect	text28
  9978  1C19                     __ptext28:	
  9979 ;; *************** function _Lcd_Init *****************
  9980 ;; Defined at:
  9981 ;;		line 95 in file "./Libreria2.h"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;		None
  9984 ;; Auto vars:     Size  Location     Type
  9985 ;;		None
  9986 ;; Return value:  Size  Location     Type
  9987 ;;                  1    wreg      void 
  9988 ;; Registers used:
  9989 ;;		wreg, status,2, status,0, pclath, cstack
  9990 ;; Tracked objects:
  9991 ;;		On entry : 0/0
  9992 ;;		On exit  : 0/0
  9993 ;;		Unchanged: 0/0
  9994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9995 ;;      Params:         0       0       0       0       0
  9996 ;;      Locals:         0       0       0       0       0
  9997 ;;      Temps:          2       0       0       0       0
  9998 ;;      Totals:         2       0       0       0       0
  9999 ;;Total ram usage:        2 bytes
 10000 ;; Hardware stack levels used:    1
 10001 ;; Hardware stack levels required when called:    2
 10002 ;; This function calls:
 10003 ;;		_Lcd_Cmd
 10004 ;; This function is called by:
 10005 ;;		_main
 10006 ;; This function uses a non-reentrant model
 10007 ;;
 10008                           
 10009                           
 10010                           ;psect for function _Lcd_Init
 10011  1C19                     _Lcd_Init:
 10012  1C19                     l3140:	
 10013                           ;incstack = 0
 10014                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10015                           
 10016                           
 10017                           ;./Libreria2.h: 97: 
 10018  1C19  1283               	bcf	3,5	;RP0=0, select bank0
 10019  1C1A  1303               	bcf	3,6	;RP1=0, select bank0
 10020  1C1B  1108               	bcf	8,2	;volatile
 10021  1C1C                     l3142:
 10022                           
 10023                           ;./Libreria2.h: 99:     Lcd_Cmd(0x30);
 10024  1C1C  3000               	movlw	0
 10025  1C1D  160A  158A  2352  160A  158A  	fcall	_Lcd_Cmd
 10026  1C22                     l3144:
 10027                           
 10028                           ;./Libreria2.h: 100:     _delay((unsigned long)((160)*(9000000/4000000.0)));
 10029  1C22  302C               	movlw	44
 10030  1C23  00F8               	movwf	??_Lcd_Init+1
 10031  1C24  30D3               	movlw	211
 10032  1C25  00F7               	movwf	??_Lcd_Init
 10033  1C26                     u5357:
 10034  1C26  0BF7               	decfsz	??_Lcd_Init,f
 10035  1C27  2C26               	goto	u5357
 10036  1C28  0BF8               	decfsz	??_Lcd_Init+1,f
 10037  1C29  2C26               	goto	u5357
 10038  1C2A  2C2B               	nop2
 10039  1C2B                     l3146:
 10040                           
 10041                           ;./Libreria2.h: 103:     Lcd_Cmd(0x01);
 10042  1C2B  3030               	movlw	48
 10043  1C2C  160A  158A  2352  160A  158A  	fcall	_Lcd_Cmd
 10044                           
 10045                           ;./Libreria2.h: 104:     Lcd_Cmd(0x06);
 10046  1C31  3077               	movlw	119
 10047  1C32  00F7               	movwf	??_Lcd_Init
 10048  1C33                     u5367:
 10049  1C33  0BF7               	decfsz	??_Lcd_Init,f
 10050  1C34  2C33               	goto	u5367
 10051  1C35  2C36               	nop2
 10052  1C36                     l3148:
 10053                           
 10054                           ;./Libreria2.h: 106: 
 10055  1C36  3038               	movlw	56
 10056  1C37  160A  158A  2352  160A  158A  	fcall	_Lcd_Cmd
 10057  1C3C                     l3150:
 10058                           
 10059                           ;./Libreria2.h: 107: }
 10060  1C3C  3001               	movlw	1
 10061  1C3D  160A  158A  2352  160A  158A  	fcall	_Lcd_Cmd
 10062  1C42                     l3152:
 10063  1C42  3006               	movlw	6
 10064  1C43  160A  158A  2352  160A  158A  	fcall	_Lcd_Cmd
 10065  1C48                     l3154:
 10066  1C48  300F               	movlw	15
 10067  1C49  160A  158A  2352  160A  158A  	fcall	_Lcd_Cmd
 10068  1C4E                     l71:
 10069  1C4E  0008               	return
 10070  1C4F                     __end_of_Lcd_Init:
 10071                           
 10072                           	psect	text29
 10073  1B23                     __ptext29:	
 10074 ;; *************** function _Lcd_Clear *****************
 10075 ;; Defined at:
 10076 ;;		line 54 in file "./Libreria2.h"
 10077 ;; Parameters:    Size  Location     Type
 10078 ;;		None
 10079 ;; Auto vars:     Size  Location     Type
 10080 ;;		None
 10081 ;; Return value:  Size  Location     Type
 10082 ;;                  2   52[None  ] int 
 10083 ;; Registers used:
 10084 ;;		wreg, status,2, status,0, pclath, cstack
 10085 ;; Tracked objects:
 10086 ;;		On entry : 0/0
 10087 ;;		On exit  : 0/0
 10088 ;;		Unchanged: 0/0
 10089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10090 ;;      Params:         0       0       0       0       0
 10091 ;;      Locals:         0       0       0       0       0
 10092 ;;      Temps:          0       0       0       0       0
 10093 ;;      Totals:         0       0       0       0       0
 10094 ;;Total ram usage:        0 bytes
 10095 ;; Hardware stack levels used:    1
 10096 ;; Hardware stack levels required when called:    2
 10097 ;; This function calls:
 10098 ;;		_Lcd_Cmd
 10099 ;; This function is called by:
 10100 ;;		_main
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           
 10105                           ;psect for function _Lcd_Clear
 10106  1B23                     _Lcd_Clear:
 10107  1B23                     l3138:	
 10108                           ;incstack = 0
 10109                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10110                           
 10111                           
 10112                           ;./Libreria2.h: 55: void Lcd_Set_Cursor(char a, char b)
 10113  1B23  3000               	movlw	0
 10114  1B24  160A  158A  2352  160A  158A  	fcall	_Lcd_Cmd
 10115                           
 10116                           ;./Libreria2.h: 56: {
 10117  1B29  3001               	movlw	1
 10118  1B2A  160A  158A  2352  160A  158A  	fcall	_Lcd_Cmd
 10119  1B2F                     l53:
 10120  1B2F  0008               	return
 10121  1B30                     __end_of_Lcd_Clear:
 10122                           
 10123                           	psect	text30
 10124  1B52                     __ptext30:	
 10125 ;; *************** function _Lcd_Cmd *****************
 10126 ;; Defined at:
 10127 ;;		line 45 in file "./Libreria2.h"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;  a               1    wreg     unsigned char 
 10130 ;; Auto vars:     Size  Location     Type
 10131 ;;  a               1    6[COMMON] unsigned char 
 10132 ;; Return value:  Size  Location     Type
 10133 ;;                  1    wreg      void 
 10134 ;; Registers used:
 10135 ;;		wreg
 10136 ;; Tracked objects:
 10137 ;;		On entry : 0/0
 10138 ;;		On exit  : 0/0
 10139 ;;		Unchanged: 0/0
 10140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10141 ;;      Params:         0       0       0       0       0
 10142 ;;      Locals:         1       0       0       0       0
 10143 ;;      Temps:          2       0       0       0       0
 10144 ;;      Totals:         3       0       0       0       0
 10145 ;;Total ram usage:        3 bytes
 10146 ;; Hardware stack levels used:    1
 10147 ;; Hardware stack levels required when called:    1
 10148 ;; This function calls:
 10149 ;;		Nothing
 10150 ;; This function is called by:
 10151 ;;		_Lcd_Clear
 10152 ;;		_Lcd_Set_Cursor
 10153 ;;		_Lcd_Init
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           
 10158                           ;psect for function _Lcd_Cmd
 10159  1B52                     _Lcd_Cmd:
 10160                           
 10161                           ;incstack = 0
 10162                           ; Regs used in _Lcd_Cmd: [wreg]
 10163                           ;Lcd_Cmd@a stored from wreg
 10164  1B52  00F6               	movwf	Lcd_Cmd@a
 10165  1B53                     l2530:
 10166                           
 10167                           ;./Libreria2.h: 46:     PORTDbits.RD3=0;
 10168  1B53  1283               	bcf	3,5	;RP0=0, select bank0
 10169  1B54  1303               	bcf	3,6	;RP1=0, select bank0
 10170  1B55  1108               	bcf	8,2	;volatile
 10171  1B56                     l2532:
 10172                           
 10173                           ;./Libreria2.h: 47: }
 10174  1B56  0876               	movf	Lcd_Cmd@a,w
 10175  1B57  0086               	movwf	6	;volatile
 10176  1B58                     l2534:
 10177                           
 10178                           ;./Libreria2.h: 48: 
 10179  1B58  1588               	bsf	8,3	;volatile
 10180                           
 10181                           ;./Libreria2.h: 49: 
 10182  1B59  300C               	movlw	12
 10183  1B5A  00F5               	movwf	??_Lcd_Cmd+1
 10184  1B5B  30AF               	movlw	175
 10185  1B5C  00F4               	movwf	??_Lcd_Cmd
 10186  1B5D                     u5377:
 10187  1B5D  0BF4               	decfsz	??_Lcd_Cmd,f
 10188  1B5E  2B5D               	goto	u5377
 10189  1B5F  0BF5               	decfsz	??_Lcd_Cmd+1,f
 10190  1B60  2B5D               	goto	u5377
 10191  1B61                     l2536:
 10192                           
 10193                           ;./Libreria2.h: 50: Lcd_Clear(){
 10194  1B61  1283               	bcf	3,5	;RP0=0, select bank0
 10195  1B62  1303               	bcf	3,6	;RP1=0, select bank0
 10196  1B63  1188               	bcf	8,3	;volatile
 10197  1B64                     l50:
 10198  1B64  0008               	return
 10199  1B65                     __end_of_Lcd_Cmd:
 10200                           
 10201                           	psect	text31
 10202  1B83                     __ptext31:	
 10203 ;; *************** function _ISR *****************
 10204 ;; Defined at:
 10205 ;;		line 39 in file "lab3.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;		None
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;		None
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  1    wreg      void 
 10212 ;; Registers used:
 10213 ;;		wreg
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10219 ;;      Params:         0       0       0       0       0
 10220 ;;      Locals:         0       0       0       0       0
 10221 ;;      Temps:          4       0       0       0       0
 10222 ;;      Totals:         4       0       0       0       0
 10223 ;;Total ram usage:        4 bytes
 10224 ;; Hardware stack levels used:    1
 10225 ;; This function calls:
 10226 ;;		Nothing
 10227 ;; This function is called by:
 10228 ;;		Interrupt level 1
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           
 10233                           ;psect for function _ISR
 10234  1B83                     _ISR:
 10235  1B83                     i1l3178:
 10236                           
 10237                           ;lab3.c: 41:      if (PIR1bits.ADIF ==1){
 10238  1B83  1283               	bcf	3,5	;RP0=0, select bank0
 10239  1B84  1303               	bcf	3,6	;RP1=0, select bank0
 10240  1B85  1F0C               	btfss	12,6	;volatile
 10241  1B86  2B88               	goto	u532_21
 10242  1B87  2B89               	goto	u532_20
 10243  1B88                     u532_21:
 10244  1B88  2B9E               	goto	i1l77
 10245  1B89                     u532_20:
 10246  1B89                     i1l3180:
 10247                           
 10248                           ;lab3.c: 42:         PIR1bits.ADIF = 0;
 10249  1B89  130C               	bcf	12,6	;volatile
 10250  1B8A                     i1l3182:
 10251                           
 10252                           ;lab3.c: 43:         c = ADRESH;
 10253  1B8A  081E               	movf	30,w	;volatile
 10254  1B8B  00F0               	movwf	??_ISR
 10255  1B8C  01F1               	clrf	??_ISR+1
 10256  1B8D  0870               	movf	??_ISR,w
 10257  1B8E  1683               	bsf	3,5	;RP0=1, select bank1
 10258  1B8F  1303               	bcf	3,6	;RP1=0, select bank1
 10259  1B90  00D8               	movwf	_c^(0+128)
 10260  1B91  0871               	movf	??_ISR+1,w
 10261  1B92  00D9               	movwf	(_c+1)^(0+128)
 10262                           
 10263                           ;lab3.c: 44:         b = ADRESH;
 10264  1B93  1283               	bcf	3,5	;RP0=0, select bank0
 10265  1B94  1303               	bcf	3,6	;RP1=0, select bank0
 10266  1B95  081E               	movf	30,w	;volatile
 10267  1B96  00F0               	movwf	??_ISR
 10268  1B97  01F1               	clrf	??_ISR+1
 10269  1B98  0870               	movf	??_ISR,w
 10270  1B99  1683               	bsf	3,5	;RP0=1, select bank1
 10271  1B9A  1303               	bcf	3,6	;RP1=0, select bank1
 10272  1B9B  00D6               	movwf	_b^(0+128)
 10273  1B9C  0871               	movf	??_ISR+1,w
 10274  1B9D  00D7               	movwf	(_b+1)^(0+128)
 10275  1B9E                     i1l77:
 10276  1B9E  0873               	movf	??_ISR+3,w
 10277  1B9F  008A               	movwf	10
 10278  1BA0  0E72               	swapf	??_ISR+2,w
 10279  1BA1  0083               	movwf	3
 10280  1BA2  0EFE               	swapf	btemp,f
 10281  1BA3  0E7E               	swapf	btemp,w
 10282  1BA4  0009               	retfie
 10283  1BA5                     __end_of_ISR:
 10284  007E                     btemp	set	126	;btemp
 10285  007E                     wtemp0	set	126
 10286                           
 10287                           	psect	intentry
 10288  0004                     __pintentry:	
 10289                           ;incstack = 0
 10290                           ; Regs used in _ISR: [wreg]
 10291                           
 10292  0004                     interrupt_function:
 10293  007E                     saved_w	set	btemp
 10294  0004  00FE               	movwf	btemp
 10295  0005  0E03               	swapf	3,w
 10296  0006  00F2               	movwf	??_ISR+2
 10297  0007  080A               	movf	10,w
 10298  0008  00F3               	movwf	??_ISR+3
 10299  0009  160A  158A  2B83   	ljmp	_ISR
 10300                           
 10301                           	psect	config
 10302                           
 10303                           ;Config register CONFIG1 @ 0x2007
 10304                           ;	Oscillator Selection bits
 10305                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 10306                           ;	Watchdog Timer Enable bit
 10307                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10308                           ;	Power-up Timer Enable bit
 10309                           ;	PWRTE = OFF, PWRT disabled
 10310                           ;	RE3/MCLR pin function select bit
 10311                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10312                           ;	Code Protection bit
 10313                           ;	CP = OFF, Program memory code protection is disabled
 10314                           ;	Data Code Protection bit
 10315                           ;	CPD = OFF, Data memory code protection is disabled
 10316                           ;	Brown Out Reset Selection bits
 10317                           ;	BOREN = OFF, BOR disabled
 10318                           ;	Internal External Switchover bit
 10319                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10320                           ;	Fail-Safe Clock Monitor Enabled bit
 10321                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10322                           ;	Low Voltage Programming Enable bit
 10323                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10324                           ;	In-Circuit Debugger Mode bit
 10325                           ;	DEBUG = 0x1, unprogrammed default
 10326  2007                     	org	8199
 10327  2007  20D4               	dw	8404
 10328                           
 10329                           ;Config register CONFIG2 @ 0x2008
 10330                           ;	Brown-out Reset Selection bit
 10331                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10332                           ;	Flash Program Memory Self Write Enable bits
 10333                           ;	WRT = OFF, Write protection off
 10334  2008                     	org	8200
 10335  2008  3FFF               	dw	16383

Data Sizes:
    Strings     49
    Constant    144
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     79      79
    BANK1            80     46      59
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_7(CODE[5]), STR_6(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> buffer(BANK1[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> buffer(BANK1[1]), STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[17]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _conversion->_Lcd_Write_String
    _conversion->___wmul
    _sprintf->___lldiv
    _sprintf->___wmul
    ___awdiv->___wmul
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___flmul->___lwmod
    ___xxtofl->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_conversion
    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___flmul->___awdiv
    ___xxtofl->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _conversion->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   37513
                                             43 BANK1      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _config
                         _conversion
 ---------------------------------------------------------------------------------
 (1) _conversion                                           2     2      0   36013
                                             77 BANK0      2     2      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                             ___wmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   31595
                                              8 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7712
                                             37 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              4 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1668
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    5871
                                             37 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              0 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4393
                                             11 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              4 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              4 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                             11 BANK0     14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     700
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              4 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              4 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             56 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             57 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              4 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              4 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              4 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     644
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     812
                                              7 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      22
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _config
   _conversion
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      94       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2E      3B       7       73.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      94      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 17:22:51 2021

                        _b 00D6                          _c 00D8                          pc 0002  
                       l50 1B64                         l53 1B2F                         l62 1B3F  
                       l71 1C4E                         l47 1B82                         l90 093B  
                       l59 1BEF                         l68 1C92               ___awdiv@sign 0028  
                       fsr 0004        ___wmul@multiplicand 0076        __Umul8_16@word_mpld 0022  
                      l305 1DE0                        l218 0093                        l251 0599  
                      l244 0555                        l422 1E49                        l271 1BC9  
                      l600 1682                        l440 12CF                        l192 1577  
                      l265 07A7                        l602 1659                        l450 135D  
                      l443 132D                        l435 1133                        l259 0760  
                      l460 1F7A                        l621 1771                        l525 07FD  
                      l269 1BB1                        l630 17D1                        l455 1CF7  
                      l463 1FE6                        l439 136A                        l711 1C06  
                      l199 0FFF                        l456 1D13                        l464 1FFF  
                      l472 1EC5                        l704 0C90                        l457 1D28  
                      l617 174D                        l609 17FF                        l713 1C18  
                      l642 1D78                        l482 1EC5                        l490 126F  
                      l627 1793                        l468 1B22                        l638 17F3  
                      l750 11C5                        l742 119D                        l486 12AC  
                      l639 17FF                        l479 1EB0                        l487 121E  
                      l575 1CD8                        l736 1158                        l497 129F  
                      l585 083E                        l738 11EF                        l596 15DB  
                      l692 0C9C                        l756 1B51                        l749 11B9  
                      l698 0C08                        _ISR 1B83                        fsr0 0004  
                      indf 0000               ___awmod@sign 0021               ___flmul@aexp 003D  
             ___flmul@bexp 003E                _sprintf$989 00B2               ___flmul@sign 0038  
             ___flmul@temp 0043               ___flmul@prod 003F                       ?_ISR 0070  
             ___fltol@exp1 0062                       l2100 1E35                       l2102 1E3B  
                     l2110 10D9                       l2200 1585                       l2104 1E40  
                     l2120 10EB                       l2112 10DC                       l3000 01B6  
                     l2210 159C                       l2202 1589                       l2106 1E45  
                     l2130 1104                       l2122 10F0                       l2114 10E0  
                     l3002 0201                       l3010 0262                       l2300 1694  
                     l2220 15B2                       l2212 159D                       l2204 158A  
                     l2060 1C0F                       l2052 1BF3                       l2132 1108  
                     l2124 10F6                       l2140 1125                       l2116 10E5  
                     l3100 0734                       l3020 0317                       l3012 0271  
                     l3004 0228                       l2310 16BE                       l2302 16AB  
                     l2230 15C3                       l2222 15B3                       l2206 158F  
                     l2214 159F                       l2062 1C14                       l2054 1BF5  
                     l2150 1C97                       l2070 1DE8                       l2142 112A  
                     l2134 1112                       l2126 10F9                       l2118 10E7  
                     l3110 0752                       l3102 073B                       l3030 037E  
                     l3022 0326                       l3014 02B8                       l3006 0231  
                     l2320 16E7                       l2312 16C2                       l2304 16AF  
                     l2240 15E1                       l2232 15C8                       l2224 15B9  
                     l2216 15A7                       l2208 1594                       l2056 1BFC  
                     l2400 0953                       l2160 1CAF                       l2152 1C9D  
                     l2080 1DFC                       l2072 1DED                       l2144 112F  
                     l2136 1118                       l2128 1100                       l3120 077B  
                     l3112 075A                       l3104 073F                       l3040 0452  
                     l3024 034F                       l3016 02C7                       l3008 025A  
                     l3200 1F22                       l2330 1755                       l2322 1725  
                     l2314 16C3                       l2306 16B3                       l2250 15F5  
                     l2242 15E5                       l2234 15D0                       l2226 15BD  
                     l2218 15AC                       l2058 1C00                       l2410 096F  
                     l2402 0958                       l2162 1CC0                       l2154 1CA0  
                     l2170 1CD4                       l2090 1E12                       l2082 1DFE  
                     l2074 1DEF                       l2066 1DE1                       l2138 111F  
                     l3122 0789                       l3114 076B                       l3106 0745  
                     l3042 0454                       l3034 03C9                       l3026 0358  
                     l3018 02F0                       l3210 1F52                       l3202 1F2B  
                     l3140 1C19                       l2340 1770                       l2332 175A  
                     l2324 172B                       l2316 16CC                       l2308 16BC  
                     l2260 1609                       l2252 15F9                       l2244 15E9  
                     l2236 15D1                       l2228 15BE                       l2500 0C12  
                     l2420 0984                       l2412 0975                       l2404 0960  
                     l2164 1CC6                       l2156 1CA7                       l2148 1C93  
                     l2180 0815                       l2092 1E16                       l2084 1E04  
                     l2076 1DF3                       l2068 1DE4                       l3116 076C  
                     l3060 04AF                       l3052 048D                       l3028 0360  
                     l3036 03D2                       l3108 074C                       l3204 1F37  
                     l3150 1C3C                       l3142 1C1C                       l2342 1775  
                     l2350 1781                       l2326 1730                       l2318 16D1  
                     l2270 161D                       l2262 160D                       l2254 15FD  
                     l2246 15ED                       l2238 15D3                       l2510 0C50  
                     l2502 0C20                       l2430 09A0                       l2422 098C  
                     l2414 0979                       l2406 0962                       l2166 1CC7  
                     l2158 1CAB                       l2190 0834                       l2182 0819  
                     l2174 0805                       l2094 1E27                       l2086 1E07  
                     l2078 1DF8                       l3118 077B                       l3070 056A  
                     l3062 050A                       l3054 0497                       l3038 0407  
                     l3126 0791                       l3206 1F40                       l3152 1C42  
                     l3144 1C22                       l2344 1778                       l2336 1763  
                     l2328 173F                       l2352 1785                       l2280 165D  
                     l2272 1621                       l2264 1611                       l2256 1601  
                     l2248 15F1                       l2520 0C84                       l2512 0C5B  
                     l2504 0C24                       l2440 09E3                       l2424 098E  
                     l2416 097A                       l2408 096A                       l2168 1CCE  
                     l2184 081D                       l2176 080B                       l2192 083A  
                     l2096 1E2D                       l2088 1E0E                       l2600 0FD3  
                     l3080 05A2                       l3072 0570                       l3064 0549  
                     l3056 04A3                       l3048 0456                       l3128 07A3  
                     l3160 084F                       l3208 1F4C                       l2530 1B53  
                     l3138 1B23                       l3154 1C48                       l3146 1C2B  
                     l2370 17CD                       l2362 1798                       l2354 1786  
                     l2346 177A                       l2338 176C                       l2290 1676  
                     l2282 1666                       l2266 1615                       l2258 1605  
                     l2274 1625                       l2522 0C88                       l2514 0C6A  
                     l2506 0C3D                       l2450 0A6C                       l2442 09FF  
                     l2434 09A9                       l2426 0996                       l2418 097F  
                     l2186 0827                       l2178 080E                       l2610 1B4E  
                     l2098 1E2E                       l3090 062B                       l3082 05A7  
                     l3074 057D                       l3066 055D                       l3058 04AA  
                     l3242 00A9                       l3162 0854                       l3170 08C6  
                     l2532 1B56                       l3148 1C36                       l2540 1B34  
                     l2380 17E9                       l2372 17D6                       l2364 179D  
                     l2356 178A                       l2348 177F                       l2284 1668  
                     l2292 167A                       l2276 1626                       l2268 1619  
                     l2196 1578                       l2700 1331                       l2524 0C89  
                     l2516 0C74                       l2508 0C43                       l2460 0ADF  
                     l2452 0A7C                       l2444 0A2B                       l2436 09B9  
                     l2428 099B                       l2188 082D                       l2612 1B50  
                     l2604 1B41                       l3092 0686                       l3084 05AE  
                     l3076 058C                       l3068 0566                       l3172 090D  
                     l3164 089B                       l3156 0842                       l2534 1B58  
                     l2542 1B36                       l2382 17ED                       l2374 17DB  
                     l2366 17AB                       l2358 1790                       l2294 1686  
                     l2286 166C                       l2278 163D                       l2198 157F  
                     l2630 1225                       l2622 120C                       l2526 0C94  
                     l2518 0C76                       l2470 0B8C                       l2462 0AFC  
                     l2454 0A99                       l2446 0A47                       l2438 09C6  
                     l2390 093C                       l2606 1B42                       l3094 06C5  
                     l3086 05B2                       l3078 0593                       l3174 0923  
                     l3166 08B1                       l3158 084B                       l3190 1EF2  
                     l2536 1B61                       l2544 1B3C                       l2384 17EF  
                     l2376 17E3                       l2368 17AF                       l2296 168B  
                     l2288 166D                       l2800 1E57                       l2720 1BA5  
                     l2640 1256                       l2632 1234                       l2616 11F0  
                     l2480 0BD8                       l2472 0BB4                       l2464 0B29  
                     l2456 0AA9                       l2448 0A63                       l2392 0943  
                     l2560 1534                       l2608 1B48                       l3096 06D1  
                     l3088 05D0                       l3176 0938                       l3168 08C2  
                     l3192 1F00                       l3184 1EC6                       l1930 1B70  
                     l2538 1B31                       l2386 17FA                       l2378 17E8  
                     l2810 1E7E                       l2730 1BC5                       l2722 1BA7  
                     l2714 1352                       l2706 1339                       l2642 1260  
                     l2634 1236                       l2618 1203                       l2490 0BED  
                     l2482 0BD9                       l2474 0BBD                       l2466 0B39  
                     l2458 0AC6                       l2394 0949                       l2554 1483  
                     l2546 136E                       l2570 0CAD                       l3098 072C  
                     l3194 1F05                       l3186 1ED8                       l1940 1B79  
                     l1932 1B71                       l2388 17FE                       l2820 1E8C  
                     l2812 1E80                       l2804 1E60                       l2740 1D9B  
                     l2724 1BAB                       l2900 11E7                       l2716 1362  
                     l2708 134B                       l2644 1261                       l2636 123F  
                     l2628 121F                       l2492 0BF1                       l2484 0BE2  
                     l2476 0BCB                       l2468 0B66                       l2396 094D  
                     l2556 1489                       l2548 1374                       l2564 0CA0  
                     l3196 1F0D                       l3188 1EE1                       l1942 1B7C  
                     l1934 1B72                       l1926 1B65                       l2910 1BD7  
                     l2830 1EB5                       l2814 1E84                       l2822 1E9E  
                     l2806 1E75                       l2750 1DC9                       l2742 1D9F  
                     l2734 1D79                       l2726 1BB8                       l2670 12BA  
                     l2662 1294                       l2654 127B                       l2646 1269  
                     l2638 1248                       l2494 0C05                       l2478 0BD4  
                     l2486 0BE8                       l2398 094E                       l2582 0E26  
                     l2566 0CA4                       l3198 1F16                       l1944 1B7D  
                     l1936 1B75                       l1928 1B6C                       l2920 1BE9  
                     l2912 1BD7                       l2904 1BCD                       l2760 1CEF  
                     l2832 1EBA                       l2808 1E76                       l2752 1DD2  
                     l2744 1DA8                       l2736 1D8B                       l2840 07C2  
                     l2728 1BBF                       l2680 12D0                       l2664 12A4  
                     l2648 1273                       l2656 128D                       l2488 0BEC  
                     l2576 0D97                       l2568 0CA6                       l1946 1B7E  
                     l1938 1B76                       l2922 1BE9                       l2906 1BD2  
                     l2914 1BDE                       l2930 1C74                       l2762 1D0B  
                     l2770 1F5C                       l2746 1DBA                       l2738 1D8E  
                     l2754 1DD8                       l2842 07C6                       l2850 07F5  
                     l2834 07A8                       l2690 12FD                       l2682 12D8  
                     l2674 12C3                       l2498 0C0D                       l2594 0F44  
                     l2578 0D9E                       l2586 0E53                       l1948 1B7F  
                     l2916 1BE4                       l2908 1BD7                       l2924 1C4F  
                     l2764 1D25                       l2780 1FBE                       l2772 1F72  
                     l2828 1EA5                       l2748 1DC8                       l2844 07D8  
                     l2836 07B2                       l2860 1137                       l2692 130F  
                     l2684 12E9                       l2668 12AD                       l2596 0F4B  
                     l2588 0E5A                       l2940 003C                       l2932 0025  
                     l2918 1BE9                       l2926 1C52                       l2766 1D27  
                     l2758 1CD9                       l2782 1FC2                       l2774 1F8E  
                     l2790 1B18                       l2854 1D29                       l2846 07E6  
                     l2838 07B5                       l2862 113C                       l2694 131D  
                     l2686 12EB                       l2950 0052                       l2942 003E  
                     l2934 002A                       l2928 1C6E                       l2784 1FFC  
                     l2776 1F96                       l2792 1B20                       l2856 1D2D  
                     l2848 07EF                       l2880 1186                       l2872 1169  
                     l2864 1140                       l2696 131E                       l2688 12F4  
                     l2960 0091                       l2952 0067                       l2944 004A  
                     l2936 0030                       l2786 1FFE                       l2778 1F9A  
                     l2794 1B22                       l2890 11BD                       l2882 1194  
                     l2874 116E                       l2866 1150                       l2698 1327  
                     l2970 00C1                       l2954 007A                       l2946 004B  
                     l2938 0037                       l2892 11C7                       l2884 11A4  
                     l2876 117B                       l2868 1160                       l2980 0117  
                     l2972 00C5                       l2964 0095                       l2956 007E  
                     l2948 004F                       l2798 1E4A                       l2894 11DD  
                     l2886 11AF                       l2878 1182                       l2990 0157  
                     l2982 011B                       l2974 00D3                       l2966 00B1  
                     l2958 008F                       l2896 11E2                       l2888 11B3  
                     l2992 016A                       l2984 011F                       l2976 00D7  
                     l2968 00BD                       l2898 11E6                       l2994 018D  
                     l2986 0146                       l2978 00FE                       l2996 0191  
                     l2988 0151                       l2998 0197                       STR_1 10B1  
                     STR_2 10A0                       STR_3 10BB                       STR_4 10C1  
                     STR_5 10C7                       STR_6 10CC                       STR_7 10CC  
                     u3010 083A                       u3011 0839                       u3100 15E5  
                     u3020 1589                       u3101 15E4                       u3021 1588  
                     u3005 082E                       u3110 163D                       u3030 158F  
                     u3111 163C                       u3031 158E                       u3120 1648  
                     u3040 1594                       u3201 169D                       u3121 1646  
                     u3041 1593                       u3210 16AF                       u3202 16A4  
                     u3130 1649                       u3050 15B2                       u3211 16AE  
                     u3203 16AB                       u3115 1639                       u3051 15B1  
                     u3300 175A                       u3220 16B3                       u3140 165D  
                     u3060 15BD                       u4100 1B48                       u4020 0E5A  
                     u3301 1759                       u3221 16B2                       u3141 165C  
                     u3061 15BC                       u4101 1B47                       u4021 0E59  
                     u4005 0DED                       u3230 16C2                       u3150 166C  
                     u3070 15C3                       u4110 1B4E                       u3231 16C1  
                     u3151 166B                       u3071 15C2                       u4111 1B4D  
                     u4015 0E29                       u3400 17AF                       u3320 1770  
                     u3080 15C8                       u4120 1203                       u5000 00FE  
                     u3401 17AE                       u3321 176F                       u3081 15C7  
                     u4121 1202                       u5001 00FD                       u3410 17BE  
                     u3330 1775                       u3250 16E7                       u3170 1682  
                     u3090 15E1                       u4210 128C                       u4130 121D  
                     u5010 0146                       u3331 1774                       u3315 1765  
                     u3251 16E6                       u3171 1681                       u3091 15E0  
                     u4211 128B                       u4131 121C                       u4035 0E7C  
                     u5011 0145                       u3420 17CD                       u3340 177F  
                     u3180 1686                       u4300 132D                       u4220 1293  
                     u3500 0958                       u2700 1DE8                       u4060 0F4B  
                     u5100 034F                       u5020 0191                       u3421 17CC  
                     u3341 177E                       u3261 16FE                       u3253 16E3  
                     u3245 16C5                       u3181 1685                       u3165 166F  
                     u4301 132C                       u4221 1292                       u4205 127C  
                     u3501 0957                       u2701 1DE7                       u4061 0F4A  
                     u4045 0EB8                       u5101 034E                       u5021 0190  
                     u3430 17D6                       u3350 1785                       u3270 1712  
                     u3262 16FF                       u3190 168B                       u4310 1331  
                     u4150 1256                       u3510 0979                       u2710 1DF3  
                     u5030 0228                       u3431 17D5                       u3415 17B9  
                     u3351 1784                       u3271 1713                       u3263 1704  
                     u3191 168A                       u4311 1330                       u4151 1255  
                     u3511 0978                       u2711 1DF2                       u4055 0F03  
                     u5031 0227                       u3440 17DB                       u3360 178A  
                     u3280 1730                       u3272 1718                       u3264 1705  
                     u4320 1338                       u4240 12A4                       u3520 097F  
                     u2720 1E04                       u2800 10E0                       u5120 048C  
                     u5040 025A                       u3441 17DA                       u3361 1789  
                     u3281 172F                       u3273 1719                       u3265 170A  
                     u4321 1337                       u4241 12A3                       u4145 1241  
                     u3521 097E                       u2721 1E03                       u2801 10DF  
                     u5121 048B                       u5041 0259                       u3450 17E8  
                     u3370 1790                       u3290 1755                       u3266 170B  
                     u4410 1BC5                       u4250 12BA                       u4170 126F  
                     u3530 0984                       u2810 10EB                       u5130 0497  
                     u5050 0271                       u3451 17E7                       u3371 178F  
                     u3291 1754                       u4411 1BC4                       u4251 12B9  
                     u4235 1296                       u4171 126E                       u4155 1252  
                     u3611 0A8B                       u3531 0983                       u2811 10EA  
                     u4075 0F5E                       u5131 0496                       u5115 0459  
                     u5051 0270                       u4500 1D0B                       u3460 17ED  
                     u3380 1797                       u4420 1D8B                       u4340 134A  
                     u4260 12CE                       u4180 1273                       u3612 0A92  
                     u3540 099B                       u2740 1E16                       u2820 10F6  
                     u5220 0733                       u5140 04A3                       u5060 02C7  
                     u5300 084F                       u4501 1D0A                       u3461 17EC  
                     u3381 1796                       u4421 1D8A                       u4405 1BB9  
                     u4341 1349                       u4261 12CD                       u4181 1272  
                     u4165 1262                       u3701 0BA6                       u3621 0AB8  
                     u3613 0A99                       u3605 0A65                       u3541 099A  
                     u2741 1E15                       u2821 10F5                       u4085 0F9A  
                     u5221 0732                       u5205 062E                       u5141 04A2  
                     u5125 0488                       u5061 02C6                       u5301 084E  
                     u4510 1D25                       u3470 17FE                       u3390 179D  
                     u4350 1351                       u4190 127A                       u2670 1C00  
                     u3702 0BAD                       u3622 0ABF                       u3550 09A0  
                     u2910 1CAF                       u5230 074B                       u5070 02F0  
                     u5310 0854                       u4511 1D24                       u3471 17FD  
                     u3391 179C                       u4351 1350                       u4335 133A  
                     u4191 1279                       u2671 1BFF                       u3703 0BB4  
                     u3623 0AC6                       u3551 099F                       u2911 1CAE  
                     u2735 1E08                       u4095 0FD6                       u5231 074A  
                     u5215 06D4                       u5071 02EF                       u5055 026D  
                     u5311 0853                       u4520 1F72                       u4600 1E57  
                     u4440 1D9F                       u4280 130F                       u3800 0C24  
                     u3480 094D                       u2760 1E27                       u2840 1108  
                     u5240 0752                       u5160 055C                       u5080 0317  
                     u4521 1F71                       u4601 1E56                       u4441 1D9E  
                     u4281 130E                       u3801 0C23                       u3641 0AEE  
                     u3561 09F1                       u3481 094C                       u2905 1CA1  
                     u2761 1E26                       u2841 1107                       u5241 0751  
                     u5161 055B                       u5081 0316                       u5065 02C3  
                     u4530 1F8E                       u4610 1E6E                       u4370 1362  
                     u2690 1C14                       u3810 0C33                       u3730 0BD8  
                     u3642 0AF5                       u3562 09F8                       u3490 0953  
                     u2930 1CC0                       u2850 1112                       u5250 075A  
                     u5170 057D                       u5090 0326                       u4515 1D21  
                     u4531 1F8D                       u4435 1D90                       u4371 1361  
                     u4275 12F6                       u2691 1C13                       u3731 0BD7  
                     u3715 0BB6                       u3651 0B1B                       u3643 0AFC  
                     u3635 0AC8                       u3571 0A0D                       u3563 09FF  
                     u3491 0952                       u2931 1CBF                       u2755 1E17  
                     u2851 1111                       u2835 10FA                       u5251 0759  
                     u5171 057C                       u5155 04B2                       u5091 0325  
                     u4540 1F9A                       u4620 1E84                       u4460 1DBA  
                     u4700 07B2                       u4380 1BAB                       u3820 0C50  
                     u3652 0B22                       u3572 0A14                       u2780 1E3B  
                     u5260 076B                       u5180 058C                       u4541 1F99  
                     u4621 1E83                       u4461 1DB9                       u4701 07B1  
                     u4381 1BAA                       u4365 1354                       u4285 130B  
                     u2685 1C07                       u3821 0C4F                       u3725 0BCD  
                     u3661 0B48                       u3653 0B29                       u3581 0A39  
                     u3573 0A1B                       u2925 1CB0                       u2781 1E3A  
                     u2765 1E23                       u5261 076A                       u5181 058B  
                     u4630 1E8B                       u3830 0C6A                       u3750 0BEC  
                     u3670 0B72                       u3662 0B4F                       u3582 0A40  
                     u2950 1CD4                       u2790 1E40                       u2870 1125  
                     u5270 077B                       u5190 05A7                       u4551 1FA9  
                     u4631 1E8A                       u4615 1E69                       u4455 1DA1  
                     u4295 1320                       u3831 0C69                       u3815 0C2E  
                     u3751 0BEB                       u3663 0B56                       u3591 0A55  
                     u3583 0A47                       u2951 1CD3                       u2935 1CBC  
                     u2791 1E3F                       u2775 1E2F                       u2871 1124  
                     u2855 110E                       u5271 077A                       u5191 05A6  
                     u5175 0579                       u5095 0322                       u4560 1FC2  
                     u4552 1FAA                       u4480 1DD8                       u4720 07C6  
                     u4800 1181                       u3840 0C88                       u3760 0BF1  
                     u3592 0A5C                       u2960 080B                       u2880 112A  
                     u5280 0789                       u4561 1FC1                       u4553 1FAF  
                     u4481 1DD7                       u4465 1DB6                       u4721 07C5  
                     u4801 1180                       u3841 0C87                       u3825 0C4C  
                     u3761 0BF0                       u3745 0BDB                       u3681 0B7E  
                     u3593 0A63                       u2945 1CC8                       u2961 080A  
                     u3905 14A6                       u2881 1129                       u2865 1119  
                     u5281 0788                       u5265 0767                       u5185 0588  
                     u5337 1EFA                       u4490 1CEF                       u4554 1FB0  
                     u4650 1E9D                       u4730 07D8                       u3770 0C05  
                     u3690 0B9A                       u3682 0B85                       u2890 1C9D  
                     u3850 1374                       u3930 0CA4                       u5290 07A3  
                     u5347 1B39                       u4491 1CEE                       u4571 1FD1  
                     u4555 1FB5                       u4651 1E9C                       u4475 1DCA  
                     u4731 07D7                       u4715 07B7                       u4395 1BB2  
                     u3835 0C66                       u3771 0C04                       u3683 0B8C  
                     u3675 0B6D                       u2891 1C9C                       u3915 14F3  
                     u3851 1373                       u3931 0CA3                       u5291 07A2  
                     u5275 0777                       u4900 1BD2                       u4580 1FFC  
                     u4572 1FD2                       u4556 1FB6                       u4660 1EA4  
                     u4820 11A3                       u3780 0C0C                       u2980 081D  
                     u3940 0CAD                       u5357 1C26                       u4901 1BD1  
                     u4581 1FFB                       u4573 1FD7                       u4661 1EA3  
                     u4645 1E8D                       u4821 11A2                       u3781 0C0B  
                     u2981 081C                       u3925 153F                       u3941 0CAC  
                     u4910 1BE4                       u4574 1FD8                       u4590 1B20  
                     u4750 07F5                       u3790 0C12                       u2990 0827  
                     u5367 1C33                       u4911 1BE3                       u4575 1FDD  
                     u4591 1B1F                       u4751 07F4                       u4735 07D4  
                     u4815 1195                       u3791 0C11                       u3695 0B95  
                     u2991 0826                       u2975 080F                       u4920 1C5C  
                     u4576 1FDE                       u4680 1EB5                       u4840 11B3  
                     u4760 113C                       u5377 1B5D                       u4585 1FF8  
                     u4681 1EB4                       u4745 07E7                       u4841 11B2  
                     u4761 113B                       u3865 1391                       u4930 1C80  
                     u4690 1EBA                       u4850 11B9                       u4770 1140  
                     u3890 1489                       u4691 1EB9                       u4675 1EA7  
                     u4851 11B8                       u4835 11A8                       u4771 113F  
                     u2995 0823                       u3891 1488                       u3875 13ED  
                     u3955 0CCF                       u4940 1C92                       u4860 11BD  
                     u4780 1160                       u3980 0D9E                       i1l77 1B9E  
                     u4941 1C91                       u4861 11BC                       u4781 115F  
                     u3885 1442                       u3981 0D9D                       u3965 0D0B  
                     u4870 11D2                       u4950 0030                       u3975 0D56  
                     u4951 002F                       u4880 11E2                       u4960 004A  
                     u4881 11E1                       u4961 0049                       u4890 11E6  
                     u4970 008E                       u4891 11E5                       u4875 11CD  
                     u4795 1173                       u3995 0DB1                       u4971 008D  
                     u4980 00BD                       u4981 00BC                       u4990 00C1  
                     u4991 00C0          ?_Lcd_Write_String 0076                       _main 1EC6  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0020  
          __end_of_Lcd_Cmd 1B65                      ??_ISR 0070              ___fltol@sign1 0061  
          __end_of___fladd 1800                      ?_main 0070            __end_of___awdiv 1E4A  
          __end_of___flneg 1B23            __end_of___awmod 1134            __end_of___flmul 0C9D  
          __end_of___flsub 1D79            __end_of___fltol 1EC6                      _ANSEL 0188  
          __end_of___lldiv 1DE1            ___awdiv@divisor 0022            __end_of___llmod 07FE  
          __end_of___lwdiv 1CD9            __end_of___lwmod 083F            ___awdiv@counter 0027  
                    _PORTB 0006    __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088            __end_of_dpowers 10A0  
                    _scale 0C9D            __end_of_isdigit 1B52                      _vpot1 00D2  
                    _vpot2 00CE                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07A8           __end_of_Lcd_Init 1C4F  
          __initialization 000F               __end_of_main 1F5C                     ??_main 00CB  
       __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0024  
                   ?_scale 0045                     _ADRESH 001E           ___awdiv@dividend 0024  
                   _ANSELH 0189                     i1l3180 1B89                     i1l3182 1B8A  
                   i1l3178 1B83                     u532_20 1B89                     u532_21 1B88  
                ??_Lcd_Cmd 0074    __size_of_Lcd_Write_Char 0010           __end_of___xxtofl 11F0  
         __end_of__powers_ 1044                     ___flge 1F5C                     ___fleq 1CD9  
                ??___fladd 0061                     ___wmul 1BA5                  ??___awdiv 0026  
                ??___flneg 0078                  ??___awmod 0078                  ??___flmul 0033  
                ??___flsub 007A                  ??___fltol 005C                  ??___lldiv 0074  
                ??___llmod 0074                  ??___lwdiv 0024                  ??___lwmod 0078  
                   _config 1B65                     _buffer 00DA                     _fround 136B  
         ___awdiv@quotient 0029            ___awmod@divisor 0074            ___awmod@counter 0020  
                ??_isdigit 0074         __size_of__Umul8_16 0029                     saved_w 007E  
                ??_sprintf 00AD            Lcd_Set_Cursor@a 0022            Lcd_Set_Cursor@b 0077  
               ___flge@ff1 0020                 ___flge@ff2 0024               ___xxtofl@arg 0035  
             ___xxtofl@exp 0034               ___xxtofl@val 002B                 ___fleq@ff1 0020  
               ___fleq@ff2 0024    __end_of__initialization 001E                 ___flneg@f1 0074  
        __end_of_Lcd_Clear 1B30                 ___fltol@f1 0058             __pcstackCOMMON 0070  
            __end_of_scale 1000             _Lcd_Set_Cursor 1BCA                 __div_to_l_ 12AD  
                ?_Lcd_Init 0070            __div_to_l_@exp1 002D            __div_to_l_@cntr 002C  
                  ??_scale 0049            __div_to_l_@quot 0028                 __pbssBANK1 00CE  
            __div_to_l_@f1 0020              __div_to_l_@f2 0024          __end_of__Umul8_16 1C19  
               __pmaintext 1EC6                    ?___flge 0020                    ?___fleq 0020  
                  ?___wmul 0074                 __pintentry 0004                    ?_config 0070  
                  ?_fround 0045  __size_of_Lcd_Write_String 0044     __end_of_Lcd_Set_Cursor 1BF0  
                ?___xxtofl 002B                 ??_Lcd_Init 0077                 __stringtab 1000  
           _Lcd_Write_Char 1B30                    _Lcd_Cmd 1B52                 _conversion 083F  
        __end_of__npowers_ 1078            __size_of___flge 00A4            __size_of___fleq 0050  
                  ___fladd 1578                    ___awdiv 1DE1                    ___flneg 1B18  
                  ___awmod 10D9                    ___flmul 093C                    ___flsub 1D29  
                  ___fltol 1E4A                    ___lldiv 1D79            __size_of___wmul 0025  
                  ___llmod 07A8                    ___lwdiv 1C93                 _fround$986 0054  
               _fround$987 0050                    ___lwmod 0805            __size_of_config 001E  
                _ANSELbits 0188            __size_of_fround 020D            ?_Lcd_Set_Cursor 0077  
                  __ptext1 083F                    __ptext2 0022                    __ptext3 0C9D  
                  __ptext4 10D9                    __ptext5 1DE1                    __ptext6 1B40  
                  __ptext7 136B                    __ptext8 0805                    __ptext9 1C93  
             __size_of_ISR 0022                ?__div_to_l_ 0020                    _dpowers 1078  
                  _isdigit 1B40                 ??___xxtofl 002F           ___awmod@dividend 0076  
                  _sprintf 0022     __end_of_Lcd_Write_Char 1B40       end_of_initialization 001E  
          ___lldiv@divisor 0020            ___lldiv@counter 0079             __tdiv_to_l_@f1 0020  
           __tdiv_to_l_@f2 0024              ??__tdiv_to_l_ 0074                  _PORTDbits 0008  
              ___fladd@grs 006C              ___xxtofl@sign 0033            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0076          Lcd_Write_String@i 0078                ___flmul@grs 0039  
              ?_conversion 0070        __size_of__div_to_l_ 00BE                  _Lcd_Clear 1B23  
           __end_of___flge 2000             __end_of___fleq 1D29             __end_of___wmul 1BCA  
         _Lcd_Write_String 1C4F             __end_of_config 1B83             __end_of_fround 1578  
      start_initialization 000F                __end_of_ISR 1BA5        __end_of__tdiv_to_l_ 12AD  
        __size_of_Lcd_Init 0036            ___llmod@divisor 0020            ___llmod@counter 0075  
      conversion@puertoANL 006E                 ?_Lcd_Clear 0070                   ??___flge 0074  
                 ??___fleq 0074                   ??___wmul 0078                  __Umul8_16 1BF0  
                 ??_config 0074            Lcd_Write_Char@a 0075                   ??_fround 0049  
            sprintf@tmpval 00BF                  ___fladd@a 005D                  ___fladd@b 0059  
      __size_of_conversion 00FD                 fround@prec 0058                  ___flmul@a 002F  
                ___flmul@b 002B                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070                sprintf@flag 00B7  
              sprintf@eexp 00BD                sprintf@fval 00C6                sprintf@prec 00C4  
         ___lwdiv@dividend 0022           ??_Lcd_Set_Cursor 0078                   ?___fladd 0059  
                 ?___awdiv 0022                   ?___flneg 0074                   ?___awmod 0074  
                 ?___flmul 002B                   ?___flsub 00A0                   ?___fltol 0058  
                 ?___lldiv 0020                   ?___llmod 0020                  __npowers_ 1044  
               ?__Umul8_16 0074                   ?___lwdiv 0020                   ?___lwmod 0074  
                __pstrings 1000                __tdiv_to_l_ 11F0               ??__div_to_l_ 0074  
                 ?_isdigit 0070                  _scale$988 0053           ___lwdiv@quotient 0025  
                 ?_sprintf 00A8             __size_of_scale 0363          interrupt_function 0004  
           ___wmul@product 0078                   _PIE1bits 008C                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C         __end_of__div_to_l_ 136B                ??_Lcd_Clear 0077  
               _ADCON0bits 001F                __stringbase 100F                 _ADCON1bits 009F  
        ___wmul@multiplier 0074           ??_Lcd_Write_Char 0074                   _Lcd_Init 1C19  
 __end_of_Lcd_Write_String 1C93               ??_conversion 006D           __size_of_Lcd_Cmd 0013  
              ??__Umul8_16 0076           __size_of___fladd 0288           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 005B           __size_of___flmul 0361  
         __size_of___flsub 0050           __size_of___fltol 007C           __size_of___lldiv 0068  
         __size_of___llmod 0056           __size_of___lwdiv 0046           __size_of___lwmod 003A  
       __end_of__stringtab 1010                _isdigit$803 0074                 sprintf@val 00B9  
       __end_of_conversion 093C                   ___xxtofl 1134           __size_of_isdigit 0012  
          ___lwdiv@divisor 0020            ___lwdiv@counter 0027                   __ptext10 093C  
                 __ptext11 1BF0                   __ptext20 1578                   __ptext12 11F0  
                 __ptext21 1B18                   __ptext13 12AD                   __ptext30 1B52  
                 __ptext22 1F5C                   __ptext14 1134                   __ptext31 1B83  
                 __ptext23 1CD9                   __ptext15 1BA5                   __ptext24 1C4F  
                 __ptext16 07A8                   __ptext25 1B30                   __ptext17 1D79  
                 __ptext26 1BCA                   __ptext18 1E4A                   __ptext27 1B65  
                 __ptext19 1D29                   __ptext28 1C19                   __ptext29 1B23  
                 __powers_ 1010           __size_of_sprintf 0786              __size_of_main 0096  
               _INTCONbits 000B                   isdigit@c 0075                   scale@scl 0057  
                 intlevel1 0000                  sprintf@ap 00B6           __tdiv_to_l_@exp1 002D  
         __tdiv_to_l_@cntr 002C                  sprintf@sp 00C3           __tdiv_to_l_@quot 0028  
         ___lwmod@dividend 0076           ___lldiv@dividend 0024                  stringcode 100A  
       Lcd_Set_Cursor@temp 0023               ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0074  
                 sprintf@c 00CA                   sprintf@f 00A8           ___lldiv@quotient 0075  
          ___lwmod@divisor 0074            ___lwmod@counter 0079                   stringdir 100A  
                 stringtab 1000              ___fladd@signs 0069               ___fladd@aexp 006A  
             ___fladd@bexp 006B       __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
