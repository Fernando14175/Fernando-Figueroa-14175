

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 21:02:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0013                     _SSPBUF	set	19
   206  0006                     _PORTB	set	6
   207  0009                     _PORTE	set	9
   208  00A6                     _SSPOV	set	166
   209  0063                     _SSPIF	set	99
   210  005F                     _GIE	set	95
   211  005E                     _PEIE	set	94
   212  00A4                     _CKP	set	164
   213  00A5                     _SSPEN	set	165
   214  00A3                     _SSPM3	set	163
   215  00A2                     _SSPM2	set	162
   216  00A1                     _SSPM1	set	161
   217  00A0                     _SSPM0	set	160
   218  0042                     _RD2	set	66
   219  0041                     _RD1	set	65
   220  0040                     _RD0	set	64
   221  0088                     _TRISD	set	136
   222  0086                     _TRISB	set	134
   223  0089                     _TRISE	set	137
   224  04A0                     _BF	set	1184
   225  0463                     _SSPIE	set	1123
   226  042D                     _TRISA5	set	1069
   227  043B                     _TRISC3	set	1083
   228  043C                     _TRISC4	set	1084
   229  043D                     _TRISC5	set	1085
   230  04A7                     _SMP	set	1191
   231  04A6                     _CKE	set	1190
   232  0189                     _ANSELH	set	393
   233  0188                     _ANSEL	set	392
   234                           
   235                           	psect	cinit
   236  000F                     start_initialization:	
   237                           ; #config settings
   238                           
   239  000F                     __initialization:
   240                           
   241                           ; Clear objects allocated to COMMON
   242  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   243  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   244  0011                     end_of_initialization:	
   245                           ;End of C runtime variable initialization code
   246                           
   247  0011                     __end_of__initialization:
   248  0011  0183               	clrf	3
   249  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   250                           
   251                           	psect	bssCOMMON
   252  0077                     __pbssCOMMON:
   253  0077                     _Data2:
   254  0077                     	ds	1
   255  0078                     _Data:
   256  0078                     	ds	1
   257                           
   258                           	psect	cstackCOMMON
   259  0070                     __pcstackCOMMON:
   260  0070                     ?_SPI_Slave_Init:
   261  0070                     ?_SPI_Write:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_main:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_ISR:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ??_ISR:	
   271                           ; 1 bytes @ 0x0
   272                           
   273                           
   274                           ; 1 bytes @ 0x0
   275  0070                     	ds	3
   276  0073                     ??_SPI_Slave_Init:
   277  0073                     ??_SPI_Write:	
   278                           ; 1 bytes @ 0x3
   279                           
   280  0073                     SPI_Write@Data2:	
   281                           ; 1 bytes @ 0x3
   282                           
   283                           
   284                           ; 1 bytes @ 0x3
   285  0073                     	ds	1
   286  0074                     ??_main:
   287                           
   288                           ; 1 bytes @ 0x4
   289  0074                     	ds	3
   290                           
   291                           	psect	maintext
   292  0015                     __pmaintext:	
   293 ;;
   294 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   295 ;;
   296 ;; *************** function _main *****************
   297 ;; Defined at:
   298 ;;		line 25 in file "SPI_Slave.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2, status,0, pclath, cstack
   307 ;; Tracked objects:
   308 ;;		On entry : B00/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   312 ;;      Params:         0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0
   314 ;;      Temps:          3       0       0       0       0
   315 ;;      Totals:         3       0       0       0       0
   316 ;;Total ram usage:        3 bytes
   317 ;; Hardware stack levels required when called:    2
   318 ;; This function calls:
   319 ;;		_SPI_Slave_Init
   320 ;;		_SPI_Write
   321 ;; This function is called by:
   322 ;;		Startup code after reset
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           
   327                           ;psect for function _main
   328  0015                     _main:
   329  0015                     l693:	
   330                           ;incstack = 0
   331                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   332                           
   333                           
   334                           ;SPI_Slave.c: 28:   SPI_Slave_Init();
   335  0015  120A  118A  206E  120A  118A  	fcall	_SPI_Slave_Init
   336  001A                     l695:
   337                           
   338                           ;SPI_Slave.c: 29:   TRISE = 0x00;
   339  001A  1683               	bsf	3,5	;RP0=1, select bank1
   340  001B  1303               	bcf	3,6	;RP1=0, select bank1
   341  001C  0189               	clrf	9	;volatile
   342  001D                     l697:
   343                           
   344                           ;SPI_Slave.c: 30:   TRISB = 0x00;
   345  001D  0186               	clrf	6	;volatile
   346  001E                     l699:
   347                           
   348                           ;SPI_Slave.c: 31:   TRISD = 0b00000111;
   349  001E  3007               	movlw	7
   350  001F  0088               	movwf	8	;volatile
   351  0020                     l701:
   352                           
   353                           ;SPI_Slave.c: 33:   {;SPI_Slave.c: 34:       if (RD0)
   354  0020  1283               	bcf	3,5	;RP0=0, select bank0
   355  0021  1C08               	btfss	8,0	;volatile
   356  0022  2824               	goto	u11
   357  0023  2825               	goto	u10
   358  0024                     u11:
   359  0024  2836               	goto	l707
   360  0025                     u10:
   361  0025                     l703:
   362                           
   363                           ;SPI_Slave.c: 35:     {;SPI_Slave.c: 36:       Data2++;
   364  0025  3001               	movlw	1
   365  0026  00F4               	movwf	??_main
   366  0027  0874               	movf	??_main,w
   367  0028  07F7               	addwf	_Data2,f
   368  0029                     l705:
   369                           
   370                           ;SPI_Slave.c: 37:       _delay((unsigned long)((250)*(4000000/4000.0)));
   371  0029  3002               	movlw	2
   372  002A  00F6               	movwf	??_main+2
   373  002B  3045               	movlw	69
   374  002C  00F5               	movwf	??_main+1
   375  002D  30A9               	movlw	169
   376  002E  00F4               	movwf	??_main
   377  002F                     u67:
   378  002F  0BF4               	decfsz	??_main,f
   379  0030  282F               	goto	u67
   380  0031  0BF5               	decfsz	??_main+1,f
   381  0032  282F               	goto	u67
   382  0033  0BF6               	decfsz	??_main+2,f
   383  0034  282F               	goto	u67
   384  0035  2836               	nop2
   385  0036                     l707:
   386                           
   387                           ;SPI_Slave.c: 39:     if (RD1)
   388  0036  1283               	bcf	3,5	;RP0=0, select bank0
   389  0037  1303               	bcf	3,6	;RP1=0, select bank0
   390  0038  1C88               	btfss	8,1	;volatile
   391  0039  283B               	goto	u21
   392  003A  283C               	goto	u20
   393  003B                     u21:
   394  003B  284B               	goto	l713
   395  003C                     u20:
   396  003C                     l709:
   397                           
   398                           ;SPI_Slave.c: 40:     {;SPI_Slave.c: 41:       Data2--;
   399  003C  3001               	movlw	1
   400  003D  02F7               	subwf	_Data2,f
   401  003E                     l711:
   402                           
   403                           ;SPI_Slave.c: 42:       _delay((unsigned long)((250)*(4000000/4000.0)));
   404  003E  3002               	movlw	2
   405  003F  00F6               	movwf	??_main+2
   406  0040  3045               	movlw	69
   407  0041  00F5               	movwf	??_main+1
   408  0042  30A9               	movlw	169
   409  0043  00F4               	movwf	??_main
   410  0044                     u77:
   411  0044  0BF4               	decfsz	??_main,f
   412  0045  2844               	goto	u77
   413  0046  0BF5               	decfsz	??_main+1,f
   414  0047  2844               	goto	u77
   415  0048  0BF6               	decfsz	??_main+2,f
   416  0049  2844               	goto	u77
   417  004A  284B               	nop2
   418  004B                     l713:
   419                           
   420                           ;SPI_Slave.c: 44:     if (RD2)
   421  004B  1283               	bcf	3,5	;RP0=0, select bank0
   422  004C  1303               	bcf	3,6	;RP1=0, select bank0
   423  004D  1D08               	btfss	8,2	;volatile
   424  004E  2850               	goto	u31
   425  004F  2851               	goto	u30
   426  0050                     u31:
   427  0050  2864               	goto	l719
   428  0051                     u30:
   429  0051                     l715:
   430                           
   431                           ;SPI_Slave.c: 45:     {;SPI_Slave.c: 46:       SPI_Write(Data2);
   432  0051  0877               	movf	_Data2,w
   433  0052  120A  118A  2098  120A  118A  	fcall	_SPI_Write
   434  0057                     l717:
   435                           
   436                           ;SPI_Slave.c: 47:       _delay((unsigned long)((250)*(4000000/4000.0)));
   437  0057  3002               	movlw	2
   438  0058  00F6               	movwf	??_main+2
   439  0059  3045               	movlw	69
   440  005A  00F5               	movwf	??_main+1
   441  005B  30A9               	movlw	169
   442  005C  00F4               	movwf	??_main
   443  005D                     u87:
   444  005D  0BF4               	decfsz	??_main,f
   445  005E  285D               	goto	u87
   446  005F  0BF5               	decfsz	??_main+1,f
   447  0060  285D               	goto	u87
   448  0061  0BF6               	decfsz	??_main+2,f
   449  0062  285D               	goto	u87
   450  0063  2864               	nop2
   451  0064                     l719:
   452                           
   453                           ;SPI_Slave.c: 50:     PORTE = Data2;
   454  0064  0877               	movf	_Data2,w
   455  0065  1283               	bcf	3,5	;RP0=0, select bank0
   456  0066  1303               	bcf	3,6	;RP1=0, select bank0
   457  0067  0089               	movwf	9	;volatile
   458  0068                     l721:
   459                           
   460                           ;SPI_Slave.c: 51:     PORTB = Data;
   461  0068  0878               	movf	_Data,w
   462  0069  0086               	movwf	6	;volatile
   463  006A  2820               	goto	l701
   464  006B  120A  118A  280C   	ljmp	start
   465  006E                     __end_of_main:
   466                           
   467                           	psect	text1
   468  0098                     __ptext1:	
   469 ;; *************** function _SPI_Write *****************
   470 ;; Defined at:
   471 ;;		line 106 in file "SPI_Slave.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;  Data2           1    wreg     unsigned char 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  Data2           1    3[COMMON] unsigned char 
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         1       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0
   488 ;;      Totals:         1       0       0       0       0
   489 ;;Total ram usage:        1 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; Hardware stack levels required when called:    1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _SPI_Write
   501  0098                     _SPI_Write:
   502                           
   503                           ;incstack = 0
   504                           ; Regs used in _SPI_Write: [wreg]
   505                           ;SPI_Write@Data2 stored from wreg
   506  0098  00F3               	movwf	SPI_Write@Data2
   507  0099                     l691:
   508                           
   509                           ;SPI_Slave.c: 106: void SPI_Write(uint8_t Data2);SPI_Slave.c: 107: {;SPI_Slave.c: 108:  
      +                           SSPBUF = Data2;
   510  0099  0873               	movf	SPI_Write@Data2,w
   511  009A  1283               	bcf	3,5	;RP0=0, select bank0
   512  009B  1303               	bcf	3,6	;RP1=0, select bank0
   513  009C  0093               	movwf	19	;volatile
   514  009D                     l95:
   515  009D  0008               	return
   516  009E                     __end_of_SPI_Write:
   517                           
   518                           	psect	text2
   519  006E                     __ptext2:	
   520 ;; *************** function _SPI_Slave_Init *****************
   521 ;; Defined at:
   522 ;;		line 55 in file "SPI_Slave.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		status,2
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   536 ;;      Params:         0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0
   538 ;;      Temps:          0       0       0       0       0
   539 ;;      Totals:         0       0       0       0       0
   540 ;;Total ram usage:        0 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    1
   543 ;; This function calls:
   544 ;;		Nothing
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           
   551                           ;psect for function _SPI_Slave_Init
   552  006E                     _SPI_Slave_Init:
   553  006E                     l687:	
   554                           ;incstack = 0
   555                           ; Regs used in _SPI_Slave_Init: [status,2]
   556                           
   557                           
   558                           ;SPI_Slave.c: 58:   SSPM0 = 0;
   559  006E  1283               	bcf	3,5	;RP0=0, select bank0
   560  006F  1303               	bcf	3,6	;RP1=0, select bank0
   561  0070  1014               	bcf	20,0	;volatile
   562                           
   563                           ;SPI_Slave.c: 59:   SSPM1 = 0;
   564  0071  1094               	bcf	20,1	;volatile
   565                           
   566                           ;SPI_Slave.c: 60:   SSPM2 = 1;
   567  0072  1514               	bsf	20,2	;volatile
   568                           
   569                           ;SPI_Slave.c: 61:   SSPM3 = 0;
   570  0073  1194               	bcf	20,3	;volatile
   571                           
   572                           ;SPI_Slave.c: 63:   SSPEN = 1;
   573  0074  1694               	bsf	20,5	;volatile
   574                           
   575                           ;SPI_Slave.c: 65:   CKP = 0;
   576  0075  1214               	bcf	20,4	;volatile
   577                           
   578                           ;SPI_Slave.c: 66:   CKE = 0;
   579  0076  1683               	bsf	3,5	;RP0=1, select bank1
   580  0077  1303               	bcf	3,6	;RP1=0, select bank1
   581  0078  1314               	bcf	20,6	;volatile
   582                           
   583                           ;SPI_Slave.c: 68:   SMP = 0;
   584  0079  1394               	bcf	20,7	;volatile
   585                           
   586                           ;SPI_Slave.c: 70:   TRISC5 = 0;
   587  007A  1287               	bcf	7,5	;volatile
   588                           
   589                           ;SPI_Slave.c: 71:   TRISC4 = 1;
   590  007B  1607               	bsf	7,4	;volatile
   591                           
   592                           ;SPI_Slave.c: 72:   TRISC3 = 1;
   593  007C  1587               	bsf	7,3	;volatile
   594                           
   595                           ;SPI_Slave.c: 77:   TRISA5 = 1;
   596  007D  1685               	bsf	5,5	;volatile
   597                           
   598                           ;SPI_Slave.c: 79:   SSPIE = 1;
   599  007E  158C               	bsf	12,3	;volatile
   600                           
   601                           ;SPI_Slave.c: 80:   PEIE = 1;
   602  007F  170B               	bsf	11,6	;volatile
   603                           
   604                           ;SPI_Slave.c: 81:   GIE = 1;
   605  0080  178B               	bsf	11,7	;volatile
   606  0081                     l689:
   607                           
   608                           ;SPI_Slave.c: 82:   ANSEL = 0b00000000;
   609  0081  1683               	bsf	3,5	;RP0=1, select bank3
   610  0082  1703               	bsf	3,6	;RP1=1, select bank3
   611  0083  0188               	clrf	8	;volatile
   612                           
   613                           ;SPI_Slave.c: 83:   ANSELH = 0b00000000;
   614  0084  0189               	clrf	9	;volatile
   615  0085                     l82:
   616  0085  0008               	return
   617  0086                     __end_of_SPI_Slave_Init:
   618                           
   619                           	psect	text3
   620  0086                     __ptext3:	
   621 ;; *************** function _ISR *****************
   622 ;; Defined at:
   623 ;;		line 97 in file "SPI_Slave.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   637 ;;      Params:         0       0       0       0       0
   638 ;;      Locals:         0       0       0       0       0
   639 ;;      Temps:          3       0       0       0       0
   640 ;;      Totals:         3       0       0       0       0
   641 ;;Total ram usage:        3 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		Interrupt level 1
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _ISR
   652  0086                     _ISR:
   653  0086                     i1l735:
   654                           
   655                           ;SPI_Slave.c: 99:   if(SSPIF)
   656  0086  1283               	bcf	3,5	;RP0=0, select bank0
   657  0087  1303               	bcf	3,6	;RP1=0, select bank0
   658  0088  1D8C               	btfss	12,3	;volatile
   659  0089  288B               	goto	u5_21
   660  008A  288C               	goto	u5_20
   661  008B                     u5_21:
   662  008B  2891               	goto	i1l92
   663  008C                     u5_20:
   664  008C                     i1l737:
   665                           
   666                           ;SPI_Slave.c: 100:   {;SPI_Slave.c: 101:     Data = SSPBUF;
   667  008C  0813               	movf	19,w	;volatile
   668  008D  00F0               	movwf	??_ISR
   669  008E  0870               	movf	??_ISR,w
   670  008F  00F8               	movwf	_Data
   671  0090                     i1l739:
   672                           
   673                           ;SPI_Slave.c: 102:     SSPIF = 0;
   674  0090  118C               	bcf	12,3	;volatile
   675  0091                     i1l92:
   676  0091  0872               	movf	??_ISR+2,w
   677  0092  008A               	movwf	10
   678  0093  0E71               	swapf	??_ISR+1,w
   679  0094  0083               	movwf	3
   680  0095  0EFE               	swapf	btemp,f
   681  0096  0E7E               	swapf	btemp,w
   682  0097  0009               	retfie
   683  0098                     __end_of_ISR:
   684  007E                     btemp	set	126	;btemp
   685  007E                     wtemp0	set	126
   686                           
   687                           	psect	intentry
   688  0004                     __pintentry:	
   689                           ;incstack = 0
   690                           ; Regs used in _ISR: [wreg]
   691                           
   692  0004                     interrupt_function:
   693  007E                     saved_w	set	btemp
   694  0004  00FE               	movwf	btemp
   695  0005  0E03               	swapf	3,w
   696  0006  00F1               	movwf	??_ISR+1
   697  0007  080A               	movf	10,w
   698  0008  00F2               	movwf	??_ISR+2
   699  0009  120A  118A  2886   	ljmp	_ISR
   700                           
   701                           	psect	config
   702                           
   703                           ;Config register CONFIG1 @ 0x2007
   704                           ;	Oscillator Selection bits
   705                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   706                           ;	Watchdog Timer Enable bit
   707                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   708                           ;	Power-up Timer Enable bit
   709                           ;	PWRTE = ON, PWRT enabled
   710                           ;	RE3/MCLR pin function select bit
   711                           ;	MCLRE = 0x1, unprogrammed default
   712                           ;	Code Protection bit
   713                           ;	CP = OFF, Program memory code protection is disabled
   714                           ;	Data Code Protection bit
   715                           ;	CPD = OFF, Data memory code protection is disabled
   716                           ;	Brown Out Reset Selection bits
   717                           ;	BOREN = ON, BOR enabled
   718                           ;	Internal External Switchover bit
   719                           ;	IESO = 0x1, unprogrammed default
   720                           ;	Fail-Safe Clock Monitor Enabled bit
   721                           ;	FCMEN = 0x1, unprogrammed default
   722                           ;	Low Voltage Programming Enable bit
   723                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   724                           ;	In-Circuit Debugger Mode bit
   725                           ;	DEBUG = 0x1, unprogrammed default
   726  2007                     	org	8199
   727  2007  2FE1               	dw	12257
   728                           
   729                           ;Config register CONFIG2 @ 0x2008
   730                           ;	Brown-out Reset Selection bit
   731                           ;	BOR4V = 0x1, unprogrammed default
   732                           ;	Flash Program Memory Self Write Enable bits
   733                           ;	WRT = OFF, Write protection off
   734  2008                     	org	8200
   735  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              4 COMMON     3     3      0
                     _SPI_Slave_Init
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Slave_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Slave_Init
   _SPI_Write

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 21:02:53 2021

                     _BF 04A0                       l82 0085                       l95 009D  
                     u10 0025                       u11 0024                       u20 003C  
                     u21 003B                       u30 0051                       u31 0050  
                     u67 002F                       u77 0044                       u87 005D  
                    l701 0020                      l711 003E                      l703 0025  
                    l721 0068                      l713 004B                      l705 0029  
                    l715 0051                      l707 0036                      l717 0057  
                    l709 003C                      l719 0064                      l691 0099  
                    l693 0015                      l687 006E                      l695 001A  
                    _CKE 04A6                      l689 0081                      l697 001D  
                    l699 001E                      _CKP 00A4                      _GIE 005F  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    _ISR 0086                      _SMP 04A7                     ?_ISR 0070  
                   _PEIE 005E                     i1l92 0091                     _Data 0078  
                   u5_20 008C                     u5_21 008B                     _main 0015  
                   btemp 007E           _SPI_Slave_Init 006E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l735 0086                    i1l737 008C                    i1l739 0090  
                  _PORTB 0006                    _PORTE 0009                    _SSPM0 00A0  
                  _SSPM1 00A1                    _SSPM2 00A2                    _SSPM3 00A3  
                  _TRISB 0086                    _TRISD 0088                    _SSPIE 0463  
                  _TRISE 0089                    _SSPEN 00A5                    _SSPIF 0063  
                  _SSPOV 00A6                    _Data2 0077                    pclath 000A  
 __end_of_SPI_Slave_Init 0086                    status 0003                    wtemp0 007E  
     __size_of_SPI_Write 0006          __initialization 000F             __end_of_main 006E  
                 ??_main 0074                   _ANSELH 0189          ?_SPI_Slave_Init 0070  
                 _TRISA5 042D                   _TRISC3 043B                   _TRISC4 043C  
                 _TRISC5 043D                   _SSPBUF 0013        __end_of_SPI_Write 009E  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0070  
             __pmaintext 0015               __pintentry 0004                  __ptext1 0098  
                __ptext2 006E                  __ptext3 0086             __size_of_ISR 0012  
       ??_SPI_Slave_Init 0073     end_of_initialization 0011                _SPI_Write 0098  
    start_initialization 000F              __end_of_ISR 0098               ?_SPI_Write 0070  
            __pbssCOMMON 0077                ___latbits 0002              ??_SPI_Write 0073  
      interrupt_function 0004           SPI_Write@Data2 0073            __size_of_main 0059  
__size_of_SPI_Slave_Init 0018                 intlevel1 0000  
