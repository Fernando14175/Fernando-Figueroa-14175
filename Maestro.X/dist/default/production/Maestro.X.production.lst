

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 19 15:20:50 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0013                     _SSPBUF	set	19
   206  0014                     _SSPCON	set	20
   207  0009                     _PORTE	set	9
   208  0008                     _PORTD	set	8
   209  0006                     _PORTB	set	6
   210  0009                     _PORTEbits	set	9
   211  0007                     _PORTCbits	set	7
   212  0094                     _SSPSTATbits	set	148
   213  0094                     _SSPSTAT	set	148
   214  0089                     _TRISE	set	137
   215  0088                     _TRISD	set	136
   216  0086                     _TRISB	set	134
   217  043B                     _TRISC3	set	1083
   218  043D                     _TRISC5	set	1085
   219  043A                     _TRISC2	set	1082
   220  0189                     _ANSELH	set	393
   221  0188                     _ANSEL	set	392
   222                           
   223                           	psect	cinit
   224  07FC                     start_initialization:	
   225                           ; #config settings
   226                           
   227  07FC                     __initialization:
   228  07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231  07FC                     __end_of__initialization:
   232  07FC  0183               	clrf	3
   233  07FD  120A  118A  2FB4   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	cstackCOMMON
   236  0070                     __pcstackCOMMON:
   237  0070                     ?_setup:
   238  0070                     ?_spiWrite:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ??_spiWrite:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_spiRead:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ??_spiRead:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ?_spiInit:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_main:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_spiReceiveWait:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ??_spiReceiveWait:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     spiInit@sDataSample:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     spiWrite@dat:	
   266                           ; 1 bytes @ 0x0
   267                           
   268                           
   269                           ; 1 bytes @ 0x0
   270  0070                     	ds	1
   271  0071                     spiInit@sClockIdle:
   272                           
   273                           ; 1 bytes @ 0x1
   274  0071                     	ds	1
   275  0072                     spiInit@sTransmitEdge:
   276                           
   277                           ; 1 bytes @ 0x2
   278  0072                     	ds	1
   279  0073                     ??_spiInit:
   280  0073                     spiInit@sType:	
   281                           ; 1 bytes @ 0x3
   282                           
   283                           
   284                           ; 1 bytes @ 0x3
   285  0073                     	ds	1
   286  0074                     ??_setup:
   287  0074                     ??_main:	
   288                           ; 1 bytes @ 0x4
   289                           
   290                           
   291                           ; 1 bytes @ 0x4
   292  0074                     	ds	3
   293                           
   294                           	psect	maintext
   295  07B4                     __pmaintext:	
   296 ;;
   297 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   298 ;;
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 38 in file "ConexionSPI.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, pclath, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : B00/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0
   317 ;;      Temps:          3       0       0       0       0
   318 ;;      Totals:         3       0       0       0       0
   319 ;;Total ram usage:        3 bytes
   320 ;; Hardware stack levels required when called:    2
   321 ;; This function calls:
   322 ;;		_setup
   323 ;;		_spiRead
   324 ;;		_spiWrite
   325 ;; This function is called by:
   326 ;;		Startup code after reset
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330                           
   331                           ;psect for function _main
   332  07B4                     _main:
   333  07B4                     l748:	
   334                           ;incstack = 0
   335                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   336                           
   337                           
   338                           ;ConexionSPI.c: 39:     setup();
   339  07B4  120A  118A  2795  120A  118A  	fcall	_setup
   340  07B9                     l750:
   341                           
   342                           ;ConexionSPI.c: 44:        PORTCbits.RC2 = 0;
   343  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   344  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   345  07BB  1107               	bcf	7,2	;volatile
   346  07BC                     l752:
   347                           
   348                           ;ConexionSPI.c: 45:        _delay((unsigned long)((1)*(8000000/4000.0)));
   349  07BC  3003               	movlw	3
   350  07BD  00F5               	movwf	??_main+1
   351  07BE  3097               	movlw	151
   352  07BF  00F4               	movwf	??_main
   353  07C0                     u67:
   354  07C0  0BF4               	decfsz	??_main,f
   355  07C1  2FC0               	goto	u67
   356  07C2  0BF5               	decfsz	??_main+1,f
   357  07C3  2FC0               	goto	u67
   358  07C4  2FC5               	nop2
   359  07C5                     l754:
   360                           
   361                           ;ConexionSPI.c: 47:        if (PORTEbits.RE0 == 1){
   362  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   363  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   364  07C7  1C09               	btfss	9,0	;volatile
   365  07C8  2FCA               	goto	u51
   366  07C9  2FCB               	goto	u50
   367  07CA                     u51:
   368  07CA  2FD9               	goto	l758
   369  07CB                     u50:
   370  07CB                     l756:
   371                           
   372                           ;ConexionSPI.c: 48:        spiWrite(PORTB);
   373  07CB  0806               	movf	6,w	;volatile
   374  07CC  120A  118A  2769  120A  118A  	fcall	_spiWrite
   375                           
   376                           ;ConexionSPI.c: 49:        PORTD = spiRead();
   377  07D1  120A  118A  2776  120A  118A  	fcall	_spiRead
   378  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   379  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   380  07D8  0088               	movwf	8	;volatile
   381  07D9                     l758:
   382                           
   383                           ;ConexionSPI.c: 52:        _delay((unsigned long)((1)*(8000000/4000.0)));
   384  07D9  3003               	movlw	3
   385  07DA  00F5               	movwf	??_main+1
   386  07DB  3097               	movlw	151
   387  07DC  00F4               	movwf	??_main
   388  07DD                     u77:
   389  07DD  0BF4               	decfsz	??_main,f
   390  07DE  2FDD               	goto	u77
   391  07DF  0BF5               	decfsz	??_main+1,f
   392  07E0  2FDD               	goto	u77
   393  07E1  2FE2               	nop2
   394  07E2                     l760:
   395                           
   396                           ;ConexionSPI.c: 53:        PORTCbits.RC2 = 1;
   397  07E2  1283               	bcf	3,5	;RP0=0, select bank0
   398  07E3  1303               	bcf	3,6	;RP1=0, select bank0
   399  07E4  1507               	bsf	7,2	;volatile
   400  07E5                     l762:
   401                           
   402                           ;ConexionSPI.c: 55:        _delay((unsigned long)((250)*(8000000/4000.0)));
   403  07E5  3003               	movlw	3
   404  07E6  00F6               	movwf	??_main+2
   405  07E7  308A               	movlw	138
   406  07E8  00F5               	movwf	??_main+1
   407  07E9  3055               	movlw	85
   408  07EA  00F4               	movwf	??_main
   409  07EB                     u87:
   410  07EB  0BF4               	decfsz	??_main,f
   411  07EC  2FEB               	goto	u87
   412  07ED  0BF5               	decfsz	??_main+1,f
   413  07EE  2FEB               	goto	u87
   414  07EF  0BF6               	decfsz	??_main+2,f
   415  07F0  2FEB               	goto	u87
   416  07F1  2FF2               	nop2
   417  07F2                     l764:
   418                           
   419                           ;ConexionSPI.c: 56:        PORTB++;
   420  07F2  3001               	movlw	1
   421  07F3  00F4               	movwf	??_main
   422  07F4  0874               	movf	??_main,w
   423  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   424  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   425  07F7  0786               	addwf	6,f	;volatile
   426  07F8  2FB9               	goto	l750
   427  07F9  120A  118A  2800   	ljmp	start
   428  07FC                     __end_of_main:
   429                           
   430                           	psect	text1
   431  0769                     __ptext1:	
   432 ;; *************** function _spiWrite *****************
   433 ;; Defined at:
   434 ;;		line 102 in file "ConexionSPI.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;  dat             1    wreg     unsigned char 
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  dat             1    0[COMMON] unsigned char 
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   448 ;;      Params:         0       0       0       0       0
   449 ;;      Locals:         1       0       0       0       0
   450 ;;      Temps:          0       0       0       0       0
   451 ;;      Totals:         1       0       0       0       0
   452 ;;Total ram usage:        1 bytes
   453 ;; Hardware stack levels used:    1
   454 ;; This function calls:
   455 ;;		Nothing
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _spiWrite
   463  0769                     _spiWrite:
   464                           
   465                           ;incstack = 0
   466                           ; Regs used in _spiWrite: [wreg]
   467                           ;spiWrite@dat stored from wreg
   468  0769  00F0               	movwf	spiWrite@dat
   469  076A                     l694:
   470                           
   471                           ;ConexionSPI.c: 102: void spiWrite(char dat);ConexionSPI.c: 103: {;ConexionSPI.c: 104:  
      +                             SSPBUF = dat;
   472  076A  0870               	movf	spiWrite@dat,w
   473  076B  1283               	bcf	3,5	;RP0=0, select bank0
   474  076C  1303               	bcf	3,6	;RP1=0, select bank0
   475  076D  0093               	movwf	19	;volatile
   476  076E                     l70:
   477  076E  0008               	return
   478  076F                     __end_of_spiWrite:
   479                           
   480                           	psect	text2
   481  0776                     __ptext2:	
   482 ;; *************** function _spiRead *****************
   483 ;; Defined at:
   484 ;;		line 115 in file "ConexionSPI.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      unsigned char 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, pclath, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0
   501 ;;      Totals:         0       0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels used:    1
   504 ;; Hardware stack levels required when called:    1
   505 ;; This function calls:
   506 ;;		_spiReceiveWait
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           
   513                           ;psect for function _spiRead
   514  0776                     _spiRead:
   515  0776                     l696:	
   516                           ;incstack = 0
   517                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   518                           
   519                           
   520                           ;ConexionSPI.c: 117:     spiReceiveWait();
   521  0776  120A  118A  276F  120A  118A  	fcall	_spiReceiveWait
   522  077B                     l698:
   523                           
   524                           ;ConexionSPI.c: 118:     return(SSPBUF);
   525  077B  1283               	bcf	3,5	;RP0=0, select bank0
   526  077C  1303               	bcf	3,6	;RP1=0, select bank0
   527  077D  0813               	movf	19,w	;volatile
   528  077E                     l78:
   529  077E  0008               	return
   530  077F                     __end_of_spiRead:
   531                           
   532                           	psect	text3
   533  076F                     __ptext3:	
   534 ;; *************** function _spiReceiveWait *****************
   535 ;; Defined at:
   536 ;;		line 97 in file "ConexionSPI.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      void 
   543 ;; Registers used:
   544 ;;		None
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   550 ;;      Params:         0       0       0       0       0
   551 ;;      Locals:         0       0       0       0       0
   552 ;;      Temps:          0       0       0       0       0
   553 ;;      Totals:         0       0       0       0       0
   554 ;;Total ram usage:        0 bytes
   555 ;; Hardware stack levels used:    1
   556 ;; This function calls:
   557 ;;		Nothing
   558 ;; This function is called by:
   559 ;;		_spiRead
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           
   564                           ;psect for function _spiReceiveWait
   565  076F                     _spiReceiveWait:
   566  076F                     l680:	
   567                           ;incstack = 0
   568                           ; Regs used in _spiReceiveWait: []
   569                           
   570  076F                     l64:	
   571                           ;ConexionSPI.c: 99:     while ( !SSPSTATbits.BF );
   572                           
   573  076F  1683               	bsf	3,5	;RP0=1, select bank1
   574  0770  1303               	bcf	3,6	;RP1=0, select bank1
   575  0771  1C14               	btfss	20,0	;volatile
   576  0772  2F74               	goto	u21
   577  0773  2F75               	goto	u20
   578  0774                     u21:
   579  0774  2F6F               	goto	l64
   580  0775                     u20:
   581  0775                     l67:
   582  0775  0008               	return
   583  0776                     __end_of_spiReceiveWait:
   584                           
   585                           	psect	text4
   586  0795                     __ptext4:	
   587 ;; *************** function _setup *****************
   588 ;; Defined at:
   589 ;;		line 63 in file "ConexionSPI.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2, status,0, pclath, cstack
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   603 ;;      Params:         0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0
   606 ;;      Totals:         0       0       0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used:    1
   609 ;; Hardware stack levels required when called:    1
   610 ;; This function calls:
   611 ;;		_spiInit
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           
   618                           ;psect for function _setup
   619  0795                     _setup:
   620  0795                     l736:	
   621                           ;incstack = 0
   622                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   623                           
   624                           
   625                           ;ConexionSPI.c: 64:     ANSEL = 0;
   626  0795  1683               	bsf	3,5	;RP0=1, select bank3
   627  0796  1703               	bsf	3,6	;RP1=1, select bank3
   628  0797  0188               	clrf	8	;volatile
   629                           
   630                           ;ConexionSPI.c: 65:     ANSELH = 0;
   631  0798  0189               	clrf	9	;volatile
   632  0799                     l738:
   633                           
   634                           ;ConexionSPI.c: 66:     TRISC2 = 0;
   635  0799  1683               	bsf	3,5	;RP0=1, select bank1
   636  079A  1303               	bcf	3,6	;RP1=0, select bank1
   637  079B  1107               	bcf	7,2	;volatile
   638                           
   639                           ;ConexionSPI.c: 67:     TRISB = 0;
   640  079C  0186               	clrf	6	;volatile
   641                           
   642                           ;ConexionSPI.c: 68:     TRISD = 0;
   643  079D  0188               	clrf	8	;volatile
   644                           
   645                           ;ConexionSPI.c: 69:     PORTB = 0;
   646  079E  1283               	bcf	3,5	;RP0=0, select bank0
   647  079F  1303               	bcf	3,6	;RP1=0, select bank0
   648  07A0  0186               	clrf	6	;volatile
   649                           
   650                           ;ConexionSPI.c: 70:     PORTD = 0;
   651  07A1  0188               	clrf	8	;volatile
   652  07A2                     l740:
   653                           
   654                           ;ConexionSPI.c: 72:     TRISE = 0b001;
   655  07A2  3001               	movlw	1
   656  07A3  1683               	bsf	3,5	;RP0=1, select bank1
   657  07A4  1303               	bcf	3,6	;RP1=0, select bank1
   658  07A5  0089               	movwf	9	;volatile
   659  07A6                     l742:
   660                           
   661                           ;ConexionSPI.c: 73:     PORTE = 0b000;
   662  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   663  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   664  07A8  0189               	clrf	9	;volatile
   665  07A9                     l744:
   666                           
   667                           ;ConexionSPI.c: 75:     PORTCbits.RC2 = 1;
   668  07A9  1507               	bsf	7,2	;volatile
   669  07AA                     l746:
   670                           
   671                           ;ConexionSPI.c: 76:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_I
      +                          DLE_LOW, SPI_IDLE_2_ACTIVE);
   672  07AA  01F0               	clrf	spiInit@sDataSample
   673  07AB  01F1               	clrf	spiInit@sClockIdle
   674  07AC  01F2               	clrf	spiInit@sTransmitEdge
   675  07AD  3020               	movlw	32
   676  07AE  120A  118A  277F  120A  118A  	fcall	_spiInit
   677  07B3                     l56:
   678  07B3  0008               	return
   679  07B4                     __end_of_setup:
   680                           
   681                           	psect	text5
   682  077F                     __ptext5:	
   683 ;; *************** function _spiInit *****************
   684 ;; Defined at:
   685 ;;		line 80 in file "ConexionSPI.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;  sType           1    wreg     enum E1292
   688 ;;  sDataSample     1    0[COMMON] enum E1300
   689 ;;  sClockIdle      1    1[COMMON] enum E1304
   690 ;;  sTransmitEdg    1    2[COMMON] enum E1308
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  sType           1    3[COMMON] enum E1292
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, status,2, status,0
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         3       0       0       0       0
   703 ;;      Locals:         1       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0
   705 ;;      Totals:         4       0       0       0       0
   706 ;;Total ram usage:        4 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_setup
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _spiInit
   717  077F                     _spiInit:
   718                           
   719                           ;incstack = 0
   720                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   721                           ;spiInit@sType stored from wreg
   722  077F  00F3               	movwf	spiInit@sType
   723  0780                     l726:
   724                           
   725                           ;ConexionSPI.c: 80: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_
      +                          Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);ConexionSPI.c: 81: {;ConexionSPI.c: 82
      +                          :     TRISC5 = 0;
   726  0780  1683               	bsf	3,5	;RP0=1, select bank1
   727  0781  1303               	bcf	3,6	;RP1=0, select bank1
   728  0782  1287               	bcf	7,5	;volatile
   729                           
   730                           ;ConexionSPI.c: 83:     if(sType & 0b00000100)
   731  0783  1D73               	btfss	spiInit@sType,2
   732  0784  2F86               	goto	u41
   733  0785  2F87               	goto	u40
   734  0786                     u41:
   735  0786  2F8B               	goto	l732
   736  0787                     u40:
   737  0787                     l728:
   738                           
   739                           ;ConexionSPI.c: 84:     {;ConexionSPI.c: 85:         SSPSTAT = sTransmitEdge;
   740  0787  0872               	movf	spiInit@sTransmitEdge,w
   741  0788  0094               	movwf	20	;volatile
   742  0789                     l730:
   743                           
   744                           ;ConexionSPI.c: 86:         TRISC3 = 1;
   745  0789  1587               	bsf	7,3	;volatile
   746                           
   747                           ;ConexionSPI.c: 87:     }
   748  078A  2F8F               	goto	l60
   749  078B                     l732:
   750                           
   751                           ;ConexionSPI.c: 89:     {;ConexionSPI.c: 90:         SSPSTAT = sDataSample | sTransmitEd
      +                          ge;
   752  078B  0870               	movf	spiInit@sDataSample,w
   753  078C  0472               	iorwf	spiInit@sTransmitEdge,w
   754  078D  0094               	movwf	20	;volatile
   755  078E                     l734:
   756                           
   757                           ;ConexionSPI.c: 91:         TRISC3 = 0;
   758  078E  1187               	bcf	7,3	;volatile
   759  078F                     l60:	
   760                           ;ConexionSPI.c: 92:     }
   761                           
   762                           
   763                           ;ConexionSPI.c: 94:     SSPCON = sType | sClockIdle;
   764  078F  0873               	movf	spiInit@sType,w
   765  0790  0471               	iorwf	spiInit@sClockIdle,w
   766  0791  1283               	bcf	3,5	;RP0=0, select bank0
   767  0792  1303               	bcf	3,6	;RP1=0, select bank0
   768  0793  0094               	movwf	20	;volatile
   769  0794                     l61:
   770  0794  0008               	return
   771  0795                     __end_of_spiInit:
   772  007E                     btemp	set	126	;btemp
   773  007E                     wtemp0	set	126
   774                           
   775                           	psect	config
   776                           
   777                           ;Config register CONFIG1 @ 0x2007
   778                           ;	Oscillator Selection bits
   779                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   780                           ;	Watchdog Timer Enable bit
   781                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   782                           ;	Power-up Timer Enable bit
   783                           ;	PWRTE = OFF, PWRT disabled
   784                           ;	RE3/MCLR pin function select bit
   785                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   786                           ;	Code Protection bit
   787                           ;	CP = OFF, Program memory code protection is disabled
   788                           ;	Data Code Protection bit
   789                           ;	CPD = OFF, Data memory code protection is disabled
   790                           ;	Brown Out Reset Selection bits
   791                           ;	BOREN = OFF, BOR disabled
   792                           ;	Internal External Switchover bit
   793                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   794                           ;	Fail-Safe Clock Monitor Enabled bit
   795                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   796                           ;	Low Voltage Programming Enable bit
   797                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   798                           ;	In-Circuit Debugger Mode bit
   799                           ;	DEBUG = 0x1, unprogrammed default
   800  2007                     	org	8199
   801  2007  20D6               	dw	8406
   802                           
   803                           ;Config register CONFIG2 @ 0x2008
   804                           ;	Brown-out Reset Selection bit
   805                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   806                           ;	Flash Program Memory Self Write Enable bits
   807                           ;	WRT = OFF, Write protection off
   808  2008                     	org	8200
   809  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     375
                                              4 COMMON     3     3      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 19 15:20:50 2021

            _SSPSTATbits 0094                       l60 078F                       l61 0794  
                     l70 076E                       l56 07B3                       l64 076F  
                     l67 0775                       l78 077E                       u20 0775  
                     u21 0774                       u40 0787                       u41 0786  
                     u50 07CB                       u51 07CA                       u67 07C0  
                     u77 07DD                       u87 07EB                      l730 0789  
                    l732 078B                      l740 07A2                      l734 078E  
                    l726 0780                      l742 07A6                      l750 07B9  
                    l728 0787                      l744 07A9                      l736 0795  
                    l680 076F                      l760 07E2                      l752 07BC  
                    l746 07AA                      l738 0799                      l762 07E5  
                    l754 07C5                      l764 07F2                      l756 07CB  
                    l748 07B4                      l694 076A                      l758 07D9  
                    l696 0776                      l698 077B                     _main 07B4  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089                    _setup 0795          __end_of_spiInit 0795  
        __end_of_spiRead 077F                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0074  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC2 043A  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_spiWrite 076F                ??_spiInit 0073  
              ??_spiRead 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_setup 07B4                  ??_setup 0074               __pmaintext 07B4  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0769                  __ptext2 0776                  __ptext3 076F  
                __ptext4 0795                  __ptext5 077F                  _spiInit 077F  
                _spiRead 0776     end_of_initialization 07FC               ??_spiWrite 0070  
              _PORTCbits 0007                _PORTEbits 0009              spiWrite@dat 0070  
         _spiReceiveWait 076F      start_initialization 07FC   __end_of_spiReceiveWait 0776  
              ___latbits 0002          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0070                 ?_spiRead 0070           __size_of_setup 001F  
   spiInit@sTransmitEdge 0072       spiInit@sDataSample 0070         __size_of_spiInit 0016  
       __size_of_spiRead 0009            __size_of_main 0048                 _spiWrite 0769  
           spiInit@sType 0073        spiInit@sClockIdle 0071         ??_spiReceiveWait 0070  
