

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 21 22:01:19 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0013                     _SSPBUF	set	19
   208  0014                     _SSPCON	set	20
   209  000C                     _PIR1bits	set	12
   210  000B                     _INTCONbits	set	11
   211  0009                     _PORTE	set	9
   212  0006                     _PORTB	set	6
   213  0008                     _PORTD	set	8
   214  0006                     _PORTBbits	set	6
   215  0063                     _SSPIF	set	99
   216  0094                     _SSPSTATbits	set	148
   217  0094                     _SSPSTAT	set	148
   218  0085                     _TRISAbits	set	133
   219  008C                     _PIE1bits	set	140
   220  0088                     _TRISD	set	136
   221  0086                     _TRISB	set	134
   222  043B                     _TRISC3	set	1083
   223  043D                     _TRISC5	set	1085
   224  0189                     _ANSELH	set	393
   225  0188                     _ANSEL	set	392
   226                           
   227                           	psect	cinit
   228  000F                     start_initialization:	
   229                           ; #config settings
   230                           
   231  000F                     __initialization:
   232                           
   233                           ; Clear objects allocated to COMMON
   234  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   235  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   236  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   237  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   238  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   239  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   240  0015                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243  0015                     __end_of__initialization:
   244  0015  0183               	clrf	3
   245  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMMON
   248  0070                     __pbssCOMMON:
   249  0070                     _cont:
   250  0070                     	ds	2
   251  0072                     _estado2:
   252  0072                     	ds	2
   253  0074                     _estado:
   254  0074                     	ds	2
   255                           
   256                           	psect	cstackCOMMON
   257  0076                     __pcstackCOMMON:
   258  0076                     ?_spiWrite:
   259  0076                     ??_spiWrite:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0076                     ?_setup:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0076                     ?_isr:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0076                     ?_main:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0076                     spiWrite@dat:	
   272                           ; 1 bytes @ 0x0
   273                           
   274                           
   275                           ; 1 bytes @ 0x0
   276  0076                     	ds	1
   277  0077                     ??_isr:
   278                           
   279                           ; 1 bytes @ 0x1
   280  0077                     	ds	2
   281  0079                     ??_spiInit:
   282  0079                     spiInit@sType:	
   283                           ; 1 bytes @ 0x3
   284                           
   285                           
   286                           ; 1 bytes @ 0x3
   287  0079                     	ds	1
   288  007A                     ??_setup:
   289  007A                     ??_main:	
   290                           ; 1 bytes @ 0x4
   291                           
   292                           
   293                           ; 1 bytes @ 0x4
   294  007A                     	ds	1
   295                           
   296                           	psect	cstackBANK0
   297  0020                     __pcstackBANK0:
   298  0020                     ?_spiInit:
   299  0020                     spiInit@sDataSample:	
   300                           ; 1 bytes @ 0x0
   301                           
   302                           
   303                           ; 1 bytes @ 0x0
   304  0020                     	ds	1
   305  0021                     spiInit@sClockIdle:
   306                           
   307                           ; 1 bytes @ 0x1
   308  0021                     	ds	1
   309  0022                     spiInit@sTransmitEdge:
   310                           
   311                           ; 1 bytes @ 0x2
   312  0022                     	ds	1
   313                           
   314                           	psect	maintext
   315  0019                     __pmaintext:	
   316 ;;
   317 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   318 ;;
   319 ;; *************** function _main *****************
   320 ;; Defined at:
   321 ;;		line 55 in file "contador_esclavo.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, status,2, status,0, pclath, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : B00/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   335 ;;      Params:         0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0
   337 ;;      Temps:          1       0       0       0       0
   338 ;;      Totals:         1       0       0       0       0
   339 ;;Total ram usage:        1 bytes
   340 ;; Hardware stack levels required when called:    4
   341 ;; This function calls:
   342 ;;		_setup
   343 ;; This function is called by:
   344 ;;		Startup code after reset
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           
   349                           ;psect for function _main
   350  0019                     _main:
   351  0019                     l867:	
   352                           ;incstack = 0
   353                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   354                           
   355                           
   356                           ;contador_esclavo.c: 56:     setup();
   357  0019  120A  118A  2062  120A  118A  	fcall	_setup
   358  001E                     l869:
   359                           
   360                           ;contador_esclavo.c: 61:         if (PORTBbits.RB0 == 0){
   361  001E  1283               	bcf	3,5	;RP0=0, select bank0
   362  001F  1303               	bcf	3,6	;RP1=0, select bank0
   363  0020  1806               	btfsc	6,0	;volatile
   364  0021  2823               	goto	u181
   365  0022  2824               	goto	u180
   366  0023                     u181:
   367  0023  2828               	goto	l873
   368  0024                     u180:
   369  0024                     l871:
   370                           
   371                           ;contador_esclavo.c: 62:          estado = 1;
   372  0024  3001               	movlw	1
   373  0025  00F4               	movwf	_estado
   374  0026  3000               	movlw	0
   375  0027  00F5               	movwf	_estado+1
   376  0028                     l873:
   377                           
   378                           ;contador_esclavo.c: 64:         if (PORTBbits.RB0 == 1 && estado == 1){
   379  0028  1C06               	btfss	6,0	;volatile
   380  0029  282B               	goto	u191
   381  002A  282C               	goto	u190
   382  002B                     u191:
   383  002B  2840               	goto	l881
   384  002C                     u190:
   385  002C                     l875:
   386  002C  0374               	decf	_estado,w
   387  002D  0475               	iorwf	_estado+1,w
   388  002E  1D03               	btfss	3,2
   389  002F  2831               	goto	u201
   390  0030  2832               	goto	u200
   391  0031                     u201:
   392  0031  2840               	goto	l881
   393  0032                     u200:
   394  0032                     l877:
   395                           
   396                           ;contador_esclavo.c: 65:          PORTD++;
   397  0032  3001               	movlw	1
   398  0033  00FA               	movwf	??_main
   399  0034  087A               	movf	??_main,w
   400  0035  0788               	addwf	8,f	;volatile
   401                           
   402                           ;contador_esclavo.c: 66:          cont = cont+1;
   403  0036  0870               	movf	_cont,w
   404  0037  3E01               	addlw	1
   405  0038  00F0               	movwf	_cont
   406  0039  0871               	movf	_cont+1,w
   407  003A  1803               	skipnc
   408  003B  3E01               	addlw	1
   409  003C  3E00               	addlw	0
   410  003D  00F1               	movwf	_cont+1
   411  003E                     l879:
   412                           
   413                           ;contador_esclavo.c: 67:          estado = 0;
   414  003E  01F4               	clrf	_estado
   415  003F  01F5               	clrf	_estado+1
   416  0040                     l881:
   417                           
   418                           ;contador_esclavo.c: 69:          if (PORTBbits.RB1 == 0){
   419  0040  1886               	btfsc	6,1	;volatile
   420  0041  2843               	goto	u211
   421  0042  2844               	goto	u210
   422  0043                     u211:
   423  0043  2848               	goto	l885
   424  0044                     u210:
   425  0044                     l883:
   426                           
   427                           ;contador_esclavo.c: 70:          estado2 = 1;
   428  0044  3001               	movlw	1
   429  0045  00F2               	movwf	_estado2
   430  0046  3000               	movlw	0
   431  0047  00F3               	movwf	_estado2+1
   432  0048                     l885:
   433                           
   434                           ;contador_esclavo.c: 72:         if (PORTBbits.RB1 == 1 && estado2 == 1){
   435  0048  1C86               	btfss	6,1	;volatile
   436  0049  284B               	goto	u221
   437  004A  284C               	goto	u220
   438  004B                     u221:
   439  004B  281E               	goto	l869
   440  004C                     u220:
   441  004C                     l887:
   442  004C  0372               	decf	_estado2,w
   443  004D  0473               	iorwf	_estado2+1,w
   444  004E  1D03               	btfss	3,2
   445  004F  2851               	goto	u231
   446  0050  2852               	goto	u230
   447  0051                     u231:
   448  0051  281E               	goto	l869
   449  0052                     u230:
   450  0052                     l889:
   451                           
   452                           ;contador_esclavo.c: 73:          PORTD--;
   453  0052  3001               	movlw	1
   454  0053  0288               	subwf	8,f	;volatile
   455                           
   456                           ;contador_esclavo.c: 74:          cont = cont-1; ;
   457  0054  0870               	movf	_cont,w
   458  0055  3EFF               	addlw	255
   459  0056  00F0               	movwf	_cont
   460  0057  0871               	movf	_cont+1,w
   461  0058  1803               	skipnc
   462  0059  3E01               	addlw	1
   463  005A  3EFF               	addlw	255
   464  005B  00F1               	movwf	_cont+1
   465  005C                     l891:
   466                           
   467                           ;contador_esclavo.c: 75:          estado2 = 0;
   468  005C  01F2               	clrf	_estado2
   469  005D  01F3               	clrf	_estado2+1
   470  005E  281E               	goto	l869
   471  005F  120A  118A  280C   	ljmp	start
   472  0062                     __end_of_main:
   473                           
   474                           	psect	text1
   475  0062                     __ptext1:	
   476 ;; *************** function _setup *****************
   477 ;; Defined at:
   478 ;;		line 84 in file "contador_esclavo.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, status,2, status,0, pclath, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   492 ;;      Params:         0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0
   494 ;;      Temps:          0       0       0       0       0
   495 ;;      Totals:         0       0       0       0       0
   496 ;;Total ram usage:        0 bytes
   497 ;; Hardware stack levels used:    1
   498 ;; Hardware stack levels required when called:    3
   499 ;; This function calls:
   500 ;;		_spiInit
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           
   507                           ;psect for function _setup
   508  0062                     _setup:
   509  0062                     l841:	
   510                           ;incstack = 0
   511                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   512                           
   513                           
   514                           ;contador_esclavo.c: 86:     ANSEL = 0;
   515  0062  1683               	bsf	3,5	;RP0=1, select bank3
   516  0063  1703               	bsf	3,6	;RP1=1, select bank3
   517  0064  0188               	clrf	8	;volatile
   518                           
   519                           ;contador_esclavo.c: 87:     ANSELH = 0;
   520  0065  0189               	clrf	9	;volatile
   521  0066                     l843:
   522                           
   523                           ;contador_esclavo.c: 89:     TRISB = 0b00000011;
   524  0066  3003               	movlw	3
   525  0067  1683               	bsf	3,5	;RP0=1, select bank1
   526  0068  1303               	bcf	3,6	;RP1=0, select bank1
   527  0069  0086               	movwf	6	;volatile
   528  006A                     l845:
   529                           
   530                           ;contador_esclavo.c: 91:     TRISB = 0;
   531  006A  0186               	clrf	6	;volatile
   532  006B                     l847:
   533                           
   534                           ;contador_esclavo.c: 92:     TRISD = 0;
   535  006B  0188               	clrf	8	;volatile
   536  006C                     l849:
   537                           
   538                           ;contador_esclavo.c: 94:     PORTB = 0;
   539  006C  1283               	bcf	3,5	;RP0=0, select bank0
   540  006D  1303               	bcf	3,6	;RP1=0, select bank0
   541  006E  0186               	clrf	6	;volatile
   542  006F                     l851:
   543                           
   544                           ;contador_esclavo.c: 95:     PORTD = 0;
   545  006F  0188               	clrf	8	;volatile
   546  0070                     l853:
   547                           
   548                           ;contador_esclavo.c: 96:     PORTE = 0;
   549  0070  0189               	clrf	9	;volatile
   550  0071                     l855:
   551                           
   552                           ;contador_esclavo.c: 99:     INTCONbits.GIE = 1;
   553  0071  178B               	bsf	11,7	;volatile
   554  0072                     l857:
   555                           
   556                           ;contador_esclavo.c: 100:     INTCONbits.PEIE = 1;
   557  0072  170B               	bsf	11,6	;volatile
   558  0073                     l859:
   559                           
   560                           ;contador_esclavo.c: 101:     PIR1bits.SSPIF = 0;
   561  0073  118C               	bcf	12,3	;volatile
   562  0074                     l861:
   563                           
   564                           ;contador_esclavo.c: 102:     PIE1bits.SSPIE = 1;
   565  0074  1683               	bsf	3,5	;RP0=1, select bank1
   566  0075  1303               	bcf	3,6	;RP1=0, select bank1
   567  0076  158C               	bsf	12,3	;volatile
   568  0077                     l863:
   569                           
   570                           ;contador_esclavo.c: 103:     TRISAbits.TRISA5 = 1;
   571  0077  1685               	bsf	5,5	;volatile
   572  0078                     l865:
   573                           
   574                           ;contador_esclavo.c: 105:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK
      +                          _IDLE_LOW, SPI_IDLE_2_ACTIVE);
   575  0078  1283               	bcf	3,5	;RP0=0, select bank0
   576  0079  1303               	bcf	3,6	;RP1=0, select bank0
   577  007A  01A0               	clrf	spiInit@sDataSample
   578  007B  01A1               	clrf	spiInit@sClockIdle
   579  007C  01A2               	clrf	spiInit@sTransmitEdge
   580  007D  3024               	movlw	36
   581  007E  120A  118A  2084  120A  118A  	fcall	_spiInit
   582  0083                     l71:
   583  0083  0008               	return
   584  0084                     __end_of_setup:
   585                           
   586                           	psect	text2
   587  0084                     __ptext2:	
   588 ;; *************** function _spiInit *****************
   589 ;; Defined at:
   590 ;;		line 109 in file "contador_esclavo.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;  sType           1    wreg     enum E1292
   593 ;;  sDataSample     1    0[BANK0 ] enum E1300
   594 ;;  sClockIdle      1    1[BANK0 ] enum E1304
   595 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  sType           1    3[COMMON] enum E1292
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       3       0       0       0
   608 ;;      Locals:         1       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0
   610 ;;      Totals:         1       3       0       0       0
   611 ;;Total ram usage:        4 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    2
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_setup
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           
   622                           ;psect for function _spiInit
   623  0084                     _spiInit:
   624                           
   625                           ;incstack = 0
   626                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   627                           ;spiInit@sType stored from wreg
   628  0084  00F9               	movwf	spiInit@sType
   629  0085                     l831:
   630                           
   631                           ;contador_esclavo.c: 109: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_
      +                          Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);contador_esclavo.c: 110: {;conta
      +                          dor_esclavo.c: 111:     TRISC5 = 0;
   632  0085  1683               	bsf	3,5	;RP0=1, select bank1
   633  0086  1303               	bcf	3,6	;RP1=0, select bank1
   634  0087  1287               	bcf	7,5	;volatile
   635                           
   636                           ;contador_esclavo.c: 112:     if(sType & 0b00000100)
   637  0088  1D79               	btfss	spiInit@sType,2
   638  0089  288B               	goto	u171
   639  008A  288C               	goto	u170
   640  008B                     u171:
   641  008B  2894               	goto	l837
   642  008C                     u170:
   643  008C                     l833:
   644                           
   645                           ;contador_esclavo.c: 113:     {;contador_esclavo.c: 114:         SSPSTAT = sTransmitEdge
      +                          ;
   646  008C  1283               	bcf	3,5	;RP0=0, select bank0
   647  008D  1303               	bcf	3,6	;RP1=0, select bank0
   648  008E  0822               	movf	spiInit@sTransmitEdge,w
   649  008F  1683               	bsf	3,5	;RP0=1, select bank1
   650  0090  1303               	bcf	3,6	;RP1=0, select bank1
   651  0091  0094               	movwf	20	;volatile
   652  0092                     l835:
   653                           
   654                           ;contador_esclavo.c: 115:         TRISC3 = 1;
   655  0092  1587               	bsf	7,3	;volatile
   656                           
   657                           ;contador_esclavo.c: 116:     }
   658  0093  289C               	goto	l75
   659  0094                     l837:
   660                           
   661                           ;contador_esclavo.c: 118:     {;contador_esclavo.c: 119:         SSPSTAT = sDataSample |
      +                           sTransmitEdge;
   662  0094  1283               	bcf	3,5	;RP0=0, select bank0
   663  0095  1303               	bcf	3,6	;RP1=0, select bank0
   664  0096  0820               	movf	spiInit@sDataSample,w
   665  0097  0422               	iorwf	spiInit@sTransmitEdge,w
   666  0098  1683               	bsf	3,5	;RP0=1, select bank1
   667  0099  1303               	bcf	3,6	;RP1=0, select bank1
   668  009A  0094               	movwf	20	;volatile
   669  009B                     l839:
   670                           
   671                           ;contador_esclavo.c: 120:         TRISC3 = 0;
   672  009B  1187               	bcf	7,3	;volatile
   673  009C                     l75:	
   674                           ;contador_esclavo.c: 121:     }
   675                           
   676                           
   677                           ;contador_esclavo.c: 123:     SSPCON = sType | sClockIdle;
   678  009C  0879               	movf	spiInit@sType,w
   679  009D  1283               	bcf	3,5	;RP0=0, select bank0
   680  009E  1303               	bcf	3,6	;RP1=0, select bank0
   681  009F  0421               	iorwf	spiInit@sClockIdle,w
   682  00A0  0094               	movwf	20	;volatile
   683  00A1                     l76:
   684  00A1  0008               	return
   685  00A2                     __end_of_spiInit:
   686                           
   687                           	psect	text3
   688  00A2                     __ptext3:	
   689 ;; *************** function _isr *****************
   690 ;; Defined at:
   691 ;;		line 45 in file "contador_esclavo.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0, pclath, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   705 ;;      Params:         0       0       0       0       0
   706 ;;      Locals:         0       0       0       0       0
   707 ;;      Temps:          2       0       0       0       0
   708 ;;      Totals:         2       0       0       0       0
   709 ;;Total ram usage:        2 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    1
   712 ;; This function calls:
   713 ;;		_spiWrite
   714 ;; This function is called by:
   715 ;;		Interrupt level 1
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           
   720                           ;psect for function _isr
   721  00A2                     _isr:
   722  00A2                     i1l725:
   723                           
   724                           ;contador_esclavo.c: 46:    if(SSPIF == 1){
   725  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   726  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   727  00A4  1D8C               	btfss	12,3	;volatile
   728  00A5  28A7               	goto	u3_21
   729  00A6  28A8               	goto	u3_20
   730  00A7                     u3_21:
   731  00A7  28B1               	goto	i1l56
   732  00A8                     u3_20:
   733  00A8                     i1l727:
   734                           
   735                           ;contador_esclavo.c: 48:         spiWrite(cont);
   736  00A8  0870               	movf	_cont,w
   737  00A9  120A  118A  20B8  120A  118A  	fcall	_spiWrite
   738  00AE                     i1l729:
   739                           
   740                           ;contador_esclavo.c: 49:         SSPIF = 0;
   741  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   742  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   743  00B0  118C               	bcf	12,3	;volatile
   744  00B1                     i1l56:
   745  00B1  0878               	movf	??_isr+1,w
   746  00B2  008A               	movwf	10
   747  00B3  0E77               	swapf	??_isr,w
   748  00B4  0083               	movwf	3
   749  00B5  0EFE               	swapf	btemp,f
   750  00B6  0E7E               	swapf	btemp,w
   751  00B7  0009               	retfie
   752  00B8                     __end_of_isr:
   753                           
   754                           	psect	intentry
   755  0004                     __pintentry:	
   756                           ;incstack = 0
   757                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   758                           
   759  0004                     interrupt_function:
   760  007E                     saved_w	set	btemp
   761  0004  00FE               	movwf	btemp
   762  0005  0E03               	swapf	3,w
   763  0006  00F7               	movwf	??_isr
   764  0007  080A               	movf	10,w
   765  0008  00F8               	movwf	??_isr+1
   766  0009  120A  118A  28A2   	ljmp	_isr
   767                           
   768                           	psect	text4
   769  00B8                     __ptext4:	
   770 ;; *************** function _spiWrite *****************
   771 ;; Defined at:
   772 ;;		line 131 in file "contador_esclavo.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  dat             1    wreg     unsigned char 
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  dat             1    0[COMMON] unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         1       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0
   789 ;;      Totals:         1       0       0       0       0
   790 ;;Total ram usage:        1 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_isr
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           
   800                           ;psect for function _spiWrite
   801  00B8                     _spiWrite:
   802                           
   803                           ;incstack = 0
   804                           ; Regs used in _spiWrite: [wreg]
   805                           ;spiWrite@dat stored from wreg
   806  00B8  00F6               	movwf	spiWrite@dat
   807  00B9                     i1l695:
   808                           
   809                           ;contador_esclavo.c: 131: void spiWrite(char dat);contador_esclavo.c: 132: {;contador_es
      +                          clavo.c: 133:     SSPBUF = dat;
   810  00B9  0876               	movf	spiWrite@dat,w
   811  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   812  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   813  00BC  0093               	movwf	19	;volatile
   814  00BD                     i1l85:
   815  00BD  0008               	return
   816  00BE                     __end_of_spiWrite:
   817  007E                     btemp	set	126	;btemp
   818  007E                     wtemp0	set	126
   819                           
   820                           	psect	config
   821                           
   822                           ;Config register CONFIG1 @ 0x2007
   823                           ;	Oscillator Selection bits
   824                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   825                           ;	Watchdog Timer Enable bit
   826                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   827                           ;	Power-up Timer Enable bit
   828                           ;	PWRTE = OFF, PWRT disabled
   829                           ;	RE3/MCLR pin function select bit
   830                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   831                           ;	Code Protection bit
   832                           ;	CP = OFF, Program memory code protection is disabled
   833                           ;	Data Code Protection bit
   834                           ;	CPD = OFF, Data memory code protection is disabled
   835                           ;	Brown Out Reset Selection bits
   836                           ;	BOREN = OFF, BOR disabled
   837                           ;	Internal External Switchover bit
   838                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   839                           ;	Fail-Safe Clock Monitor Enabled bit
   840                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   841                           ;	Low Voltage Programming Enable bit
   842                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   843                           ;	In-Circuit Debugger Mode bit
   844                           ;	DEBUG = 0x1, unprogrammed default
   845  2007                     	org	8199
   846  2007  20D6               	dw	8406
   847                           
   848                           ;Config register CONFIG2 @ 0x2008
   849                           ;	Brown-out Reset Selection bit
   850                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   851                           ;	Flash Program Memory Self Write Enable bits
   852                           ;	WRT = OFF, Write protection off
   853  2008                     	org	8200
   854  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     456
                                              4 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              3 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 21 22:01:19 2021

            _SSPSTATbits 0094                       l71 0083                       l75 009C  
                     l76 00A1                      l831 0085                      l833 008C  
                    l841 0062                      l835 0092                      l851 006F  
                    l843 0066                      l837 0094                      l861 0074  
                    l853 0070                      l845 006A                      l839 009B  
                    l863 0077                      l855 0071                      l847 006B  
                    l871 0024                      l865 0078                      l857 0072  
                    l849 006C                      l881 0040                      l873 0028  
                    l859 0073                      l891 005C                      l883 0044  
                    l875 002C                      l867 0019                      l885 0048  
                    l877 0032                      l869 001E                      l887 004C  
                    l879 003E                      l889 0052                      u200 0032  
                    u201 0031                      u210 0044                      u211 0043  
                    u220 004C                      u221 004B                      u230 0052  
                    u231 0051                      u170 008C                      u171 008B  
                    u180 0024                      u181 0023                      u190 002C  
                    u191 002B                      _isr 00A2                     ?_isr 0076  
                   i1l56 00B1                     i1l85 00BD                     u3_20 00A8  
                   u3_21 00A7                     _cont 0070                     _main 0019  
                   btemp 007E                     start 000C                    ??_isr 0077  
                  ?_main 0076                    _ANSEL 0188                    i1l725 00A2  
                  i1l727 00A8                    i1l729 00AE                    i1l695 00B9  
                  _PORTB 0006                    _PORTD 0008                    _PORTE 0009  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
                  _setup 0062                    pclath 000A          __end_of_spiInit 00A2  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0062                   ??_main 007A                   ?_setup 0076  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   _estado 0074  
                 saved_w 007E         __end_of_spiWrite 00BE                ??_spiInit 0079  
__end_of__initialization 0015           __pcstackCOMMON 0076            __end_of_setup 0084  
                ??_setup 007A               __pmaintext 0019               __pintentry 0004  
                _SSPSTAT 0094                ?_spiWrite 0076                  __ptext1 0062  
                __ptext2 0084                  __ptext3 00A2                  __ptext4 00B8  
                _estado2 0072             __size_of_isr 0016                  _spiInit 0084  
   end_of_initialization 0015               ??_spiWrite 0076                _PORTBbits 0006  
              _TRISAbits 0085              spiWrite@dat 0076      start_initialization 000F  
            __end_of_isr 00B8              __pbssCOMMON 0070                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_spiWrite 0006                 ?_spiInit 0020  
         __size_of_setup 0022     spiInit@sTransmitEdge 0022        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0020                 _PIR1bits 000C  
       __size_of_spiInit 001E            __size_of_main 0049                 _spiWrite 00B8  
           spiInit@sType 0079        spiInit@sClockIdle 0021               _INTCONbits 000B  
               intlevel1 0000  
