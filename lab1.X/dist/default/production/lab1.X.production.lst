

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jan 27 21:16:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0008                     _PORTD	set	8
   206  0007                     _PORTC	set	7
   207  0006                     _PORTB	set	6
   208  0007                     _PORTCbits	set	7
   209  0006                     _PORTBbits	set	6
   210  0008                     _PORTDbits	set	8
   211  0009                     _PORTEbits	set	9
   212  0089                     _TRISE	set	137
   213  0087                     _TRISC	set	135
   214  0086                     _TRISB	set	134
   215  0088                     _TRISD	set	136
   216  0188                     _ANSEL	set	392
   217  0189                     _ANSELH	set	393
   218                           
   219                           	psect	cinit
   220  07F8                     start_initialization:	
   221                           ; #config settings
   222                           
   223  07F8                     __initialization:
   224                           
   225                           ; Clear objects allocated to COMMON
   226  07F8  01F0               	clrf	__pbssCOMMON& (0+127)
   227  07F9  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   228  07FA  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   229  07FB  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   230  07FC                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233  07FC                     __end_of__initialization:
   234  07FC  0183               	clrf	3
   235  07FD  120A  118A  2F96   	ljmp	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMMON
   238  0070                     __pbssCOMMON:
   239  0070                     _cont2:
   240  0070                     	ds	2
   241  0072                     _cont:
   242  0072                     	ds	2
   243                           
   244                           	psect	cstackCOMMON
   245  0074                     __pcstackCOMMON:
   246  0074                     ?_config:
   247  0074                     ??_config:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0074                     ?_semaforo:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0074                     ??_semaforo:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0074                     ?_jugador2:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0074                     ??_jugador2:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0074                     ?_jugador1:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0074                     ??_jugador1:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0074                     ?_main:	
   269                           ; 1 bytes @ 0x0
   270                           
   271                           
   272                           ; 1 bytes @ 0x0
   273  0074                     	ds	2
   274  0076                     ??_main:
   275                           
   276                           ; 1 bytes @ 0x2
   277  0076                     	ds	2
   278                           
   279                           	psect	maintext
   280  0796                     __pmaintext:	
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 44 in file "newmain.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : B00/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   300 ;;      Params:         0       0       0       0       0
   301 ;;      Locals:         0       0       0       0       0
   302 ;;      Temps:          2       0       0       0       0
   303 ;;      Totals:         2       0       0       0       0
   304 ;;Total ram usage:        2 bytes
   305 ;; Hardware stack levels required when called:    1
   306 ;; This function calls:
   307 ;;		_config
   308 ;;		_jugador1
   309 ;;		_jugador2
   310 ;;		_semaforo
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           
   317                           ;psect for function _main
   318  0796                     _main:
   319  0796                     l754:	
   320                           ;incstack = 0
   321                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   322                           
   323                           
   324                           ;newmain.c: 46:     config();
   325  0796  120A  118A  26D9  120A  118A  	fcall	_config
   326  079B                     l756:
   327                           
   328                           ;newmain.c: 49:     if (PORTEbits.RE0 == 1){
   329  079B  1283               	bcf	3,5	;RP0=0, select bank0
   330  079C  1303               	bcf	3,6	;RP1=0, select bank0
   331  079D  1C09               	btfss	9,0	;volatile
   332  079E  2FA0               	goto	u151
   333  079F  2FA1               	goto	u150
   334  07A0                     u151:
   335  07A0  2FF5               	goto	l54
   336  07A1                     u150:
   337  07A1                     l758:
   338                           
   339                           ;newmain.c: 50:         semaforo();
   340  07A1  120A  118A  26EC  120A  118A  	fcall	_semaforo
   341  07A6                     l760:
   342                           
   343                           ;newmain.c: 51:         if(PORTDbits.RD2 == 1){
   344  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   345  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   346  07A8  1D08               	btfss	8,2	;volatile
   347  07A9  2FAB               	goto	u161
   348  07AA  2FAC               	goto	u160
   349  07AB                     u161:
   350  07AB  2FF5               	goto	l54
   351  07AC                     u160:
   352  07AC  2FDA               	goto	l778
   353  07AD                     l764:
   354                           
   355                           ;newmain.c: 53:                 _delay((unsigned long)((40)*(8000000/4000.0)));
   356  07AD  3068               	movlw	104
   357  07AE  00F7               	movwf	??_main+1
   358  07AF  30E4               	movlw	228
   359  07B0  00F6               	movwf	??_main
   360  07B1                     u217:
   361  07B1  0BF6               	decfsz	??_main,f
   362  07B2  2FB1               	goto	u217
   363  07B3  0BF7               	decfsz	??_main+1,f
   364  07B4  2FB1               	goto	u217
   365  07B5  0000               	nop
   366  07B6                     l766:
   367                           
   368                           ;newmain.c: 54:                 if (PORTBbits.RB0 == 1){
   369  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   370  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   371  07B8  1C06               	btfss	6,0	;volatile
   372  07B9  2FBB               	goto	u171
   373  07BA  2FBC               	goto	u170
   374  07BB                     u171:
   375  07BB  2FC4               	goto	l770
   376  07BC                     u170:
   377  07BC                     l768:
   378                           
   379                           ;newmain.c: 55:                     cont = cont+1;
   380  07BC  0872               	movf	_cont,w
   381  07BD  3E01               	addlw	1
   382  07BE  00F2               	movwf	_cont
   383  07BF  0873               	movf	_cont+1,w
   384  07C0  1803               	skipnc
   385  07C1  3E01               	addlw	1
   386  07C2  3E00               	addlw	0
   387  07C3  00F3               	movwf	_cont+1
   388  07C4                     l770:
   389                           
   390                           ;newmain.c: 57:                 if (PORTCbits.RC0 == 1){
   391  07C4  1C07               	btfss	7,0	;volatile
   392  07C5  2FC7               	goto	u181
   393  07C6  2FC8               	goto	u180
   394  07C7                     u181:
   395  07C7  2FD0               	goto	l774
   396  07C8                     u180:
   397  07C8                     l772:
   398                           
   399                           ;newmain.c: 58:                     cont2 = cont2+1;
   400  07C8  0870               	movf	_cont2,w
   401  07C9  3E01               	addlw	1
   402  07CA  00F0               	movwf	_cont2
   403  07CB  0871               	movf	_cont2+1,w
   404  07CC  1803               	skipnc
   405  07CD  3E01               	addlw	1
   406  07CE  3E00               	addlw	0
   407  07CF  00F1               	movwf	_cont2+1
   408  07D0                     l774:
   409                           
   410                           ;newmain.c: 60:             jugador2();
   411  07D0  120A  118A  2750  120A  118A  	fcall	_jugador2
   412  07D5                     l776:
   413                           
   414                           ;newmain.c: 61:             jugador1();
   415  07D5  120A  118A  270A  120A  118A  	fcall	_jugador1
   416  07DA                     l778:
   417                           
   418                           ;newmain.c: 52:             while (cont < 8 && cont2 < 8) {
   419  07DA  0873               	movf	_cont+1,w
   420  07DB  3A80               	xorlw	128
   421  07DC  00FF               	movwf	btemp+1
   422  07DD  3080               	movlw	128
   423  07DE  027F               	subwf	btemp+1,w
   424  07DF  1D03               	skipz
   425  07E0  2FE3               	goto	u195
   426  07E1  3008               	movlw	8
   427  07E2  0272               	subwf	_cont,w
   428  07E3                     u195:
   429  07E3  1803               	skipnc
   430  07E4  2FE6               	goto	u191
   431  07E5  2FE7               	goto	u190
   432  07E6                     u191:
   433  07E6  2FF5               	goto	l46
   434  07E7                     u190:
   435  07E7                     l780:
   436  07E7  0871               	movf	_cont2+1,w
   437  07E8  3A80               	xorlw	128
   438  07E9  00FF               	movwf	btemp+1
   439  07EA  3080               	movlw	128
   440  07EB  027F               	subwf	btemp+1,w
   441  07EC  1D03               	skipz
   442  07ED  2FF0               	goto	u205
   443  07EE  3008               	movlw	8
   444  07EF  0270               	subwf	_cont2,w
   445  07F0                     u205:
   446  07F0  1C03               	skipc
   447  07F1  2FF3               	goto	u201
   448  07F2  2FF4               	goto	u200
   449  07F3                     u201:
   450  07F3  2FAD               	goto	l764
   451  07F4                     u200:
   452  07F4  2FF5               	goto	l54
   453  07F5                     l46:	
   454                           ;newmain.c: 63:         }
   455                           
   456  07F5                     l54:
   457  07F5  120A  118A  2800   	ljmp	start
   458  07F8                     __end_of_main:
   459                           
   460                           	psect	text1
   461  06EC                     __ptext1:	
   462 ;; *************** function _semaforo *****************
   463 ;; Defined at:
   464 ;;		line 145 in file "newmain.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   478 ;;      Params:         0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0
   480 ;;      Temps:          2       0       0       0       0
   481 ;;      Totals:         2       0       0       0       0
   482 ;;Total ram usage:        2 bytes
   483 ;; Hardware stack levels used:    1
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           
   492                           ;psect for function _semaforo
   493  06EC                     _semaforo:
   494  06EC                     l686:	
   495                           ;incstack = 0
   496                           ; Regs used in _semaforo: [wreg]
   497                           
   498                           
   499                           ;newmain.c: 147:         PORTDbits.RD0 = 1;
   500  06EC  1283               	bcf	3,5	;RP0=0, select bank0
   501  06ED  1303               	bcf	3,6	;RP1=0, select bank0
   502  06EE  1408               	bsf	8,0	;volatile
   503  06EF                     l688:
   504                           
   505                           ;newmain.c: 148:         _delay((unsigned long)((50)*(8000000/4000.0)));
   506  06EF  3082               	movlw	130
   507  06F0  00F5               	movwf	??_semaforo+1
   508  06F1  30DD               	movlw	221
   509  06F2  00F4               	movwf	??_semaforo
   510  06F3                     u227:
   511  06F3  0BF4               	decfsz	??_semaforo,f
   512  06F4  2EF3               	goto	u227
   513  06F5  0BF5               	decfsz	??_semaforo+1,f
   514  06F6  2EF3               	goto	u227
   515  06F7  2EF8               	nop2
   516  06F8                     l690:
   517                           
   518                           ;newmain.c: 149:         PORTDbits.RD0 = 0;
   519  06F8  1283               	bcf	3,5	;RP0=0, select bank0
   520  06F9  1303               	bcf	3,6	;RP1=0, select bank0
   521  06FA  1008               	bcf	8,0	;volatile
   522  06FB                     l692:
   523                           
   524                           ;newmain.c: 150:         PORTDbits.RD1 = 1;
   525  06FB  1488               	bsf	8,1	;volatile
   526                           
   527                           ;newmain.c: 151:          _delay((unsigned long)((50)*(8000000/4000.0)));
   528  06FC  3082               	movlw	130
   529  06FD  00F5               	movwf	??_semaforo+1
   530  06FE  30DD               	movlw	221
   531  06FF  00F4               	movwf	??_semaforo
   532  0700                     u237:
   533  0700  0BF4               	decfsz	??_semaforo,f
   534  0701  2F00               	goto	u237
   535  0702  0BF5               	decfsz	??_semaforo+1,f
   536  0703  2F00               	goto	u237
   537  0704  2F05               	nop2
   538  0705                     l694:
   539                           
   540                           ;newmain.c: 152:         PORTDbits.RD1 = 0;
   541  0705  1283               	bcf	3,5	;RP0=0, select bank0
   542  0706  1303               	bcf	3,6	;RP1=0, select bank0
   543  0707  1088               	bcf	8,1	;volatile
   544  0708                     l696:
   545                           
   546                           ;newmain.c: 153:         PORTDbits.RD2 = 1;
   547  0708  1508               	bsf	8,2	;volatile
   548  0709                     l80:
   549  0709  0008               	return
   550  070A                     __end_of_semaforo:
   551                           
   552                           	psect	text2
   553  0750                     __ptext2:	
   554 ;; *************** function _jugador2 *****************
   555 ;; Defined at:
   556 ;;		line 117 in file "newmain.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, status,2, status,0
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   570 ;;      Params:         0       0       0       0       0
   571 ;;      Locals:         0       0       0       0       0
   572 ;;      Temps:          0       0       0       0       0
   573 ;;      Totals:         0       0       0       0       0
   574 ;;Total ram usage:        0 bytes
   575 ;; Hardware stack levels used:    1
   576 ;; This function calls:
   577 ;;		Nothing
   578 ;; This function is called by:
   579 ;;		_main
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           
   584                           ;psect for function _jugador2
   585  0750                     _jugador2:
   586  0750                     l698:	
   587                           ;incstack = 0
   588                           ; Regs used in _jugador2: [wreg+status,2+status,0]
   589                           
   590                           
   591                           ;newmain.c: 118:             if (cont == 1){
   592  0750  0372               	decf	_cont,w
   593  0751  0473               	iorwf	_cont+1,w
   594  0752  1D03               	btfss	3,2
   595  0753  2F55               	goto	u11
   596  0754  2F56               	goto	u10
   597  0755                     u11:
   598  0755  2F59               	goto	l702
   599  0756                     u10:
   600  0756                     l700:
   601                           
   602                           ;newmain.c: 119:                 PORTBbits.RB1 = 1;
   603  0756  1283               	bcf	3,5	;RP0=0, select bank0
   604  0757  1303               	bcf	3,6	;RP1=0, select bank0
   605  0758  1486               	bsf	6,1	;volatile
   606  0759                     l702:
   607                           
   608                           ;newmain.c: 121:             if (cont == 2){
   609  0759  3002               	movlw	2
   610  075A  0672               	xorwf	_cont,w
   611  075B  0473               	iorwf	_cont+1,w
   612  075C  1D03               	btfss	3,2
   613  075D  2F5F               	goto	u21
   614  075E  2F60               	goto	u20
   615  075F                     u21:
   616  075F  2F63               	goto	l706
   617  0760                     u20:
   618  0760                     l704:
   619                           
   620                           ;newmain.c: 122:                 PORTBbits.RB2 = 1;
   621  0760  1283               	bcf	3,5	;RP0=0, select bank0
   622  0761  1303               	bcf	3,6	;RP1=0, select bank0
   623  0762  1506               	bsf	6,2	;volatile
   624  0763                     l706:
   625                           
   626                           ;newmain.c: 124:            if (cont == 3){
   627  0763  3003               	movlw	3
   628  0764  0672               	xorwf	_cont,w
   629  0765  0473               	iorwf	_cont+1,w
   630  0766  1D03               	btfss	3,2
   631  0767  2F69               	goto	u31
   632  0768  2F6A               	goto	u30
   633  0769                     u31:
   634  0769  2F6D               	goto	l710
   635  076A                     u30:
   636  076A                     l708:
   637                           
   638                           ;newmain.c: 125:                 PORTBbits.RB3 = 1;
   639  076A  1283               	bcf	3,5	;RP0=0, select bank0
   640  076B  1303               	bcf	3,6	;RP1=0, select bank0
   641  076C  1586               	bsf	6,3	;volatile
   642  076D                     l710:
   643                           
   644                           ;newmain.c: 127:            if (cont == 4){
   645  076D  3004               	movlw	4
   646  076E  0672               	xorwf	_cont,w
   647  076F  0473               	iorwf	_cont+1,w
   648  0770  1D03               	btfss	3,2
   649  0771  2F73               	goto	u41
   650  0772  2F74               	goto	u40
   651  0773                     u41:
   652  0773  2F77               	goto	l714
   653  0774                     u40:
   654  0774                     l712:
   655                           
   656                           ;newmain.c: 128:                 PORTBbits.RB4 = 1;
   657  0774  1283               	bcf	3,5	;RP0=0, select bank0
   658  0775  1303               	bcf	3,6	;RP1=0, select bank0
   659  0776  1606               	bsf	6,4	;volatile
   660  0777                     l714:
   661                           
   662                           ;newmain.c: 130:            if (cont == 5){
   663  0777  3005               	movlw	5
   664  0778  0672               	xorwf	_cont,w
   665  0779  0473               	iorwf	_cont+1,w
   666  077A  1D03               	btfss	3,2
   667  077B  2F7D               	goto	u51
   668  077C  2F7E               	goto	u50
   669  077D                     u51:
   670  077D  2F81               	goto	l718
   671  077E                     u50:
   672  077E                     l716:
   673                           
   674                           ;newmain.c: 131:                 PORTBbits.RB5 = 1;
   675  077E  1283               	bcf	3,5	;RP0=0, select bank0
   676  077F  1303               	bcf	3,6	;RP1=0, select bank0
   677  0780  1686               	bsf	6,5	;volatile
   678  0781                     l718:
   679                           
   680                           ;newmain.c: 133:             if (cont == 6){
   681  0781  3006               	movlw	6
   682  0782  0672               	xorwf	_cont,w
   683  0783  0473               	iorwf	_cont+1,w
   684  0784  1D03               	btfss	3,2
   685  0785  2F87               	goto	u61
   686  0786  2F88               	goto	u60
   687  0787                     u61:
   688  0787  2F8B               	goto	l722
   689  0788                     u60:
   690  0788                     l720:
   691                           
   692                           ;newmain.c: 134:                 PORTBbits.RB6 = 1;
   693  0788  1283               	bcf	3,5	;RP0=0, select bank0
   694  0789  1303               	bcf	3,6	;RP1=0, select bank0
   695  078A  1706               	bsf	6,6	;volatile
   696  078B                     l722:
   697                           
   698                           ;newmain.c: 136:             if (cont == 7){
   699  078B  3007               	movlw	7
   700  078C  0672               	xorwf	_cont,w
   701  078D  0473               	iorwf	_cont+1,w
   702  078E  1D03               	btfss	3,2
   703  078F  2F91               	goto	u71
   704  0790  2F92               	goto	u70
   705  0791                     u71:
   706  0791  2F95               	goto	l77
   707  0792                     u70:
   708  0792                     l724:
   709                           
   710                           ;newmain.c: 137:                 PORTBbits.RB7 = 1;
   711  0792  1283               	bcf	3,5	;RP0=0, select bank0
   712  0793  1303               	bcf	3,6	;RP1=0, select bank0
   713  0794  1786               	bsf	6,7	;volatile
   714  0795                     l77:
   715  0795  0008               	return
   716  0796                     __end_of_jugador2:
   717                           
   718                           	psect	text3
   719  070A                     __ptext3:	
   720 ;; *************** function _jugador1 *****************
   721 ;; Defined at:
   722 ;;		line 89 in file "newmain.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0
   739 ;;      Totals:         0       0       0       0       0
   740 ;;Total ram usage:        0 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _jugador1
   751  070A                     _jugador1:
   752  070A                     l726:	
   753                           ;incstack = 0
   754                           ; Regs used in _jugador1: [wreg+status,2+status,0]
   755                           
   756                           
   757                           ;newmain.c: 91:             if (cont2 == 1){
   758  070A  0370               	decf	_cont2,w
   759  070B  0471               	iorwf	_cont2+1,w
   760  070C  1D03               	btfss	3,2
   761  070D  2F0F               	goto	u81
   762  070E  2F10               	goto	u80
   763  070F                     u81:
   764  070F  2F13               	goto	l730
   765  0710                     u80:
   766  0710                     l728:
   767                           
   768                           ;newmain.c: 92:                 PORTCbits.RC1 = 1;
   769  0710  1283               	bcf	3,5	;RP0=0, select bank0
   770  0711  1303               	bcf	3,6	;RP1=0, select bank0
   771  0712  1487               	bsf	7,1	;volatile
   772  0713                     l730:
   773                           
   774                           ;newmain.c: 94:             if (cont2 == 2){
   775  0713  3002               	movlw	2
   776  0714  0670               	xorwf	_cont2,w
   777  0715  0471               	iorwf	_cont2+1,w
   778  0716  1D03               	btfss	3,2
   779  0717  2F19               	goto	u91
   780  0718  2F1A               	goto	u90
   781  0719                     u91:
   782  0719  2F1D               	goto	l734
   783  071A                     u90:
   784  071A                     l732:
   785                           
   786                           ;newmain.c: 95:                 PORTCbits.RC2 = 1;
   787  071A  1283               	bcf	3,5	;RP0=0, select bank0
   788  071B  1303               	bcf	3,6	;RP1=0, select bank0
   789  071C  1507               	bsf	7,2	;volatile
   790  071D                     l734:
   791                           
   792                           ;newmain.c: 97:            if (cont2 == 3){
   793  071D  3003               	movlw	3
   794  071E  0670               	xorwf	_cont2,w
   795  071F  0471               	iorwf	_cont2+1,w
   796  0720  1D03               	btfss	3,2
   797  0721  2F23               	goto	u101
   798  0722  2F24               	goto	u100
   799  0723                     u101:
   800  0723  2F27               	goto	l738
   801  0724                     u100:
   802  0724                     l736:
   803                           
   804                           ;newmain.c: 98:                 PORTCbits.RC3 = 1;
   805  0724  1283               	bcf	3,5	;RP0=0, select bank0
   806  0725  1303               	bcf	3,6	;RP1=0, select bank0
   807  0726  1587               	bsf	7,3	;volatile
   808  0727                     l738:
   809                           
   810                           ;newmain.c: 100:            if (cont2 == 4){
   811  0727  3004               	movlw	4
   812  0728  0670               	xorwf	_cont2,w
   813  0729  0471               	iorwf	_cont2+1,w
   814  072A  1D03               	btfss	3,2
   815  072B  2F2D               	goto	u111
   816  072C  2F2E               	goto	u110
   817  072D                     u111:
   818  072D  2F31               	goto	l742
   819  072E                     u110:
   820  072E                     l740:
   821                           
   822                           ;newmain.c: 101:                 PORTCbits.RC4 = 1;
   823  072E  1283               	bcf	3,5	;RP0=0, select bank0
   824  072F  1303               	bcf	3,6	;RP1=0, select bank0
   825  0730  1607               	bsf	7,4	;volatile
   826  0731                     l742:
   827                           
   828                           ;newmain.c: 103:            if (cont2 == 5){
   829  0731  3005               	movlw	5
   830  0732  0670               	xorwf	_cont2,w
   831  0733  0471               	iorwf	_cont2+1,w
   832  0734  1D03               	btfss	3,2
   833  0735  2F37               	goto	u121
   834  0736  2F38               	goto	u120
   835  0737                     u121:
   836  0737  2F3B               	goto	l746
   837  0738                     u120:
   838  0738                     l744:
   839                           
   840                           ;newmain.c: 104:                 PORTCbits.RC5 = 1;
   841  0738  1283               	bcf	3,5	;RP0=0, select bank0
   842  0739  1303               	bcf	3,6	;RP1=0, select bank0
   843  073A  1687               	bsf	7,5	;volatile
   844  073B                     l746:
   845                           
   846                           ;newmain.c: 107:             if (cont2 == 6){
   847  073B  3006               	movlw	6
   848  073C  0670               	xorwf	_cont2,w
   849  073D  0471               	iorwf	_cont2+1,w
   850  073E  1D03               	btfss	3,2
   851  073F  2F41               	goto	u131
   852  0740  2F42               	goto	u130
   853  0741                     u131:
   854  0741  2F45               	goto	l750
   855  0742                     u130:
   856  0742                     l748:
   857                           
   858                           ;newmain.c: 108:                 PORTCbits.RC6 = 1;
   859  0742  1283               	bcf	3,5	;RP0=0, select bank0
   860  0743  1303               	bcf	3,6	;RP1=0, select bank0
   861  0744  1707               	bsf	7,6	;volatile
   862  0745                     l750:
   863                           
   864                           ;newmain.c: 110:             if (cont2 == 7){
   865  0745  3007               	movlw	7
   866  0746  0670               	xorwf	_cont2,w
   867  0747  0471               	iorwf	_cont2+1,w
   868  0748  1D03               	btfss	3,2
   869  0749  2F4B               	goto	u141
   870  074A  2F4C               	goto	u140
   871  074B                     u141:
   872  074B  2F4F               	goto	l67
   873  074C                     u140:
   874  074C                     l752:
   875                           
   876                           ;newmain.c: 111:                 PORTCbits.RC7 = 1;
   877  074C  1283               	bcf	3,5	;RP0=0, select bank0
   878  074D  1303               	bcf	3,6	;RP1=0, select bank0
   879  074E  1787               	bsf	7,7	;volatile
   880  074F                     l67:
   881  074F  0008               	return
   882  0750                     __end_of_jugador1:
   883                           
   884                           	psect	text4
   885  06D9                     __ptext4:	
   886 ;; *************** function _config *****************
   887 ;; Defined at:
   888 ;;		line 70 in file "newmain.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, status,2
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   902 ;;      Params:         0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0
   905 ;;      Totals:         0       0       0       0       0
   906 ;;Total ram usage:        0 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           
   916                           ;psect for function _config
   917  06D9                     _config:
   918  06D9                     l672:	
   919                           ;incstack = 0
   920                           ; Regs used in _config: [wreg+status,2]
   921                           
   922                           
   923                           ;newmain.c: 72:         ANSELH = 0b0000000;
   924  06D9  1683               	bsf	3,5	;RP0=1, select bank3
   925  06DA  1703               	bsf	3,6	;RP1=1, select bank3
   926  06DB  0189               	clrf	9	;volatile
   927                           
   928                           ;newmain.c: 73:         ANSEL = 0b0000000;
   929  06DC  0188               	clrf	8	;volatile
   930                           
   931                           ;newmain.c: 75:         TRISD = 0b00000000;
   932  06DD  1683               	bsf	3,5	;RP0=1, select bank1
   933  06DE  1303               	bcf	3,6	;RP1=0, select bank1
   934  06DF  0188               	clrf	8	;volatile
   935  06E0                     l674:
   936                           
   937                           ;newmain.c: 76:         TRISB = 0b00000001;
   938  06E0  3001               	movlw	1
   939  06E1  0086               	movwf	6	;volatile
   940  06E2                     l676:
   941                           
   942                           ;newmain.c: 77:         TRISC = 0b00000001;
   943  06E2  3001               	movlw	1
   944  06E3  0087               	movwf	7	;volatile
   945  06E4                     l678:
   946                           
   947                           ;newmain.c: 78:         TRISE = 0b001;
   948  06E4  3001               	movlw	1
   949  06E5  0089               	movwf	9	;volatile
   950  06E6                     l680:
   951                           
   952                           ;newmain.c: 80:         PORTB = 0b00000000;
   953  06E6  1283               	bcf	3,5	;RP0=0, select bank0
   954  06E7  1303               	bcf	3,6	;RP1=0, select bank0
   955  06E8  0186               	clrf	6	;volatile
   956  06E9                     l682:
   957                           
   958                           ;newmain.c: 81:         PORTC = 0b00000000;
   959  06E9  0187               	clrf	7	;volatile
   960  06EA                     l684:
   961                           
   962                           ;newmain.c: 82:         PORTD = 0b00000000;
   963  06EA  0188               	clrf	8	;volatile
   964  06EB                     l57:
   965  06EB  0008               	return
   966  06EC                     __end_of_config:
   967  007E                     btemp	set	126	;btemp
   968  007E                     wtemp0	set	126
   969                           
   970                           	psect	config
   971                           
   972                           ;Config register CONFIG1 @ 0x2007
   973                           ;	Oscillator Selection bits
   974                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   975                           ;	Watchdog Timer Enable bit
   976                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   977                           ;	Power-up Timer Enable bit
   978                           ;	PWRTE = OFF, PWRT disabled
   979                           ;	RE3/MCLR pin function select bit
   980                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   981                           ;	Code Protection bit
   982                           ;	CP = OFF, Program memory code protection is disabled
   983                           ;	Data Code Protection bit
   984                           ;	CPD = OFF, Data memory code protection is disabled
   985                           ;	Brown Out Reset Selection bits
   986                           ;	BOREN = OFF, BOR disabled
   987                           ;	Internal External Switchover bit
   988                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   989                           ;	Fail-Safe Clock Monitor Enabled bit
   990                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   991                           ;	Low Voltage Programming Enable bit
   992                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   993                           ;	In-Circuit Debugger Mode bit
   994                           ;	DEBUG = 0x1, unprogrammed default
   995  2007                     	org	8199
   996  2007  20D1               	dw	8401
   997                           
   998                           ;Config register CONFIG2 @ 0x2008
   999                           ;	Brown-out Reset Selection bit
  1000                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1001                           ;	Flash Program Memory Self Write Enable bits
  1002                           ;	WRT = OFF, Write protection off
  1003  2008                     	org	8200
  1004  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_semaforo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              2 COMMON     2     2      0
                             _config
                           _jugador1
                           _jugador2
                           _semaforo
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _jugador2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _jugador1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
   _jugador1
   _jugador2
   _semaforo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jan 27 21:16:18 2021

                     l46 07F5                       l54 07F5                       l80 0709  
                     l57 06EB                       l67 074F                       l77 0795  
                     u10 0756                       u11 0755                       u20 0760  
                     u21 075F                       u30 076A                       u31 0769  
                     u40 0774                       u41 0773                       u50 077E  
                     u51 077D                       u60 0788                       u61 0787  
                     u70 0792                       u71 0791                       u80 0710  
                     u81 070F                       u90 071A                       u91 0719  
                    l700 0756                      l710 076D                      l702 0759  
                    l720 0788                      l712 0774                      l704 0760  
                    l730 0713                      l722 078B                      l714 0777  
                    l706 0763                      l740 072E                      l732 071A  
                    l724 0792                      l716 077E                      l708 076A  
                    l750 0745                      l742 0731                      l734 071D  
                    l726 070A                      l718 0781                      l680 06E6  
                    l672 06D9                      l752 074C                      l744 0738  
                    l736 0724                      l728 0710                      l760 07A6  
                    l682 06E9                      l674 06E0                      l746 073B  
                    l738 0727                      l690 06F8                      l770 07C4  
                    l754 0796                      l684 06EA                      l676 06E2  
                    l748 0742                      l692 06FB                      l780 07E7  
                    l772 07C8                      l764 07AD                      l756 079B  
                    l678 06E4                      l694 0705                      l686 06EC  
                    l774 07D0                      l766 07B6                      l758 07A1  
                    l696 0708                      l688 06EF                      l776 07D5  
                    l768 07BC                      l698 0750                      l778 07DA  
                    u100 0724                      u101 0723                      u110 072E  
                    u111 072D                      u120 0738                      u200 07F4  
                    u121 0737                      u201 07F3                      u130 0742  
                    u131 0741                      u140 074C                      u141 074B  
                    u205 07F0                      u150 07A1                      u151 07A0  
                    u160 07AC                      u217 07B1                      u161 07AB  
                    u170 07BC                      u227 06F3                      u171 07BB  
                    u180 07C8                      u237 0700                      u181 07C7  
                    u190 07E7                      u191 07E6                      u195 07E3  
                   _cont 0072                     _main 0796                     btemp 007E  
                   start 0000                    ?_main 0074                    _ANSEL 0188  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _cont2 0070                    status 0003  
                  wtemp0 007E          __initialization 07F8             __end_of_main 07F8  
                 ??_main 0076                   _ANSELH 0189                   _config 06D9  
       __end_of_jugador1 0750         __end_of_jugador2 0796         __end_of_semaforo 070A  
__end_of__initialization 07FC           __pcstackCOMMON 0074               __pmaintext 0796  
                ?_config 0074                ?_jugador1 0074                ?_jugador2 0074  
              ?_semaforo 0074          __size_of_config 0013                  __ptext1 06EC  
                __ptext2 0750                  __ptext3 070A                  __ptext4 06D9  
   end_of_initialization 07FC               ??_jugador1 0074               ??_jugador2 0074  
             ??_semaforo 0074                _PORTBbits 0006                _PORTCbits 0007  
              _PORTDbits 0008                _PORTEbits 0009           __end_of_config 06EC  
    start_initialization 07F8                 ??_config 0074              __pbssCOMMON 0070  
              ___latbits 0002        __size_of_jugador1 0046        __size_of_jugador2 0046  
      __size_of_semaforo 001E            __size_of_main 0062                 _jugador1 070A  
               _jugador2 0750                 _semaforo 06EC  
