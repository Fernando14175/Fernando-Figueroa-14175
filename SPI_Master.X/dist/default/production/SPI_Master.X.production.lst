

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 20:59:08 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0013                     _SSPBUF	set	19
   206  0009                     _PORTE	set	9
   207  0008                     _PORTD	set	8
   208  00A6                     _SSPOV	set	166
   209  0063                     _SSPIF	set	99
   210  00A4                     _CKP	set	164
   211  00A5                     _SSPEN	set	165
   212  00A3                     _SSPM3	set	163
   213  00A2                     _SSPM2	set	162
   214  00A1                     _SSPM1	set	161
   215  00A0                     _SSPM0	set	160
   216  0032                     _RB2	set	50
   217  0031                     _RB1	set	49
   218  0030                     _RB0	set	48
   219  0089                     _TRISE	set	137
   220  0088                     _TRISD	set	136
   221  0086                     _TRISB	set	134
   222  04A0                     _BF	set	1184
   223  043B                     _TRISC3	set	1083
   224  043C                     _TRISC4	set	1084
   225  043D                     _TRISC5	set	1085
   226  04A7                     _SMP	set	1191
   227  04A6                     _CKE	set	1190
   228  0189                     _ANSELH	set	393
   229  0188                     _ANSEL	set	392
   230                           
   231                           	psect	cinit
   232  000F                     start_initialization:	
   233                           ; #config settings
   234                           
   235  000F                     __initialization:
   236                           
   237                           ; Clear objects allocated to COMMON
   238  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   239  0010                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242  0010                     __end_of__initialization:
   243  0010  0183               	clrf	3
   244  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssCOMMON
   247  0078                     __pbssCOMMON:
   248  0078                     _Data2:
   249  0078                     	ds	1
   250                           
   251                           	psect	cstackCOMMON
   252  0070                     __pcstackCOMMON:
   253  0070                     ?_SPI_Master_Init:
   254  0070                     ?_SPI_Write:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_main:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_ISR:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ??_ISR:	
   264                           ; 1 bytes @ 0x0
   265                           
   266                           
   267                           ; 1 bytes @ 0x0
   268  0070                     	ds	3
   269  0073                     ??_SPI_Master_Init:
   270  0073                     ??_SPI_Write:	
   271                           ; 1 bytes @ 0x3
   272                           
   273  0073                     SPI_Write@Data:	
   274                           ; 1 bytes @ 0x3
   275                           
   276                           
   277                           ; 1 bytes @ 0x3
   278  0073                     	ds	1
   279  0074                     ??_main:
   280                           
   281                           ; 1 bytes @ 0x4
   282  0074                     	ds	3
   283  0077                     main@Data:
   284                           
   285                           ; 1 bytes @ 0x7
   286  0077                     	ds	1
   287                           
   288                           	psect	maintext
   289  0014                     __pmaintext:	
   290 ;;
   291 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   292 ;;
   293 ;; *************** function _main *****************
   294 ;; Defined at:
   295 ;;		line 29 in file "SPI_Master.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;  Data            1    7[COMMON] unsigned char 
   300 ;; Return value:  Size  Location     Type
   301 ;;                  1    wreg      void 
   302 ;; Registers used:
   303 ;;		wreg, status,2, status,0, pclath, cstack
   304 ;; Tracked objects:
   305 ;;		On entry : B00/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   309 ;;      Params:         0       0       0       0       0
   310 ;;      Locals:         1       0       0       0       0
   311 ;;      Temps:          3       0       0       0       0
   312 ;;      Totals:         4       0       0       0       0
   313 ;;Total ram usage:        4 bytes
   314 ;; Hardware stack levels required when called:    2
   315 ;; This function calls:
   316 ;;		_SPI_Master_Init
   317 ;;		_SPI_Write
   318 ;; This function is called by:
   319 ;;		Startup code after reset
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           
   324                           ;psect for function _main
   325  0014                     _main:
   326  0014                     l681:	
   327                           ;incstack = 0
   328                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   329                           
   330                           
   331                           ;SPI_Master.c: 32:   SPI_Master_Init();
   332  0014  120A  118A  2089  120A  118A  	fcall	_SPI_Master_Init
   333  0019                     l683:
   334                           
   335                           ;SPI_Master.c: 33:   uint8_t Data = 0;
   336  0019  01F7               	clrf	main@Data
   337  001A                     l685:
   338                           
   339                           ;SPI_Master.c: 34:   TRISB = 0x07;
   340  001A  3007               	movlw	7
   341  001B  1683               	bsf	3,5	;RP0=1, select bank1
   342  001C  1303               	bcf	3,6	;RP1=0, select bank1
   343  001D  0086               	movwf	6	;volatile
   344  001E                     l687:
   345                           
   346                           ;SPI_Master.c: 35:   TRISD = 0x00;
   347  001E  0188               	clrf	8	;volatile
   348  001F                     l689:
   349                           
   350                           ;SPI_Master.c: 36:   TRISE = 0x00;
   351  001F  0189               	clrf	9	;volatile
   352  0020                     l691:
   353                           
   354                           ;SPI_Master.c: 37:   PORTD = 0x00;
   355  0020  1283               	bcf	3,5	;RP0=0, select bank0
   356  0021  1303               	bcf	3,6	;RP1=0, select bank0
   357  0022  0188               	clrf	8	;volatile
   358  0023                     l693:
   359                           
   360                           ;SPI_Master.c: 38:   PORTE = 0b000;
   361  0023  0189               	clrf	9	;volatile
   362  0024                     l695:
   363                           
   364                           ;SPI_Master.c: 40:   ANSEL = 0b00000000;
   365  0024  1683               	bsf	3,5	;RP0=1, select bank3
   366  0025  1703               	bsf	3,6	;RP1=1, select bank3
   367  0026  0188               	clrf	8	;volatile
   368  0027                     l697:
   369                           
   370                           ;SPI_Master.c: 41:   ANSELH = 0b00000000;
   371  0027  0189               	clrf	9	;volatile
   372  0028                     l699:
   373                           
   374                           ;SPI_Master.c: 45:   {;SPI_Master.c: 46:     if (RB0)
   375  0028  1283               	bcf	3,5	;RP0=0, select bank0
   376  0029  1303               	bcf	3,6	;RP1=0, select bank0
   377  002A  1C06               	btfss	6,0	;volatile
   378  002B  282D               	goto	u11
   379  002C  282E               	goto	u10
   380  002D                     u11:
   381  002D  283F               	goto	l705
   382  002E                     u10:
   383  002E                     l701:
   384                           
   385                           ;SPI_Master.c: 47:     {;SPI_Master.c: 48:       Data++;
   386  002E  3001               	movlw	1
   387  002F  00F4               	movwf	??_main
   388  0030  0874               	movf	??_main,w
   389  0031  07F7               	addwf	main@Data,f
   390  0032                     l703:
   391                           
   392                           ;SPI_Master.c: 49:       _delay((unsigned long)((250)*(4000000/4000.0)));
   393  0032  3002               	movlw	2
   394  0033  00F6               	movwf	??_main+2
   395  0034  3045               	movlw	69
   396  0035  00F5               	movwf	??_main+1
   397  0036  30A9               	movlw	169
   398  0037  00F4               	movwf	??_main
   399  0038                     u67:
   400  0038  0BF4               	decfsz	??_main,f
   401  0039  2838               	goto	u67
   402  003A  0BF5               	decfsz	??_main+1,f
   403  003B  2838               	goto	u67
   404  003C  0BF6               	decfsz	??_main+2,f
   405  003D  2838               	goto	u67
   406  003E  283F               	nop2
   407  003F                     l705:
   408                           
   409                           ;SPI_Master.c: 51:     if (RB1)
   410  003F  1283               	bcf	3,5	;RP0=0, select bank0
   411  0040  1303               	bcf	3,6	;RP1=0, select bank0
   412  0041  1C86               	btfss	6,1	;volatile
   413  0042  2844               	goto	u21
   414  0043  2845               	goto	u20
   415  0044                     u21:
   416  0044  2854               	goto	l711
   417  0045                     u20:
   418  0045                     l707:
   419                           
   420                           ;SPI_Master.c: 52:     {;SPI_Master.c: 53:       Data--;
   421  0045  3001               	movlw	1
   422  0046  02F7               	subwf	main@Data,f
   423  0047                     l709:
   424                           
   425                           ;SPI_Master.c: 54:       _delay((unsigned long)((250)*(4000000/4000.0)));
   426  0047  3002               	movlw	2
   427  0048  00F6               	movwf	??_main+2
   428  0049  3045               	movlw	69
   429  004A  00F5               	movwf	??_main+1
   430  004B  30A9               	movlw	169
   431  004C  00F4               	movwf	??_main
   432  004D                     u77:
   433  004D  0BF4               	decfsz	??_main,f
   434  004E  284D               	goto	u77
   435  004F  0BF5               	decfsz	??_main+1,f
   436  0050  284D               	goto	u77
   437  0051  0BF6               	decfsz	??_main+2,f
   438  0052  284D               	goto	u77
   439  0053  2854               	nop2
   440  0054                     l711:
   441                           
   442                           ;SPI_Master.c: 56:     if (RB2)
   443  0054  1283               	bcf	3,5	;RP0=0, select bank0
   444  0055  1303               	bcf	3,6	;RP1=0, select bank0
   445  0056  1D06               	btfss	6,2	;volatile
   446  0057  2859               	goto	u31
   447  0058  285A               	goto	u30
   448  0059                     u31:
   449  0059  286D               	goto	l717
   450  005A                     u30:
   451  005A                     l713:
   452                           
   453                           ;SPI_Master.c: 57:     {;SPI_Master.c: 58:       SPI_Write(Data);
   454  005A  0877               	movf	main@Data,w
   455  005B  120A  118A  2099  120A  118A  	fcall	_SPI_Write
   456  0060                     l715:
   457                           
   458                           ;SPI_Master.c: 59:       _delay((unsigned long)((250)*(4000000/4000.0)));
   459  0060  3002               	movlw	2
   460  0061  00F6               	movwf	??_main+2
   461  0062  3045               	movlw	69
   462  0063  00F5               	movwf	??_main+1
   463  0064  30A9               	movlw	169
   464  0065  00F4               	movwf	??_main
   465  0066                     u87:
   466  0066  0BF4               	decfsz	??_main,f
   467  0067  2866               	goto	u87
   468  0068  0BF5               	decfsz	??_main+1,f
   469  0069  2866               	goto	u87
   470  006A  0BF6               	decfsz	??_main+2,f
   471  006B  2866               	goto	u87
   472  006C  286D               	nop2
   473  006D                     l717:
   474                           
   475                           ;SPI_Master.c: 61:     PORTD = Data;
   476  006D  0877               	movf	main@Data,w
   477  006E  1283               	bcf	3,5	;RP0=0, select bank0
   478  006F  1303               	bcf	3,6	;RP1=0, select bank0
   479  0070  0088               	movwf	8	;volatile
   480  0071                     l719:
   481                           
   482                           ;SPI_Master.c: 62:     PORTE = Data2;
   483  0071  0878               	movf	_Data2,w
   484  0072  0089               	movwf	9	;volatile
   485  0073  2828               	goto	l699
   486  0074  120A  118A  280C   	ljmp	start
   487  0077                     __end_of_main:
   488                           
   489                           	psect	text1
   490  0099                     __ptext1:	
   491 ;; *************** function _SPI_Write *****************
   492 ;; Defined at:
   493 ;;		line 89 in file "SPI_Master.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;  Data            1    wreg     unsigned char 
   496 ;; Auto vars:     Size  Location     Type
   497 ;;  Data            1    3[COMMON] unsigned char 
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   507 ;;      Params:         0       0       0       0       0
   508 ;;      Locals:         1       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0
   510 ;;      Totals:         1       0       0       0       0
   511 ;;Total ram usage:        1 bytes
   512 ;; Hardware stack levels used:    1
   513 ;; Hardware stack levels required when called:    1
   514 ;; This function calls:
   515 ;;		Nothing
   516 ;; This function is called by:
   517 ;;		_main
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           
   522                           ;psect for function _SPI_Write
   523  0099                     _SPI_Write:
   524                           
   525                           ;incstack = 0
   526                           ; Regs used in _SPI_Write: [wreg]
   527                           ;SPI_Write@Data stored from wreg
   528  0099  00F3               	movwf	SPI_Write@Data
   529  009A                     l679:
   530                           
   531                           ;SPI_Master.c: 89: void SPI_Write(uint8_t Data);SPI_Master.c: 90: {;SPI_Master.c: 91:   
      +                          SSPBUF = Data;
   532  009A  0873               	movf	SPI_Write@Data,w
   533  009B  1283               	bcf	3,5	;RP0=0, select bank0
   534  009C  1303               	bcf	3,6	;RP1=0, select bank0
   535  009D  0093               	movwf	19	;volatile
   536  009E                     l75:
   537  009E  0008               	return
   538  009F                     __end_of_SPI_Write:
   539                           
   540                           	psect	text2
   541  0089                     __ptext2:	
   542 ;; *************** function _SPI_Master_Init *****************
   543 ;; Defined at:
   544 ;;		line 68 in file "SPI_Master.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		None
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   558 ;;      Params:         0       0       0       0       0
   559 ;;      Locals:         0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0
   561 ;;      Totals:         0       0       0       0       0
   562 ;;Total ram usage:        0 bytes
   563 ;; Hardware stack levels used:    1
   564 ;; Hardware stack levels required when called:    1
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _SPI_Master_Init
   574  0089                     _SPI_Master_Init:
   575  0089                     l677:	
   576                           ;incstack = 0
   577                           ; Regs used in _SPI_Master_Init: []
   578                           
   579                           
   580                           ;SPI_Master.c: 71:   SSPM0 = 0;
   581  0089  1283               	bcf	3,5	;RP0=0, select bank0
   582  008A  1303               	bcf	3,6	;RP1=0, select bank0
   583  008B  1014               	bcf	20,0	;volatile
   584                           
   585                           ;SPI_Master.c: 72:   SSPM1 = 0;
   586  008C  1094               	bcf	20,1	;volatile
   587                           
   588                           ;SPI_Master.c: 73:   SSPM2 = 0;
   589  008D  1114               	bcf	20,2	;volatile
   590                           
   591                           ;SPI_Master.c: 74:   SSPM3 = 0;
   592  008E  1194               	bcf	20,3	;volatile
   593                           
   594                           ;SPI_Master.c: 76:   SSPEN = 1;
   595  008F  1694               	bsf	20,5	;volatile
   596                           
   597                           ;SPI_Master.c: 78:   CKP = 0;
   598  0090  1214               	bcf	20,4	;volatile
   599                           
   600                           ;SPI_Master.c: 79:   CKE = 0;
   601  0091  1683               	bsf	3,5	;RP0=1, select bank1
   602  0092  1303               	bcf	3,6	;RP1=0, select bank1
   603  0093  1314               	bcf	20,6	;volatile
   604                           
   605                           ;SPI_Master.c: 81:   SMP = 0;
   606  0094  1394               	bcf	20,7	;volatile
   607                           
   608                           ;SPI_Master.c: 83:   TRISC5 = 0;
   609  0095  1287               	bcf	7,5	;volatile
   610                           
   611                           ;SPI_Master.c: 84:   TRISC4 = 1;
   612  0096  1607               	bsf	7,4	;volatile
   613                           
   614                           ;SPI_Master.c: 85:   TRISC3 = 0;
   615  0097  1187               	bcf	7,3	;volatile
   616  0098                     l72:
   617  0098  0008               	return
   618  0099                     __end_of_SPI_Master_Init:
   619                           
   620                           	psect	text3
   621  0077                     __ptext3:	
   622 ;; *************** function _ISR *****************
   623 ;; Defined at:
   624 ;;		line 109 in file "SPI_Master.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   638 ;;      Params:         0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0
   640 ;;      Temps:          3       0       0       0       0
   641 ;;      Totals:         3       0       0       0       0
   642 ;;Total ram usage:        3 bytes
   643 ;; Hardware stack levels used:    1
   644 ;; This function calls:
   645 ;;		Nothing
   646 ;; This function is called by:
   647 ;;		Interrupt level 1
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           
   652                           ;psect for function _ISR
   653  0077                     _ISR:
   654  0077                     i1l733:
   655                           
   656                           ;SPI_Master.c: 111:   if(SSPIF)
   657  0077  1283               	bcf	3,5	;RP0=0, select bank0
   658  0078  1303               	bcf	3,6	;RP1=0, select bank0
   659  0079  1D8C               	btfss	12,3	;volatile
   660  007A  287C               	goto	u5_21
   661  007B  287D               	goto	u5_20
   662  007C                     u5_21:
   663  007C  2882               	goto	i1l85
   664  007D                     u5_20:
   665  007D                     i1l735:
   666                           
   667                           ;SPI_Master.c: 112:   {;SPI_Master.c: 113:     Data2 = SSPBUF;
   668  007D  0813               	movf	19,w	;volatile
   669  007E  00F0               	movwf	??_ISR
   670  007F  0870               	movf	??_ISR,w
   671  0080  00F8               	movwf	_Data2
   672  0081                     i1l737:
   673                           
   674                           ;SPI_Master.c: 114:     SSPIF = 0;
   675  0081  118C               	bcf	12,3	;volatile
   676  0082                     i1l85:
   677  0082  0872               	movf	??_ISR+2,w
   678  0083  008A               	movwf	10
   679  0084  0E71               	swapf	??_ISR+1,w
   680  0085  0083               	movwf	3
   681  0086  0EFE               	swapf	btemp,f
   682  0087  0E7E               	swapf	btemp,w
   683  0088  0009               	retfie
   684  0089                     __end_of_ISR:
   685  007E                     btemp	set	126	;btemp
   686  007E                     wtemp0	set	126
   687                           
   688                           	psect	intentry
   689  0004                     __pintentry:	
   690                           ;incstack = 0
   691                           ; Regs used in _ISR: [wreg]
   692                           
   693  0004                     interrupt_function:
   694  007E                     saved_w	set	btemp
   695  0004  00FE               	movwf	btemp
   696  0005  0E03               	swapf	3,w
   697  0006  00F1               	movwf	??_ISR+1
   698  0007  080A               	movf	10,w
   699  0008  00F2               	movwf	??_ISR+2
   700  0009  120A  118A  2877   	ljmp	_ISR
   701                           
   702                           	psect	config
   703                           
   704                           ;Config register CONFIG1 @ 0x2007
   705                           ;	Oscillator Selection bits
   706                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   707                           ;	Watchdog Timer Enable bit
   708                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   709                           ;	Power-up Timer Enable bit
   710                           ;	PWRTE = ON, PWRT enabled
   711                           ;	RE3/MCLR pin function select bit
   712                           ;	MCLRE = 0x1, unprogrammed default
   713                           ;	Code Protection bit
   714                           ;	CP = OFF, Program memory code protection is disabled
   715                           ;	Data Code Protection bit
   716                           ;	CPD = OFF, Data memory code protection is disabled
   717                           ;	Brown Out Reset Selection bits
   718                           ;	BOREN = ON, BOR enabled
   719                           ;	Internal External Switchover bit
   720                           ;	IESO = 0x1, unprogrammed default
   721                           ;	Fail-Safe Clock Monitor Enabled bit
   722                           ;	FCMEN = 0x1, unprogrammed default
   723                           ;	Low Voltage Programming Enable bit
   724                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   725                           ;	In-Circuit Debugger Mode bit
   726                           ;	DEBUG = 0x1, unprogrammed default
   727  2007                     	org	8199
   728  2007  2FE1               	dw	12257
   729                           
   730                           ;Config register CONFIG2 @ 0x2008
   731                           ;	Brown-out Reset Selection bit
   732                           ;	BOR4V = 0x1, unprogrammed default
   733                           ;	Flash Program Memory Self Write Enable bits
   734                           ;	WRT = OFF, Write protection off
   735  2008                     	org	8200
   736  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              4 COMMON     4     4      0
                    _SPI_Master_Init
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Master_Init
   _SPI_Write

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 20:59:08 2021

         _SPI_Master_Init 0089                        _BF 04A0                        l72 0098  
                      l75 009E                        u10 002E                        u11 002D  
                      u20 0045                        u21 0044                        u30 005A  
                      u31 0059                        u67 0038                        u77 004D  
                      u87 0066                       l701 002E                       l711 0054  
                     l703 0032                       l713 005A                       l705 003F  
                     l715 0060                       l707 0045                       l717 006D  
                     l709 0047                       l719 0071                       l681 0014  
                     l691 0020                       l683 0019                       l677 0089  
                     l693 0023                       l685 001A                       l679 009A  
                     l695 0024                       l687 001E                       _CKE 04A6  
                     l697 0027                       l689 001F                       l699 0028  
                     _CKP 00A4                       _RB0 0030                       _RB1 0031  
                     _RB2 0032                       _ISR 0077                       _SMP 04A7  
                    ?_ISR 0070                      i1l85 0082                      u5_20 007D  
                    u5_21 007C                      _main 0014                      btemp 007E  
                    start 000C                     ??_ISR 0070                     ?_main 0070  
                   _ANSEL 0188                     i1l733 0077                     i1l735 007D  
                   i1l737 0081                     _PORTD 0008                     _PORTE 0009  
                   _SSPM0 00A0                     _SSPM1 00A1                     _SSPM2 00A2  
                   _SSPM3 00A3                     _TRISB 0086                     _TRISD 0088  
                   _TRISE 0089                     _SSPEN 00A5                     _SSPIF 0063  
                   _SSPOV 00A6                     _Data2 0078                     pclath 000A  
                   status 0003                     wtemp0 007E   __end_of_SPI_Master_Init 0099  
      __size_of_SPI_Write 0006           __initialization 000F              __end_of_main 0077  
                  ??_main 0074                    _ANSELH 0189                    _TRISC3 043B  
                  _TRISC4 043C                    _TRISC5 043D                    _SSPBUF 0013  
       __end_of_SPI_Write 009F                    saved_w 007E   __end_of__initialization 0010  
        ?_SPI_Master_Init 0070            __pcstackCOMMON 0070                __pmaintext 0014  
              __pintentry 0004             SPI_Write@Data 0073                   __ptext1 0099  
                 __ptext2 0089                   __ptext3 0077              __size_of_ISR 0012  
    end_of_initialization 0010                 _SPI_Write 0099       start_initialization 000F  
             __end_of_ISR 0089                ?_SPI_Write 0070  __size_of_SPI_Master_Init 0010  
             __pbssCOMMON 0078                 ___latbits 0002               ??_SPI_Write 0073  
       interrupt_function 0004         ??_SPI_Master_Init 0073             __size_of_main 0063  
                main@Data 0077                  intlevel1 0000  
