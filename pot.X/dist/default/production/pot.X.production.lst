

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 19 12:22:31 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237                           
   238                           	psect	strings
   239  0800                     __pstrings:
   240  0800                     stringtab:
   241  0800                     __stringtab:
   242                           
   243                           ;	String table - string pointers are 1 byte each
   244  0800  1BFF               	btfsc	btemp+1,7
   245  0801  280A               	ljmp	stringcode
   246  0802  1383               	bcf	3,7
   247  0803  187F               	btfsc	btemp+1,0
   248  0804  1783               	bsf	3,7
   249  0805  0800               	movf	0,w
   250  0806  0A84               	incf	4,f
   251  0807  1903               	skipnz
   252  0808  0AFF               	incf	btemp+1,f
   253  0809  0008               	return
   254  080A                     stringcode:
   255  080A                     stringdir:
   256  080A  3008               	movlw	high stringdir
   257  080B  008A               	movwf	10
   258  080C  0804               	movf	4,w
   259  080D  0A84               	incf	4,f
   260  080E  0782               	addwf	2,f
   261  080F                     __stringbase:
   262  080F  3400               	retlw	0
   263  0810                     __end_of__stringtab:
   264  0810                     __powers_:
   265  0810  3400               	retlw	0
   266  0811  3400               	retlw	0
   267  0812  3480               	retlw	128
   268  0813  343F               	retlw	63
   269  0814  3400               	retlw	0
   270  0815  3400               	retlw	0
   271  0816  3420               	retlw	32
   272  0817  3441               	retlw	65
   273  0818  3400               	retlw	0
   274  0819  3400               	retlw	0
   275  081A  34C8               	retlw	200
   276  081B  3442               	retlw	66
   277  081C  3400               	retlw	0
   278  081D  3400               	retlw	0
   279  081E  347A               	retlw	122
   280  081F  3444               	retlw	68
   281  0820  3400               	retlw	0
   282  0821  3440               	retlw	64
   283  0822  341C               	retlw	28
   284  0823  3446               	retlw	70
   285  0824  3400               	retlw	0
   286  0825  3450               	retlw	80
   287  0826  34C3               	retlw	195
   288  0827  3447               	retlw	71
   289  0828  3400               	retlw	0
   290  0829  3424               	retlw	36
   291  082A  3474               	retlw	116
   292  082B  3449               	retlw	73
   293  082C  3480               	retlw	128
   294  082D  3496               	retlw	150
   295  082E  3418               	retlw	24
   296  082F  344B               	retlw	75
   297  0830  3420               	retlw	32
   298  0831  34BC               	retlw	188
   299  0832  34BE               	retlw	190
   300  0833  344C               	retlw	76
   301  0834  3428               	retlw	40
   302  0835  346B               	retlw	107
   303  0836  346E               	retlw	110
   304  0837  344E               	retlw	78
   305  0838  34F9               	retlw	249
   306  0839  3402               	retlw	2
   307  083A  3415               	retlw	21
   308  083B  3450               	retlw	80
   309  083C  34EC               	retlw	236
   310  083D  3478               	retlw	120
   311  083E  34AD               	retlw	173
   312  083F  3460               	retlw	96
   313  0840  34CA               	retlw	202
   314  0841  34F2               	retlw	242
   315  0842  3449               	retlw	73
   316  0843  3471               	retlw	113
   317  0844                     __end_of__powers_:
   318  0844                     __npowers_:
   319  0844  3400               	retlw	0
   320  0845  3400               	retlw	0
   321  0846  3480               	retlw	128
   322  0847  343F               	retlw	63
   323  0848  34CD               	retlw	205
   324  0849  34CC               	retlw	204
   325  084A  34CC               	retlw	204
   326  084B  343D               	retlw	61
   327  084C  340A               	retlw	10
   328  084D  34D7               	retlw	215
   329  084E  3423               	retlw	35
   330  084F  343C               	retlw	60
   331  0850  346F               	retlw	111
   332  0851  3412               	retlw	18
   333  0852  3483               	retlw	131
   334  0853  343A               	retlw	58
   335  0854  3417               	retlw	23
   336  0855  34B7               	retlw	183
   337  0856  34D1               	retlw	209
   338  0857  3438               	retlw	56
   339  0858  34AC               	retlw	172
   340  0859  34C5               	retlw	197
   341  085A  3427               	retlw	39
   342  085B  3437               	retlw	55
   343  085C  34BD               	retlw	189
   344  085D  3437               	retlw	55
   345  085E  3486               	retlw	134
   346  085F  3435               	retlw	53
   347  0860  3495               	retlw	149
   348  0861  34BF               	retlw	191
   349  0862  34D6               	retlw	214
   350  0863  3433               	retlw	51
   351  0864  3477               	retlw	119
   352  0865  34CC               	retlw	204
   353  0866  342B               	retlw	43
   354  0867  3432               	retlw	50
   355  0868  345F               	retlw	95
   356  0869  3470               	retlw	112
   357  086A  3489               	retlw	137
   358  086B  3430               	retlw	48
   359  086C  34FF               	retlw	255
   360  086D  34E6               	retlw	230
   361  086E  34DB               	retlw	219
   362  086F  342E               	retlw	46
   363  0870  3408               	retlw	8
   364  0871  34E5               	retlw	229
   365  0872  343C               	retlw	60
   366  0873  341E               	retlw	30
   367  0874  3460               	retlw	96
   368  0875  3442               	retlw	66
   369  0876  34A2               	retlw	162
   370  0877  340D               	retlw	13
   371  0878                     __end_of__npowers_:
   372  0878                     _dpowers:
   373  0878  3401               	retlw	1
   374  0879  3400               	retlw	0
   375  087A  3400               	retlw	0
   376  087B  3400               	retlw	0
   377  087C  340A               	retlw	10
   378  087D  3400               	retlw	0
   379  087E  3400               	retlw	0
   380  087F  3400               	retlw	0
   381  0880  3464               	retlw	100
   382  0881  3400               	retlw	0
   383  0882  3400               	retlw	0
   384  0883  3400               	retlw	0
   385  0884  34E8               	retlw	232
   386  0885  3403               	retlw	3
   387  0886  3400               	retlw	0
   388  0887  3400               	retlw	0
   389  0888  3410               	retlw	16
   390  0889  3427               	retlw	39
   391  088A  3400               	retlw	0
   392  088B  3400               	retlw	0
   393  088C  34A0               	retlw	160
   394  088D  3486               	retlw	134
   395  088E  3401               	retlw	1
   396  088F  3400               	retlw	0
   397  0890  3440               	retlw	64
   398  0891  3442               	retlw	66
   399  0892  340F               	retlw	15
   400  0893  3400               	retlw	0
   401  0894  3480               	retlw	128
   402  0895  3496               	retlw	150
   403  0896  3498               	retlw	152
   404  0897  3400               	retlw	0
   405  0898  3400               	retlw	0
   406  0899  34E1               	retlw	225
   407  089A  34F5               	retlw	245
   408  089B  3405               	retlw	5
   409  089C  3400               	retlw	0
   410  089D  34CA               	retlw	202
   411  089E  349A               	retlw	154
   412  089F  343B               	retlw	59
   413  08A0                     __end_of_dpowers:
   414  001E                     _ADRESH	set	30
   415  0006                     _PORTB	set	6
   416  0008                     _PORTDbits	set	8
   417  000C                     _PIR1bits	set	12
   418  000B                     _INTCONbits	set	11
   419  001F                     _ADCON0bits	set	31
   420  008C                     _PIE1bits	set	140
   421  009F                     _ADCON1bits	set	159
   422  0088                     _TRISD	set	136
   423  0086                     _TRISB	set	134
   424  0085                     _TRISA	set	133
   425  0188                     _ANSELbits	set	392
   426  0189                     _ANSELH	set	393
   427  0188                     _ANSEL	set	392
   428  08A0                     STR_2:
   429  08A0  3446               	retlw	70	;'F'
   430  08A1  3465               	retlw	101	;'e'
   431  08A2  3472               	retlw	114	;'r'
   432  08A3  346E               	retlw	110	;'n'
   433  08A4  3461               	retlw	97	;'a'
   434  08A5  346E               	retlw	110	;'n'
   435  08A6  3464               	retlw	100	;'d'
   436  08A7  346F               	retlw	111	;'o'
   437  08A8  3446               	retlw	70	;'F'
   438  08A9  3469               	retlw	105	;'i'
   439  08AA  3467               	retlw	103	;'g'
   440  08AB  3475               	retlw	117	;'u'
   441  08AC  3465               	retlw	101	;'e'
   442  08AD  3472               	retlw	114	;'r'
   443  08AE  346F               	retlw	111	;'o'
   444  08AF  3461               	retlw	97	;'a'
   445  08B0  3400               	retlw	0
   446  08B1                     STR_1:
   447  08B1  3444               	retlw	68	;'D'
   448  08B2  3449               	retlw	73	;'I'
   449  08B3  3447               	retlw	71	;'G'
   450  08B4  3449               	retlw	73	;'I'
   451  08B5  3454               	retlw	84	;'T'
   452  08B6  3441               	retlw	65	;'A'
   453  08B7  344C               	retlw	76	;'L'
   454  08B8  3420               	retlw	32	;' '
   455  08B9  3432               	retlw	50	;'2'
   456  08BA  3400               	retlw	0
   457  08BB                     STR_3:
   458  08BB  3456               	retlw	86	;'V'
   459  08BC  346F               	retlw	111	;'o'
   460  08BD  346C               	retlw	108	;'l'
   461  08BE  3474               	retlw	116	;'t'
   462  08BF  3431               	retlw	49	;'1'
   463  08C0  3400               	retlw	0
   464  08C1                     STR_4:
   465  08C1  3425               	retlw	37	;'%'
   466  08C2  342E               	retlw	46	;'.'
   467  08C3  3433               	retlw	51	;'3'
   468  08C4  3466               	retlw	102	;'f'
   469  08C5  3400               	retlw	0
   470                           
   471                           	psect	cinit
   472  000F                     start_initialization:	
   473                           ; #config settings
   474                           
   475  000F                     __initialization:
   476                           
   477                           ; Clear objects allocated to COMMON
   478  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   479  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   480                           
   481                           ; Clear objects allocated to BANK1
   482  0011  1683               	bsf	3,5	;RP0=1, select bank1
   483  0012  1303               	bcf	3,6	;RP1=0, select bank1
   484  0013  01CE               	clrf	__pbssBANK1& (0+127)
   485  0014  01CF               	clrf	(__pbssBANK1+1)& (0+127)
   486  0015  01D0               	clrf	(__pbssBANK1+2)& (0+127)
   487  0016  01D1               	clrf	(__pbssBANK1+3)& (0+127)
   488  0017  01D2               	clrf	(__pbssBANK1+4)& (0+127)
   489  0018  01D3               	clrf	(__pbssBANK1+5)& (0+127)
   490  0019  01D4               	clrf	(__pbssBANK1+6)& (0+127)
   491  001A  01D5               	clrf	(__pbssBANK1+7)& (0+127)
   492  001B  01D6               	clrf	(__pbssBANK1+8)& (0+127)
   493  001C  01D7               	clrf	(__pbssBANK1+9)& (0+127)
   494  001D  01D8               	clrf	(__pbssBANK1+10)& (0+127)
   495  001E                     end_of_initialization:	
   496                           ;End of C runtime variable initialization code
   497                           
   498  001E                     __end_of__initialization:
   499  001E  0183               	clrf	3
   500  001F  160A  158A  2E67   	ljmp	_main	;jump to C main() function
   501                           
   502                           	psect	bssCOMMON
   503  0078                     __pbssCOMMON:
   504  0078                     _b:
   505  0078                     	ds	2
   506                           
   507                           	psect	bssBANK1
   508  00CE                     __pbssBANK1:
   509  00CE                     _vpot2:
   510  00CE                     	ds	4
   511  00D2                     _vpot1:
   512  00D2                     	ds	4
   513  00D6                     _c:
   514  00D6                     	ds	2
   515  00D8                     _buffer:
   516  00D8                     	ds	1
   517                           
   518                           	psect	cstackBANK1
   519  00A0                     __pcstackBANK1:
   520  00A0                     ?___flsub:
   521  00A0                     ___flsub@a:	
   522                           ; 4 bytes @ 0x0
   523                           
   524                           
   525                           ; 4 bytes @ 0x0
   526  00A0                     	ds	4
   527  00A4                     ___flsub@b:
   528                           
   529                           ; 4 bytes @ 0x4
   530  00A4                     	ds	4
   531  00A8                     ?_sprintf:
   532  00A8                     sprintf@f:	
   533                           ; 2 bytes @ 0x8
   534                           
   535                           
   536                           ; 1 bytes @ 0x8
   537  00A8                     	ds	5
   538  00AD                     ??_sprintf:
   539                           
   540                           ; 1 bytes @ 0xD
   541  00AD                     	ds	5
   542  00B2                     _sprintf$986:
   543                           
   544                           ; 4 bytes @ 0x12
   545  00B2                     	ds	4
   546  00B6                     sprintf@ap:
   547                           
   548                           ; 1 bytes @ 0x16
   549  00B6                     	ds	1
   550  00B7                     sprintf@flag:
   551                           
   552                           ; 2 bytes @ 0x17
   553  00B7                     	ds	2
   554  00B9                     sprintf@val:
   555                           
   556                           ; 4 bytes @ 0x19
   557  00B9                     	ds	4
   558  00BD                     sprintf@eexp:
   559                           
   560                           ; 2 bytes @ 0x1D
   561  00BD                     	ds	2
   562  00BF                     sprintf@sp:
   563                           
   564                           ; 1 bytes @ 0x1F
   565  00BF                     	ds	1
   566  00C0                     sprintf@tmpval:
   567                           
   568                           ; 4 bytes @ 0x20
   569  00C0                     	ds	4
   570  00C4                     sprintf@prec:
   571                           
   572                           ; 2 bytes @ 0x24
   573  00C4                     	ds	2
   574  00C6                     sprintf@fval:
   575                           
   576                           ; 4 bytes @ 0x26
   577  00C6                     	ds	4
   578  00CA                     sprintf@c:
   579                           
   580                           ; 1 bytes @ 0x2A
   581  00CA                     	ds	1
   582  00CB                     ??_main:
   583                           
   584                           ; 1 bytes @ 0x2B
   585  00CB                     	ds	3
   586                           
   587                           	psect	cstackCOMMON
   588  0070                     __pcstackCOMMON:
   589  0070                     ?_isdigit:
   590  0070                     ?_conversion:	
   591                           ; 1 bit 
   592                           
   593  0070                     ?_config:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_Lcd_Cmd:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_Lcd_Write_Char:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_Lcd_Init:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_ISR:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ??_ISR:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_main:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_Lcd_Clear:	
   615                           ; 1 bytes @ 0x0
   616                           
   617                           
   618                           ; 2 bytes @ 0x0
   619  0070                     	ds	4
   620  0074                     ??_isdigit:
   621  0074                     ??__tdiv_to_l_:	
   622                           ; 1 bytes @ 0x4
   623                           
   624  0074                     ??__div_to_l_:	
   625                           ; 1 bytes @ 0x4
   626                           
   627  0074                     ??_config:	
   628                           ; 1 bytes @ 0x4
   629                           
   630  0074                     ??_Lcd_Cmd:	
   631                           ; 1 bytes @ 0x4
   632                           
   633  0074                     ??_Lcd_Write_Char:	
   634                           ; 1 bytes @ 0x4
   635                           
   636  0074                     ??___lldiv:	
   637                           ; 1 bytes @ 0x4
   638                           
   639  0074                     ??___fleq:	
   640                           ; 1 bytes @ 0x4
   641                           
   642  0074                     ??___flge:	
   643                           ; 1 bytes @ 0x4
   644                           
   645  0074                     ??___llmod:	
   646                           ; 1 bytes @ 0x4
   647                           
   648  0074                     ?__Umul8_16:	
   649                           ; 1 bytes @ 0x4
   650                           
   651  0074                     ?___wmul:	
   652                           ; 2 bytes @ 0x4
   653                           
   654  0074                     ?___awmod:	
   655                           ; 2 bytes @ 0x4
   656                           
   657  0074                     ?___lwmod:	
   658                           ; 2 bytes @ 0x4
   659                           
   660  0074                     ?___flneg:	
   661                           ; 2 bytes @ 0x4
   662                           
   663  0074                     __Umul8_16@multiplicand:	
   664                           ; 4 bytes @ 0x4
   665                           
   666  0074                     _isdigit$800:	
   667                           ; 1 bytes @ 0x4
   668                           
   669  0074                     ___wmul@multiplier:	
   670                           ; 1 bytes @ 0x4
   671                           
   672  0074                     ___awmod@divisor:	
   673                           ; 2 bytes @ 0x4
   674                           
   675  0074                     ___lwmod@divisor:	
   676                           ; 2 bytes @ 0x4
   677                           
   678  0074                     ___flneg@f1:	
   679                           ; 2 bytes @ 0x4
   680                           
   681                           
   682                           ; 4 bytes @ 0x4
   683  0074                     	ds	1
   684  0075                     Lcd_Write_Char@a:
   685  0075                     ___llmod@counter:	
   686                           ; 1 bytes @ 0x5
   687                           
   688  0075                     isdigit@c:	
   689                           ; 1 bytes @ 0x5
   690                           
   691                           
   692                           ; 1 bytes @ 0x5
   693  0075                     	ds	1
   694  0076                     ??__Umul8_16:
   695  0076                     ?_Lcd_Write_String:	
   696                           ; 1 bytes @ 0x6
   697                           
   698  0076                     Lcd_Cmd@a:	
   699                           ; 1 bytes @ 0x6
   700                           
   701  0076                     Lcd_Write_String@a:	
   702                           ; 1 bytes @ 0x6
   703                           
   704  0076                     ___wmul@multiplicand:	
   705                           ; 2 bytes @ 0x6
   706                           
   707  0076                     ___awmod@dividend:	
   708                           ; 2 bytes @ 0x6
   709                           
   710  0076                     ___lwmod@dividend:	
   711                           ; 2 bytes @ 0x6
   712                           
   713                           
   714                           ; 2 bytes @ 0x6
   715  0076                     	ds	1
   716  0077                     ??_Lcd_Clear:
   717  0077                     ?_Lcd_Set_Cursor:	
   718                           ; 1 bytes @ 0x7
   719                           
   720  0077                     Lcd_Set_Cursor@b:	
   721                           ; 1 bytes @ 0x7
   722                           
   723                           
   724                           ; 1 bytes @ 0x7
   725  0077                     	ds	1
   726  0078                     ??___wmul:
   727  0078                     ??___flneg:	
   728                           ; 1 bytes @ 0x8
   729                           
   730  0078                     ??___flsub:	
   731                           ; 1 bytes @ 0x8
   732                           
   733                           
   734                           	psect	cstackBANK0
   735  0020                     __pcstackBANK0:	
   736                           ; 1 bytes @ 0x8
   737                           
   738  0020                     ?___fleq:
   739  0020                     ?___flge:	
   740                           ; 1 bit 
   741                           
   742  0020                     ??_Lcd_Set_Cursor:	
   743                           ; 1 bit 
   744                           
   745  0020                     ??_Lcd_Write_String:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0020                     ??_Lcd_Init:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0020                     ??___awmod:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0020                     ??___lwmod:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0020                     ?__tdiv_to_l_:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0020                     ?__div_to_l_:	
   761                           ; 4 bytes @ 0x0
   762                           
   763  0020                     ?___lldiv:	
   764                           ; 4 bytes @ 0x0
   765                           
   766  0020                     ?___llmod:	
   767                           ; 4 bytes @ 0x0
   768                           
   769  0020                     ___wmul@product:	
   770                           ; 4 bytes @ 0x0
   771                           
   772  0020                     __Umul8_16@product:	
   773                           ; 2 bytes @ 0x0
   774                           
   775  0020                     ___lldiv@divisor:	
   776                           ; 2 bytes @ 0x0
   777                           
   778  0020                     __div_to_l_@f1:	
   779                           ; 4 bytes @ 0x0
   780                           
   781  0020                     ___fleq@ff1:	
   782                           ; 4 bytes @ 0x0
   783                           
   784  0020                     ___flge@ff1:	
   785                           ; 4 bytes @ 0x0
   786                           
   787  0020                     __tdiv_to_l_@f1:	
   788                           ; 4 bytes @ 0x0
   789                           
   790  0020                     ___llmod@divisor:	
   791                           ; 4 bytes @ 0x0
   792                           
   793                           
   794                           ; 4 bytes @ 0x0
   795  0020                     	ds	1
   796  0021                     Lcd_Set_Cursor@a:
   797  0021                     ___awmod@counter:	
   798                           ; 1 bytes @ 0x1
   799                           
   800  0021                     ___lwmod@counter:	
   801                           ; 1 bytes @ 0x1
   802                           
   803                           
   804                           ; 1 bytes @ 0x1
   805  0021                     	ds	1
   806  0022                     ?___lwdiv:
   807  0022                     Lcd_Set_Cursor@temp:	
   808                           ; 2 bytes @ 0x2
   809                           
   810  0022                     ___awmod@sign:	
   811                           ; 1 bytes @ 0x2
   812                           
   813  0022                     ___lwdiv@divisor:	
   814                           ; 1 bytes @ 0x2
   815                           
   816  0022                     __Umul8_16@word_mpld:	
   817                           ; 2 bytes @ 0x2
   818                           
   819                           
   820                           ; 2 bytes @ 0x2
   821  0022                     	ds	1
   822  0023                     ?___awdiv:
   823  0023                     Lcd_Write_String@i:	
   824                           ; 2 bytes @ 0x3
   825                           
   826  0023                     ___awdiv@divisor:	
   827                           ; 2 bytes @ 0x3
   828                           
   829                           
   830                           ; 2 bytes @ 0x3
   831  0023                     	ds	1
   832  0024                     __Umul8_16@multiplier:
   833  0024                     ___lwdiv@dividend:	
   834                           ; 1 bytes @ 0x4
   835                           
   836  0024                     ___lldiv@dividend:	
   837                           ; 2 bytes @ 0x4
   838                           
   839  0024                     __div_to_l_@f2:	
   840                           ; 4 bytes @ 0x4
   841                           
   842  0024                     ___fleq@ff2:	
   843                           ; 4 bytes @ 0x4
   844                           
   845  0024                     ___flge@ff2:	
   846                           ; 4 bytes @ 0x4
   847                           
   848  0024                     __tdiv_to_l_@f2:	
   849                           ; 4 bytes @ 0x4
   850                           
   851  0024                     ___llmod@dividend:	
   852                           ; 4 bytes @ 0x4
   853                           
   854                           
   855                           ; 4 bytes @ 0x4
   856  0024                     	ds	1
   857  0025                     ___awdiv@dividend:
   858                           
   859                           ; 2 bytes @ 0x5
   860  0025                     	ds	1
   861  0026                     ??___lwdiv:
   862                           
   863                           ; 1 bytes @ 0x6
   864  0026                     	ds	1
   865  0027                     ??___awdiv:
   866  0027                     ___lwdiv@quotient:	
   867                           ; 1 bytes @ 0x7
   868                           
   869                           
   870                           ; 2 bytes @ 0x7
   871  0027                     	ds	1
   872  0028                     ___awdiv@counter:
   873  0028                     ___lldiv@quotient:	
   874                           ; 1 bytes @ 0x8
   875                           
   876  0028                     __div_to_l_@quot:	
   877                           ; 4 bytes @ 0x8
   878                           
   879  0028                     __tdiv_to_l_@quot:	
   880                           ; 4 bytes @ 0x8
   881                           
   882                           
   883                           ; 4 bytes @ 0x8
   884  0028                     	ds	1
   885  0029                     ___awdiv@sign:
   886  0029                     ___lwdiv@counter:	
   887                           ; 1 bytes @ 0x9
   888                           
   889                           
   890                           ; 1 bytes @ 0x9
   891  0029                     	ds	1
   892  002A                     ___awdiv@quotient:
   893                           
   894                           ; 2 bytes @ 0xA
   895  002A                     	ds	2
   896  002C                     ?___flmul:
   897  002C                     ?___xxtofl:	
   898                           ; 4 bytes @ 0xC
   899                           
   900  002C                     ___lldiv@counter:	
   901                           ; 4 bytes @ 0xC
   902                           
   903  002C                     __div_to_l_@cntr:	
   904                           ; 1 bytes @ 0xC
   905                           
   906  002C                     __tdiv_to_l_@cntr:	
   907                           ; 1 bytes @ 0xC
   908                           
   909  002C                     ___flmul@b:	
   910                           ; 1 bytes @ 0xC
   911                           
   912  002C                     ___xxtofl@val:	
   913                           ; 4 bytes @ 0xC
   914                           
   915                           
   916                           ; 4 bytes @ 0xC
   917  002C                     	ds	1
   918  002D                     __div_to_l_@exp1:
   919  002D                     __tdiv_to_l_@exp1:	
   920                           ; 1 bytes @ 0xD
   921                           
   922                           
   923                           ; 1 bytes @ 0xD
   924  002D                     	ds	3
   925  0030                     ??___xxtofl:
   926  0030                     ___flmul@a:	
   927                           ; 1 bytes @ 0x10
   928                           
   929                           
   930                           ; 4 bytes @ 0x10
   931  0030                     	ds	4
   932  0034                     ??___flmul:
   933  0034                     ___xxtofl@sign:	
   934                           ; 1 bytes @ 0x14
   935                           
   936                           
   937                           ; 1 bytes @ 0x14
   938  0034                     	ds	1
   939  0035                     ___xxtofl@exp:
   940                           
   941                           ; 1 bytes @ 0x15
   942  0035                     	ds	1
   943  0036                     ___xxtofl@arg:
   944                           
   945                           ; 4 bytes @ 0x16
   946  0036                     	ds	3
   947  0039                     ___flmul@sign:
   948                           
   949                           ; 1 bytes @ 0x19
   950  0039                     	ds	1
   951  003A                     ___flmul@grs:
   952                           
   953                           ; 4 bytes @ 0x1A
   954  003A                     	ds	4
   955  003E                     ___flmul@aexp:
   956                           
   957                           ; 1 bytes @ 0x1E
   958  003E                     	ds	1
   959  003F                     ___flmul@bexp:
   960                           
   961                           ; 1 bytes @ 0x1F
   962  003F                     	ds	1
   963  0040                     ___flmul@prod:
   964                           
   965                           ; 4 bytes @ 0x20
   966  0040                     	ds	4
   967  0044                     ___flmul@temp:
   968                           
   969                           ; 2 bytes @ 0x24
   970  0044                     	ds	2
   971  0046                     ?_fround:
   972  0046                     ?_scale:	
   973                           ; 4 bytes @ 0x26
   974                           
   975                           
   976                           ; 4 bytes @ 0x26
   977  0046                     	ds	4
   978  004A                     ??_fround:
   979  004A                     ??_scale:	
   980                           ; 1 bytes @ 0x2A
   981                           
   982                           
   983                           ; 1 bytes @ 0x2A
   984  004A                     	ds	7
   985  0051                     _fround$984:
   986                           
   987                           ; 4 bytes @ 0x31
   988  0051                     	ds	3
   989  0054                     _scale$985:
   990                           
   991                           ; 4 bytes @ 0x34
   992  0054                     	ds	1
   993  0055                     _fround$983:
   994                           
   995                           ; 4 bytes @ 0x35
   996  0055                     	ds	3
   997  0058                     scale@scl:
   998                           
   999                           ; 1 bytes @ 0x38
  1000  0058                     	ds	1
  1001  0059                     ?___fltol:
  1002  0059                     fround@prec:	
  1003                           ; 4 bytes @ 0x39
  1004                           
  1005  0059                     ___fltol@f1:	
  1006                           ; 1 bytes @ 0x39
  1007                           
  1008                           
  1009                           ; 4 bytes @ 0x39
  1010  0059                     	ds	1
  1011  005A                     ?___fladd:
  1012  005A                     ___fladd@b:	
  1013                           ; 4 bytes @ 0x3A
  1014                           
  1015                           
  1016                           ; 4 bytes @ 0x3A
  1017  005A                     	ds	3
  1018  005D                     ??___fltol:
  1019                           
  1020                           ; 1 bytes @ 0x3D
  1021  005D                     	ds	1
  1022  005E                     ___fladd@a:
  1023                           
  1024                           ; 4 bytes @ 0x3E
  1025  005E                     	ds	4
  1026  0062                     ??___fladd:
  1027  0062                     ___fltol@sign1:	
  1028                           ; 1 bytes @ 0x42
  1029                           
  1030                           
  1031                           ; 1 bytes @ 0x42
  1032  0062                     	ds	1
  1033  0063                     ___fltol@exp1:
  1034                           
  1035                           ; 1 bytes @ 0x43
  1036  0063                     	ds	7
  1037  006A                     ___fladd@signs:
  1038                           
  1039                           ; 1 bytes @ 0x4A
  1040  006A                     	ds	1
  1041  006B                     ___fladd@aexp:
  1042                           
  1043                           ; 1 bytes @ 0x4B
  1044  006B                     	ds	1
  1045  006C                     ___fladd@bexp:
  1046                           
  1047                           ; 1 bytes @ 0x4C
  1048  006C                     	ds	1
  1049  006D                     ___fladd@grs:
  1050                           
  1051                           ; 1 bytes @ 0x4D
  1052  006D                     	ds	1
  1053  006E                     ??_conversion:
  1054                           
  1055                           ; 1 bytes @ 0x4E
  1056  006E                     	ds	1
  1057  006F                     conversion@puertoANL:
  1058                           
  1059                           ; 1 bytes @ 0x4F
  1060  006F                     	ds	1
  1061                           
  1062                           	psect	maintext
  1063  1E67                     __pmaintext:	
  1064 ;;
  1065 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1066 ;;
  1067 ;; *************** function _main *****************
  1068 ;; Defined at:
  1069 ;;		line 46 in file "potenciometro.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : B00/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         0       0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0
  1085 ;;      Temps:          0       0       3       0       0
  1086 ;;      Totals:         0       0       3       0       0
  1087 ;;Total ram usage:        3 bytes
  1088 ;; Hardware stack levels required when called:    6
  1089 ;; This function calls:
  1090 ;;		_Lcd_Clear
  1091 ;;		_Lcd_Init
  1092 ;;		_Lcd_Set_Cursor
  1093 ;;		_Lcd_Write_String
  1094 ;;		_config
  1095 ;;		_conversion
  1096 ;; This function is called by:
  1097 ;;		Startup code after reset
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           
  1102                           ;psect for function _main
  1103  1E67                     _main:
  1104  1E67                     l3605:	
  1105                           ;incstack = 0
  1106                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1107                           
  1108                           
  1109                           ;potenciometro.c: 47:     config();
  1110  1E67  160A  158A  2412  160A  158A  	fcall	_config
  1111                           
  1112                           ;potenciometro.c: 48:     Lcd_Init();
  1113  1E6C  160A  158A  24C7  160A  158A  	fcall	_Lcd_Init
  1114                           
  1115                           ;potenciometro.c: 49:     Lcd_Set_Cursor(1,1);
  1116  1E71  01F7               	clrf	Lcd_Set_Cursor@b
  1117  1E72  0AF7               	incf	Lcd_Set_Cursor@b,f
  1118  1E73  3001               	movlw	1
  1119  1E74  160A  158A  244D  160A  158A  	fcall	_Lcd_Set_Cursor
  1120  1E79                     l3607:
  1121                           
  1122                           ;potenciometro.c: 50:     Lcd_Write_String("DIGITAL 2");
  1123  1E79  30A2               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1124  1E7A  00F6               	movwf	Lcd_Write_String@a
  1125  1E7B  3080               	movlw	128
  1126  1E7C  00F7               	movwf	Lcd_Write_String@a+1
  1127  1E7D  160A  158A  253B  160A  158A  	fcall	_Lcd_Write_String
  1128  1E82                     l3609:
  1129                           
  1130                           ;potenciometro.c: 51:     Lcd_Set_Cursor(2,1);
  1131  1E82  01F7               	clrf	Lcd_Set_Cursor@b
  1132  1E83  0AF7               	incf	Lcd_Set_Cursor@b,f
  1133  1E84  3002               	movlw	2
  1134  1E85  160A  158A  244D  160A  158A  	fcall	_Lcd_Set_Cursor
  1135                           
  1136                           ;potenciometro.c: 52:     Lcd_Write_String("FernandoFigueroa");
  1137  1E8A  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1138  1E8B  00F6               	movwf	Lcd_Write_String@a
  1139  1E8C  3080               	movlw	128
  1140  1E8D  00F7               	movwf	Lcd_Write_String@a+1
  1141  1E8E  160A  158A  253B  160A  158A  	fcall	_Lcd_Write_String
  1142  1E93                     l3611:
  1143                           
  1144                           ;potenciometro.c: 53:     _delay((unsigned long)((100)*(9000000/4000.0)));
  1145  1E93  3002               	movlw	2
  1146  1E94  1683               	bsf	3,5	;RP0=1, select bank1
  1147  1E95  1303               	bcf	3,6	;RP1=0, select bank1
  1148  1E96  00CD               	movwf	(??_main^(0+128)+2)
  1149  1E97  3025               	movlw	37
  1150  1E98  00CC               	movwf	(??_main^(0+128)+1)
  1151  1E99  3031               	movlw	49
  1152  1E9A  00CB               	movwf	??_main^(0+128)
  1153  1E9B                     u6267:
  1154  1E9B  0BCB               	decfsz	??_main^(0+128),f
  1155  1E9C  2E9B               	goto	u6267
  1156  1E9D  0BCC               	decfsz	(??_main^(0+128)+1),f
  1157  1E9E  2E9B               	goto	u6267
  1158  1E9F  0BCD               	decfsz	(??_main^(0+128)+2),f
  1159  1EA0  2E9B               	goto	u6267
  1160  1EA1                     l3613:
  1161                           
  1162                           ;potenciometro.c: 54:     Lcd_Clear();
  1163  1EA1  120A  158A  20C6  160A  158A  	fcall	_Lcd_Clear
  1164  1EA6                     l3615:
  1165                           
  1166                           ;potenciometro.c: 56:      Lcd_Set_Cursor(1,1);
  1167  1EA6  01F7               	clrf	Lcd_Set_Cursor@b
  1168  1EA7  0AF7               	incf	Lcd_Set_Cursor@b,f
  1169  1EA8  3001               	movlw	1
  1170  1EA9  160A  158A  244D  160A  158A  	fcall	_Lcd_Set_Cursor
  1171  1EAE                     l3617:
  1172                           
  1173                           ;potenciometro.c: 57:      Lcd_Write_String("Volt1");
  1174  1EAE  30AC               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1175  1EAF  00F6               	movwf	Lcd_Write_String@a
  1176  1EB0  3080               	movlw	128
  1177  1EB1  00F7               	movwf	Lcd_Write_String@a+1
  1178  1EB2  160A  158A  253B  160A  158A  	fcall	_Lcd_Write_String
  1179  1EB7                     l3619:
  1180                           
  1181                           ;potenciometro.c: 64:         conversion(0);
  1182  1EB7  3000               	movlw	0
  1183  1EB8  160A  118A  2009  160A  158A  	fcall	_conversion
  1184  1EBD  2EB7               	goto	l3619
  1185  1EBE  120A  118A  280C   	ljmp	start
  1186  1EC1                     __end_of_main:
  1187                           
  1188                           	psect	text1
  1189  1009                     __ptext1:	
  1190 ;; *************** function _conversion *****************
  1191 ;; Defined at:
  1192 ;;		line 70 in file "potenciometro.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;  puertoANL       1    wreg     unsigned char 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  puertoANL       1   79[BANK0 ] unsigned char 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1206 ;;      Params:         0       0       0       0       0
  1207 ;;      Locals:         0       1       0       0       0
  1208 ;;      Temps:          0       1       0       0       0
  1209 ;;      Totals:         0       2       0       0       0
  1210 ;;Total ram usage:        2 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    5
  1213 ;; This function calls:
  1214 ;;		_Lcd_Set_Cursor
  1215 ;;		_Lcd_Write_String
  1216 ;;		___awdiv
  1217 ;;		___wmul
  1218 ;;		___xxtofl
  1219 ;;		_sprintf
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           
  1226                           ;psect for function _conversion
  1227  1009                     _conversion:
  1228                           
  1229                           ;incstack = 0
  1230                           ; Regs used in _conversion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1231                           ;conversion@puertoANL stored from wreg
  1232  1009  1283               	bcf	3,5	;RP0=0, select bank0
  1233  100A  1303               	bcf	3,6	;RP1=0, select bank0
  1234  100B  00EF               	movwf	conversion@puertoANL
  1235  100C                     l3591:
  1236                           
  1237                           ;potenciometro.c: 72:     ADCON0bits.CHS = puertoANL;
  1238  100C  086F               	movf	conversion@puertoANL,w
  1239  100D  00EE               	movwf	??_conversion
  1240  100E  0DEE               	rlf	??_conversion,f
  1241  100F  0DEE               	rlf	??_conversion,f
  1242  1010  081F               	movf	31,w	;volatile
  1243  1011  066E               	xorwf	??_conversion,w
  1244  1012  39C3               	andlw	-61
  1245  1013  066E               	xorwf	??_conversion,w
  1246  1014  009F               	movwf	31	;volatile
  1247  1015                     l3593:
  1248                           
  1249                           ;potenciometro.c: 73:     if (ADCON0bits.GO_DONE==0 && puertoANL ==0){
  1250  1015  189F               	btfsc	31,1	;volatile
  1251  1016  2818               	goto	u6241
  1252  1017  2819               	goto	u6240
  1253  1018                     u6241:
  1254  1018  288F               	goto	l89
  1255  1019                     u6240:
  1256  1019                     l3595:
  1257  1019  086F               	movf	conversion@puertoANL,w
  1258  101A  1D03               	btfss	3,2
  1259  101B  281D               	goto	u6251
  1260  101C  281E               	goto	u6250
  1261  101D                     u6251:
  1262  101D  288F               	goto	l89
  1263  101E                     u6250:
  1264  101E                     l3597:
  1265                           
  1266                           ;potenciometro.c: 75:         vpot1 = (5*c)/255;
  1267  101E  3005               	movlw	5
  1268  101F  00F6               	movwf	___wmul@multiplicand
  1269  1020  3000               	movlw	0
  1270  1021  00F7               	movwf	___wmul@multiplicand+1
  1271  1022  1683               	bsf	3,5	;RP0=1, select bank1
  1272  1023  1303               	bcf	3,6	;RP1=0, select bank1
  1273  1024  0857               	movf	(_c+1)^(0+128),w
  1274  1025  00F5               	movwf	___wmul@multiplier+1
  1275  1026  0856               	movf	_c^(0+128),w
  1276  1027  00F4               	movwf	___wmul@multiplier
  1277  1028  160A  158A  249C  160A  118A  	fcall	___wmul
  1278  102D  0875               	movf	?___wmul+1,w
  1279  102E  1283               	bcf	3,5	;RP0=0, select bank0
  1280  102F  1303               	bcf	3,6	;RP1=0, select bank0
  1281  1030  00A6               	movwf	___awdiv@dividend+1
  1282  1031  0874               	movf	?___wmul,w
  1283  1032  00A5               	movwf	___awdiv@dividend
  1284  1033  30FF               	movlw	255
  1285  1034  00A3               	movwf	___awdiv@divisor
  1286  1035  3000               	movlw	0
  1287  1036  00A4               	movwf	___awdiv@divisor+1
  1288  1037  120A  158A  20D3  160A  118A  	fcall	___awdiv
  1289  103C  1283               	bcf	3,5	;RP0=0, select bank0
  1290  103D  1303               	bcf	3,6	;RP1=0, select bank0
  1291  103E  0823               	movf	?___awdiv,w
  1292  103F  00AC               	movwf	___xxtofl@val
  1293  1040  0824               	movf	?___awdiv+1,w
  1294  1041  00AD               	movwf	___xxtofl@val+1
  1295  1042  3000               	movlw	0
  1296  1043  1BAD               	btfsc	___xxtofl@val+1,7
  1297  1044  30FF               	movlw	255
  1298  1045  00AE               	movwf	___xxtofl@val+2
  1299  1046  00AF               	movwf	___xxtofl@val+3
  1300  1047  3001               	movlw	1
  1301  1048  160A  118A  2134  160A  118A  	fcall	___xxtofl
  1302  104D  1283               	bcf	3,5	;RP0=0, select bank0
  1303  104E  1303               	bcf	3,6	;RP1=0, select bank0
  1304  104F  082F               	movf	?___xxtofl+3,w
  1305  1050  1683               	bsf	3,5	;RP0=1, select bank1
  1306  1051  1303               	bcf	3,6	;RP1=0, select bank1
  1307  1052  00D5               	movwf	(_vpot1+3)^(0+128)
  1308  1053  1283               	bcf	3,5	;RP0=0, select bank0
  1309  1054  1303               	bcf	3,6	;RP1=0, select bank0
  1310  1055  082E               	movf	?___xxtofl+2,w
  1311  1056  1683               	bsf	3,5	;RP0=1, select bank1
  1312  1057  1303               	bcf	3,6	;RP1=0, select bank1
  1313  1058  00D4               	movwf	(_vpot1+2)^(0+128)
  1314  1059  1283               	bcf	3,5	;RP0=0, select bank0
  1315  105A  1303               	bcf	3,6	;RP1=0, select bank0
  1316  105B  082D               	movf	?___xxtofl+1,w
  1317  105C  1683               	bsf	3,5	;RP0=1, select bank1
  1318  105D  1303               	bcf	3,6	;RP1=0, select bank1
  1319  105E  00D3               	movwf	(_vpot1+1)^(0+128)
  1320  105F  1283               	bcf	3,5	;RP0=0, select bank0
  1321  1060  1303               	bcf	3,6	;RP1=0, select bank0
  1322  1061  082C               	movf	?___xxtofl,w
  1323  1062  1683               	bsf	3,5	;RP0=1, select bank1
  1324  1063  1303               	bcf	3,6	;RP1=0, select bank1
  1325  1064  00D2               	movwf	_vpot1^(0+128)
  1326  1065                     l3599:
  1327                           
  1328                           ;potenciometro.c: 76:         sprintf(buffer, "%.3f", vpot1);
  1329  1065  30B2               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1330  1066  1283               	bcf	3,5	;RP0=0, select bank0
  1331  1067  1303               	bcf	3,6	;RP1=0, select bank0
  1332  1068  00EE               	movwf	??_conversion
  1333  1069  086E               	movf	??_conversion,w
  1334  106A  1683               	bsf	3,5	;RP0=1, select bank1
  1335  106B  1303               	bcf	3,6	;RP1=0, select bank1
  1336  106C  00A8               	movwf	sprintf@f^(0+128)
  1337  106D  0855               	movf	(_vpot1+3)^(0+128),w
  1338  106E  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1339  106F  0854               	movf	(_vpot1+2)^(0+128),w
  1340  1070  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1341  1071  0853               	movf	(_vpot1+1)^(0+128),w
  1342  1072  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1343  1073  0852               	movf	_vpot1^(0+128),w
  1344  1074  00A9               	movwf	(?_sprintf^(0+128)+1)
  1345  1075  30D8               	movlw	(low (_buffer| 0))& (0+255)
  1346  1076  120A  118A  2022  160A  118A  	fcall	_sprintf
  1347  107B                     l3601:
  1348                           
  1349                           ;potenciometro.c: 77:         Lcd_Set_Cursor(2,1);
  1350  107B  01F7               	clrf	Lcd_Set_Cursor@b
  1351  107C  0AF7               	incf	Lcd_Set_Cursor@b,f
  1352  107D  3002               	movlw	2
  1353  107E  160A  158A  244D  160A  118A  	fcall	_Lcd_Set_Cursor
  1354                           
  1355                           ;potenciometro.c: 78:         Lcd_Write_String(buffer);
  1356  1083  30D8               	movlw	(low (_buffer| 0))& (0+255)
  1357  1084  00F6               	movwf	Lcd_Write_String@a
  1358  1085  3000               	movlw	0
  1359  1086  00F7               	movwf	Lcd_Write_String@a+1
  1360  1087  160A  158A  253B  160A  118A  	fcall	_Lcd_Write_String
  1361  108C                     l3603:
  1362                           
  1363                           ;potenciometro.c: 79:         ADCON0bits.GO_DONE=1;
  1364  108C  1283               	bcf	3,5	;RP0=0, select bank0
  1365  108D  1303               	bcf	3,6	;RP1=0, select bank0
  1366  108E  149F               	bsf	31,1	;volatile
  1367  108F                     l89:
  1368  108F  0008               	return
  1369  1090                     __end_of_conversion:
  1370                           
  1371                           	psect	text2
  1372  0022                     __ptext2:	
  1373 ;; *************** function _sprintf *****************
  1374 ;; Defined at:
  1375 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  sp              1    wreg     PTR unsigned char 
  1378 ;;		 -> buffer(1), 
  1379 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1380 ;;		 -> STR_4(5), 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  sp              1   31[BANK1 ] PTR unsigned char 
  1383 ;;		 -> buffer(1), 
  1384 ;;  fval            4   38[BANK1 ] PTR unsigned char 
  1385 ;;  tmpval          4   32[BANK1 ] struct .
  1386 ;;  val             4   25[BANK1 ] unsigned long 
  1387 ;;  prec            2   36[BANK1 ] int 
  1388 ;;  eexp            2   29[BANK1 ] int 
  1389 ;;  flag            2   23[BANK1 ] unsigned short 
  1390 ;;  cp              2    0        PTR const unsigned char 
  1391 ;;  len             2    0        unsigned int 
  1392 ;;  width           2    0        int 
  1393 ;;  c               1   42[BANK1 ] unsigned char 
  1394 ;;  ap              1   22[BANK1 ] PTR void [1]
  1395 ;;		 -> ?_sprintf(2), 
  1396 ;;  d               1    0        unsigned char 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  2    8[BANK1 ] int 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1406 ;;      Params:         0       0       5       0       0
  1407 ;;      Locals:         0       0      25       0       0
  1408 ;;      Temps:          0       0       5       0       0
  1409 ;;      Totals:         0       0      35       0       0
  1410 ;;Total ram usage:       35 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    4
  1413 ;; This function calls:
  1414 ;;		___awdiv
  1415 ;;		___fladd
  1416 ;;		___fleq
  1417 ;;		___flge
  1418 ;;		___flmul
  1419 ;;		___flneg
  1420 ;;		___flsub
  1421 ;;		___fltol
  1422 ;;		___lldiv
  1423 ;;		___llmod
  1424 ;;		___wmul
  1425 ;;		___xxtofl
  1426 ;;		__div_to_l_
  1427 ;;		__tdiv_to_l_
  1428 ;;		_fround
  1429 ;;		_isdigit
  1430 ;;		_scale
  1431 ;; This function is called by:
  1432 ;;		_conversion
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           
  1437                           ;psect for function _sprintf
  1438  0022                     _sprintf:
  1439                           
  1440                           ;incstack = 0
  1441                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1442                           ;sprintf@sp stored from wreg
  1443  0022  1683               	bsf	3,5	;RP0=1, select bank1
  1444  0023  1303               	bcf	3,6	;RP1=0, select bank1
  1445  0024  00BF               	movwf	sprintf@sp^(0+128)
  1446  0025                     l3369:
  1447                           
  1448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1449  0025  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1450  0026  00AD               	movwf	??_sprintf^(0+128)
  1451  0027  082D               	movf	??_sprintf^(0+128),w
  1452  0028  00B6               	movwf	sprintf@ap^(0+128)
  1453                           
  1454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1455  0029  2F91               	goto	l3563
  1456  002A                     l3371:
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1459  002A  3025               	movlw	37
  1460  002B  064A               	xorwf	sprintf@c^(0+128),w
  1461  002C  1903               	btfsc	3,2
  1462  002D  282F               	goto	u5891
  1463  002E  2830               	goto	u5890
  1464  002F                     u5891:
  1465  002F  283C               	goto	l3377
  1466  0030                     u5890:
  1467  0030                     l3373:
  1468                           
  1469                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1470  0030  084A               	movf	sprintf@c^(0+128),w
  1471  0031  00AD               	movwf	??_sprintf^(0+128)
  1472  0032  083F               	movf	sprintf@sp^(0+128),w
  1473  0033  0084               	movwf	4
  1474  0034  082D               	movf	??_sprintf^(0+128),w
  1475  0035  1383               	bcf	3,7	;select IRP bank0
  1476  0036  0080               	movwf	0
  1477  0037                     l3375:
  1478  0037  3001               	movlw	1
  1479  0038  00AD               	movwf	??_sprintf^(0+128)
  1480  0039  082D               	movf	??_sprintf^(0+128),w
  1481  003A  07BF               	addwf	sprintf@sp^(0+128),f
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1484  003B  2F91               	goto	l3563
  1485  003C                     l3377:
  1486                           
  1487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1488  003C  01B7               	clrf	sprintf@flag^(0+128)
  1489  003D  01B8               	clrf	(sprintf@flag+1)^(0+128)
  1490  003E                     l3379:
  1491                           
  1492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1493  003E  0828               	movf	sprintf@f^(0+128),w
  1494  003F  0084               	movwf	4
  1495  0040  120A  158A  200A  120A  118A  	fcall	stringdir
  1496  0045  3A2E               	xorlw	46
  1497  0046  1D03               	skipz
  1498  0047  2849               	goto	u5901
  1499  0048  284A               	goto	u5900
  1500  0049                     u5901:
  1501  0049  288F               	goto	l3395
  1502  004A                     u5900:
  1503  004A                     l3381:
  1504                           
  1505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1506  004A  1738               	bsf	(sprintf@flag^(0+128)+1),6
  1507  004B                     l3383:
  1508                           
  1509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1510  004B  3001               	movlw	1
  1511  004C  00AD               	movwf	??_sprintf^(0+128)
  1512  004D  082D               	movf	??_sprintf^(0+128),w
  1513  004E  07A8               	addwf	sprintf@f^(0+128),f
  1514  004F                     l3385:
  1515                           
  1516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1517  004F  01C4               	clrf	sprintf@prec^(0+128)
  1518  0050  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1521  0051  287E               	goto	l3393
  1522  0052                     l3387:
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1525  0052  300A               	movlw	10
  1526  0053  00F4               	movwf	___wmul@multiplier
  1527  0054  3000               	movlw	0
  1528  0055  00F5               	movwf	___wmul@multiplier+1
  1529  0056  1683               	bsf	3,5	;RP0=1, select bank1
  1530  0057  1303               	bcf	3,6	;RP1=0, select bank1
  1531  0058  0845               	movf	(sprintf@prec+1)^(0+128),w
  1532  0059  00F7               	movwf	___wmul@multiplicand+1
  1533  005A  0844               	movf	sprintf@prec^(0+128),w
  1534  005B  00F6               	movwf	___wmul@multiplicand
  1535  005C  160A  158A  249C  120A  118A  	fcall	___wmul
  1536  0061  0875               	movf	?___wmul+1,w
  1537  0062  1683               	bsf	3,5	;RP0=1, select bank1
  1538  0063  1303               	bcf	3,6	;RP1=0, select bank1
  1539  0064  00C5               	movwf	(sprintf@prec+1)^(0+128)
  1540  0065  0874               	movf	?___wmul,w
  1541  0066  00C4               	movwf	sprintf@prec^(0+128)
  1542  0067                     l3389:
  1543                           
  1544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1545  0067  0828               	movf	sprintf@f^(0+128),w
  1546  0068  0084               	movwf	4
  1547  0069  120A  158A  200A  120A  118A  	fcall	stringdir
  1548  006E  3ED0               	addlw	208
  1549  006F  00AD               	movwf	??_sprintf^(0+128)
  1550  0070  30FF               	movlw	255
  1551  0071  1803               	skipnc
  1552  0072  3000               	movlw	0
  1553  0073  00AE               	movwf	(??_sprintf^(0+128)+1)
  1554  0074  082D               	movf	??_sprintf^(0+128),w
  1555  0075  07C4               	addwf	sprintf@prec^(0+128),f
  1556  0076  1803               	skipnc
  1557  0077  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  1558  0078  082E               	movf	(??_sprintf+1)^(0+128),w
  1559  0079  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  1560  007A                     l3391:
  1561  007A  3001               	movlw	1
  1562  007B  00AD               	movwf	??_sprintf^(0+128)
  1563  007C  082D               	movf	??_sprintf^(0+128),w
  1564  007D  07A8               	addwf	sprintf@f^(0+128),f
  1565  007E                     l3393:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1568  007E  0828               	movf	sprintf@f^(0+128),w
  1569  007F  0084               	movwf	4
  1570  0080  120A  158A  200A  120A  118A  	fcall	stringdir
  1571  0085  160A  158A  23ED  120A  118A  	fcall	_isdigit
  1572  008A  1803               	btfsc	3,0
  1573  008B  288D               	goto	u5911
  1574  008C  288E               	goto	u5910
  1575  008D                     u5911:
  1576  008D  2852               	goto	l3387
  1577  008E                     u5910:
  1578  008E  2895               	goto	l3401
  1579  008F                     l3395:
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1582  008F  01C4               	clrf	sprintf@prec^(0+128)
  1583  0090  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1584  0091                     l3397:
  1585                           
  1586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1587  0091  1638               	bsf	(sprintf@flag^(0+128)+1),4
  1588  0092  2895               	goto	l3401
  1589  0093                     l217:	
  1590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1591                           
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1594  0093  1538               	bsf	(sprintf@flag^(0+128)+1),2
  1595                           
  1596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1597  0094  28B1               	goto	l3403
  1598  0095                     l3401:
  1599  0095  3001               	movlw	1
  1600  0096  1683               	bsf	3,5	;RP0=1, select bank1
  1601  0097  1303               	bcf	3,6	;RP1=0, select bank1
  1602  0098  07A8               	addwf	sprintf@f^(0+128),f
  1603  0099  30FF               	movlw	-1
  1604  009A  0728               	addwf	sprintf@f^(0+128),w
  1605  009B  0084               	movwf	4
  1606  009C  120A  158A  200A  120A  118A  	fcall	stringdir
  1607  00A1  00CA               	movwf	sprintf@c^(0+128)
  1608  00A2  00AD               	movwf	??_sprintf^(0+128)
  1609  00A3  01AE               	clrf	(??_sprintf^(0+128)+1)
  1610                           
  1611                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1612                           ; Switch size 1, requested type "simple"
  1613                           ; Number of cases is 1, Range of values is 0 to 0
  1614                           ; switch strategies available:
  1615                           ; Name         Instructions Cycles
  1616                           ; simple_byte            4     3 (average)
  1617                           ; direct_byte           11     8 (fixed)
  1618                           ; jumptable            260     6 (fixed)
  1619                           ;	Chosen strategy is simple_byte
  1620  00A4  082E               	movf	(??_sprintf+1)^(0+128),w
  1621  00A5  3A00               	xorlw	0	; case 0
  1622  00A6  1903               	skipnz
  1623  00A7  28A9               	goto	l3651
  1624  00A8  2F91               	goto	l3563
  1625  00A9                     l3651:
  1626                           
  1627                           ; Switch size 1, requested type "simple"
  1628                           ; Number of cases is 2, Range of values is 0 to 102
  1629                           ; switch strategies available:
  1630                           ; Name         Instructions Cycles
  1631                           ; simple_byte            7     4 (average)
  1632                           ; jumptable            260     6 (fixed)
  1633                           ;	Chosen strategy is simple_byte
  1634  00A9  082D               	movf	??_sprintf^(0+128),w
  1635  00AA  3A00               	xorlw	0	; case 0
  1636  00AB  1903               	skipnz
  1637  00AC  2FA3               	goto	l3565
  1638  00AD  3A66               	xorlw	102	; case 102
  1639  00AE  1903               	skipnz
  1640  00AF  2893               	goto	l217
  1641  00B0  2F91               	goto	l3563
  1642  00B1                     l3403:
  1643                           
  1644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1645  00B1  3000               	movlw	0
  1646  00B2  0537               	andwf	sprintf@flag^(0+128),w
  1647  00B3  00AD               	movwf	??_sprintf^(0+128)
  1648  00B4  3007               	movlw	7
  1649  00B5  0538               	andwf	(sprintf@flag+1)^(0+128),w
  1650  00B6  00AE               	movwf	(??_sprintf+1)^(0+128)
  1651  00B7  082D               	movf	??_sprintf^(0+128),w
  1652  00B8  042E               	iorwf	(??_sprintf^(0+128)+1),w
  1653  00B9  1903               	btfsc	3,2
  1654  00BA  28BC               	goto	u5921
  1655  00BB  28BD               	goto	u5920
  1656  00BC                     u5921:
  1657  00BC  2F4C               	goto	l3545
  1658  00BD                     u5920:
  1659  00BD                     l3405:
  1660                           
  1661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1662  00BD  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  1663  00BE  28C0               	goto	u5931
  1664  00BF  28C1               	goto	u5930
  1665  00C0                     u5931:
  1666  00C0  28C5               	goto	l3409
  1667  00C1                     u5930:
  1668  00C1                     l3407:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1671  00C1  3006               	movlw	6
  1672  00C2  00C4               	movwf	sprintf@prec^(0+128)
  1673  00C3  3000               	movlw	0
  1674  00C4  00C5               	movwf	(sprintf@prec^(0+128)+1)
  1675  00C5                     l3409:
  1676                           
  1677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1678  00C5  0836               	movf	sprintf@ap^(0+128),w
  1679  00C6  0084               	movwf	4
  1680  00C7  1383               	bcf	3,7	;select IRP bank0
  1681  00C8  0800               	movf	0,w
  1682  00C9  00C6               	movwf	sprintf@fval^(0+128)
  1683  00CA  0A84               	incf	4,f
  1684  00CB  0800               	movf	0,w
  1685  00CC  00C7               	movwf	(sprintf@fval+1)^(0+128)
  1686  00CD  0A84               	incf	4,f
  1687  00CE  0800               	movf	0,w
  1688  00CF  00C8               	movwf	(sprintf@fval+2)^(0+128)
  1689  00D0  0A84               	incf	4,f
  1690  00D1  0800               	movf	0,w
  1691  00D2  00C9               	movwf	(sprintf@fval+3)^(0+128)
  1692  00D3                     l3411:
  1693  00D3  3004               	movlw	4
  1694  00D4  00AD               	movwf	??_sprintf^(0+128)
  1695  00D5  082D               	movf	??_sprintf^(0+128),w
  1696  00D6  07B6               	addwf	sprintf@ap^(0+128),f
  1697  00D7                     l3413:
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1700  00D7  0849               	movf	(sprintf@fval+3)^(0+128),w
  1701  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1702  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1703  00DA  00A3               	movwf	___flge@ff1+3
  1704  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  1705  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  1706  00DD  0848               	movf	(sprintf@fval+2)^(0+128),w
  1707  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1708  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1709  00E0  00A2               	movwf	___flge@ff1+2
  1710  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1711  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1712  00E3  0847               	movf	(sprintf@fval+1)^(0+128),w
  1713  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1714  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1715  00E6  00A1               	movwf	___flge@ff1+1
  1716  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1717  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1718  00E9  0846               	movf	sprintf@fval^(0+128),w
  1719  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1720  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1721  00EC  00A0               	movwf	___flge@ff1
  1722  00ED  3000               	movlw	0
  1723  00EE  00A7               	movwf	___flge@ff2+3
  1724  00EF  3000               	movlw	0
  1725  00F0  00A6               	movwf	___flge@ff2+2
  1726  00F1  3000               	movlw	0
  1727  00F2  00A5               	movwf	___flge@ff2+1
  1728  00F3  3000               	movlw	0
  1729  00F4  00A4               	movwf	___flge@ff2
  1730  00F5  160A  118A  2090  120A  118A  	fcall	___flge
  1731  00FA  1803               	btfsc	3,0
  1732  00FB  28FD               	goto	u5941
  1733  00FC  28FE               	goto	u5940
  1734  00FD                     u5941:
  1735  00FD  291B               	goto	l3419
  1736  00FE                     u5940:
  1737  00FE                     l3415:
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1740  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  1741  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  1742  0100  0849               	movf	(sprintf@fval+3)^(0+128),w
  1743  0101  00F7               	movwf	___flneg@f1+3
  1744  0102  0848               	movf	(sprintf@fval+2)^(0+128),w
  1745  0103  00F6               	movwf	___flneg@f1+2
  1746  0104  0847               	movf	(sprintf@fval+1)^(0+128),w
  1747  0105  00F5               	movwf	___flneg@f1+1
  1748  0106  0846               	movf	sprintf@fval^(0+128),w
  1749  0107  00F4               	movwf	___flneg@f1
  1750  0108  160A  158A  23D2  120A  118A  	fcall	___flneg
  1751  010D  0877               	movf	?___flneg+3,w
  1752  010E  1683               	bsf	3,5	;RP0=1, select bank1
  1753  010F  1303               	bcf	3,6	;RP1=0, select bank1
  1754  0110  00C9               	movwf	(sprintf@fval+3)^(0+128)
  1755  0111  0876               	movf	?___flneg+2,w
  1756  0112  00C8               	movwf	(sprintf@fval+2)^(0+128)
  1757  0113  0875               	movf	?___flneg+1,w
  1758  0114  00C7               	movwf	(sprintf@fval+1)^(0+128)
  1759  0115  0874               	movf	?___flneg,w
  1760  0116  00C6               	movwf	sprintf@fval^(0+128)
  1761  0117                     l3417:
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1764  0117  3003               	movlw	3
  1765  0118  04B7               	iorwf	sprintf@flag^(0+128),f
  1766  0119  3000               	movlw	0
  1767  011A  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  1768  011B                     l3419:
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1771  011B  1683               	bsf	3,5	;RP0=1, select bank1
  1772  011C  1303               	bcf	3,6	;RP1=0, select bank1
  1773  011D  01BD               	clrf	sprintf@eexp^(0+128)
  1774  011E  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  1775  011F                     l3421:
  1776                           
  1777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1778  011F  0849               	movf	(sprintf@fval+3)^(0+128),w
  1779  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1780  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0122  00A3               	movwf	___fleq@ff1+3
  1782  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1783  0124  1303               	bcf	3,6	;RP1=0, select bank1
  1784  0125  0848               	movf	(sprintf@fval+2)^(0+128),w
  1785  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1786  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1787  0128  00A2               	movwf	___fleq@ff1+2
  1788  0129  1683               	bsf	3,5	;RP0=1, select bank1
  1789  012A  1303               	bcf	3,6	;RP1=0, select bank1
  1790  012B  0847               	movf	(sprintf@fval+1)^(0+128),w
  1791  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1792  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1793  012E  00A1               	movwf	___fleq@ff1+1
  1794  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1795  0130  1303               	bcf	3,6	;RP1=0, select bank1
  1796  0131  0846               	movf	sprintf@fval^(0+128),w
  1797  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1798  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1799  0134  00A0               	movwf	___fleq@ff1
  1800  0135  3000               	movlw	0
  1801  0136  00A7               	movwf	___fleq@ff2+3
  1802  0137  3000               	movlw	0
  1803  0138  00A6               	movwf	___fleq@ff2+2
  1804  0139  3000               	movlw	0
  1805  013A  00A5               	movwf	___fleq@ff2+1
  1806  013B  3000               	movlw	0
  1807  013C  00A4               	movwf	___fleq@ff2
  1808  013D  160A  158A  25C7  120A  118A  	fcall	___fleq
  1809  0142  1803               	btfsc	3,0
  1810  0143  2945               	goto	u5951
  1811  0144  2946               	goto	u5950
  1812  0145                     u5951:
  1813  0145  2A62               	goto	l3447
  1814  0146                     u5950:
  1815  0146                     l3423:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1818  0146  1003               	clrc
  1819  0147  1683               	bsf	3,5	;RP0=1, select bank1
  1820  0148  1303               	bcf	3,6	;RP1=0, select bank1
  1821  0149  0D48               	rlf	(sprintf@fval+2)^(0+128),w
  1822  014A  0D49               	rlf	(sprintf@fval+3)^(0+128),w
  1823  014B  3E82               	addlw	130
  1824  014C  00BD               	movwf	sprintf@eexp^(0+128)
  1825  014D  30FF               	movlw	255
  1826  014E  1803               	skipnc
  1827  014F  3000               	movlw	0
  1828  0150  00BE               	movwf	(sprintf@eexp^(0+128)+1)
  1829  0151                     l3425:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1832  0151  30FF               	movlw	255
  1833  0152  07BD               	addwf	sprintf@eexp^(0+128),f
  1834  0153  1803               	skipnc
  1835  0154  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  1836  0155  30FF               	movlw	255
  1837  0156  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  1838  0157                     l3427:
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1841  0157  3003               	movlw	3
  1842  0158  00F4               	movwf	___wmul@multiplier
  1843  0159  3000               	movlw	0
  1844  015A  00F5               	movwf	___wmul@multiplier+1
  1845  015B  083E               	movf	(sprintf@eexp+1)^(0+128),w
  1846  015C  00F7               	movwf	___wmul@multiplicand+1
  1847  015D  083D               	movf	sprintf@eexp^(0+128),w
  1848  015E  00F6               	movwf	___wmul@multiplicand
  1849  015F  160A  158A  249C  120A  118A  	fcall	___wmul
  1850  0164  0875               	movf	?___wmul+1,w
  1851  0165  1683               	bsf	3,5	;RP0=1, select bank1
  1852  0166  1303               	bcf	3,6	;RP1=0, select bank1
  1853  0167  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  1854  0168  0874               	movf	?___wmul,w
  1855  0169  00BD               	movwf	sprintf@eexp^(0+128)
  1856  016A                     l3429:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1859  016A  300A               	movlw	10
  1860  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1861  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1862  016D  00A3               	movwf	___awdiv@divisor
  1863  016E  3000               	movlw	0
  1864  016F  00A4               	movwf	___awdiv@divisor+1
  1865  0170  1683               	bsf	3,5	;RP0=1, select bank1
  1866  0171  1303               	bcf	3,6	;RP1=0, select bank1
  1867  0172  083E               	movf	(sprintf@eexp+1)^(0+128),w
  1868  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1869  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1870  0175  00A6               	movwf	___awdiv@dividend+1
  1871  0176  1683               	bsf	3,5	;RP0=1, select bank1
  1872  0177  1303               	bcf	3,6	;RP1=0, select bank1
  1873  0178  083D               	movf	sprintf@eexp^(0+128),w
  1874  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1875  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1876  017B  00A5               	movwf	___awdiv@dividend
  1877  017C  120A  158A  20D3  120A  118A  	fcall	___awdiv
  1878  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1880  0183  0824               	movf	?___awdiv+1,w
  1881  0184  1683               	bsf	3,5	;RP0=1, select bank1
  1882  0185  1303               	bcf	3,6	;RP1=0, select bank1
  1883  0186  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  1884  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0189  0823               	movf	?___awdiv,w
  1887  018A  1683               	bsf	3,5	;RP0=1, select bank1
  1888  018B  1303               	bcf	3,6	;RP1=0, select bank1
  1889  018C  00BD               	movwf	sprintf@eexp^(0+128)
  1890  018D                     l3431:
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1893  018D  1FBE               	btfss	(sprintf@eexp+1)^(0+128),7
  1894  018E  2990               	goto	u5961
  1895  018F  2991               	goto	u5960
  1896  0190                     u5961:
  1897  0190  2997               	goto	l3435
  1898  0191                     u5960:
  1899  0191                     l3433:
  1900                           
  1901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1902  0191  30FF               	movlw	255
  1903  0192  07BD               	addwf	sprintf@eexp^(0+128),f
  1904  0193  1803               	skipnc
  1905  0194  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  1906  0195  30FF               	movlw	255
  1907  0196  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  1908  0197                     l3435:
  1909                           
  1910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1911  0197  033D               	decf	sprintf@eexp^(0+128),w
  1912  0198  3AFF               	xorlw	255
  1913  0199  120A  158A  249D  120A  118A  	fcall	_scale
  1914  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1915  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1916  01A0  0849               	movf	?_scale+3,w
  1917  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  1918  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  1919  01A3  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  1920  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1921  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1922  01A6  0848               	movf	?_scale+2,w
  1923  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  1924  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  1925  01A9  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  1926  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1927  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1928  01AC  0847               	movf	?_scale+1,w
  1929  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  1930  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  1931  01AF  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  1932  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1933  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1934  01B2  0846               	movf	?_scale,w
  1935  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  1936  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  1937  01B5  00C0               	movwf	sprintf@tmpval^(0+128)
  1938  01B6                     l3437:
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  1941  01B6  0849               	movf	(sprintf@fval+3)^(0+128),w
  1942  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1943  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1944  01B9  00AF               	movwf	___flmul@b+3
  1945  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  1946  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  1947  01BC  0848               	movf	(sprintf@fval+2)^(0+128),w
  1948  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1949  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1950  01BF  00AE               	movwf	___flmul@b+2
  1951  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  1952  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  1953  01C2  0847               	movf	(sprintf@fval+1)^(0+128),w
  1954  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1955  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1956  01C5  00AD               	movwf	___flmul@b+1
  1957  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  1958  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  1959  01C8  0846               	movf	sprintf@fval^(0+128),w
  1960  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1961  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1962  01CB  00AC               	movwf	___flmul@b
  1963  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  1964  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  1965  01CE  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  1966  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1967  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1968  01D1  00B3               	movwf	___flmul@a+3
  1969  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  1970  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  1971  01D4  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  1972  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1973  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1974  01D7  00B2               	movwf	___flmul@a+2
  1975  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  1976  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  1977  01DA  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  1978  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1979  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1980  01DD  00B1               	movwf	___flmul@a+1
  1981  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  1982  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  1983  01E0  0840               	movf	sprintf@tmpval^(0+128),w
  1984  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1985  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1986  01E3  00B0               	movwf	___flmul@a
  1987  01E4  120A  158A  213C  120A  118A  	fcall	___flmul
  1988  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1989  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1990  01EB  082F               	movf	?___flmul+3,w
  1991  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  1992  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  1993  01EE  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  1994  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1995  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1996  01F1  082E               	movf	?___flmul+2,w
  1997  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  1998  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  1999  01F4  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2000  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2001  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2002  01F7  082D               	movf	?___flmul+1,w
  2003  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  2004  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  2005  01FA  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2006  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2007  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2008  01FD  082C               	movf	?___flmul,w
  2009  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  2010  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  2011  0200  00C0               	movwf	sprintf@tmpval^(0+128)
  2012  0201                     l3439:
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2015  0201  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2016  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0204  00A3               	movwf	___flge@ff1+3
  2019  0205  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0206  1303               	bcf	3,6	;RP1=0, select bank1
  2021  0207  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2022  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2024  020A  00A2               	movwf	___flge@ff1+2
  2025  020B  1683               	bsf	3,5	;RP0=1, select bank1
  2026  020C  1303               	bcf	3,6	;RP1=0, select bank1
  2027  020D  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2028  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2029  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0210  00A1               	movwf	___flge@ff1+1
  2031  0211  1683               	bsf	3,5	;RP0=1, select bank1
  2032  0212  1303               	bcf	3,6	;RP1=0, select bank1
  2033  0213  0840               	movf	sprintf@tmpval^(0+128),w
  2034  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2035  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2036  0216  00A0               	movwf	___flge@ff1
  2037  0217  303F               	movlw	63
  2038  0218  00A7               	movwf	___flge@ff2+3
  2039  0219  3080               	movlw	128
  2040  021A  00A6               	movwf	___flge@ff2+2
  2041  021B  3000               	movlw	0
  2042  021C  00A5               	movwf	___flge@ff2+1
  2043  021D  3000               	movlw	0
  2044  021E  00A4               	movwf	___flge@ff2
  2045  021F  160A  118A  2090  120A  118A  	fcall	___flge
  2046  0224  1803               	btfsc	3,0
  2047  0225  2A27               	goto	u5971
  2048  0226  2A28               	goto	u5970
  2049  0227                     u5971:
  2050  0227  2A31               	goto	l3443
  2051  0228                     u5970:
  2052  0228                     l3441:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2055  0228  30FF               	movlw	255
  2056  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2057  022A  1303               	bcf	3,6	;RP1=0, select bank1
  2058  022B  07BD               	addwf	sprintf@eexp^(0+128),f
  2059  022C  1803               	skipnc
  2060  022D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2061  022E  30FF               	movlw	255
  2062  022F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2063  0230  2A62               	goto	l3447
  2064  0231                     l3443:
  2065  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2066  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2067  0233  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2068  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2070  0236  00A3               	movwf	___flge@ff1+3
  2071  0237  1683               	bsf	3,5	;RP0=1, select bank1
  2072  0238  1303               	bcf	3,6	;RP1=0, select bank1
  2073  0239  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2074  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2075  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2076  023C  00A2               	movwf	___flge@ff1+2
  2077  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2078  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2079  023F  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2080  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2081  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2082  0242  00A1               	movwf	___flge@ff1+1
  2083  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2084  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2085  0245  0840               	movf	sprintf@tmpval^(0+128),w
  2086  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0248  00A0               	movwf	___flge@ff1
  2089  0249  3041               	movlw	65
  2090  024A  00A7               	movwf	___flge@ff2+3
  2091  024B  3020               	movlw	32
  2092  024C  00A6               	movwf	___flge@ff2+2
  2093  024D  3000               	movlw	0
  2094  024E  00A5               	movwf	___flge@ff2+1
  2095  024F  3000               	movlw	0
  2096  0250  00A4               	movwf	___flge@ff2
  2097  0251  160A  118A  2090  120A  118A  	fcall	___flge
  2098  0256  1C03               	btfss	3,0
  2099  0257  2A59               	goto	u5981
  2100  0258  2A5A               	goto	u5980
  2101  0259                     u5981:
  2102  0259  2A62               	goto	l3447
  2103  025A                     u5980:
  2104  025A                     l3445:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2107  025A  3001               	movlw	1
  2108  025B  1683               	bsf	3,5	;RP0=1, select bank1
  2109  025C  1303               	bcf	3,6	;RP1=0, select bank1
  2110  025D  07BD               	addwf	sprintf@eexp^(0+128),f
  2111  025E  1803               	skipnc
  2112  025F  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2113  0260  3000               	movlw	0
  2114  0261  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2115  0262                     l3447:
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2118  0262  1683               	bsf	3,5	;RP0=1, select bank1
  2119  0263  1303               	bcf	3,6	;RP1=0, select bank1
  2120  0264  0845               	movf	(sprintf@prec+1)^(0+128),w
  2121  0265  3A80               	xorlw	128
  2122  0266  00FF               	movwf	btemp+1
  2123  0267  3080               	movlw	128
  2124  0268  027F               	subwf	btemp+1,w
  2125  0269  1D03               	skipz
  2126  026A  2A6D               	goto	u5995
  2127  026B  300D               	movlw	13
  2128  026C  0244               	subwf	sprintf@prec^(0+128),w
  2129  026D                     u5995:
  2130  026D  1803               	skipnc
  2131  026E  2A70               	goto	u5991
  2132  026F  2A71               	goto	u5990
  2133  0270                     u5991:
  2134  0270  2AB8               	goto	l3451
  2135  0271                     u5990:
  2136  0271                     l3449:
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2139  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2140  0272  1303               	bcf	3,6	;RP1=0, select bank1
  2141  0273  0844               	movf	sprintf@prec^(0+128),w
  2142  0274  160A  118A  236B  120A  118A  	fcall	_fround
  2143  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2144  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2145  027B  0849               	movf	?_fround+3,w
  2146  027C  00DD               	movwf	___fladd@b+3
  2147  027D  0848               	movf	?_fround+2,w
  2148  027E  00DC               	movwf	___fladd@b+2
  2149  027F  0847               	movf	?_fround+1,w
  2150  0280  00DB               	movwf	___fladd@b+1
  2151  0281  0846               	movf	?_fround,w
  2152  0282  00DA               	movwf	___fladd@b
  2153  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2154  0284  1303               	bcf	3,6	;RP1=0, select bank1
  2155  0285  0849               	movf	(sprintf@fval+3)^(0+128),w
  2156  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2158  0288  00E1               	movwf	___fladd@a+3
  2159  0289  1683               	bsf	3,5	;RP0=1, select bank1
  2160  028A  1303               	bcf	3,6	;RP1=0, select bank1
  2161  028B  0848               	movf	(sprintf@fval+2)^(0+128),w
  2162  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2163  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2164  028E  00E0               	movwf	___fladd@a+2
  2165  028F  1683               	bsf	3,5	;RP0=1, select bank1
  2166  0290  1303               	bcf	3,6	;RP1=0, select bank1
  2167  0291  0847               	movf	(sprintf@fval+1)^(0+128),w
  2168  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0294  00DF               	movwf	___fladd@a+1
  2171  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2172  0296  1303               	bcf	3,6	;RP1=0, select bank1
  2173  0297  0846               	movf	sprintf@fval^(0+128),w
  2174  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2176  029A  00DE               	movwf	___fladd@a
  2177  029B  160A  118A  2578  120A  118A  	fcall	___fladd
  2178  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2179  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2180  02A2  085D               	movf	?___fladd+3,w
  2181  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2182  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2183  02A5  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2184  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2185  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2186  02A8  085C               	movf	?___fladd+2,w
  2187  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2188  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2189  02AB  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2190  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2191  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2192  02AE  085B               	movf	?___fladd+1,w
  2193  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2194  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  2195  02B1  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2196  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2197  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  2198  02B4  085A               	movf	?___fladd,w
  2199  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  2200  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  2201  02B7  00C6               	movwf	sprintf@fval^(0+128)
  2202  02B8                     l3451:
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2205  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2206  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2207  02BA  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2208  02BB  3A80               	xorlw	128
  2209  02BC  00FF               	movwf	btemp+1
  2210  02BD  3080               	movlw	128
  2211  02BE  027F               	subwf	btemp+1,w
  2212  02BF  1D03               	skipz
  2213  02C0  2AC3               	goto	u6005
  2214  02C1  300A               	movlw	10
  2215  02C2  023D               	subwf	sprintf@eexp^(0+128),w
  2216  02C3                     u6005:
  2217  02C3  1803               	skipnc
  2218  02C4  2AC6               	goto	u6001
  2219  02C5  2AC7               	goto	u6000
  2220  02C6                     u6001:
  2221  02C6  2B26               	goto	l3459
  2222  02C7                     u6000:
  2223  02C7                     l3453:
  2224  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2225  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2226  02C9  0849               	movf	(sprintf@fval+3)^(0+128),w
  2227  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2228  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2229  02CC  00A3               	movwf	___fleq@ff1+3
  2230  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  2231  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  2232  02CF  0848               	movf	(sprintf@fval+2)^(0+128),w
  2233  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2234  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2235  02D2  00A2               	movwf	___fleq@ff1+2
  2236  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2237  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2238  02D5  0847               	movf	(sprintf@fval+1)^(0+128),w
  2239  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2240  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2241  02D8  00A1               	movwf	___fleq@ff1+1
  2242  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2243  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2244  02DB  0846               	movf	sprintf@fval^(0+128),w
  2245  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2246  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2247  02DE  00A0               	movwf	___fleq@ff1
  2248  02DF  3000               	movlw	0
  2249  02E0  00A7               	movwf	___fleq@ff2+3
  2250  02E1  3000               	movlw	0
  2251  02E2  00A6               	movwf	___fleq@ff2+2
  2252  02E3  3000               	movlw	0
  2253  02E4  00A5               	movwf	___fleq@ff2+1
  2254  02E5  3000               	movlw	0
  2255  02E6  00A4               	movwf	___fleq@ff2
  2256  02E7  160A  158A  25C7  120A  118A  	fcall	___fleq
  2257  02EC  1803               	btfsc	3,0
  2258  02ED  2AEF               	goto	u6011
  2259  02EE  2AF0               	goto	u6010
  2260  02EF                     u6011:
  2261  02EF  2BD2               	goto	l3473
  2262  02F0                     u6010:
  2263  02F0                     l3455:
  2264  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2265  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2266  02F2  0849               	movf	(sprintf@fval+3)^(0+128),w
  2267  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2268  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2269  02F5  00DC               	movwf	___fltol@f1+3
  2270  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  2271  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  2272  02F8  0848               	movf	(sprintf@fval+2)^(0+128),w
  2273  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2274  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2275  02FB  00DB               	movwf	___fltol@f1+2
  2276  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  2277  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  2278  02FE  0847               	movf	(sprintf@fval+1)^(0+128),w
  2279  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2280  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2281  0301  00DA               	movwf	___fltol@f1+1
  2282  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2283  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2284  0304  0846               	movf	sprintf@fval^(0+128),w
  2285  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2287  0307  00D9               	movwf	___fltol@f1
  2288  0308  160A  158A  2784  120A  118A  	fcall	___fltol
  2289  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2290  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2291  030F  085C               	movf	?___fltol+3,w
  2292  0310  045B               	iorwf	?___fltol+2,w
  2293  0311  045A               	iorwf	?___fltol+1,w
  2294  0312  0459               	iorwf	?___fltol,w
  2295  0313  1D03               	skipz
  2296  0314  2B16               	goto	u6021
  2297  0315  2B17               	goto	u6020
  2298  0316                     u6021:
  2299  0316  2BD2               	goto	l3473
  2300  0317                     u6020:
  2301  0317                     l3457:
  2302  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2303  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2304  0319  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2305  031A  3A80               	xorlw	128
  2306  031B  00FF               	movwf	btemp+1
  2307  031C  3080               	movlw	128
  2308  031D  027F               	subwf	btemp+1,w
  2309  031E  1D03               	skipz
  2310  031F  2B22               	goto	u6035
  2311  0320  3002               	movlw	2
  2312  0321  023D               	subwf	sprintf@eexp^(0+128),w
  2313  0322                     u6035:
  2314  0322  1C03               	skipc
  2315  0323  2B25               	goto	u6031
  2316  0324  2B26               	goto	u6030
  2317  0325                     u6031:
  2318  0325  2BD2               	goto	l3473
  2319  0326                     u6030:
  2320  0326                     l3459:
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2323  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2324  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2325  0328  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2326  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2327  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2328  032B  00A3               	movwf	___flge@ff1+3
  2329  032C  1683               	bsf	3,5	;RP0=1, select bank1
  2330  032D  1303               	bcf	3,6	;RP1=0, select bank1
  2331  032E  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2332  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2334  0331  00A2               	movwf	___flge@ff1+2
  2335  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2336  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2337  0334  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2338  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2340  0337  00A1               	movwf	___flge@ff1+1
  2341  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2342  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2343  033A  0840               	movf	sprintf@tmpval^(0+128),w
  2344  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2345  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2346  033D  00A0               	movwf	___flge@ff1
  2347  033E  3040               	movlw	64
  2348  033F  00A7               	movwf	___flge@ff2+3
  2349  0340  3089               	movlw	137
  2350  0341  00A6               	movwf	___flge@ff2+2
  2351  0342  3070               	movlw	112
  2352  0343  00A5               	movwf	___flge@ff2+1
  2353  0344  305F               	movlw	95
  2354  0345  00A4               	movwf	___flge@ff2
  2355  0346  160A  118A  2090  120A  118A  	fcall	___flge
  2356  034B  1803               	btfsc	3,0
  2357  034C  2B4E               	goto	u6041
  2358  034D  2B4F               	goto	u6040
  2359  034E                     u6041:
  2360  034E  2B58               	goto	l3463
  2361  034F                     u6040:
  2362  034F                     l3461:
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2365  034F  30F7               	movlw	247
  2366  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2367  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2368  0352  07BD               	addwf	sprintf@eexp^(0+128),f
  2369  0353  1803               	skipnc
  2370  0354  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2371  0355  30FF               	movlw	255
  2372  0356  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2375  0357  2B60               	goto	l3465
  2376  0358                     l3463:
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2379  0358  30F8               	movlw	248
  2380  0359  1683               	bsf	3,5	;RP0=1, select bank1
  2381  035A  1303               	bcf	3,6	;RP1=0, select bank1
  2382  035B  07BD               	addwf	sprintf@eexp^(0+128),f
  2383  035C  1803               	skipnc
  2384  035D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2385  035E  30FF               	movlw	255
  2386  035F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2387  0360                     l3465:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2390  0360  083D               	movf	sprintf@eexp^(0+128),w
  2391  0361  120A  158A  249D  120A  118A  	fcall	_scale
  2392  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2393  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2394  0368  0849               	movf	?_scale+3,w
  2395  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2396  036A  1303               	bcf	3,6	;RP1=0, select bank1
  2397  036B  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2398  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2399  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2400  036E  0848               	movf	?_scale+2,w
  2401  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2402  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2403  0371  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2404  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2405  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2406  0374  0847               	movf	?_scale+1,w
  2407  0375  1683               	bsf	3,5	;RP0=1, select bank1
  2408  0376  1303               	bcf	3,6	;RP1=0, select bank1
  2409  0377  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2410  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2412  037A  0846               	movf	?_scale,w
  2413  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2414  037C  1303               	bcf	3,6	;RP1=0, select bank1
  2415  037D  00C0               	movwf	sprintf@tmpval^(0+128)
  2416  037E                     l3467:
  2417  037E  0849               	movf	(sprintf@fval+3)^(0+128),w
  2418  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2419  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2420  0381  00A3               	movwf	__div_to_l_@f1+3
  2421  0382  1683               	bsf	3,5	;RP0=1, select bank1
  2422  0383  1303               	bcf	3,6	;RP1=0, select bank1
  2423  0384  0848               	movf	(sprintf@fval+2)^(0+128),w
  2424  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2425  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2426  0387  00A2               	movwf	__div_to_l_@f1+2
  2427  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2428  0389  1303               	bcf	3,6	;RP1=0, select bank1
  2429  038A  0847               	movf	(sprintf@fval+1)^(0+128),w
  2430  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2431  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2432  038D  00A1               	movwf	__div_to_l_@f1+1
  2433  038E  1683               	bsf	3,5	;RP0=1, select bank1
  2434  038F  1303               	bcf	3,6	;RP1=0, select bank1
  2435  0390  0846               	movf	sprintf@fval^(0+128),w
  2436  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2437  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2438  0393  00A0               	movwf	__div_to_l_@f1
  2439  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2440  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2441  0396  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2442  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0399  00A7               	movwf	__div_to_l_@f2+3
  2445  039A  1683               	bsf	3,5	;RP0=1, select bank1
  2446  039B  1303               	bcf	3,6	;RP1=0, select bank1
  2447  039C  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2448  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2449  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2450  039F  00A6               	movwf	__div_to_l_@f2+2
  2451  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2452  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2453  03A2  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2454  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2455  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2456  03A5  00A5               	movwf	__div_to_l_@f2+1
  2457  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2458  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2459  03A8  0840               	movf	sprintf@tmpval^(0+128),w
  2460  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2461  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2462  03AB  00A4               	movwf	__div_to_l_@f2
  2463  03AC  160A  118A  22AD  120A  118A  	fcall	__div_to_l_
  2464  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2465  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2466  03B3  0823               	movf	?__div_to_l_+3,w
  2467  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2468  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2469  03B6  00BC               	movwf	(sprintf@val+3)^(0+128)
  2470  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2471  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2472  03B9  0822               	movf	?__div_to_l_+2,w
  2473  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2474  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  2475  03BC  00BB               	movwf	(sprintf@val+2)^(0+128)
  2476  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2477  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2478  03BF  0821               	movf	?__div_to_l_+1,w
  2479  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  2480  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  2481  03C2  00BA               	movwf	(sprintf@val+1)^(0+128)
  2482  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2483  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2484  03C5  0820               	movf	?__div_to_l_,w
  2485  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2486  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  2487  03C8  00B9               	movwf	sprintf@val^(0+128)
  2488  03C9                     l3471:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2491  03C9  3000               	movlw	0
  2492  03CA  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2493  03CB  3000               	movlw	0
  2494  03CC  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2495  03CD  3000               	movlw	0
  2496  03CE  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2497  03CF  3000               	movlw	0
  2498  03D0  00C6               	movwf	sprintf@fval^(0+128)
  2499                           
  2500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2501  03D1  2C54               	goto	l3479
  2502  03D2                     l3473:
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2505  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2506  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  2507  03D4  0849               	movf	(sprintf@fval+3)^(0+128),w
  2508  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2509  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2510  03D7  00DC               	movwf	___fltol@f1+3
  2511  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2512  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  2513  03DA  0848               	movf	(sprintf@fval+2)^(0+128),w
  2514  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2515  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2516  03DD  00DB               	movwf	___fltol@f1+2
  2517  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  2518  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  2519  03E0  0847               	movf	(sprintf@fval+1)^(0+128),w
  2520  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2521  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2522  03E3  00DA               	movwf	___fltol@f1+1
  2523  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2524  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  2525  03E6  0846               	movf	sprintf@fval^(0+128),w
  2526  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2527  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2528  03E9  00D9               	movwf	___fltol@f1
  2529  03EA  160A  158A  2784  120A  118A  	fcall	___fltol
  2530  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2531  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2532  03F1  085C               	movf	?___fltol+3,w
  2533  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2534  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2535  03F4  00BC               	movwf	(sprintf@val+3)^(0+128)
  2536  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2537  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2538  03F7  085B               	movf	?___fltol+2,w
  2539  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2540  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2541  03FA  00BB               	movwf	(sprintf@val+2)^(0+128)
  2542  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2543  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2544  03FD  085A               	movf	?___fltol+1,w
  2545  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2546  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  2547  0400  00BA               	movwf	(sprintf@val+1)^(0+128)
  2548  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0403  0859               	movf	?___fltol,w
  2551  0404  1683               	bsf	3,5	;RP0=1, select bank1
  2552  0405  1303               	bcf	3,6	;RP1=0, select bank1
  2553  0406  00B9               	movwf	sprintf@val^(0+128)
  2554  0407                     l3475:
  2555                           
  2556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2557  0407  083C               	movf	(sprintf@val+3)^(0+128),w
  2558  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2559  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2560  040A  00AF               	movwf	___xxtofl@val+3
  2561  040B  1683               	bsf	3,5	;RP0=1, select bank1
  2562  040C  1303               	bcf	3,6	;RP1=0, select bank1
  2563  040D  083B               	movf	(sprintf@val+2)^(0+128),w
  2564  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2565  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2566  0410  00AE               	movwf	___xxtofl@val+2
  2567  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2568  0412  1303               	bcf	3,6	;RP1=0, select bank1
  2569  0413  083A               	movf	(sprintf@val+1)^(0+128),w
  2570  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2571  0415  1303               	bcf	3,6	;RP1=0, select bank0
  2572  0416  00AD               	movwf	___xxtofl@val+1
  2573  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2574  0418  1303               	bcf	3,6	;RP1=0, select bank1
  2575  0419  0839               	movf	sprintf@val^(0+128),w
  2576  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2577  041B  1303               	bcf	3,6	;RP1=0, select bank0
  2578  041C  00AC               	movwf	___xxtofl@val
  2579  041D  3000               	movlw	0
  2580  041E  160A  118A  2134  120A  118A  	fcall	___xxtofl
  2581  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2582  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2583  0425  082F               	movf	?___xxtofl+3,w
  2584  0426  1683               	bsf	3,5	;RP0=1, select bank1
  2585  0427  1303               	bcf	3,6	;RP1=0, select bank1
  2586  0428  00A3               	movwf	(___flsub@a+3)^(0+128)
  2587  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2588  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2589  042B  082E               	movf	?___xxtofl+2,w
  2590  042C  1683               	bsf	3,5	;RP0=1, select bank1
  2591  042D  1303               	bcf	3,6	;RP1=0, select bank1
  2592  042E  00A2               	movwf	(___flsub@a+2)^(0+128)
  2593  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2595  0431  082D               	movf	?___xxtofl+1,w
  2596  0432  1683               	bsf	3,5	;RP0=1, select bank1
  2597  0433  1303               	bcf	3,6	;RP1=0, select bank1
  2598  0434  00A1               	movwf	(___flsub@a+1)^(0+128)
  2599  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2601  0437  082C               	movf	?___xxtofl,w
  2602  0438  1683               	bsf	3,5	;RP0=1, select bank1
  2603  0439  1303               	bcf	3,6	;RP1=0, select bank1
  2604  043A  00A0               	movwf	___flsub@a^(0+128)
  2605  043B  0849               	movf	(sprintf@fval+3)^(0+128),w
  2606  043C  00A7               	movwf	(___flsub@b+3)^(0+128)
  2607  043D  0848               	movf	(sprintf@fval+2)^(0+128),w
  2608  043E  00A6               	movwf	(___flsub@b+2)^(0+128)
  2609  043F  0847               	movf	(sprintf@fval+1)^(0+128),w
  2610  0440  00A5               	movwf	(___flsub@b+1)^(0+128)
  2611  0441  0846               	movf	sprintf@fval^(0+128),w
  2612  0442  00A4               	movwf	___flsub@b^(0+128)
  2613  0443  160A  158A  2617  120A  118A  	fcall	___flsub
  2614  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2615  0449  1303               	bcf	3,6	;RP1=0, select bank1
  2616  044A  0823               	movf	(?___flsub+3)^(0+128),w
  2617  044B  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2618  044C  0822               	movf	(?___flsub+2)^(0+128),w
  2619  044D  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2620  044E  0821               	movf	(?___flsub+1)^(0+128),w
  2621  044F  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2622  0450  0820               	movf	?___flsub^(0+128),w
  2623  0451  00C6               	movwf	sprintf@fval^(0+128)
  2624  0452                     l3477:
  2625                           
  2626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2627  0452  01BD               	clrf	sprintf@eexp^(0+128)
  2628  0453  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2629  0454                     l3479:
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2632  0454  01CA               	clrf	sprintf@c^(0+128)
  2633  0455  0ACA               	incf	sprintf@c^(0+128),f
  2634  0456                     l3485:
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2637  0456  084A               	movf	sprintf@c^(0+128),w
  2638  0457  00AD               	movwf	??_sprintf^(0+128)
  2639  0458  3001               	movlw	1
  2640  0459                     u6055:
  2641  0459  1003               	clrc
  2642  045A  0DAD               	rlf	??_sprintf^(0+128),f
  2643  045B  3EFF               	addlw	-1
  2644  045C  1D03               	skipz
  2645  045D  2C59               	goto	u6055
  2646  045E  1003               	clrc
  2647  045F  0D2D               	rlf	??_sprintf^(0+128),w
  2648  0460  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2649  0461  0084               	movwf	4
  2650  0462  120A  158A  200A  120A  118A  	fcall	stringdir
  2651  0467  00AE               	movwf	(??_sprintf+1)^(0+128)
  2652  0468  120A  158A  200A  120A  118A  	fcall	stringdir
  2653  046D  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
  2654  046E  120A  158A  200A  120A  118A  	fcall	stringdir
  2655  0473  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
  2656  0474  120A  158A  200A  120A  118A  	fcall	stringdir
  2657  0479  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
  2658  047A  0831               	movf	(??_sprintf+4)^(0+128),w
  2659  047B  023C               	subwf	(sprintf@val+3)^(0+128),w
  2660  047C  1D03               	skipz
  2661  047D  2C88               	goto	u6065
  2662  047E  0830               	movf	(??_sprintf+3)^(0+128),w
  2663  047F  023B               	subwf	(sprintf@val+2)^(0+128),w
  2664  0480  1D03               	skipz
  2665  0481  2C88               	goto	u6065
  2666  0482  082F               	movf	(??_sprintf+2)^(0+128),w
  2667  0483  023A               	subwf	(sprintf@val+1)^(0+128),w
  2668  0484  1D03               	skipz
  2669  0485  2C88               	goto	u6065
  2670  0486  082E               	movf	(??_sprintf+1)^(0+128),w
  2671  0487  0239               	subwf	sprintf@val^(0+128),w
  2672  0488                     u6065:
  2673  0488  1803               	skipnc
  2674  0489  2C8B               	goto	u6061
  2675  048A  2C8C               	goto	u6060
  2676  048B                     u6061:
  2677  048B  2C8D               	goto	l3489
  2678  048C                     u6060:
  2679  048C  2C97               	goto	l3491
  2680  048D                     l3489:
  2681  048D  3001               	movlw	1
  2682  048E  00AD               	movwf	??_sprintf^(0+128)
  2683  048F  082D               	movf	??_sprintf^(0+128),w
  2684  0490  07CA               	addwf	sprintf@c^(0+128),f
  2685  0491  300A               	movlw	10
  2686  0492  064A               	xorwf	sprintf@c^(0+128),w
  2687  0493  1D03               	btfss	3,2
  2688  0494  2C96               	goto	u6071
  2689  0495  2C97               	goto	u6070
  2690  0496                     u6071:
  2691  0496  2C56               	goto	l3485
  2692  0497                     u6070:
  2693  0497                     l3491:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2696  0497  3003               	movlw	3
  2697  0498  0537               	andwf	sprintf@flag^(0+128),w
  2698  0499  00AD               	movwf	??_sprintf^(0+128)
  2699  049A  3000               	movlw	0
  2700  049B  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2701  049C  00AE               	movwf	(??_sprintf+1)^(0+128)
  2702  049D  082D               	movf	??_sprintf^(0+128),w
  2703  049E  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2704  049F  1903               	btfsc	3,2
  2705  04A0  2CA2               	goto	u6081
  2706  04A1  2CA3               	goto	u6080
  2707  04A2                     u6081:
  2708  04A2  2D55               	goto	l243
  2709  04A3                     u6080:
  2710  04A3                     l3493:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2713  04A3  302D               	movlw	45
  2714  04A4  00AD               	movwf	??_sprintf^(0+128)
  2715  04A5  083F               	movf	sprintf@sp^(0+128),w
  2716  04A6  0084               	movwf	4
  2717  04A7  082D               	movf	??_sprintf^(0+128),w
  2718  04A8  1383               	bcf	3,7	;select IRP bank0
  2719  04A9  0080               	movwf	0
  2720  04AA                     l3495:
  2721  04AA  3001               	movlw	1
  2722  04AB  00AD               	movwf	??_sprintf^(0+128)
  2723  04AC  082D               	movf	??_sprintf^(0+128),w
  2724  04AD  07BF               	addwf	sprintf@sp^(0+128),f
  2725  04AE  2D55               	goto	l243
  2726  04AF                     l3497:
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2729  04AF  084A               	movf	sprintf@c^(0+128),w
  2730  04B0  00AD               	movwf	??_sprintf^(0+128)
  2731  04B1  3001               	movlw	1
  2732  04B2                     u6095:
  2733  04B2  1003               	clrc
  2734  04B3  0DAD               	rlf	??_sprintf^(0+128),f
  2735  04B4  3EFF               	addlw	-1
  2736  04B5  1D03               	skipz
  2737  04B6  2CB2               	goto	u6095
  2738  04B7  1003               	clrc
  2739  04B8  0D2D               	rlf	??_sprintf^(0+128),w
  2740  04B9  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2741  04BA  0084               	movwf	4
  2742  04BB  120A  158A  200A  120A  118A  	fcall	stringdir
  2743  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2744  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2745  04C2  00A0               	movwf	___lldiv@divisor
  2746  04C3  120A  158A  200A  120A  118A  	fcall	stringdir
  2747  04C8  00A1               	movwf	___lldiv@divisor+1
  2748  04C9  120A  158A  200A  120A  118A  	fcall	stringdir
  2749  04CE  00A2               	movwf	___lldiv@divisor+2
  2750  04CF  120A  158A  200A  120A  118A  	fcall	stringdir
  2751  04D4  00A3               	movwf	___lldiv@divisor+3
  2752  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2753  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2754  04D7  083C               	movf	(sprintf@val+3)^(0+128),w
  2755  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2756  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2757  04DA  00A7               	movwf	___lldiv@dividend+3
  2758  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  2759  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  2760  04DD  083B               	movf	(sprintf@val+2)^(0+128),w
  2761  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2762  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2763  04E0  00A6               	movwf	___lldiv@dividend+2
  2764  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  2765  04E2  1303               	bcf	3,6	;RP1=0, select bank1
  2766  04E3  083A               	movf	(sprintf@val+1)^(0+128),w
  2767  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2768  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2769  04E6  00A5               	movwf	___lldiv@dividend+1
  2770  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  2771  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  2772  04E9  0839               	movf	sprintf@val^(0+128),w
  2773  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2774  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2775  04EC  00A4               	movwf	___lldiv@dividend
  2776  04ED  160A  158A  271C  120A  118A  	fcall	___lldiv
  2777  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2778  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2779  04F4  0823               	movf	?___lldiv+3,w
  2780  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  2781  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  2782  04F7  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2783  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2784  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2785  04FA  0822               	movf	?___lldiv+2,w
  2786  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  2787  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  2788  04FD  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2789  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2790  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2791  0500  0821               	movf	?___lldiv+1,w
  2792  0501  1683               	bsf	3,5	;RP0=1, select bank1
  2793  0502  1303               	bcf	3,6	;RP1=0, select bank1
  2794  0503  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2795  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2796  0505  1303               	bcf	3,6	;RP1=0, select bank0
  2797  0506  0820               	movf	?___lldiv,w
  2798  0507  1683               	bsf	3,5	;RP0=1, select bank1
  2799  0508  1303               	bcf	3,6	;RP1=0, select bank1
  2800  0509  00C0               	movwf	sprintf@tmpval^(0+128)
  2801  050A                     l3499:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2804  050A  3000               	movlw	0
  2805  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2806  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2807  050D  00A3               	movwf	___llmod@divisor+3
  2808  050E  3000               	movlw	0
  2809  050F  00A2               	movwf	___llmod@divisor+2
  2810  0510  3000               	movlw	0
  2811  0511  00A1               	movwf	___llmod@divisor+1
  2812  0512  300A               	movlw	10
  2813  0513  00A0               	movwf	___llmod@divisor
  2814  0514  1683               	bsf	3,5	;RP0=1, select bank1
  2815  0515  1303               	bcf	3,6	;RP1=0, select bank1
  2816  0516  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2817  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2818  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2819  0519  00A7               	movwf	___llmod@dividend+3
  2820  051A  1683               	bsf	3,5	;RP0=1, select bank1
  2821  051B  1303               	bcf	3,6	;RP1=0, select bank1
  2822  051C  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2823  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2824  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2825  051F  00A6               	movwf	___llmod@dividend+2
  2826  0520  1683               	bsf	3,5	;RP0=1, select bank1
  2827  0521  1303               	bcf	3,6	;RP1=0, select bank1
  2828  0522  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2829  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2830  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2831  0525  00A5               	movwf	___llmod@dividend+1
  2832  0526  1683               	bsf	3,5	;RP0=1, select bank1
  2833  0527  1303               	bcf	3,6	;RP1=0, select bank1
  2834  0528  0840               	movf	sprintf@tmpval^(0+128),w
  2835  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2836  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2837  052B  00A4               	movwf	___llmod@dividend
  2838  052C  120A  118A  27A8  120A  118A  	fcall	___llmod
  2839  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2841  0533  0823               	movf	?___llmod+3,w
  2842  0534  1683               	bsf	3,5	;RP0=1, select bank1
  2843  0535  1303               	bcf	3,6	;RP1=0, select bank1
  2844  0536  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2845  0537  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0538  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0539  0822               	movf	?___llmod+2,w
  2848  053A  1683               	bsf	3,5	;RP0=1, select bank1
  2849  053B  1303               	bcf	3,6	;RP1=0, select bank1
  2850  053C  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2851  053D  1283               	bcf	3,5	;RP0=0, select bank0
  2852  053E  1303               	bcf	3,6	;RP1=0, select bank0
  2853  053F  0821               	movf	?___llmod+1,w
  2854  0540  1683               	bsf	3,5	;RP0=1, select bank1
  2855  0541  1303               	bcf	3,6	;RP1=0, select bank1
  2856  0542  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2857  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2858  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2859  0545  0820               	movf	?___llmod,w
  2860  0546  1683               	bsf	3,5	;RP0=1, select bank1
  2861  0547  1303               	bcf	3,6	;RP1=0, select bank1
  2862  0548  00C0               	movwf	sprintf@tmpval^(0+128)
  2863  0549                     l3501:
  2864                           
  2865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2866  0549  0840               	movf	sprintf@tmpval^(0+128),w
  2867  054A  3E30               	addlw	48
  2868  054B  00AD               	movwf	??_sprintf^(0+128)
  2869  054C  083F               	movf	sprintf@sp^(0+128),w
  2870  054D  0084               	movwf	4
  2871  054E  082D               	movf	??_sprintf^(0+128),w
  2872  054F  1383               	bcf	3,7	;select IRP bank0
  2873  0550  0080               	movwf	0
  2874  0551  3001               	movlw	1
  2875  0552  00AD               	movwf	??_sprintf^(0+128)
  2876  0553  082D               	movf	??_sprintf^(0+128),w
  2877  0554  07BF               	addwf	sprintf@sp^(0+128),f
  2878  0555                     l243:	
  2879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  2880                           
  2881                           
  2882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2883  0555  3001               	movlw	1
  2884  0556  02CA               	subwf	sprintf@c^(0+128),f
  2885  0557  0A4A               	incf	sprintf@c^(0+128),w
  2886  0558  1D03               	btfss	3,2
  2887  0559  2D5B               	goto	u6101
  2888  055A  2D5C               	goto	u6100
  2889  055B                     u6101:
  2890  055B  2CAF               	goto	l3497
  2891  055C                     u6100:
  2892  055C  2D70               	goto	l3509
  2893  055D                     l3503:
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2896  055D  3030               	movlw	48
  2897  055E  1683               	bsf	3,5	;RP0=1, select bank1
  2898  055F  1303               	bcf	3,6	;RP1=0, select bank1
  2899  0560  00AD               	movwf	??_sprintf^(0+128)
  2900  0561  083F               	movf	sprintf@sp^(0+128),w
  2901  0562  0084               	movwf	4
  2902  0563  082D               	movf	??_sprintf^(0+128),w
  2903  0564  1383               	bcf	3,7	;select IRP bank0
  2904  0565  0080               	movwf	0
  2905  0566                     l3505:
  2906  0566  3001               	movlw	1
  2907  0567  00AD               	movwf	??_sprintf^(0+128)
  2908  0568  082D               	movf	??_sprintf^(0+128),w
  2909  0569  07BF               	addwf	sprintf@sp^(0+128),f
  2910  056A                     l3507:
  2911                           
  2912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2913  056A  30FF               	movlw	255
  2914  056B  07BD               	addwf	sprintf@eexp^(0+128),f
  2915  056C  1803               	skipnc
  2916  056D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2917  056E  30FF               	movlw	255
  2918  056F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2919  0570                     l3509:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2922  0570  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2923  0571  3A80               	xorlw	128
  2924  0572  00FF               	movwf	btemp+1
  2925  0573  3080               	movlw	128
  2926  0574  027F               	subwf	btemp+1,w
  2927  0575  1D03               	skipz
  2928  0576  2D79               	goto	u6115
  2929  0577  3001               	movlw	1
  2930  0578  023D               	subwf	sprintf@eexp^(0+128),w
  2931  0579                     u6115:
  2932  0579  1803               	skipnc
  2933  057A  2D7C               	goto	u6111
  2934  057B  2D7D               	goto	u6110
  2935  057C                     u6111:
  2936  057C  2D5D               	goto	l3503
  2937  057D                     u6110:
  2938  057D                     l3511:
  2939                           
  2940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2941  057D  1683               	bsf	3,5	;RP0=1, select bank1
  2942  057E  1303               	bcf	3,6	;RP1=0, select bank1
  2943  057F  0845               	movf	(sprintf@prec+1)^(0+128),w
  2944  0580  3A80               	xorlw	128
  2945  0581  00FF               	movwf	btemp+1
  2946  0582  3080               	movlw	128
  2947  0583  027F               	subwf	btemp+1,w
  2948  0584  1D03               	skipz
  2949  0585  2D88               	goto	u6125
  2950  0586  3009               	movlw	9
  2951  0587  0244               	subwf	sprintf@prec^(0+128),w
  2952  0588                     u6125:
  2953  0588  1C03               	skipc
  2954  0589  2D8B               	goto	u6121
  2955  058A  2D8C               	goto	u6120
  2956  058B                     u6121:
  2957  058B  2D93               	goto	l3515
  2958  058C                     u6120:
  2959  058C                     l3513:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2962  058C  3008               	movlw	8
  2963  058D  1683               	bsf	3,5	;RP0=1, select bank1
  2964  058E  1303               	bcf	3,6	;RP1=0, select bank1
  2965  058F  00AD               	movwf	??_sprintf^(0+128)
  2966  0590  082D               	movf	??_sprintf^(0+128),w
  2967  0591  00CA               	movwf	sprintf@c^(0+128)
  2968  0592  2D99               	goto	l250
  2969  0593                     l3515:
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2972  0593  1683               	bsf	3,5	;RP0=1, select bank1
  2973  0594  1303               	bcf	3,6	;RP1=0, select bank1
  2974  0595  0844               	movf	sprintf@prec^(0+128),w
  2975  0596  00AD               	movwf	??_sprintf^(0+128)
  2976  0597  082D               	movf	??_sprintf^(0+128),w
  2977  0598  00CA               	movwf	sprintf@c^(0+128)
  2978  0599                     l250:
  2979                           
  2980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  2981  0599  084A               	movf	sprintf@c^(0+128),w
  2982  059A  00AD               	movwf	??_sprintf^(0+128)
  2983  059B  01AE               	clrf	(??_sprintf^(0+128)+1)
  2984  059C  082D               	movf	??_sprintf^(0+128),w
  2985  059D  02C4               	subwf	sprintf@prec^(0+128),f
  2986  059E  082E               	movf	(??_sprintf+1)^(0+128),w
  2987  059F  1C03               	skipc
  2988  05A0  03C5               	decf	(sprintf@prec+1)^(0+128),f
  2989  05A1  02C5               	subwf	(sprintf@prec+1)^(0+128),f
  2990  05A2                     l3517:
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  2993  05A2  084A               	movf	sprintf@c^(0+128),w
  2994  05A3  1903               	btfsc	3,2
  2995  05A4  2DA6               	goto	u6131
  2996  05A5  2DA7               	goto	u6130
  2997  05A6                     u6131:
  2998  05A6  2DB2               	goto	l3523
  2999  05A7                     u6130:
  3000  05A7                     l3519:
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3003  05A7  302E               	movlw	46
  3004  05A8  00AD               	movwf	??_sprintf^(0+128)
  3005  05A9  083F               	movf	sprintf@sp^(0+128),w
  3006  05AA  0084               	movwf	4
  3007  05AB  082D               	movf	??_sprintf^(0+128),w
  3008  05AC  1383               	bcf	3,7	;select IRP bank0
  3009  05AD  0080               	movwf	0
  3010  05AE                     l3521:
  3011  05AE  3001               	movlw	1
  3012  05AF  00AD               	movwf	??_sprintf^(0+128)
  3013  05B0  082D               	movf	??_sprintf^(0+128),w
  3014  05B1  07BF               	addwf	sprintf@sp^(0+128),f
  3015  05B2                     l3523:
  3016                           
  3017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3018  05B2  084A               	movf	sprintf@c^(0+128),w
  3019  05B3  120A  158A  249D  120A  118A  	fcall	_scale
  3020  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3021  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3022  05BA  0849               	movf	?_scale+3,w
  3023  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  3024  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  3025  05BD  00B5               	movwf	(_sprintf$986+3)^(0+128)
  3026  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  3027  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  3028  05C0  0848               	movf	?_scale+2,w
  3029  05C1  1683               	bsf	3,5	;RP0=1, select bank1
  3030  05C2  1303               	bcf	3,6	;RP1=0, select bank1
  3031  05C3  00B4               	movwf	(_sprintf$986+2)^(0+128)
  3032  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3033  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  3034  05C6  0847               	movf	?_scale+1,w
  3035  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  3036  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  3037  05C9  00B3               	movwf	(_sprintf$986+1)^(0+128)
  3038  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  3039  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  3040  05CC  0846               	movf	?_scale,w
  3041  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  3042  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  3043  05CF  00B2               	movwf	_sprintf$986^(0+128)
  3044  05D0                     l3525:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3047  05D0  0835               	movf	(_sprintf$986+3)^(0+128),w
  3048  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3049  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3050  05D3  00B3               	movwf	___flmul@a+3
  3051  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3052  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  3053  05D6  0834               	movf	(_sprintf$986+2)^(0+128),w
  3054  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  3055  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  3056  05D9  00B2               	movwf	___flmul@a+2
  3057  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3058  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  3059  05DC  0833               	movf	(_sprintf$986+1)^(0+128),w
  3060  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3061  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3062  05DF  00B1               	movwf	___flmul@a+1
  3063  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  3064  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  3065  05E2  0832               	movf	_sprintf$986^(0+128),w
  3066  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3067  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3068  05E5  00B0               	movwf	___flmul@a
  3069  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  3070  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  3071  05E8  0849               	movf	(sprintf@fval+3)^(0+128),w
  3072  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  3073  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  3074  05EB  00AF               	movwf	___flmul@b+3
  3075  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  3076  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  3077  05EE  0848               	movf	(sprintf@fval+2)^(0+128),w
  3078  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3079  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3080  05F1  00AE               	movwf	___flmul@b+2
  3081  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  3082  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  3083  05F4  0847               	movf	(sprintf@fval+1)^(0+128),w
  3084  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3085  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  3086  05F7  00AD               	movwf	___flmul@b+1
  3087  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  3088  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  3089  05FA  0846               	movf	sprintf@fval^(0+128),w
  3090  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3091  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  3092  05FD  00AC               	movwf	___flmul@b
  3093  05FE  120A  158A  213C  120A  118A  	fcall	___flmul
  3094  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0604  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0605  082F               	movf	?___flmul+3,w
  3097  0606  00DC               	movwf	___fltol@f1+3
  3098  0607  082E               	movf	?___flmul+2,w
  3099  0608  00DB               	movwf	___fltol@f1+2
  3100  0609  082D               	movf	?___flmul+1,w
  3101  060A  00DA               	movwf	___fltol@f1+1
  3102  060B  082C               	movf	?___flmul,w
  3103  060C  00D9               	movwf	___fltol@f1
  3104  060D  160A  158A  2784  120A  118A  	fcall	___fltol
  3105  0612  1283               	bcf	3,5	;RP0=0, select bank0
  3106  0613  1303               	bcf	3,6	;RP1=0, select bank0
  3107  0614  085C               	movf	?___fltol+3,w
  3108  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3109  0616  1303               	bcf	3,6	;RP1=0, select bank1
  3110  0617  00BC               	movwf	(sprintf@val+3)^(0+128)
  3111  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3113  061A  085B               	movf	?___fltol+2,w
  3114  061B  1683               	bsf	3,5	;RP0=1, select bank1
  3115  061C  1303               	bcf	3,6	;RP1=0, select bank1
  3116  061D  00BB               	movwf	(sprintf@val+2)^(0+128)
  3117  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3118  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3119  0620  085A               	movf	?___fltol+1,w
  3120  0621  1683               	bsf	3,5	;RP0=1, select bank1
  3121  0622  1303               	bcf	3,6	;RP1=0, select bank1
  3122  0623  00BA               	movwf	(sprintf@val+1)^(0+128)
  3123  0624  1283               	bcf	3,5	;RP0=0, select bank0
  3124  0625  1303               	bcf	3,6	;RP1=0, select bank0
  3125  0626  0859               	movf	?___fltol,w
  3126  0627  1683               	bsf	3,5	;RP0=1, select bank1
  3127  0628  1303               	bcf	3,6	;RP1=0, select bank1
  3128  0629  00B9               	movwf	sprintf@val^(0+128)
  3129                           
  3130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3131  062A  2F2C               	goto	l3535
  3132  062B                     l3527:
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3135  062B  084A               	movf	sprintf@c^(0+128),w
  3136  062C  00AD               	movwf	??_sprintf^(0+128)
  3137  062D  3001               	movlw	1
  3138  062E                     u6145:
  3139  062E  1003               	clrc
  3140  062F  0DAD               	rlf	??_sprintf^(0+128),f
  3141  0630  3EFF               	addlw	-1
  3142  0631  1D03               	skipz
  3143  0632  2E2E               	goto	u6145
  3144  0633  1003               	clrc
  3145  0634  0D2D               	rlf	??_sprintf^(0+128),w
  3146  0635  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3147  0636  0084               	movwf	4
  3148  0637  120A  158A  200A  120A  118A  	fcall	stringdir
  3149  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3150  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3151  063E  00A0               	movwf	___lldiv@divisor
  3152  063F  120A  158A  200A  120A  118A  	fcall	stringdir
  3153  0644  00A1               	movwf	___lldiv@divisor+1
  3154  0645  120A  158A  200A  120A  118A  	fcall	stringdir
  3155  064A  00A2               	movwf	___lldiv@divisor+2
  3156  064B  120A  158A  200A  120A  118A  	fcall	stringdir
  3157  0650  00A3               	movwf	___lldiv@divisor+3
  3158  0651  1683               	bsf	3,5	;RP0=1, select bank1
  3159  0652  1303               	bcf	3,6	;RP1=0, select bank1
  3160  0653  083C               	movf	(sprintf@val+3)^(0+128),w
  3161  0654  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0655  1303               	bcf	3,6	;RP1=0, select bank0
  3163  0656  00A7               	movwf	___lldiv@dividend+3
  3164  0657  1683               	bsf	3,5	;RP0=1, select bank1
  3165  0658  1303               	bcf	3,6	;RP1=0, select bank1
  3166  0659  083B               	movf	(sprintf@val+2)^(0+128),w
  3167  065A  1283               	bcf	3,5	;RP0=0, select bank0
  3168  065B  1303               	bcf	3,6	;RP1=0, select bank0
  3169  065C  00A6               	movwf	___lldiv@dividend+2
  3170  065D  1683               	bsf	3,5	;RP0=1, select bank1
  3171  065E  1303               	bcf	3,6	;RP1=0, select bank1
  3172  065F  083A               	movf	(sprintf@val+1)^(0+128),w
  3173  0660  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0661  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0662  00A5               	movwf	___lldiv@dividend+1
  3176  0663  1683               	bsf	3,5	;RP0=1, select bank1
  3177  0664  1303               	bcf	3,6	;RP1=0, select bank1
  3178  0665  0839               	movf	sprintf@val^(0+128),w
  3179  0666  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0667  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0668  00A4               	movwf	___lldiv@dividend
  3182  0669  160A  158A  271C  120A  118A  	fcall	___lldiv
  3183  066E  1283               	bcf	3,5	;RP0=0, select bank0
  3184  066F  1303               	bcf	3,6	;RP1=0, select bank0
  3185  0670  0823               	movf	?___lldiv+3,w
  3186  0671  1683               	bsf	3,5	;RP0=1, select bank1
  3187  0672  1303               	bcf	3,6	;RP1=0, select bank1
  3188  0673  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  3189  0674  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0675  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0676  0822               	movf	?___lldiv+2,w
  3192  0677  1683               	bsf	3,5	;RP0=1, select bank1
  3193  0678  1303               	bcf	3,6	;RP1=0, select bank1
  3194  0679  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  3195  067A  1283               	bcf	3,5	;RP0=0, select bank0
  3196  067B  1303               	bcf	3,6	;RP1=0, select bank0
  3197  067C  0821               	movf	?___lldiv+1,w
  3198  067D  1683               	bsf	3,5	;RP0=1, select bank1
  3199  067E  1303               	bcf	3,6	;RP1=0, select bank1
  3200  067F  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  3201  0680  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0681  1303               	bcf	3,6	;RP1=0, select bank0
  3203  0682  0820               	movf	?___lldiv,w
  3204  0683  1683               	bsf	3,5	;RP0=1, select bank1
  3205  0684  1303               	bcf	3,6	;RP1=0, select bank1
  3206  0685  00C0               	movwf	sprintf@tmpval^(0+128)
  3207  0686                     l3529:
  3208                           
  3209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3210  0686  3000               	movlw	0
  3211  0687  1283               	bcf	3,5	;RP0=0, select bank0
  3212  0688  1303               	bcf	3,6	;RP1=0, select bank0
  3213  0689  00A3               	movwf	___llmod@divisor+3
  3214  068A  3000               	movlw	0
  3215  068B  00A2               	movwf	___llmod@divisor+2
  3216  068C  3000               	movlw	0
  3217  068D  00A1               	movwf	___llmod@divisor+1
  3218  068E  300A               	movlw	10
  3219  068F  00A0               	movwf	___llmod@divisor
  3220  0690  1683               	bsf	3,5	;RP0=1, select bank1
  3221  0691  1303               	bcf	3,6	;RP1=0, select bank1
  3222  0692  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  3223  0693  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0694  1303               	bcf	3,6	;RP1=0, select bank0
  3225  0695  00A7               	movwf	___llmod@dividend+3
  3226  0696  1683               	bsf	3,5	;RP0=1, select bank1
  3227  0697  1303               	bcf	3,6	;RP1=0, select bank1
  3228  0698  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  3229  0699  1283               	bcf	3,5	;RP0=0, select bank0
  3230  069A  1303               	bcf	3,6	;RP1=0, select bank0
  3231  069B  00A6               	movwf	___llmod@dividend+2
  3232  069C  1683               	bsf	3,5	;RP0=1, select bank1
  3233  069D  1303               	bcf	3,6	;RP1=0, select bank1
  3234  069E  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  3235  069F  1283               	bcf	3,5	;RP0=0, select bank0
  3236  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3237  06A1  00A5               	movwf	___llmod@dividend+1
  3238  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3239  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3240  06A4  0840               	movf	sprintf@tmpval^(0+128),w
  3241  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3242  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3243  06A7  00A4               	movwf	___llmod@dividend
  3244  06A8  120A  118A  27A8  120A  118A  	fcall	___llmod
  3245  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3246  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3247  06AF  0823               	movf	?___llmod+3,w
  3248  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  3249  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  3250  06B2  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  3251  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  3252  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  3253  06B5  0822               	movf	?___llmod+2,w
  3254  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  3255  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  3256  06B8  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  3257  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3258  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3259  06BB  0821               	movf	?___llmod+1,w
  3260  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  3261  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  3262  06BE  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  3263  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  3264  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  3265  06C1  0820               	movf	?___llmod,w
  3266  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  3267  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  3268  06C4  00C0               	movwf	sprintf@tmpval^(0+128)
  3269  06C5                     l3531:
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3272  06C5  0840               	movf	sprintf@tmpval^(0+128),w
  3273  06C6  3E30               	addlw	48
  3274  06C7  00AD               	movwf	??_sprintf^(0+128)
  3275  06C8  083F               	movf	sprintf@sp^(0+128),w
  3276  06C9  0084               	movwf	4
  3277  06CA  082D               	movf	??_sprintf^(0+128),w
  3278  06CB  1383               	bcf	3,7	;select IRP bank0
  3279  06CC  0080               	movwf	0
  3280  06CD  3001               	movlw	1
  3281  06CE  00AD               	movwf	??_sprintf^(0+128)
  3282  06CF  082D               	movf	??_sprintf^(0+128),w
  3283  06D0  07BF               	addwf	sprintf@sp^(0+128),f
  3284  06D1                     l3533:
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3287  06D1  084A               	movf	sprintf@c^(0+128),w
  3288  06D2  00AD               	movwf	??_sprintf^(0+128)
  3289  06D3  3001               	movlw	1
  3290  06D4                     u6155:
  3291  06D4  1003               	clrc
  3292  06D5  0DAD               	rlf	??_sprintf^(0+128),f
  3293  06D6  3EFF               	addlw	-1
  3294  06D7  1D03               	skipz
  3295  06D8  2ED4               	goto	u6155
  3296  06D9  1003               	clrc
  3297  06DA  0D2D               	rlf	??_sprintf^(0+128),w
  3298  06DB  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3299  06DC  0084               	movwf	4
  3300  06DD  120A  158A  200A  120A  118A  	fcall	stringdir
  3301  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  3302  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  3303  06E4  00A0               	movwf	___llmod@divisor
  3304  06E5  120A  158A  200A  120A  118A  	fcall	stringdir
  3305  06EA  00A1               	movwf	___llmod@divisor+1
  3306  06EB  120A  158A  200A  120A  118A  	fcall	stringdir
  3307  06F0  00A2               	movwf	___llmod@divisor+2
  3308  06F1  120A  158A  200A  120A  118A  	fcall	stringdir
  3309  06F6  00A3               	movwf	___llmod@divisor+3
  3310  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  3311  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  3312  06F9  083C               	movf	(sprintf@val+3)^(0+128),w
  3313  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  3314  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  3315  06FC  00A7               	movwf	___llmod@dividend+3
  3316  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  3317  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  3318  06FF  083B               	movf	(sprintf@val+2)^(0+128),w
  3319  0700  1283               	bcf	3,5	;RP0=0, select bank0
  3320  0701  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0702  00A6               	movwf	___llmod@dividend+2
  3322  0703  1683               	bsf	3,5	;RP0=1, select bank1
  3323  0704  1303               	bcf	3,6	;RP1=0, select bank1
  3324  0705  083A               	movf	(sprintf@val+1)^(0+128),w
  3325  0706  1283               	bcf	3,5	;RP0=0, select bank0
  3326  0707  1303               	bcf	3,6	;RP1=0, select bank0
  3327  0708  00A5               	movwf	___llmod@dividend+1
  3328  0709  1683               	bsf	3,5	;RP0=1, select bank1
  3329  070A  1303               	bcf	3,6	;RP1=0, select bank1
  3330  070B  0839               	movf	sprintf@val^(0+128),w
  3331  070C  1283               	bcf	3,5	;RP0=0, select bank0
  3332  070D  1303               	bcf	3,6	;RP1=0, select bank0
  3333  070E  00A4               	movwf	___llmod@dividend
  3334  070F  120A  118A  27A8  120A  118A  	fcall	___llmod
  3335  0714  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0715  1303               	bcf	3,6	;RP1=0, select bank0
  3337  0716  0823               	movf	?___llmod+3,w
  3338  0717  1683               	bsf	3,5	;RP0=1, select bank1
  3339  0718  1303               	bcf	3,6	;RP1=0, select bank1
  3340  0719  00BC               	movwf	(sprintf@val+3)^(0+128)
  3341  071A  1283               	bcf	3,5	;RP0=0, select bank0
  3342  071B  1303               	bcf	3,6	;RP1=0, select bank0
  3343  071C  0822               	movf	?___llmod+2,w
  3344  071D  1683               	bsf	3,5	;RP0=1, select bank1
  3345  071E  1303               	bcf	3,6	;RP1=0, select bank1
  3346  071F  00BB               	movwf	(sprintf@val+2)^(0+128)
  3347  0720  1283               	bcf	3,5	;RP0=0, select bank0
  3348  0721  1303               	bcf	3,6	;RP1=0, select bank0
  3349  0722  0821               	movf	?___llmod+1,w
  3350  0723  1683               	bsf	3,5	;RP0=1, select bank1
  3351  0724  1303               	bcf	3,6	;RP1=0, select bank1
  3352  0725  00BA               	movwf	(sprintf@val+1)^(0+128)
  3353  0726  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0727  1303               	bcf	3,6	;RP1=0, select bank0
  3355  0728  0820               	movf	?___llmod,w
  3356  0729  1683               	bsf	3,5	;RP0=1, select bank1
  3357  072A  1303               	bcf	3,6	;RP1=0, select bank1
  3358  072B  00B9               	movwf	sprintf@val^(0+128)
  3359  072C                     l3535:
  3360                           
  3361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3362  072C  3001               	movlw	1
  3363  072D  02CA               	subwf	sprintf@c^(0+128),f
  3364  072E  0A4A               	incf	sprintf@c^(0+128),w
  3365  072F  1D03               	btfss	3,2
  3366  0730  2F32               	goto	u6161
  3367  0731  2F33               	goto	u6160
  3368  0732                     u6161:
  3369  0732  2E2B               	goto	l3527
  3370  0733                     u6160:
  3371  0733  2F45               	goto	l3543
  3372  0734                     l3537:
  3373                           
  3374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3375  0734  3030               	movlw	48
  3376  0735  00AD               	movwf	??_sprintf^(0+128)
  3377  0736  083F               	movf	sprintf@sp^(0+128),w
  3378  0737  0084               	movwf	4
  3379  0738  082D               	movf	??_sprintf^(0+128),w
  3380  0739  1383               	bcf	3,7	;select IRP bank0
  3381  073A  0080               	movwf	0
  3382  073B                     l3539:
  3383  073B  3001               	movlw	1
  3384  073C  00AD               	movwf	??_sprintf^(0+128)
  3385  073D  082D               	movf	??_sprintf^(0+128),w
  3386  073E  07BF               	addwf	sprintf@sp^(0+128),f
  3387  073F                     l3541:
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3390  073F  30FF               	movlw	255
  3391  0740  07C4               	addwf	sprintf@prec^(0+128),f
  3392  0741  1803               	skipnc
  3393  0742  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  3394  0743  30FF               	movlw	255
  3395  0744  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  3396  0745                     l3543:
  3397                           
  3398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3399  0745  0844               	movf	sprintf@prec^(0+128),w
  3400  0746  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3401  0747  1D03               	btfss	3,2
  3402  0748  2F4A               	goto	u6171
  3403  0749  2F4B               	goto	u6170
  3404  074A                     u6171:
  3405  074A  2F34               	goto	l3537
  3406  074B                     u6170:
  3407  074B  2F91               	goto	l3563
  3408  074C                     l3545:
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3411  074C  0844               	movf	sprintf@prec^(0+128),w
  3412  074D  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3413  074E  1D03               	btfss	3,2
  3414  074F  2F51               	goto	u6181
  3415  0750  2F52               	goto	u6180
  3416  0751                     u6181:
  3417  0751  2F60               	goto	l258
  3418  0752                     u6180:
  3419  0752                     l3547:
  3420  0752  083C               	movf	(sprintf@val+3)^(0+128),w
  3421  0753  043B               	iorwf	(sprintf@val+2)^(0+128),w
  3422  0754  043A               	iorwf	(sprintf@val+1)^(0+128),w
  3423  0755  0439               	iorwf	sprintf@val^(0+128),w
  3424  0756  1D03               	skipz
  3425  0757  2F59               	goto	u6191
  3426  0758  2F5A               	goto	u6190
  3427  0759                     u6191:
  3428  0759  2F60               	goto	l258
  3429  075A                     u6190:
  3430  075A                     l3549:
  3431                           
  3432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3433  075A  3001               	movlw	1
  3434  075B  07C4               	addwf	sprintf@prec^(0+128),f
  3435  075C  1803               	skipnc
  3436  075D  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  3437  075E  3000               	movlw	0
  3438  075F  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  3439  0760                     l258:
  3440                           
  3441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3442  0760  0845               	movf	(sprintf@prec+1)^(0+128),w
  3443  0761  3A80               	xorlw	128
  3444  0762  3C80               	sublw	128
  3445  0763  1D03               	skipz
  3446  0764  2F67               	goto	u6205
  3447  0765  0844               	movf	sprintf@prec^(0+128),w
  3448  0766  024A               	subwf	sprintf@c^(0+128),w
  3449  0767                     u6205:
  3450  0767  1803               	skipnc
  3451  0768  2F6A               	goto	u6201
  3452  0769  2F6B               	goto	u6200
  3453  076A                     u6201:
  3454  076A  2F6C               	goto	l3553
  3455  076B                     u6200:
  3456  076B                     l3551:
  3457  076B  2F7B               	goto	l3557
  3458  076C                     l3553:
  3459  076C  1683               	bsf	3,5	;RP0=1, select bank1
  3460  076D  1303               	bcf	3,6	;RP1=0, select bank1
  3461  076E  0845               	movf	(sprintf@prec+1)^(0+128),w
  3462  076F  3A80               	xorlw	128
  3463  0770  00AD               	movwf	??_sprintf^(0+128)
  3464  0771  3080               	movlw	128
  3465  0772  022D               	subwf	??_sprintf^(0+128),w
  3466  0773  1D03               	skipz
  3467  0774  2F77               	goto	u6215
  3468  0775  084A               	movf	sprintf@c^(0+128),w
  3469  0776  0244               	subwf	sprintf@prec^(0+128),w
  3470  0777                     u6215:
  3471  0777  1803               	skipnc
  3472  0778  2F7A               	goto	u6211
  3473  0779  2F7B               	goto	u6210
  3474  077A                     u6211:
  3475  077A  2F7B               	goto	l3557
  3476  077B                     u6210:
  3477  077B                     l3555:
  3478  077B                     l3557:
  3479                           
  3480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3481  077B  3003               	movlw	3
  3482  077C  1683               	bsf	3,5	;RP0=1, select bank1
  3483  077D  1303               	bcf	3,6	;RP1=0, select bank1
  3484  077E  0537               	andwf	sprintf@flag^(0+128),w
  3485  077F  00AD               	movwf	??_sprintf^(0+128)
  3486  0780  3000               	movlw	0
  3487  0781  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3488  0782  00AE               	movwf	(??_sprintf+1)^(0+128)
  3489  0783  082D               	movf	??_sprintf^(0+128),w
  3490  0784  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3491  0785  1903               	btfsc	3,2
  3492  0786  2F88               	goto	u6221
  3493  0787  2F89               	goto	u6220
  3494  0788                     u6221:
  3495  0788  2F91               	goto	l3563
  3496  0789                     u6220:
  3497  0789                     l3559:
  3498                           
  3499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3500  0789  302D               	movlw	45
  3501  078A  00AD               	movwf	??_sprintf^(0+128)
  3502  078B  083F               	movf	sprintf@sp^(0+128),w
  3503  078C  0084               	movwf	4
  3504  078D  082D               	movf	??_sprintf^(0+128),w
  3505  078E  1383               	bcf	3,7	;select IRP bank0
  3506  078F  0080               	movwf	0
  3507  0790  2837               	goto	l3375
  3508  0791                     l3563:
  3509                           
  3510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3511  0791  3001               	movlw	1
  3512  0792  07A8               	addwf	sprintf@f^(0+128),f
  3513  0793  30FF               	movlw	-1
  3514  0794  0728               	addwf	sprintf@f^(0+128),w
  3515  0795  0084               	movwf	4
  3516  0796  120A  158A  200A  120A  118A  	fcall	stringdir
  3517  079B  00AD               	movwf	??_sprintf^(0+128)
  3518  079C  082D               	movf	??_sprintf^(0+128),w
  3519  079D  00CA               	movwf	sprintf@c^(0+128)
  3520  079E  084A               	movf	sprintf@c^(0+128),w
  3521  079F  1D03               	btfss	3,2
  3522  07A0  2FA2               	goto	u6231
  3523  07A1  2FA3               	goto	u6230
  3524  07A2                     u6231:
  3525  07A2  282A               	goto	l3371
  3526  07A3                     u6230:
  3527  07A3                     l3565:
  3528                           
  3529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3530  07A3  083F               	movf	sprintf@sp^(0+128),w
  3531  07A4  0084               	movwf	4
  3532  07A5  1383               	bcf	3,7	;select IRP bank0
  3533  07A6  0180               	clrf	0
  3534  07A7                     l264:
  3535  07A7  0008               	return
  3536  07A8                     __end_of_sprintf:
  3537                           
  3538                           	psect	text3
  3539  0C9D                     __ptext3:	
  3540 ;; *************** function _scale *****************
  3541 ;; Defined at:
  3542 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  scl             1    wreg     char 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  scl             1   56[BANK0 ] char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  4   38[BANK0 ] char 
  3549 ;; Registers used:
  3550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3556 ;;      Params:         0       4       0       0       0
  3557 ;;      Locals:         0       5       0       0       0
  3558 ;;      Temps:          0      10       0       0       0
  3559 ;;      Totals:         0      19       0       0       0
  3560 ;;Total ram usage:       19 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    3
  3563 ;; This function calls:
  3564 ;;		___awdiv
  3565 ;;		___awmod
  3566 ;;		___flmul
  3567 ;; This function is called by:
  3568 ;;		_sprintf
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           
  3573                           ;psect for function _scale
  3574  0C9D                     _scale:
  3575                           
  3576                           ;incstack = 0
  3577                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3578                           ;scale@scl stored from wreg
  3579  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3580  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3581  0C9F  00D8               	movwf	scale@scl
  3582  0CA0                     l3271:
  3583                           
  3584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3585  0CA0  1FD8               	btfss	scale@scl,7
  3586  0CA1  2CA3               	goto	u5561
  3587  0CA2  2CA4               	goto	u5560
  3588  0CA3                     u5561:
  3589  0CA3  2E53               	goto	l3293
  3590  0CA4                     u5560:
  3591  0CA4                     l3273:
  3592                           
  3593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3594  0CA4  09D8               	comf	scale@scl,f
  3595  0CA5  0AD8               	incf	scale@scl,f
  3596  0CA6                     l3275:
  3597                           
  3598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3599  0CA6  0858               	movf	scale@scl,w
  3600  0CA7  3A80               	xorlw	128
  3601  0CA8  3E12               	addlw	-238
  3602  0CA9  1C03               	skipc
  3603  0CAA  2CAC               	goto	u5571
  3604  0CAB  2CAD               	goto	u5570
  3605  0CAC                     u5571:
  3606  0CAC  2D97               	goto	l3283
  3607  0CAD                     u5570:
  3608  0CAD                     l3277:
  3609                           
  3610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3611  0CAD  300A               	movlw	10
  3612  0CAE  00A3               	movwf	___awdiv@divisor
  3613  0CAF  3000               	movlw	0
  3614  0CB0  00A4               	movwf	___awdiv@divisor+1
  3615  0CB1  0858               	movf	scale@scl,w
  3616  0CB2  00F6               	movwf	___awmod@dividend
  3617  0CB3  01F7               	clrf	___awmod@dividend+1
  3618  0CB4  1BF6               	btfsc	___awmod@dividend,7
  3619  0CB5  03F7               	decf	___awmod@dividend+1,f
  3620  0CB6  3064               	movlw	100
  3621  0CB7  00F4               	movwf	___awmod@divisor
  3622  0CB8  3000               	movlw	0
  3623  0CB9  00F5               	movwf	___awmod@divisor+1
  3624  0CBA  160A  158A  26C1  120A  158A  	fcall	___awmod
  3625  0CBF  0875               	movf	?___awmod+1,w
  3626  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3627  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3628  0CC2  00A6               	movwf	___awdiv@dividend+1
  3629  0CC3  0874               	movf	?___awmod,w
  3630  0CC4  00A5               	movwf	___awdiv@dividend
  3631  0CC5  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3632  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3633  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3634  0CCC  0823               	movf	?___awdiv,w
  3635  0CCD  00CA               	movwf	??_scale
  3636  0CCE  3001               	movlw	1
  3637  0CCF                     u5585:
  3638  0CCF  1003               	clrc
  3639  0CD0  0DCA               	rlf	??_scale,f
  3640  0CD1  3EFF               	addlw	-1
  3641  0CD2  1D03               	skipz
  3642  0CD3  2CCF               	goto	u5585
  3643  0CD4  1003               	clrc
  3644  0CD5  0D4A               	rlf	??_scale,w
  3645  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3646  0CD7  0084               	movwf	4
  3647  0CD8  120A  158A  200A  120A  158A  	fcall	stringdir
  3648  0CDD  00CB               	movwf	??_scale+1
  3649  0CDE  120A  158A  200A  120A  158A  	fcall	stringdir
  3650  0CE3  00CC               	movwf	??_scale+2
  3651  0CE4  120A  158A  200A  120A  158A  	fcall	stringdir
  3652  0CE9  00CD               	movwf	??_scale+3
  3653  0CEA  120A  158A  200A  120A  158A  	fcall	stringdir
  3654  0CEF  00CE               	movwf	??_scale+4
  3655  0CF0  084E               	movf	??_scale+4,w
  3656  0CF1  00AF               	movwf	___flmul@b+3
  3657  0CF2  084D               	movf	??_scale+3,w
  3658  0CF3  00AE               	movwf	___flmul@b+2
  3659  0CF4  084C               	movf	??_scale+2,w
  3660  0CF5  00AD               	movwf	___flmul@b+1
  3661  0CF6  084B               	movf	??_scale+1,w
  3662  0CF7  00AC               	movwf	___flmul@b
  3663  0CF8  3064               	movlw	100
  3664  0CF9  00A3               	movwf	___awdiv@divisor
  3665  0CFA  3000               	movlw	0
  3666  0CFB  00A4               	movwf	___awdiv@divisor+1
  3667  0CFC  0858               	movf	scale@scl,w
  3668  0CFD  00A5               	movwf	___awdiv@dividend
  3669  0CFE  01A6               	clrf	___awdiv@dividend+1
  3670  0CFF  1BA5               	btfsc	___awdiv@dividend,7
  3671  0D00  03A6               	decf	___awdiv@dividend+1,f
  3672  0D01  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3673  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3674  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3675  0D08  0823               	movf	?___awdiv,w
  3676  0D09  00CF               	movwf	??_scale+5
  3677  0D0A  3001               	movlw	1
  3678  0D0B                     u5595:
  3679  0D0B  1003               	clrc
  3680  0D0C  0DCF               	rlf	??_scale+5,f
  3681  0D0D  3EFF               	addlw	-1
  3682  0D0E  1D03               	skipz
  3683  0D0F  2D0B               	goto	u5595
  3684  0D10  1003               	clrc
  3685  0D11  0D4F               	rlf	??_scale+5,w
  3686  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3687  0D13  0084               	movwf	4
  3688  0D14  120A  158A  200A  120A  158A  	fcall	stringdir
  3689  0D19  00D0               	movwf	??_scale+6
  3690  0D1A  120A  158A  200A  120A  158A  	fcall	stringdir
  3691  0D1F  00D1               	movwf	??_scale+7
  3692  0D20  120A  158A  200A  120A  158A  	fcall	stringdir
  3693  0D25  00D2               	movwf	??_scale+8
  3694  0D26  120A  158A  200A  120A  158A  	fcall	stringdir
  3695  0D2B  00D3               	movwf	??_scale+9
  3696  0D2C  0853               	movf	??_scale+9,w
  3697  0D2D  00B3               	movwf	___flmul@a+3
  3698  0D2E  0852               	movf	??_scale+8,w
  3699  0D2F  00B2               	movwf	___flmul@a+2
  3700  0D30  0851               	movf	??_scale+7,w
  3701  0D31  00B1               	movwf	___flmul@a+1
  3702  0D32  0850               	movf	??_scale+6,w
  3703  0D33  00B0               	movwf	___flmul@a
  3704  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3705  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3706  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3707  0D3B  082F               	movf	?___flmul+3,w
  3708  0D3C  00D7               	movwf	_scale$985+3
  3709  0D3D  082E               	movf	?___flmul+2,w
  3710  0D3E  00D6               	movwf	_scale$985+2
  3711  0D3F  082D               	movf	?___flmul+1,w
  3712  0D40  00D5               	movwf	_scale$985+1
  3713  0D41  082C               	movf	?___flmul,w
  3714  0D42  00D4               	movwf	_scale$985
  3715                           
  3716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3717  0D43  300A               	movlw	10
  3718  0D44  00F4               	movwf	___awmod@divisor
  3719  0D45  3000               	movlw	0
  3720  0D46  00F5               	movwf	___awmod@divisor+1
  3721  0D47  0858               	movf	scale@scl,w
  3722  0D48  00F6               	movwf	___awmod@dividend
  3723  0D49  01F7               	clrf	___awmod@dividend+1
  3724  0D4A  1BF6               	btfsc	___awmod@dividend,7
  3725  0D4B  03F7               	decf	___awmod@dividend+1,f
  3726  0D4C  160A  158A  26C1  120A  158A  	fcall	___awmod
  3727  0D51  0874               	movf	?___awmod,w
  3728  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3730  0D54  00CA               	movwf	??_scale
  3731  0D55  3001               	movlw	1
  3732  0D56                     u5605:
  3733  0D56  1003               	clrc
  3734  0D57  0DCA               	rlf	??_scale,f
  3735  0D58  3EFF               	addlw	-1
  3736  0D59  1D03               	skipz
  3737  0D5A  2D56               	goto	u5605
  3738  0D5B  1003               	clrc
  3739  0D5C  0D4A               	rlf	??_scale,w
  3740  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3741  0D5E  0084               	movwf	4
  3742  0D5F  120A  158A  200A  120A  158A  	fcall	stringdir
  3743  0D64  00CB               	movwf	??_scale+1
  3744  0D65  120A  158A  200A  120A  158A  	fcall	stringdir
  3745  0D6A  00CC               	movwf	??_scale+2
  3746  0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  3747  0D70  00CD               	movwf	??_scale+3
  3748  0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  3749  0D76  00CE               	movwf	??_scale+4
  3750  0D77  084E               	movf	??_scale+4,w
  3751  0D78  00AF               	movwf	___flmul@b+3
  3752  0D79  084D               	movf	??_scale+3,w
  3753  0D7A  00AE               	movwf	___flmul@b+2
  3754  0D7B  084C               	movf	??_scale+2,w
  3755  0D7C  00AD               	movwf	___flmul@b+1
  3756  0D7D  084B               	movf	??_scale+1,w
  3757  0D7E  00AC               	movwf	___flmul@b
  3758  0D7F  0857               	movf	_scale$985+3,w
  3759  0D80  00B3               	movwf	___flmul@a+3
  3760  0D81  0856               	movf	_scale$985+2,w
  3761  0D82  00B2               	movwf	___flmul@a+2
  3762  0D83  0855               	movf	_scale$985+1,w
  3763  0D84  00B1               	movwf	___flmul@a+1
  3764  0D85  0854               	movf	_scale$985,w
  3765  0D86  00B0               	movwf	___flmul@a
  3766  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3767  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3768  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3769  0D8E  082F               	movf	?___flmul+3,w
  3770  0D8F  00C9               	movwf	?_scale+3
  3771  0D90  082E               	movf	?___flmul+2,w
  3772  0D91  00C8               	movwf	?_scale+2
  3773  0D92  082D               	movf	?___flmul+1,w
  3774  0D93  00C7               	movwf	?_scale+1
  3775  0D94  082C               	movf	?___flmul,w
  3776  0D95  00C6               	movwf	?_scale
  3777  0D96  2FFF               	goto	l198
  3778  0D97                     l3283:
  3779  0D97  0858               	movf	scale@scl,w
  3780  0D98  3A80               	xorlw	128
  3781  0D99  3E75               	addlw	-139
  3782  0D9A  1C03               	skipc
  3783  0D9B  2D9D               	goto	u5611
  3784  0D9C  2D9E               	goto	u5610
  3785  0D9D                     u5611:
  3786  0D9D  2E26               	goto	l3289
  3787  0D9E                     u5610:
  3788  0D9E                     l3285:
  3789                           
  3790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3791  0D9E  300A               	movlw	10
  3792  0D9F  00F4               	movwf	___awmod@divisor
  3793  0DA0  3000               	movlw	0
  3794  0DA1  00F5               	movwf	___awmod@divisor+1
  3795  0DA2  0858               	movf	scale@scl,w
  3796  0DA3  00F6               	movwf	___awmod@dividend
  3797  0DA4  01F7               	clrf	___awmod@dividend+1
  3798  0DA5  1BF6               	btfsc	___awmod@dividend,7
  3799  0DA6  03F7               	decf	___awmod@dividend+1,f
  3800  0DA7  160A  158A  26C1  120A  158A  	fcall	___awmod
  3801  0DAC  0874               	movf	?___awmod,w
  3802  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3803  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3804  0DAF  00CA               	movwf	??_scale
  3805  0DB0  3001               	movlw	1
  3806  0DB1                     u5625:
  3807  0DB1  1003               	clrc
  3808  0DB2  0DCA               	rlf	??_scale,f
  3809  0DB3  3EFF               	addlw	-1
  3810  0DB4  1D03               	skipz
  3811  0DB5  2DB1               	goto	u5625
  3812  0DB6  1003               	clrc
  3813  0DB7  0D4A               	rlf	??_scale,w
  3814  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3815  0DB9  0084               	movwf	4
  3816  0DBA  120A  158A  200A  120A  158A  	fcall	stringdir
  3817  0DBF  00CB               	movwf	??_scale+1
  3818  0DC0  120A  158A  200A  120A  158A  	fcall	stringdir
  3819  0DC5  00CC               	movwf	??_scale+2
  3820  0DC6  120A  158A  200A  120A  158A  	fcall	stringdir
  3821  0DCB  00CD               	movwf	??_scale+3
  3822  0DCC  120A  158A  200A  120A  158A  	fcall	stringdir
  3823  0DD1  00CE               	movwf	??_scale+4
  3824  0DD2  084E               	movf	??_scale+4,w
  3825  0DD3  00AF               	movwf	___flmul@b+3
  3826  0DD4  084D               	movf	??_scale+3,w
  3827  0DD5  00AE               	movwf	___flmul@b+2
  3828  0DD6  084C               	movf	??_scale+2,w
  3829  0DD7  00AD               	movwf	___flmul@b+1
  3830  0DD8  084B               	movf	??_scale+1,w
  3831  0DD9  00AC               	movwf	___flmul@b
  3832  0DDA  300A               	movlw	10
  3833  0DDB  00A3               	movwf	___awdiv@divisor
  3834  0DDC  3000               	movlw	0
  3835  0DDD  00A4               	movwf	___awdiv@divisor+1
  3836  0DDE  0858               	movf	scale@scl,w
  3837  0DDF  00A5               	movwf	___awdiv@dividend
  3838  0DE0  01A6               	clrf	___awdiv@dividend+1
  3839  0DE1  1BA5               	btfsc	___awdiv@dividend,7
  3840  0DE2  03A6               	decf	___awdiv@dividend+1,f
  3841  0DE3  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3842  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3844  0DEA  0823               	movf	?___awdiv,w
  3845  0DEB  00CF               	movwf	??_scale+5
  3846  0DEC  3001               	movlw	1
  3847  0DED                     u5635:
  3848  0DED  1003               	clrc
  3849  0DEE  0DCF               	rlf	??_scale+5,f
  3850  0DEF  3EFF               	addlw	-1
  3851  0DF0  1D03               	skipz
  3852  0DF1  2DED               	goto	u5635
  3853  0DF2  1003               	clrc
  3854  0DF3  0D4F               	rlf	??_scale+5,w
  3855  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3856  0DF5  0084               	movwf	4
  3857  0DF6  120A  158A  200A  120A  158A  	fcall	stringdir
  3858  0DFB  00D0               	movwf	??_scale+6
  3859  0DFC  120A  158A  200A  120A  158A  	fcall	stringdir
  3860  0E01  00D1               	movwf	??_scale+7
  3861  0E02  120A  158A  200A  120A  158A  	fcall	stringdir
  3862  0E07  00D2               	movwf	??_scale+8
  3863  0E08  120A  158A  200A  120A  158A  	fcall	stringdir
  3864  0E0D  00D3               	movwf	??_scale+9
  3865  0E0E  0853               	movf	??_scale+9,w
  3866  0E0F  00B3               	movwf	___flmul@a+3
  3867  0E10  0852               	movf	??_scale+8,w
  3868  0E11  00B2               	movwf	___flmul@a+2
  3869  0E12  0851               	movf	??_scale+7,w
  3870  0E13  00B1               	movwf	___flmul@a+1
  3871  0E14  0850               	movf	??_scale+6,w
  3872  0E15  00B0               	movwf	___flmul@a
  3873  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3874  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3875  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3876  0E1D  082F               	movf	?___flmul+3,w
  3877  0E1E  00C9               	movwf	?_scale+3
  3878  0E1F  082E               	movf	?___flmul+2,w
  3879  0E20  00C8               	movwf	?_scale+2
  3880  0E21  082D               	movf	?___flmul+1,w
  3881  0E22  00C7               	movwf	?_scale+1
  3882  0E23  082C               	movf	?___flmul,w
  3883  0E24  00C6               	movwf	?_scale
  3884  0E25  2FFF               	goto	l198
  3885  0E26                     l3289:
  3886                           
  3887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3888  0E26  0858               	movf	scale@scl,w
  3889  0E27  00CA               	movwf	??_scale
  3890  0E28  3001               	movlw	1
  3891  0E29                     u5645:
  3892  0E29  1003               	clrc
  3893  0E2A  0DCA               	rlf	??_scale,f
  3894  0E2B  3EFF               	addlw	-1
  3895  0E2C  1D03               	skipz
  3896  0E2D  2E29               	goto	u5645
  3897  0E2E  1003               	clrc
  3898  0E2F  0D4A               	rlf	??_scale,w
  3899  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3900  0E31  0084               	movwf	4
  3901  0E32  120A  158A  200A  120A  158A  	fcall	stringdir
  3902  0E37  00CB               	movwf	??_scale+1
  3903  0E38  120A  158A  200A  120A  158A  	fcall	stringdir
  3904  0E3D  00CC               	movwf	??_scale+2
  3905  0E3E  120A  158A  200A  120A  158A  	fcall	stringdir
  3906  0E43  00CD               	movwf	??_scale+3
  3907  0E44  120A  158A  200A  120A  158A  	fcall	stringdir
  3908  0E49  00CE               	movwf	??_scale+4
  3909  0E4A  084E               	movf	??_scale+4,w
  3910  0E4B  00C9               	movwf	?_scale+3
  3911  0E4C  084D               	movf	??_scale+3,w
  3912  0E4D  00C8               	movwf	?_scale+2
  3913  0E4E  084C               	movf	??_scale+2,w
  3914  0E4F  00C7               	movwf	?_scale+1
  3915  0E50  084B               	movf	??_scale+1,w
  3916  0E51  00C6               	movwf	?_scale
  3917  0E52  2FFF               	goto	l198
  3918  0E53                     l3293:
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3921  0E53  0858               	movf	scale@scl,w
  3922  0E54  3A80               	xorlw	128
  3923  0E55  3E12               	addlw	-238
  3924  0E56  1C03               	skipc
  3925  0E57  2E59               	goto	u5651
  3926  0E58  2E5A               	goto	u5650
  3927  0E59                     u5651:
  3928  0E59  2F44               	goto	l3301
  3929  0E5A                     u5650:
  3930  0E5A                     l3295:
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3933  0E5A  300A               	movlw	10
  3934  0E5B  00A3               	movwf	___awdiv@divisor
  3935  0E5C  3000               	movlw	0
  3936  0E5D  00A4               	movwf	___awdiv@divisor+1
  3937  0E5E  0858               	movf	scale@scl,w
  3938  0E5F  00F6               	movwf	___awmod@dividend
  3939  0E60  01F7               	clrf	___awmod@dividend+1
  3940  0E61  1BF6               	btfsc	___awmod@dividend,7
  3941  0E62  03F7               	decf	___awmod@dividend+1,f
  3942  0E63  3064               	movlw	100
  3943  0E64  00F4               	movwf	___awmod@divisor
  3944  0E65  3000               	movlw	0
  3945  0E66  00F5               	movwf	___awmod@divisor+1
  3946  0E67  160A  158A  26C1  120A  158A  	fcall	___awmod
  3947  0E6C  0875               	movf	?___awmod+1,w
  3948  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3949  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3950  0E6F  00A6               	movwf	___awdiv@dividend+1
  3951  0E70  0874               	movf	?___awmod,w
  3952  0E71  00A5               	movwf	___awdiv@dividend
  3953  0E72  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3954  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3955  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3956  0E79  0823               	movf	?___awdiv,w
  3957  0E7A  00CA               	movwf	??_scale
  3958  0E7B  3001               	movlw	1
  3959  0E7C                     u5665:
  3960  0E7C  1003               	clrc
  3961  0E7D  0DCA               	rlf	??_scale,f
  3962  0E7E  3EFF               	addlw	-1
  3963  0E7F  1D03               	skipz
  3964  0E80  2E7C               	goto	u5665
  3965  0E81  1003               	clrc
  3966  0E82  0D4A               	rlf	??_scale,w
  3967  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3968  0E84  0084               	movwf	4
  3969  0E85  120A  158A  200A  120A  158A  	fcall	stringdir
  3970  0E8A  00CB               	movwf	??_scale+1
  3971  0E8B  120A  158A  200A  120A  158A  	fcall	stringdir
  3972  0E90  00CC               	movwf	??_scale+2
  3973  0E91  120A  158A  200A  120A  158A  	fcall	stringdir
  3974  0E96  00CD               	movwf	??_scale+3
  3975  0E97  120A  158A  200A  120A  158A  	fcall	stringdir
  3976  0E9C  00CE               	movwf	??_scale+4
  3977  0E9D  084E               	movf	??_scale+4,w
  3978  0E9E  00AF               	movwf	___flmul@b+3
  3979  0E9F  084D               	movf	??_scale+3,w
  3980  0EA0  00AE               	movwf	___flmul@b+2
  3981  0EA1  084C               	movf	??_scale+2,w
  3982  0EA2  00AD               	movwf	___flmul@b+1
  3983  0EA3  084B               	movf	??_scale+1,w
  3984  0EA4  00AC               	movwf	___flmul@b
  3985  0EA5  3064               	movlw	100
  3986  0EA6  00A3               	movwf	___awdiv@divisor
  3987  0EA7  3000               	movlw	0
  3988  0EA8  00A4               	movwf	___awdiv@divisor+1
  3989  0EA9  0858               	movf	scale@scl,w
  3990  0EAA  00A5               	movwf	___awdiv@dividend
  3991  0EAB  01A6               	clrf	___awdiv@dividend+1
  3992  0EAC  1BA5               	btfsc	___awdiv@dividend,7
  3993  0EAD  03A6               	decf	___awdiv@dividend+1,f
  3994  0EAE  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3995  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3996  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3997  0EB5  0823               	movf	?___awdiv,w
  3998  0EB6  00CF               	movwf	??_scale+5
  3999  0EB7  3001               	movlw	1
  4000  0EB8                     u5675:
  4001  0EB8  1003               	clrc
  4002  0EB9  0DCF               	rlf	??_scale+5,f
  4003  0EBA  3EFF               	addlw	-1
  4004  0EBB  1D03               	skipz
  4005  0EBC  2EB8               	goto	u5675
  4006  0EBD  1003               	clrc
  4007  0EBE  0D4F               	rlf	??_scale+5,w
  4008  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4009  0EC0  0084               	movwf	4
  4010  0EC1  120A  158A  200A  120A  158A  	fcall	stringdir
  4011  0EC6  00D0               	movwf	??_scale+6
  4012  0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  4013  0ECC  00D1               	movwf	??_scale+7
  4014  0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  4015  0ED2  00D2               	movwf	??_scale+8
  4016  0ED3  120A  158A  200A  120A  158A  	fcall	stringdir
  4017  0ED8  00D3               	movwf	??_scale+9
  4018  0ED9  0853               	movf	??_scale+9,w
  4019  0EDA  00B3               	movwf	___flmul@a+3
  4020  0EDB  0852               	movf	??_scale+8,w
  4021  0EDC  00B2               	movwf	___flmul@a+2
  4022  0EDD  0851               	movf	??_scale+7,w
  4023  0EDE  00B1               	movwf	___flmul@a+1
  4024  0EDF  0850               	movf	??_scale+6,w
  4025  0EE0  00B0               	movwf	___flmul@a
  4026  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4027  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4028  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4029  0EE8  082F               	movf	?___flmul+3,w
  4030  0EE9  00D7               	movwf	_scale$985+3
  4031  0EEA  082E               	movf	?___flmul+2,w
  4032  0EEB  00D6               	movwf	_scale$985+2
  4033  0EEC  082D               	movf	?___flmul+1,w
  4034  0EED  00D5               	movwf	_scale$985+1
  4035  0EEE  082C               	movf	?___flmul,w
  4036  0EEF  00D4               	movwf	_scale$985
  4037                           
  4038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4039  0EF0  300A               	movlw	10
  4040  0EF1  00F4               	movwf	___awmod@divisor
  4041  0EF2  3000               	movlw	0
  4042  0EF3  00F5               	movwf	___awmod@divisor+1
  4043  0EF4  0858               	movf	scale@scl,w
  4044  0EF5  00F6               	movwf	___awmod@dividend
  4045  0EF6  01F7               	clrf	___awmod@dividend+1
  4046  0EF7  1BF6               	btfsc	___awmod@dividend,7
  4047  0EF8  03F7               	decf	___awmod@dividend+1,f
  4048  0EF9  160A  158A  26C1  120A  158A  	fcall	___awmod
  4049  0EFE  0874               	movf	?___awmod,w
  4050  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4051  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4052  0F01  00CA               	movwf	??_scale
  4053  0F02  3001               	movlw	1
  4054  0F03                     u5685:
  4055  0F03  1003               	clrc
  4056  0F04  0DCA               	rlf	??_scale,f
  4057  0F05  3EFF               	addlw	-1
  4058  0F06  1D03               	skipz
  4059  0F07  2F03               	goto	u5685
  4060  0F08  1003               	clrc
  4061  0F09  0D4A               	rlf	??_scale,w
  4062  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4063  0F0B  0084               	movwf	4
  4064  0F0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4065  0F11  00CB               	movwf	??_scale+1
  4066  0F12  120A  158A  200A  120A  158A  	fcall	stringdir
  4067  0F17  00CC               	movwf	??_scale+2
  4068  0F18  120A  158A  200A  120A  158A  	fcall	stringdir
  4069  0F1D  00CD               	movwf	??_scale+3
  4070  0F1E  120A  158A  200A  120A  158A  	fcall	stringdir
  4071  0F23  00CE               	movwf	??_scale+4
  4072  0F24  084E               	movf	??_scale+4,w
  4073  0F25  00AF               	movwf	___flmul@b+3
  4074  0F26  084D               	movf	??_scale+3,w
  4075  0F27  00AE               	movwf	___flmul@b+2
  4076  0F28  084C               	movf	??_scale+2,w
  4077  0F29  00AD               	movwf	___flmul@b+1
  4078  0F2A  084B               	movf	??_scale+1,w
  4079  0F2B  00AC               	movwf	___flmul@b
  4080  0F2C  0857               	movf	_scale$985+3,w
  4081  0F2D  00B3               	movwf	___flmul@a+3
  4082  0F2E  0856               	movf	_scale$985+2,w
  4083  0F2F  00B2               	movwf	___flmul@a+2
  4084  0F30  0855               	movf	_scale$985+1,w
  4085  0F31  00B1               	movwf	___flmul@a+1
  4086  0F32  0854               	movf	_scale$985,w
  4087  0F33  00B0               	movwf	___flmul@a
  4088  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4089  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4090  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4091  0F3B  082F               	movf	?___flmul+3,w
  4092  0F3C  00C9               	movwf	?_scale+3
  4093  0F3D  082E               	movf	?___flmul+2,w
  4094  0F3E  00C8               	movwf	?_scale+2
  4095  0F3F  082D               	movf	?___flmul+1,w
  4096  0F40  00C7               	movwf	?_scale+1
  4097  0F41  082C               	movf	?___flmul,w
  4098  0F42  00C6               	movwf	?_scale
  4099  0F43  2FFF               	goto	l198
  4100  0F44                     l3301:
  4101  0F44  0858               	movf	scale@scl,w
  4102  0F45  3A80               	xorlw	128
  4103  0F46  3E75               	addlw	-139
  4104  0F47  1C03               	skipc
  4105  0F48  2F4A               	goto	u5691
  4106  0F49  2F4B               	goto	u5690
  4107  0F4A                     u5691:
  4108  0F4A  2FD3               	goto	l3307
  4109  0F4B                     u5690:
  4110  0F4B                     l3303:
  4111                           
  4112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4113  0F4B  300A               	movlw	10
  4114  0F4C  00F4               	movwf	___awmod@divisor
  4115  0F4D  3000               	movlw	0
  4116  0F4E  00F5               	movwf	___awmod@divisor+1
  4117  0F4F  0858               	movf	scale@scl,w
  4118  0F50  00F6               	movwf	___awmod@dividend
  4119  0F51  01F7               	clrf	___awmod@dividend+1
  4120  0F52  1BF6               	btfsc	___awmod@dividend,7
  4121  0F53  03F7               	decf	___awmod@dividend+1,f
  4122  0F54  160A  158A  26C1  120A  158A  	fcall	___awmod
  4123  0F59  0874               	movf	?___awmod,w
  4124  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4125  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4126  0F5C  00CA               	movwf	??_scale
  4127  0F5D  3001               	movlw	1
  4128  0F5E                     u5705:
  4129  0F5E  1003               	clrc
  4130  0F5F  0DCA               	rlf	??_scale,f
  4131  0F60  3EFF               	addlw	-1
  4132  0F61  1D03               	skipz
  4133  0F62  2F5E               	goto	u5705
  4134  0F63  1003               	clrc
  4135  0F64  0D4A               	rlf	??_scale,w
  4136  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4137  0F66  0084               	movwf	4
  4138  0F67  120A  158A  200A  120A  158A  	fcall	stringdir
  4139  0F6C  00CB               	movwf	??_scale+1
  4140  0F6D  120A  158A  200A  120A  158A  	fcall	stringdir
  4141  0F72  00CC               	movwf	??_scale+2
  4142  0F73  120A  158A  200A  120A  158A  	fcall	stringdir
  4143  0F78  00CD               	movwf	??_scale+3
  4144  0F79  120A  158A  200A  120A  158A  	fcall	stringdir
  4145  0F7E  00CE               	movwf	??_scale+4
  4146  0F7F  084E               	movf	??_scale+4,w
  4147  0F80  00AF               	movwf	___flmul@b+3
  4148  0F81  084D               	movf	??_scale+3,w
  4149  0F82  00AE               	movwf	___flmul@b+2
  4150  0F83  084C               	movf	??_scale+2,w
  4151  0F84  00AD               	movwf	___flmul@b+1
  4152  0F85  084B               	movf	??_scale+1,w
  4153  0F86  00AC               	movwf	___flmul@b
  4154  0F87  300A               	movlw	10
  4155  0F88  00A3               	movwf	___awdiv@divisor
  4156  0F89  3000               	movlw	0
  4157  0F8A  00A4               	movwf	___awdiv@divisor+1
  4158  0F8B  0858               	movf	scale@scl,w
  4159  0F8C  00A5               	movwf	___awdiv@dividend
  4160  0F8D  01A6               	clrf	___awdiv@dividend+1
  4161  0F8E  1BA5               	btfsc	___awdiv@dividend,7
  4162  0F8F  03A6               	decf	___awdiv@dividend+1,f
  4163  0F90  120A  158A  20D3  120A  158A  	fcall	___awdiv
  4164  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4165  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4166  0F97  0823               	movf	?___awdiv,w
  4167  0F98  00CF               	movwf	??_scale+5
  4168  0F99  3001               	movlw	1
  4169  0F9A                     u5715:
  4170  0F9A  1003               	clrc
  4171  0F9B  0DCF               	rlf	??_scale+5,f
  4172  0F9C  3EFF               	addlw	-1
  4173  0F9D  1D03               	skipz
  4174  0F9E  2F9A               	goto	u5715
  4175  0F9F  1003               	clrc
  4176  0FA0  0D4F               	rlf	??_scale+5,w
  4177  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4178  0FA2  0084               	movwf	4
  4179  0FA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4180  0FA8  00D0               	movwf	??_scale+6
  4181  0FA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4182  0FAE  00D1               	movwf	??_scale+7
  4183  0FAF  120A  158A  200A  120A  158A  	fcall	stringdir
  4184  0FB4  00D2               	movwf	??_scale+8
  4185  0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  4186  0FBA  00D3               	movwf	??_scale+9
  4187  0FBB  0853               	movf	??_scale+9,w
  4188  0FBC  00B3               	movwf	___flmul@a+3
  4189  0FBD  0852               	movf	??_scale+8,w
  4190  0FBE  00B2               	movwf	___flmul@a+2
  4191  0FBF  0851               	movf	??_scale+7,w
  4192  0FC0  00B1               	movwf	___flmul@a+1
  4193  0FC1  0850               	movf	??_scale+6,w
  4194  0FC2  00B0               	movwf	___flmul@a
  4195  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4196  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4197  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4198  0FCA  082F               	movf	?___flmul+3,w
  4199  0FCB  00C9               	movwf	?_scale+3
  4200  0FCC  082E               	movf	?___flmul+2,w
  4201  0FCD  00C8               	movwf	?_scale+2
  4202  0FCE  082D               	movf	?___flmul+1,w
  4203  0FCF  00C7               	movwf	?_scale+1
  4204  0FD0  082C               	movf	?___flmul,w
  4205  0FD1  00C6               	movwf	?_scale
  4206  0FD2  2FFF               	goto	l198
  4207  0FD3                     l3307:
  4208                           
  4209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4210  0FD3  0858               	movf	scale@scl,w
  4211  0FD4  00CA               	movwf	??_scale
  4212  0FD5  3001               	movlw	1
  4213  0FD6                     u5725:
  4214  0FD6  1003               	clrc
  4215  0FD7  0DCA               	rlf	??_scale,f
  4216  0FD8  3EFF               	addlw	-1
  4217  0FD9  1D03               	skipz
  4218  0FDA  2FD6               	goto	u5725
  4219  0FDB  1003               	clrc
  4220  0FDC  0D4A               	rlf	??_scale,w
  4221  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4222  0FDE  0084               	movwf	4
  4223  0FDF  120A  158A  200A  120A  158A  	fcall	stringdir
  4224  0FE4  00CB               	movwf	??_scale+1
  4225  0FE5  120A  158A  200A  120A  158A  	fcall	stringdir
  4226  0FEA  00CC               	movwf	??_scale+2
  4227  0FEB  120A  158A  200A  120A  158A  	fcall	stringdir
  4228  0FF0  00CD               	movwf	??_scale+3
  4229  0FF1  120A  158A  200A  120A  158A  	fcall	stringdir
  4230  0FF6  00CE               	movwf	??_scale+4
  4231  0FF7  084E               	movf	??_scale+4,w
  4232  0FF8  00C9               	movwf	?_scale+3
  4233  0FF9  084D               	movf	??_scale+3,w
  4234  0FFA  00C8               	movwf	?_scale+2
  4235  0FFB  084C               	movf	??_scale+2,w
  4236  0FFC  00C7               	movwf	?_scale+1
  4237  0FFD  084B               	movf	??_scale+1,w
  4238  0FFE  00C6               	movwf	?_scale
  4239  0FFF                     l198:
  4240  0FFF  0008               	return
  4241  1000                     __end_of_scale:
  4242                           
  4243                           	psect	text4
  4244  1EC1                     __ptext4:	
  4245 ;; *************** function ___awmod *****************
  4246 ;; Defined at:
  4247 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  divisor         2    4[COMMON] int 
  4250 ;;  dividend        2    6[COMMON] int 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  sign            1    2[BANK0 ] unsigned char 
  4253 ;;  counter         1    1[BANK0 ] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  2    4[COMMON] int 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4263 ;;      Params:         4       0       0       0       0
  4264 ;;      Locals:         0       2       0       0       0
  4265 ;;      Temps:          0       1       0       0       0
  4266 ;;      Totals:         4       3       0       0       0
  4267 ;;Total ram usage:        7 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    1
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_scale
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           
  4278                           ;psect for function ___awmod
  4279  1EC1                     ___awmod:
  4280  1EC1                     l3185:	
  4281                           ;incstack = 0
  4282                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4283                           
  4284  1EC1  1283               	bcf	3,5	;RP0=0, select bank0
  4285  1EC2  1303               	bcf	3,6	;RP1=0, select bank0
  4286  1EC3  01A2               	clrf	___awmod@sign
  4287  1EC4                     l3187:
  4288  1EC4  1FF7               	btfss	___awmod@dividend+1,7
  4289  1EC5  2EC7               	goto	u5331
  4290  1EC6  2EC8               	goto	u5330
  4291  1EC7                     u5331:
  4292  1EC7  2ECF               	goto	l3193
  4293  1EC8                     u5330:
  4294  1EC8                     l3189:
  4295  1EC8  09F6               	comf	___awmod@dividend,f
  4296  1EC9  09F7               	comf	___awmod@dividend+1,f
  4297  1ECA  0AF6               	incf	___awmod@dividend,f
  4298  1ECB  1903               	skipnz
  4299  1ECC  0AF7               	incf	___awmod@dividend+1,f
  4300  1ECD                     l3191:
  4301  1ECD  01A2               	clrf	___awmod@sign
  4302  1ECE  0AA2               	incf	___awmod@sign,f
  4303  1ECF                     l3193:
  4304  1ECF  1FF5               	btfss	___awmod@divisor+1,7
  4305  1ED0  2ED2               	goto	u5341
  4306  1ED1  2ED3               	goto	u5340
  4307  1ED2                     u5341:
  4308  1ED2  2ED8               	goto	l3197
  4309  1ED3                     u5340:
  4310  1ED3                     l3195:
  4311  1ED3  09F4               	comf	___awmod@divisor,f
  4312  1ED4  09F5               	comf	___awmod@divisor+1,f
  4313  1ED5  0AF4               	incf	___awmod@divisor,f
  4314  1ED6  1903               	skipnz
  4315  1ED7  0AF5               	incf	___awmod@divisor+1,f
  4316  1ED8                     l3197:
  4317  1ED8  0874               	movf	___awmod@divisor,w
  4318  1ED9  0475               	iorwf	___awmod@divisor+1,w
  4319  1EDA  1903               	btfsc	3,2
  4320  1EDB  2EDD               	goto	u5351
  4321  1EDC  2EDE               	goto	u5350
  4322  1EDD                     u5351:
  4323  1EDD  2F0D               	goto	l3215
  4324  1EDE                     u5350:
  4325  1EDE                     l3199:
  4326  1EDE  01A1               	clrf	___awmod@counter
  4327  1EDF  0AA1               	incf	___awmod@counter,f
  4328  1EE0  2EEC               	goto	l3205
  4329  1EE1                     l3201:
  4330  1EE1  3001               	movlw	1
  4331  1EE2                     u5365:
  4332  1EE2  1003               	clrc
  4333  1EE3  0DF4               	rlf	___awmod@divisor,f
  4334  1EE4  0DF5               	rlf	___awmod@divisor+1,f
  4335  1EE5  3EFF               	addlw	-1
  4336  1EE6  1D03               	skipz
  4337  1EE7  2EE2               	goto	u5365
  4338  1EE8                     l3203:
  4339  1EE8  3001               	movlw	1
  4340  1EE9  00A0               	movwf	??___awmod
  4341  1EEA  0820               	movf	??___awmod,w
  4342  1EEB  07A1               	addwf	___awmod@counter,f
  4343  1EEC                     l3205:
  4344  1EEC  1FF5               	btfss	___awmod@divisor+1,7
  4345  1EED  2EEF               	goto	u5371
  4346  1EEE  2EF0               	goto	u5370
  4347  1EEF                     u5371:
  4348  1EEF  2EE1               	goto	l3201
  4349  1EF0                     u5370:
  4350  1EF0                     l3207:
  4351  1EF0  0875               	movf	___awmod@divisor+1,w
  4352  1EF1  0277               	subwf	___awmod@dividend+1,w
  4353  1EF2  1D03               	skipz
  4354  1EF3  2EF6               	goto	u5385
  4355  1EF4  0874               	movf	___awmod@divisor,w
  4356  1EF5  0276               	subwf	___awmod@dividend,w
  4357  1EF6                     u5385:
  4358  1EF6  1C03               	skipc
  4359  1EF7  2EF9               	goto	u5381
  4360  1EF8  2EFA               	goto	u5380
  4361  1EF9                     u5381:
  4362  1EF9  2F00               	goto	l3211
  4363  1EFA                     u5380:
  4364  1EFA                     l3209:
  4365  1EFA  0874               	movf	___awmod@divisor,w
  4366  1EFB  02F6               	subwf	___awmod@dividend,f
  4367  1EFC  0875               	movf	___awmod@divisor+1,w
  4368  1EFD  1C03               	skipc
  4369  1EFE  03F7               	decf	___awmod@dividend+1,f
  4370  1EFF  02F7               	subwf	___awmod@dividend+1,f
  4371  1F00                     l3211:
  4372  1F00  3001               	movlw	1
  4373  1F01                     u5395:
  4374  1F01  1003               	clrc
  4375  1F02  0CF5               	rrf	___awmod@divisor+1,f
  4376  1F03  0CF4               	rrf	___awmod@divisor,f
  4377  1F04  3EFF               	addlw	-1
  4378  1F05  1D03               	skipz
  4379  1F06  2F01               	goto	u5395
  4380  1F07                     l3213:
  4381  1F07  3001               	movlw	1
  4382  1F08  02A1               	subwf	___awmod@counter,f
  4383  1F09  1D03               	btfss	3,2
  4384  1F0A  2F0C               	goto	u5401
  4385  1F0B  2F0D               	goto	u5400
  4386  1F0C                     u5401:
  4387  1F0C  2EF0               	goto	l3207
  4388  1F0D                     u5400:
  4389  1F0D                     l3215:
  4390  1F0D  0822               	movf	___awmod@sign,w
  4391  1F0E  1903               	btfsc	3,2
  4392  1F0F  2F11               	goto	u5411
  4393  1F10  2F12               	goto	u5410
  4394  1F11                     u5411:
  4395  1F11  2F17               	goto	l3219
  4396  1F12                     u5410:
  4397  1F12                     l3217:
  4398  1F12  09F6               	comf	___awmod@dividend,f
  4399  1F13  09F7               	comf	___awmod@dividend+1,f
  4400  1F14  0AF6               	incf	___awmod@dividend,f
  4401  1F15  1903               	skipnz
  4402  1F16  0AF7               	incf	___awmod@dividend+1,f
  4403  1F17                     l3219:
  4404  1F17  0877               	movf	___awmod@dividend+1,w
  4405  1F18  00F5               	movwf	?___awmod+1
  4406  1F19  0876               	movf	___awmod@dividend,w
  4407  1F1A  00F4               	movwf	?___awmod
  4408  1F1B                     l434:
  4409  1F1B  0008               	return
  4410  1F1C                     __end_of___awmod:
  4411                           
  4412                           	psect	text5
  4413  08D3                     __ptext5:	
  4414 ;; *************** function ___awdiv *****************
  4415 ;; Defined at:
  4416 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  divisor         2    3[BANK0 ] int 
  4419 ;;  dividend        2    5[BANK0 ] int 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  quotient        2   10[BANK0 ] int 
  4422 ;;  sign            1    9[BANK0 ] unsigned char 
  4423 ;;  counter         1    8[BANK0 ] unsigned char 
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  2    3[BANK0 ] int 
  4426 ;; Registers used:
  4427 ;;		wreg, status,2, status,0
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4433 ;;      Params:         0       4       0       0       0
  4434 ;;      Locals:         0       4       0       0       0
  4435 ;;      Temps:          0       1       0       0       0
  4436 ;;      Totals:         0       9       0       0       0
  4437 ;;Total ram usage:        9 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    1
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_conversion
  4444 ;;		_scale
  4445 ;;		_sprintf
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           
  4450                           ;psect for function ___awdiv
  4451  08D3                     ___awdiv:
  4452  08D3                     l2037:	
  4453                           ;incstack = 0
  4454                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4455                           
  4456  08D3  1283               	bcf	3,5	;RP0=0, select bank0
  4457  08D4  1303               	bcf	3,6	;RP1=0, select bank0
  4458  08D5  01A9               	clrf	___awdiv@sign
  4459  08D6                     l2039:
  4460  08D6  1FA4               	btfss	___awdiv@divisor+1,7
  4461  08D7  28D9               	goto	u2701
  4462  08D8  28DA               	goto	u2700
  4463  08D9                     u2701:
  4464  08D9  28E1               	goto	l2045
  4465  08DA                     u2700:
  4466  08DA                     l2041:
  4467  08DA  09A3               	comf	___awdiv@divisor,f
  4468  08DB  09A4               	comf	___awdiv@divisor+1,f
  4469  08DC  0AA3               	incf	___awdiv@divisor,f
  4470  08DD  1903               	skipnz
  4471  08DE  0AA4               	incf	___awdiv@divisor+1,f
  4472  08DF                     l2043:
  4473  08DF  01A9               	clrf	___awdiv@sign
  4474  08E0  0AA9               	incf	___awdiv@sign,f
  4475  08E1                     l2045:
  4476  08E1  1FA6               	btfss	___awdiv@dividend+1,7
  4477  08E2  28E4               	goto	u2711
  4478  08E3  28E5               	goto	u2710
  4479  08E4                     u2711:
  4480  08E4  28EE               	goto	l2051
  4481  08E5                     u2710:
  4482  08E5                     l2047:
  4483  08E5  09A5               	comf	___awdiv@dividend,f
  4484  08E6  09A6               	comf	___awdiv@dividend+1,f
  4485  08E7  0AA5               	incf	___awdiv@dividend,f
  4486  08E8  1903               	skipnz
  4487  08E9  0AA6               	incf	___awdiv@dividend+1,f
  4488  08EA                     l2049:
  4489  08EA  3001               	movlw	1
  4490  08EB  00A7               	movwf	??___awdiv
  4491  08EC  0827               	movf	??___awdiv,w
  4492  08ED  06A9               	xorwf	___awdiv@sign,f
  4493  08EE                     l2051:
  4494  08EE  01AA               	clrf	___awdiv@quotient
  4495  08EF  01AB               	clrf	___awdiv@quotient+1
  4496  08F0                     l2053:
  4497  08F0  0823               	movf	___awdiv@divisor,w
  4498  08F1  0424               	iorwf	___awdiv@divisor+1,w
  4499  08F2  1903               	btfsc	3,2
  4500  08F3  28F5               	goto	u2721
  4501  08F4  28F6               	goto	u2720
  4502  08F5                     u2721:
  4503  08F5  292D               	goto	l2073
  4504  08F6                     u2720:
  4505  08F6                     l2055:
  4506  08F6  01A8               	clrf	___awdiv@counter
  4507  08F7  0AA8               	incf	___awdiv@counter,f
  4508  08F8  2904               	goto	l2061
  4509  08F9                     l2057:
  4510  08F9  3001               	movlw	1
  4511  08FA                     u2735:
  4512  08FA  1003               	clrc
  4513  08FB  0DA3               	rlf	___awdiv@divisor,f
  4514  08FC  0DA4               	rlf	___awdiv@divisor+1,f
  4515  08FD  3EFF               	addlw	-1
  4516  08FE  1D03               	skipz
  4517  08FF  28FA               	goto	u2735
  4518  0900                     l2059:
  4519  0900  3001               	movlw	1
  4520  0901  00A7               	movwf	??___awdiv
  4521  0902  0827               	movf	??___awdiv,w
  4522  0903  07A8               	addwf	___awdiv@counter,f
  4523  0904                     l2061:
  4524  0904  1FA4               	btfss	___awdiv@divisor+1,7
  4525  0905  2907               	goto	u2741
  4526  0906  2908               	goto	u2740
  4527  0907                     u2741:
  4528  0907  28F9               	goto	l2057
  4529  0908                     u2740:
  4530  0908                     l2063:
  4531  0908  3001               	movlw	1
  4532  0909                     u2755:
  4533  0909  1003               	clrc
  4534  090A  0DAA               	rlf	___awdiv@quotient,f
  4535  090B  0DAB               	rlf	___awdiv@quotient+1,f
  4536  090C  3EFF               	addlw	-1
  4537  090D  1D03               	skipz
  4538  090E  2909               	goto	u2755
  4539  090F  0824               	movf	___awdiv@divisor+1,w
  4540  0910  0226               	subwf	___awdiv@dividend+1,w
  4541  0911  1D03               	skipz
  4542  0912  2915               	goto	u2765
  4543  0913  0823               	movf	___awdiv@divisor,w
  4544  0914  0225               	subwf	___awdiv@dividend,w
  4545  0915                     u2765:
  4546  0915  1C03               	skipc
  4547  0916  2918               	goto	u2761
  4548  0917  2919               	goto	u2760
  4549  0918                     u2761:
  4550  0918  2920               	goto	l2069
  4551  0919                     u2760:
  4552  0919                     l2065:
  4553  0919  0823               	movf	___awdiv@divisor,w
  4554  091A  02A5               	subwf	___awdiv@dividend,f
  4555  091B  0824               	movf	___awdiv@divisor+1,w
  4556  091C  1C03               	skipc
  4557  091D  03A6               	decf	___awdiv@dividend+1,f
  4558  091E  02A6               	subwf	___awdiv@dividend+1,f
  4559  091F                     l2067:
  4560  091F  142A               	bsf	___awdiv@quotient,0
  4561  0920                     l2069:
  4562  0920  3001               	movlw	1
  4563  0921                     u2775:
  4564  0921  1003               	clrc
  4565  0922  0CA4               	rrf	___awdiv@divisor+1,f
  4566  0923  0CA3               	rrf	___awdiv@divisor,f
  4567  0924  3EFF               	addlw	-1
  4568  0925  1D03               	skipz
  4569  0926  2921               	goto	u2775
  4570  0927                     l2071:
  4571  0927  3001               	movlw	1
  4572  0928  02A8               	subwf	___awdiv@counter,f
  4573  0929  1D03               	btfss	3,2
  4574  092A  292C               	goto	u2781
  4575  092B  292D               	goto	u2780
  4576  092C                     u2781:
  4577  092C  2908               	goto	l2063
  4578  092D                     u2780:
  4579  092D                     l2073:
  4580  092D  0829               	movf	___awdiv@sign,w
  4581  092E  1903               	btfsc	3,2
  4582  092F  2931               	goto	u2791
  4583  0930  2932               	goto	u2790
  4584  0931                     u2791:
  4585  0931  2937               	goto	l2077
  4586  0932                     u2790:
  4587  0932                     l2075:
  4588  0932  09AA               	comf	___awdiv@quotient,f
  4589  0933  09AB               	comf	___awdiv@quotient+1,f
  4590  0934  0AAA               	incf	___awdiv@quotient,f
  4591  0935  1903               	skipnz
  4592  0936  0AAB               	incf	___awdiv@quotient+1,f
  4593  0937                     l2077:
  4594  0937  082B               	movf	___awdiv@quotient+1,w
  4595  0938  00A4               	movwf	?___awdiv+1
  4596  0939  082A               	movf	___awdiv@quotient,w
  4597  093A  00A3               	movwf	?___awdiv
  4598  093B                     l421:
  4599  093B  0008               	return
  4600  093C                     __end_of___awdiv:
  4601                           
  4602                           	psect	text6
  4603  1BED                     __ptext6:	
  4604 ;; *************** function _isdigit *****************
  4605 ;; Defined at:
  4606 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  c               1    wreg     unsigned char 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  c               1    5[COMMON] unsigned char 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;		None               void
  4613 ;; Registers used:
  4614 ;;		wreg, status,2, status,0
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4620 ;;      Params:         0       0       0       0       0
  4621 ;;      Locals:         2       0       0       0       0
  4622 ;;      Temps:          0       0       0       0       0
  4623 ;;      Totals:         2       0       0       0       0
  4624 ;;Total ram usage:        2 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; Hardware stack levels required when called:    1
  4627 ;; This function calls:
  4628 ;;		Nothing
  4629 ;; This function is called by:
  4630 ;;		_sprintf
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           
  4635                           ;psect for function _isdigit
  4636  1BED                     _isdigit:
  4637                           
  4638                           ;incstack = 0
  4639                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4640                           ;isdigit@c stored from wreg
  4641  1BED  00F5               	movwf	isdigit@c
  4642  1BEE                     l2575:
  4643  1BEE  01F4               	clrf	_isdigit$800
  4644  1BEF                     l2577:
  4645  1BEF  303A               	movlw	58
  4646  1BF0  0275               	subwf	isdigit@c,w
  4647  1BF1  1803               	skipnc
  4648  1BF2  2BF4               	goto	u4101
  4649  1BF3  2BF5               	goto	u4100
  4650  1BF4                     u4101:
  4651  1BF4  2BFD               	goto	l2583
  4652  1BF5                     u4100:
  4653  1BF5                     l2579:
  4654  1BF5  3030               	movlw	48
  4655  1BF6  0275               	subwf	isdigit@c,w
  4656  1BF7  1C03               	skipc
  4657  1BF8  2BFA               	goto	u4111
  4658  1BF9  2BFB               	goto	u4110
  4659  1BFA                     u4111:
  4660  1BFA  2BFD               	goto	l2583
  4661  1BFB                     u4110:
  4662  1BFB                     l2581:
  4663  1BFB  01F4               	clrf	_isdigit$800
  4664  1BFC  0AF4               	incf	_isdigit$800,f
  4665  1BFD                     l2583:
  4666  1BFD  0C74               	rrf	_isdigit$800,w
  4667  1BFE                     l755:
  4668  1BFE  0008               	return
  4669  1BFF                     __end_of_isdigit:
  4670                           
  4671                           	psect	text7
  4672  136B                     __ptext7:	
  4673 ;; *************** function _fround *****************
  4674 ;; Defined at:
  4675 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  prec            1    wreg     unsigned char 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  prec            1   57[BANK0 ] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  4   38[BANK0 ] unsigned char 
  4682 ;; Registers used:
  4683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4689 ;;      Params:         0       4       0       0       0
  4690 ;;      Locals:         0       9       0       0       0
  4691 ;;      Temps:          0       7       0       0       0
  4692 ;;      Totals:         0      20       0       0       0
  4693 ;;Total ram usage:       20 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    3
  4696 ;; This function calls:
  4697 ;;		___flmul
  4698 ;;		___lwdiv
  4699 ;;		___lwmod
  4700 ;; This function is called by:
  4701 ;;		_sprintf
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           
  4706                           ;psect for function _fround
  4707  136B                     _fround:
  4708                           
  4709                           ;incstack = 0
  4710                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4711                           ;fround@prec stored from wreg
  4712  136B  1283               	bcf	3,5	;RP0=0, select bank0
  4713  136C  1303               	bcf	3,6	;RP1=0, select bank0
  4714  136D  00D9               	movwf	fround@prec
  4715  136E                     l3253:
  4716                           
  4717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4718  136E  306E               	movlw	110
  4719  136F  0259               	subwf	fround@prec,w
  4720  1370  1C03               	skipc
  4721  1371  2B73               	goto	u5481
  4722  1372  2B74               	goto	u5480
  4723  1373                     u5481:
  4724  1373  2C83               	goto	l3261
  4725  1374                     u5480:
  4726  1374                     l3255:
  4727                           
  4728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4729  1374  303F               	movlw	63
  4730  1375  00AF               	movwf	___flmul@b+3
  4731  1376  3000               	movlw	0
  4732  1377  00AE               	movwf	___flmul@b+2
  4733  1378  3000               	movlw	0
  4734  1379  00AD               	movwf	___flmul@b+1
  4735  137A  3000               	movlw	0
  4736  137B  00AC               	movwf	___flmul@b
  4737  137C  3064               	movlw	100
  4738  137D  00A2               	movwf	___lwdiv@divisor
  4739  137E  3000               	movlw	0
  4740  137F  00A3               	movwf	___lwdiv@divisor+1
  4741  1380  0859               	movf	fround@prec,w
  4742  1381  00CA               	movwf	??_fround
  4743  1382  01CB               	clrf	??_fround+1
  4744  1383  084A               	movf	??_fround,w
  4745  1384  00A4               	movwf	___lwdiv@dividend
  4746  1385  084B               	movf	??_fround+1,w
  4747  1386  00A5               	movwf	___lwdiv@dividend+1
  4748  1387  160A  158A  2581  160A  118A  	fcall	___lwdiv
  4749  138C  1283               	bcf	3,5	;RP0=0, select bank0
  4750  138D  1303               	bcf	3,6	;RP1=0, select bank0
  4751  138E  0822               	movf	?___lwdiv,w
  4752  138F  00CC               	movwf	??_fround+2
  4753  1390  3001               	movlw	1
  4754  1391                     u5495:
  4755  1391  1003               	clrc
  4756  1392  0DCC               	rlf	??_fround+2,f
  4757  1393  3EFF               	addlw	-1
  4758  1394  1D03               	skipz
  4759  1395  2B91               	goto	u5495
  4760  1396  1003               	clrc
  4761  1397  0D4C               	rlf	??_fround+2,w
  4762  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4763  1399  0084               	movwf	4
  4764  139A  120A  158A  200A  160A  118A  	fcall	stringdir
  4765  139F  00CD               	movwf	??_fround+3
  4766  13A0  120A  158A  200A  160A  118A  	fcall	stringdir
  4767  13A5  00CE               	movwf	??_fround+4
  4768  13A6  120A  158A  200A  160A  118A  	fcall	stringdir
  4769  13AB  00CF               	movwf	??_fround+5
  4770  13AC  120A  158A  200A  160A  118A  	fcall	stringdir
  4771  13B1  00D0               	movwf	??_fround+6
  4772  13B2  0850               	movf	??_fround+6,w
  4773  13B3  00B3               	movwf	___flmul@a+3
  4774  13B4  084F               	movf	??_fround+5,w
  4775  13B5  00B2               	movwf	___flmul@a+2
  4776  13B6  084E               	movf	??_fround+4,w
  4777  13B7  00B1               	movwf	___flmul@a+1
  4778  13B8  084D               	movf	??_fround+3,w
  4779  13B9  00B0               	movwf	___flmul@a
  4780  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  4781  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4782  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4783  13C1  082F               	movf	?___flmul+3,w
  4784  13C2  00D8               	movwf	_fround$983+3
  4785  13C3  082E               	movf	?___flmul+2,w
  4786  13C4  00D7               	movwf	_fround$983+2
  4787  13C5  082D               	movf	?___flmul+1,w
  4788  13C6  00D6               	movwf	_fround$983+1
  4789  13C7  082C               	movf	?___flmul,w
  4790  13C8  00D5               	movwf	_fround$983
  4791                           
  4792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4793  13C9  300A               	movlw	10
  4794  13CA  00A2               	movwf	___lwdiv@divisor
  4795  13CB  3000               	movlw	0
  4796  13CC  00A3               	movwf	___lwdiv@divisor+1
  4797  13CD  0859               	movf	fround@prec,w
  4798  13CE  00CA               	movwf	??_fround
  4799  13CF  01CB               	clrf	??_fround+1
  4800  13D0  084A               	movf	??_fround,w
  4801  13D1  00F6               	movwf	___lwmod@dividend
  4802  13D2  084B               	movf	??_fround+1,w
  4803  13D3  00F7               	movwf	___lwmod@dividend+1
  4804  13D4  3064               	movlw	100
  4805  13D5  00F4               	movwf	___lwmod@divisor
  4806  13D6  3000               	movlw	0
  4807  13D7  00F5               	movwf	___lwmod@divisor+1
  4808  13D8  160A  158A  24FF  160A  118A  	fcall	___lwmod
  4809  13DD  0875               	movf	?___lwmod+1,w
  4810  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  4811  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  4812  13E0  00A5               	movwf	___lwdiv@dividend+1
  4813  13E1  0874               	movf	?___lwmod,w
  4814  13E2  00A4               	movwf	___lwdiv@dividend
  4815  13E3  160A  158A  2581  160A  118A  	fcall	___lwdiv
  4816  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  4817  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  4818  13EA  0822               	movf	?___lwdiv,w
  4819  13EB  00CC               	movwf	??_fround+2
  4820  13EC  3001               	movlw	1
  4821  13ED                     u5505:
  4822  13ED  1003               	clrc
  4823  13EE  0DCC               	rlf	??_fround+2,f
  4824  13EF  3EFF               	addlw	-1
  4825  13F0  1D03               	skipz
  4826  13F1  2BED               	goto	u5505
  4827  13F2  1003               	clrc
  4828  13F3  0D4C               	rlf	??_fround+2,w
  4829  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4830  13F5  0084               	movwf	4
  4831  13F6  120A  158A  200A  160A  118A  	fcall	stringdir
  4832  13FB  00CD               	movwf	??_fround+3
  4833  13FC  120A  158A  200A  160A  118A  	fcall	stringdir
  4834  1401  00CE               	movwf	??_fround+4
  4835  1402  120A  158A  200A  160A  118A  	fcall	stringdir
  4836  1407  00CF               	movwf	??_fround+5
  4837  1408  120A  158A  200A  160A  118A  	fcall	stringdir
  4838  140D  00D0               	movwf	??_fround+6
  4839  140E  0850               	movf	??_fround+6,w
  4840  140F  00AF               	movwf	___flmul@b+3
  4841  1410  084F               	movf	??_fround+5,w
  4842  1411  00AE               	movwf	___flmul@b+2
  4843  1412  084E               	movf	??_fround+4,w
  4844  1413  00AD               	movwf	___flmul@b+1
  4845  1414  084D               	movf	??_fround+3,w
  4846  1415  00AC               	movwf	___flmul@b
  4847  1416  0858               	movf	_fround$983+3,w
  4848  1417  00B3               	movwf	___flmul@a+3
  4849  1418  0857               	movf	_fround$983+2,w
  4850  1419  00B2               	movwf	___flmul@a+2
  4851  141A  0856               	movf	_fround$983+1,w
  4852  141B  00B1               	movwf	___flmul@a+1
  4853  141C  0855               	movf	_fround$983,w
  4854  141D  00B0               	movwf	___flmul@a
  4855  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  4856  1423  1283               	bcf	3,5	;RP0=0, select bank0
  4857  1424  1303               	bcf	3,6	;RP1=0, select bank0
  4858  1425  082F               	movf	?___flmul+3,w
  4859  1426  00D4               	movwf	_fround$984+3
  4860  1427  082E               	movf	?___flmul+2,w
  4861  1428  00D3               	movwf	_fround$984+2
  4862  1429  082D               	movf	?___flmul+1,w
  4863  142A  00D2               	movwf	_fround$984+1
  4864  142B  082C               	movf	?___flmul,w
  4865  142C  00D1               	movwf	_fround$984
  4866                           
  4867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4868  142D  300A               	movlw	10
  4869  142E  00F4               	movwf	___lwmod@divisor
  4870  142F  3000               	movlw	0
  4871  1430  00F5               	movwf	___lwmod@divisor+1
  4872  1431  0859               	movf	fround@prec,w
  4873  1432  00CA               	movwf	??_fround
  4874  1433  01CB               	clrf	??_fround+1
  4875  1434  084A               	movf	??_fround,w
  4876  1435  00F6               	movwf	___lwmod@dividend
  4877  1436  084B               	movf	??_fround+1,w
  4878  1437  00F7               	movwf	___lwmod@dividend+1
  4879  1438  160A  158A  24FF  160A  118A  	fcall	___lwmod
  4880  143D  0874               	movf	?___lwmod,w
  4881  143E  1283               	bcf	3,5	;RP0=0, select bank0
  4882  143F  1303               	bcf	3,6	;RP1=0, select bank0
  4883  1440  00CC               	movwf	??_fround+2
  4884  1441  3001               	movlw	1
  4885  1442                     u5515:
  4886  1442  1003               	clrc
  4887  1443  0DCC               	rlf	??_fround+2,f
  4888  1444  3EFF               	addlw	-1
  4889  1445  1D03               	skipz
  4890  1446  2C42               	goto	u5515
  4891  1447  1003               	clrc
  4892  1448  0D4C               	rlf	??_fround+2,w
  4893  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4894  144A  0084               	movwf	4
  4895  144B  120A  158A  200A  160A  118A  	fcall	stringdir
  4896  1450  00CD               	movwf	??_fround+3
  4897  1451  120A  158A  200A  160A  118A  	fcall	stringdir
  4898  1456  00CE               	movwf	??_fround+4
  4899  1457  120A  158A  200A  160A  118A  	fcall	stringdir
  4900  145C  00CF               	movwf	??_fround+5
  4901  145D  120A  158A  200A  160A  118A  	fcall	stringdir
  4902  1462  00D0               	movwf	??_fround+6
  4903  1463  0850               	movf	??_fround+6,w
  4904  1464  00AF               	movwf	___flmul@b+3
  4905  1465  084F               	movf	??_fround+5,w
  4906  1466  00AE               	movwf	___flmul@b+2
  4907  1467  084E               	movf	??_fround+4,w
  4908  1468  00AD               	movwf	___flmul@b+1
  4909  1469  084D               	movf	??_fround+3,w
  4910  146A  00AC               	movwf	___flmul@b
  4911  146B  0854               	movf	_fround$984+3,w
  4912  146C  00B3               	movwf	___flmul@a+3
  4913  146D  0853               	movf	_fround$984+2,w
  4914  146E  00B2               	movwf	___flmul@a+2
  4915  146F  0852               	movf	_fround$984+1,w
  4916  1470  00B1               	movwf	___flmul@a+1
  4917  1471  0851               	movf	_fround$984,w
  4918  1472  00B0               	movwf	___flmul@a
  4919  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  4920  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4921  1479  1303               	bcf	3,6	;RP1=0, select bank0
  4922  147A  082F               	movf	?___flmul+3,w
  4923  147B  00C9               	movwf	?_fround+3
  4924  147C  082E               	movf	?___flmul+2,w
  4925  147D  00C8               	movwf	?_fround+2
  4926  147E  082D               	movf	?___flmul+1,w
  4927  147F  00C7               	movwf	?_fround+1
  4928  1480  082C               	movf	?___flmul,w
  4929  1481  00C6               	movwf	?_fround
  4930  1482  2D77               	goto	l191
  4931  1483                     l3261:
  4932  1483  300B               	movlw	11
  4933  1484  0259               	subwf	fround@prec,w
  4934  1485  1C03               	skipc
  4935  1486  2C88               	goto	u5521
  4936  1487  2C89               	goto	u5520
  4937  1488                     u5521:
  4938  1488  2D34               	goto	l3267
  4939  1489                     u5520:
  4940  1489                     l3263:
  4941                           
  4942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4943  1489  303F               	movlw	63
  4944  148A  00AF               	movwf	___flmul@b+3
  4945  148B  3000               	movlw	0
  4946  148C  00AE               	movwf	___flmul@b+2
  4947  148D  3000               	movlw	0
  4948  148E  00AD               	movwf	___flmul@b+1
  4949  148F  3000               	movlw	0
  4950  1490  00AC               	movwf	___flmul@b
  4951  1491  300A               	movlw	10
  4952  1492  00A2               	movwf	___lwdiv@divisor
  4953  1493  3000               	movlw	0
  4954  1494  00A3               	movwf	___lwdiv@divisor+1
  4955  1495  0859               	movf	fround@prec,w
  4956  1496  00CA               	movwf	??_fround
  4957  1497  01CB               	clrf	??_fround+1
  4958  1498  084A               	movf	??_fround,w
  4959  1499  00A4               	movwf	___lwdiv@dividend
  4960  149A  084B               	movf	??_fround+1,w
  4961  149B  00A5               	movwf	___lwdiv@dividend+1
  4962  149C  160A  158A  2581  160A  118A  	fcall	___lwdiv
  4963  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  4964  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  4965  14A3  0822               	movf	?___lwdiv,w
  4966  14A4  00CC               	movwf	??_fround+2
  4967  14A5  3001               	movlw	1
  4968  14A6                     u5535:
  4969  14A6  1003               	clrc
  4970  14A7  0DCC               	rlf	??_fround+2,f
  4971  14A8  3EFF               	addlw	-1
  4972  14A9  1D03               	skipz
  4973  14AA  2CA6               	goto	u5535
  4974  14AB  1003               	clrc
  4975  14AC  0D4C               	rlf	??_fround+2,w
  4976  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4977  14AE  0084               	movwf	4
  4978  14AF  120A  158A  200A  160A  118A  	fcall	stringdir
  4979  14B4  00CD               	movwf	??_fround+3
  4980  14B5  120A  158A  200A  160A  118A  	fcall	stringdir
  4981  14BA  00CE               	movwf	??_fround+4
  4982  14BB  120A  158A  200A  160A  118A  	fcall	stringdir
  4983  14C0  00CF               	movwf	??_fround+5
  4984  14C1  120A  158A  200A  160A  118A  	fcall	stringdir
  4985  14C6  00D0               	movwf	??_fround+6
  4986  14C7  0850               	movf	??_fround+6,w
  4987  14C8  00B3               	movwf	___flmul@a+3
  4988  14C9  084F               	movf	??_fround+5,w
  4989  14CA  00B2               	movwf	___flmul@a+2
  4990  14CB  084E               	movf	??_fround+4,w
  4991  14CC  00B1               	movwf	___flmul@a+1
  4992  14CD  084D               	movf	??_fround+3,w
  4993  14CE  00B0               	movwf	___flmul@a
  4994  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  4995  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  4996  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  4997  14D6  082F               	movf	?___flmul+3,w
  4998  14D7  00D8               	movwf	_fround$983+3
  4999  14D8  082E               	movf	?___flmul+2,w
  5000  14D9  00D7               	movwf	_fround$983+2
  5001  14DA  082D               	movf	?___flmul+1,w
  5002  14DB  00D6               	movwf	_fround$983+1
  5003  14DC  082C               	movf	?___flmul,w
  5004  14DD  00D5               	movwf	_fround$983
  5005                           
  5006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5007  14DE  300A               	movlw	10
  5008  14DF  00F4               	movwf	___lwmod@divisor
  5009  14E0  3000               	movlw	0
  5010  14E1  00F5               	movwf	___lwmod@divisor+1
  5011  14E2  0859               	movf	fround@prec,w
  5012  14E3  00CA               	movwf	??_fround
  5013  14E4  01CB               	clrf	??_fround+1
  5014  14E5  084A               	movf	??_fround,w
  5015  14E6  00F6               	movwf	___lwmod@dividend
  5016  14E7  084B               	movf	??_fround+1,w
  5017  14E8  00F7               	movwf	___lwmod@dividend+1
  5018  14E9  160A  158A  24FF  160A  118A  	fcall	___lwmod
  5019  14EE  0874               	movf	?___lwmod,w
  5020  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5021  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5022  14F1  00CC               	movwf	??_fround+2
  5023  14F2  3001               	movlw	1
  5024  14F3                     u5545:
  5025  14F3  1003               	clrc
  5026  14F4  0DCC               	rlf	??_fround+2,f
  5027  14F5  3EFF               	addlw	-1
  5028  14F6  1D03               	skipz
  5029  14F7  2CF3               	goto	u5545
  5030  14F8  1003               	clrc
  5031  14F9  0D4C               	rlf	??_fround+2,w
  5032  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5033  14FB  0084               	movwf	4
  5034  14FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5035  1501  00CD               	movwf	??_fround+3
  5036  1502  120A  158A  200A  160A  118A  	fcall	stringdir
  5037  1507  00CE               	movwf	??_fround+4
  5038  1508  120A  158A  200A  160A  118A  	fcall	stringdir
  5039  150D  00CF               	movwf	??_fround+5
  5040  150E  120A  158A  200A  160A  118A  	fcall	stringdir
  5041  1513  00D0               	movwf	??_fround+6
  5042  1514  0850               	movf	??_fround+6,w
  5043  1515  00AF               	movwf	___flmul@b+3
  5044  1516  084F               	movf	??_fround+5,w
  5045  1517  00AE               	movwf	___flmul@b+2
  5046  1518  084E               	movf	??_fround+4,w
  5047  1519  00AD               	movwf	___flmul@b+1
  5048  151A  084D               	movf	??_fround+3,w
  5049  151B  00AC               	movwf	___flmul@b
  5050  151C  0858               	movf	_fround$983+3,w
  5051  151D  00B3               	movwf	___flmul@a+3
  5052  151E  0857               	movf	_fround$983+2,w
  5053  151F  00B2               	movwf	___flmul@a+2
  5054  1520  0856               	movf	_fround$983+1,w
  5055  1521  00B1               	movwf	___flmul@a+1
  5056  1522  0855               	movf	_fround$983,w
  5057  1523  00B0               	movwf	___flmul@a
  5058  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  5059  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5060  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5061  152B  082F               	movf	?___flmul+3,w
  5062  152C  00C9               	movwf	?_fround+3
  5063  152D  082E               	movf	?___flmul+2,w
  5064  152E  00C8               	movwf	?_fround+2
  5065  152F  082D               	movf	?___flmul+1,w
  5066  1530  00C7               	movwf	?_fround+1
  5067  1531  082C               	movf	?___flmul,w
  5068  1532  00C6               	movwf	?_fround
  5069  1533  2D77               	goto	l191
  5070  1534                     l3267:
  5071                           
  5072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5073  1534  303F               	movlw	63
  5074  1535  00AF               	movwf	___flmul@b+3
  5075  1536  3000               	movlw	0
  5076  1537  00AE               	movwf	___flmul@b+2
  5077  1538  3000               	movlw	0
  5078  1539  00AD               	movwf	___flmul@b+1
  5079  153A  3000               	movlw	0
  5080  153B  00AC               	movwf	___flmul@b
  5081  153C  0859               	movf	fround@prec,w
  5082  153D  00CA               	movwf	??_fround
  5083  153E  3001               	movlw	1
  5084  153F                     u5555:
  5085  153F  1003               	clrc
  5086  1540  0DCA               	rlf	??_fround,f
  5087  1541  3EFF               	addlw	-1
  5088  1542  1D03               	skipz
  5089  1543  2D3F               	goto	u5555
  5090  1544  1003               	clrc
  5091  1545  0D4A               	rlf	??_fround,w
  5092  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5093  1547  0084               	movwf	4
  5094  1548  120A  158A  200A  160A  118A  	fcall	stringdir
  5095  154D  00CB               	movwf	??_fround+1
  5096  154E  120A  158A  200A  160A  118A  	fcall	stringdir
  5097  1553  00CC               	movwf	??_fround+2
  5098  1554  120A  158A  200A  160A  118A  	fcall	stringdir
  5099  1559  00CD               	movwf	??_fround+3
  5100  155A  120A  158A  200A  160A  118A  	fcall	stringdir
  5101  155F  00CE               	movwf	??_fround+4
  5102  1560  084E               	movf	??_fround+4,w
  5103  1561  00B3               	movwf	___flmul@a+3
  5104  1562  084D               	movf	??_fround+3,w
  5105  1563  00B2               	movwf	___flmul@a+2
  5106  1564  084C               	movf	??_fround+2,w
  5107  1565  00B1               	movwf	___flmul@a+1
  5108  1566  084B               	movf	??_fround+1,w
  5109  1567  00B0               	movwf	___flmul@a
  5110  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  5111  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5112  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5113  156F  082F               	movf	?___flmul+3,w
  5114  1570  00C9               	movwf	?_fround+3
  5115  1571  082E               	movf	?___flmul+2,w
  5116  1572  00C8               	movwf	?_fround+2
  5117  1573  082D               	movf	?___flmul+1,w
  5118  1574  00C7               	movwf	?_fround+1
  5119  1575  082C               	movf	?___flmul,w
  5120  1576  00C6               	movwf	?_fround
  5121  1577                     l191:
  5122  1577  0008               	return
  5123  1578                     __end_of_fround:
  5124                           
  5125                           	psect	text8
  5126  1CFF                     __ptext8:	
  5127 ;; *************** function ___lwmod *****************
  5128 ;; Defined at:
  5129 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  divisor         2    4[COMMON] unsigned int 
  5132 ;;  dividend        2    6[COMMON] unsigned int 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  counter         1    1[BANK0 ] unsigned char 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  2    4[COMMON] unsigned int 
  5137 ;; Registers used:
  5138 ;;		wreg, status,2, status,0
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5144 ;;      Params:         4       0       0       0       0
  5145 ;;      Locals:         0       1       0       0       0
  5146 ;;      Temps:          0       1       0       0       0
  5147 ;;      Totals:         4       2       0       0       0
  5148 ;;Total ram usage:        6 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    1
  5151 ;; This function calls:
  5152 ;;		Nothing
  5153 ;; This function is called by:
  5154 ;;		_fround
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           
  5159                           ;psect for function ___lwmod
  5160  1CFF                     ___lwmod:
  5161  1CFF                     l3223:	
  5162                           ;incstack = 0
  5163                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5164                           
  5165  1CFF  0874               	movf	___lwmod@divisor,w
  5166  1D00  0475               	iorwf	___lwmod@divisor+1,w
  5167  1D01  1903               	btfsc	3,2
  5168  1D02  2D04               	goto	u5421
  5169  1D03  2D05               	goto	u5420
  5170  1D04                     u5421:
  5171  1D04  2D36               	goto	l3241
  5172  1D05                     u5420:
  5173  1D05                     l3225:
  5174  1D05  1283               	bcf	3,5	;RP0=0, select bank0
  5175  1D06  1303               	bcf	3,6	;RP1=0, select bank0
  5176  1D07  01A1               	clrf	___lwmod@counter
  5177  1D08  0AA1               	incf	___lwmod@counter,f
  5178  1D09  2D15               	goto	l3231
  5179  1D0A                     l3227:
  5180  1D0A  3001               	movlw	1
  5181  1D0B                     u5435:
  5182  1D0B  1003               	clrc
  5183  1D0C  0DF4               	rlf	___lwmod@divisor,f
  5184  1D0D  0DF5               	rlf	___lwmod@divisor+1,f
  5185  1D0E  3EFF               	addlw	-1
  5186  1D0F  1D03               	skipz
  5187  1D10  2D0B               	goto	u5435
  5188  1D11                     l3229:
  5189  1D11  3001               	movlw	1
  5190  1D12  00A0               	movwf	??___lwmod
  5191  1D13  0820               	movf	??___lwmod,w
  5192  1D14  07A1               	addwf	___lwmod@counter,f
  5193  1D15                     l3231:
  5194  1D15  1FF5               	btfss	___lwmod@divisor+1,7
  5195  1D16  2D18               	goto	u5441
  5196  1D17  2D19               	goto	u5440
  5197  1D18                     u5441:
  5198  1D18  2D0A               	goto	l3227
  5199  1D19                     u5440:
  5200  1D19                     l3233:
  5201  1D19  0875               	movf	___lwmod@divisor+1,w
  5202  1D1A  0277               	subwf	___lwmod@dividend+1,w
  5203  1D1B  1D03               	skipz
  5204  1D1C  2D1F               	goto	u5455
  5205  1D1D  0874               	movf	___lwmod@divisor,w
  5206  1D1E  0276               	subwf	___lwmod@dividend,w
  5207  1D1F                     u5455:
  5208  1D1F  1C03               	skipc
  5209  1D20  2D22               	goto	u5451
  5210  1D21  2D23               	goto	u5450
  5211  1D22                     u5451:
  5212  1D22  2D29               	goto	l3237
  5213  1D23                     u5450:
  5214  1D23                     l3235:
  5215  1D23  0874               	movf	___lwmod@divisor,w
  5216  1D24  02F6               	subwf	___lwmod@dividend,f
  5217  1D25  0875               	movf	___lwmod@divisor+1,w
  5218  1D26  1C03               	skipc
  5219  1D27  03F7               	decf	___lwmod@dividend+1,f
  5220  1D28  02F7               	subwf	___lwmod@dividend+1,f
  5221  1D29                     l3237:
  5222  1D29  3001               	movlw	1
  5223  1D2A                     u5465:
  5224  1D2A  1003               	clrc
  5225  1D2B  0CF5               	rrf	___lwmod@divisor+1,f
  5226  1D2C  0CF4               	rrf	___lwmod@divisor,f
  5227  1D2D  3EFF               	addlw	-1
  5228  1D2E  1D03               	skipz
  5229  1D2F  2D2A               	goto	u5465
  5230  1D30                     l3239:
  5231  1D30  3001               	movlw	1
  5232  1D31  02A1               	subwf	___lwmod@counter,f
  5233  1D32  1D03               	btfss	3,2
  5234  1D33  2D35               	goto	u5471
  5235  1D34  2D36               	goto	u5470
  5236  1D35                     u5471:
  5237  1D35  2D19               	goto	l3233
  5238  1D36                     u5470:
  5239  1D36                     l3241:
  5240  1D36  0877               	movf	___lwmod@dividend+1,w
  5241  1D37  00F5               	movwf	?___lwmod+1
  5242  1D38  0876               	movf	___lwmod@dividend,w
  5243  1D39  00F4               	movwf	?___lwmod
  5244  1D3A                     l584:
  5245  1D3A  0008               	return
  5246  1D3B                     __end_of___lwmod:
  5247                           
  5248                           	psect	text9
  5249  1D81                     __ptext9:	
  5250 ;; *************** function ___lwdiv *****************
  5251 ;; Defined at:
  5252 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;  divisor         2    2[BANK0 ] unsigned int 
  5255 ;;  dividend        2    4[BANK0 ] unsigned int 
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;  quotient        2    7[BANK0 ] unsigned int 
  5258 ;;  counter         1    9[BANK0 ] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  2    2[BANK0 ] unsigned int 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5268 ;;      Params:         0       4       0       0       0
  5269 ;;      Locals:         0       3       0       0       0
  5270 ;;      Temps:          0       1       0       0       0
  5271 ;;      Totals:         0       8       0       0       0
  5272 ;;Total ram usage:        8 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    1
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_fround
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           
  5283                           ;psect for function ___lwdiv
  5284  1D81                     ___lwdiv:
  5285  1D81                     l2119:	
  5286                           ;incstack = 0
  5287                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5288                           
  5289  1D81  1283               	bcf	3,5	;RP0=0, select bank0
  5290  1D82  1303               	bcf	3,6	;RP1=0, select bank0
  5291  1D83  01A7               	clrf	___lwdiv@quotient
  5292  1D84  01A8               	clrf	___lwdiv@quotient+1
  5293  1D85                     l2121:
  5294  1D85  0822               	movf	___lwdiv@divisor,w
  5295  1D86  0423               	iorwf	___lwdiv@divisor+1,w
  5296  1D87  1903               	btfsc	3,2
  5297  1D88  2D8A               	goto	u2891
  5298  1D89  2D8B               	goto	u2890
  5299  1D8A                     u2891:
  5300  1D8A  2DC2               	goto	l2141
  5301  1D8B                     u2890:
  5302  1D8B                     l2123:
  5303  1D8B  01A9               	clrf	___lwdiv@counter
  5304  1D8C  0AA9               	incf	___lwdiv@counter,f
  5305  1D8D  2D99               	goto	l2129
  5306  1D8E                     l2125:
  5307  1D8E  3001               	movlw	1
  5308  1D8F                     u2905:
  5309  1D8F  1003               	clrc
  5310  1D90  0DA2               	rlf	___lwdiv@divisor,f
  5311  1D91  0DA3               	rlf	___lwdiv@divisor+1,f
  5312  1D92  3EFF               	addlw	-1
  5313  1D93  1D03               	skipz
  5314  1D94  2D8F               	goto	u2905
  5315  1D95                     l2127:
  5316  1D95  3001               	movlw	1
  5317  1D96  00A6               	movwf	??___lwdiv
  5318  1D97  0826               	movf	??___lwdiv,w
  5319  1D98  07A9               	addwf	___lwdiv@counter,f
  5320  1D99                     l2129:
  5321  1D99  1FA3               	btfss	___lwdiv@divisor+1,7
  5322  1D9A  2D9C               	goto	u2911
  5323  1D9B  2D9D               	goto	u2910
  5324  1D9C                     u2911:
  5325  1D9C  2D8E               	goto	l2125
  5326  1D9D                     u2910:
  5327  1D9D                     l2131:
  5328  1D9D  3001               	movlw	1
  5329  1D9E                     u2925:
  5330  1D9E  1003               	clrc
  5331  1D9F  0DA7               	rlf	___lwdiv@quotient,f
  5332  1DA0  0DA8               	rlf	___lwdiv@quotient+1,f
  5333  1DA1  3EFF               	addlw	-1
  5334  1DA2  1D03               	skipz
  5335  1DA3  2D9E               	goto	u2925
  5336  1DA4  0823               	movf	___lwdiv@divisor+1,w
  5337  1DA5  0225               	subwf	___lwdiv@dividend+1,w
  5338  1DA6  1D03               	skipz
  5339  1DA7  2DAA               	goto	u2935
  5340  1DA8  0822               	movf	___lwdiv@divisor,w
  5341  1DA9  0224               	subwf	___lwdiv@dividend,w
  5342  1DAA                     u2935:
  5343  1DAA  1C03               	skipc
  5344  1DAB  2DAD               	goto	u2931
  5345  1DAC  2DAE               	goto	u2930
  5346  1DAD                     u2931:
  5347  1DAD  2DB5               	goto	l2137
  5348  1DAE                     u2930:
  5349  1DAE                     l2133:
  5350  1DAE  0822               	movf	___lwdiv@divisor,w
  5351  1DAF  02A4               	subwf	___lwdiv@dividend,f
  5352  1DB0  0823               	movf	___lwdiv@divisor+1,w
  5353  1DB1  1C03               	skipc
  5354  1DB2  03A5               	decf	___lwdiv@dividend+1,f
  5355  1DB3  02A5               	subwf	___lwdiv@dividend+1,f
  5356  1DB4                     l2135:
  5357  1DB4  1427               	bsf	___lwdiv@quotient,0
  5358  1DB5                     l2137:
  5359  1DB5  3001               	movlw	1
  5360  1DB6                     u2945:
  5361  1DB6  1003               	clrc
  5362  1DB7  0CA3               	rrf	___lwdiv@divisor+1,f
  5363  1DB8  0CA2               	rrf	___lwdiv@divisor,f
  5364  1DB9  3EFF               	addlw	-1
  5365  1DBA  1D03               	skipz
  5366  1DBB  2DB6               	goto	u2945
  5367  1DBC                     l2139:
  5368  1DBC  3001               	movlw	1
  5369  1DBD  02A9               	subwf	___lwdiv@counter,f
  5370  1DBE  1D03               	btfss	3,2
  5371  1DBF  2DC1               	goto	u2951
  5372  1DC0  2DC2               	goto	u2950
  5373  1DC1                     u2951:
  5374  1DC1  2D9D               	goto	l2131
  5375  1DC2                     u2950:
  5376  1DC2                     l2141:
  5377  1DC2  0828               	movf	___lwdiv@quotient+1,w
  5378  1DC3  00A3               	movwf	?___lwdiv+1
  5379  1DC4  0827               	movf	___lwdiv@quotient,w
  5380  1DC5  00A2               	movwf	?___lwdiv
  5381  1DC6                     l574:
  5382  1DC6  0008               	return
  5383  1DC7                     __end_of___lwdiv:
  5384                           
  5385                           	psect	text10
  5386  093C                     __ptext10:	
  5387 ;; *************** function ___flmul *****************
  5388 ;; Defined at:
  5389 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  b               4   12[BANK0 ] unsigned int 
  5392 ;;  a               4   16[BANK0 ] unsigned int 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  prod            4   32[BANK0 ] struct .
  5395 ;;  grs             4   26[BANK0 ] unsigned long 
  5396 ;;  temp            2   36[BANK0 ] struct .
  5397 ;;  bexp            1   31[BANK0 ] unsigned char 
  5398 ;;  aexp            1   30[BANK0 ] unsigned char 
  5399 ;;  sign            1   25[BANK0 ] unsigned char 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  4   12[BANK0 ] unsigned char 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5409 ;;      Params:         0       8       0       0       0
  5410 ;;      Locals:         0      13       0       0       0
  5411 ;;      Temps:          0       5       0       0       0
  5412 ;;      Totals:         0      26       0       0       0
  5413 ;;Total ram usage:       26 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; Hardware stack levels required when called:    2
  5416 ;; This function calls:
  5417 ;;		__Umul8_16
  5418 ;; This function is called by:
  5419 ;;		_fround
  5420 ;;		_scale
  5421 ;;		_sprintf
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function ___flmul
  5427  093C                     ___flmul:
  5428  093C                     l2361:	
  5429                           ;incstack = 0
  5430                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5431                           
  5432  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5433  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5434  093E  082F               	movf	___flmul@b+3,w
  5435  093F  3980               	andlw	128
  5436  0940  00B4               	movwf	??___flmul
  5437  0941  0834               	movf	??___flmul,w
  5438  0942  00B9               	movwf	___flmul@sign
  5439  0943                     l2363:
  5440  0943  082F               	movf	___flmul@b+3,w
  5441  0944  00B4               	movwf	??___flmul
  5442  0945  0734               	addwf	??___flmul,w
  5443  0946  00B5               	movwf	??___flmul+1
  5444  0947  0835               	movf	??___flmul+1,w
  5445  0948  00BF               	movwf	___flmul@bexp
  5446  0949                     l2365:
  5447  0949  1FAE               	btfss	___flmul@b+2,7
  5448  094A  294C               	goto	u3481
  5449  094B  294D               	goto	u3480
  5450  094C                     u3481:
  5451  094C  294E               	goto	l2369
  5452  094D                     u3480:
  5453  094D                     l2367:
  5454  094D  143F               	bsf	___flmul@bexp,0
  5455  094E                     l2369:
  5456  094E  083F               	movf	___flmul@bexp,w
  5457  094F  1903               	btfsc	3,2
  5458  0950  2952               	goto	u3491
  5459  0951  2953               	goto	u3490
  5460  0952                     u3491:
  5461  0952  2962               	goto	l2377
  5462  0953                     u3490:
  5463  0953                     l2371:
  5464  0953  0A3F               	incf	___flmul@bexp,w
  5465  0954  1D03               	btfss	3,2
  5466  0955  2957               	goto	u3501
  5467  0956  2958               	goto	u3500
  5468  0957                     u3501:
  5469  0957  2960               	goto	l2375
  5470  0958                     u3500:
  5471  0958                     l2373:
  5472  0958  3000               	movlw	0
  5473  0959  00AF               	movwf	___flmul@b+3
  5474  095A  3000               	movlw	0
  5475  095B  00AE               	movwf	___flmul@b+2
  5476  095C  3000               	movlw	0
  5477  095D  00AD               	movwf	___flmul@b+1
  5478  095E  3000               	movlw	0
  5479  095F  00AC               	movwf	___flmul@b
  5480  0960                     l2375:
  5481  0960  17AE               	bsf	___flmul@b+2,7
  5482  0961  296A               	goto	l2379
  5483  0962                     l2377:
  5484  0962  3000               	movlw	0
  5485  0963  00AF               	movwf	___flmul@b+3
  5486  0964  3000               	movlw	0
  5487  0965  00AE               	movwf	___flmul@b+2
  5488  0966  3000               	movlw	0
  5489  0967  00AD               	movwf	___flmul@b+1
  5490  0968  3000               	movlw	0
  5491  0969  00AC               	movwf	___flmul@b
  5492  096A                     l2379:
  5493  096A  0833               	movf	___flmul@a+3,w
  5494  096B  3980               	andlw	128
  5495  096C  00B4               	movwf	??___flmul
  5496  096D  0834               	movf	??___flmul,w
  5497  096E  06B9               	xorwf	___flmul@sign,f
  5498  096F                     l2381:
  5499  096F  0833               	movf	___flmul@a+3,w
  5500  0970  00B4               	movwf	??___flmul
  5501  0971  0734               	addwf	??___flmul,w
  5502  0972  00B5               	movwf	??___flmul+1
  5503  0973  0835               	movf	??___flmul+1,w
  5504  0974  00BE               	movwf	___flmul@aexp
  5505  0975                     l2383:
  5506  0975  1FB2               	btfss	___flmul@a+2,7
  5507  0976  2978               	goto	u3511
  5508  0977  2979               	goto	u3510
  5509  0978                     u3511:
  5510  0978  297A               	goto	l2387
  5511  0979                     u3510:
  5512  0979                     l2385:
  5513  0979  143E               	bsf	___flmul@aexp,0
  5514  097A                     l2387:
  5515  097A  083E               	movf	___flmul@aexp,w
  5516  097B  1903               	btfsc	3,2
  5517  097C  297E               	goto	u3521
  5518  097D  297F               	goto	u3520
  5519  097E                     u3521:
  5520  097E  298E               	goto	l2395
  5521  097F                     u3520:
  5522  097F                     l2389:
  5523  097F  0A3E               	incf	___flmul@aexp,w
  5524  0980  1D03               	btfss	3,2
  5525  0981  2983               	goto	u3531
  5526  0982  2984               	goto	u3530
  5527  0983                     u3531:
  5528  0983  298C               	goto	l2393
  5529  0984                     u3530:
  5530  0984                     l2391:
  5531  0984  3000               	movlw	0
  5532  0985  00B3               	movwf	___flmul@a+3
  5533  0986  3000               	movlw	0
  5534  0987  00B2               	movwf	___flmul@a+2
  5535  0988  3000               	movlw	0
  5536  0989  00B1               	movwf	___flmul@a+1
  5537  098A  3000               	movlw	0
  5538  098B  00B0               	movwf	___flmul@a
  5539  098C                     l2393:
  5540  098C  17B2               	bsf	___flmul@a+2,7
  5541  098D  2996               	goto	l2397
  5542  098E                     l2395:
  5543  098E  3000               	movlw	0
  5544  098F  00B3               	movwf	___flmul@a+3
  5545  0990  3000               	movlw	0
  5546  0991  00B2               	movwf	___flmul@a+2
  5547  0992  3000               	movlw	0
  5548  0993  00B1               	movwf	___flmul@a+1
  5549  0994  3000               	movlw	0
  5550  0995  00B0               	movwf	___flmul@a
  5551  0996                     l2397:
  5552  0996  083E               	movf	___flmul@aexp,w
  5553  0997  1903               	btfsc	3,2
  5554  0998  299A               	goto	u3541
  5555  0999  299B               	goto	u3540
  5556  099A                     u3541:
  5557  099A  29A0               	goto	l2401
  5558  099B                     u3540:
  5559  099B                     l2399:
  5560  099B  083F               	movf	___flmul@bexp,w
  5561  099C  1D03               	btfss	3,2
  5562  099D  299F               	goto	u3551
  5563  099E  29A0               	goto	u3550
  5564  099F                     u3551:
  5565  099F  29A9               	goto	l2405
  5566  09A0                     u3550:
  5567  09A0                     l2401:
  5568  09A0  3000               	movlw	0
  5569  09A1  00AF               	movwf	?___flmul+3
  5570  09A2  3000               	movlw	0
  5571  09A3  00AE               	movwf	?___flmul+2
  5572  09A4  3000               	movlw	0
  5573  09A5  00AD               	movwf	?___flmul+1
  5574  09A6  3000               	movlw	0
  5575  09A7  00AC               	movwf	?___flmul
  5576  09A8  2C9C               	goto	l691
  5577  09A9                     l2405:
  5578  09A9  082C               	movf	___flmul@b,w
  5579  09AA  00B4               	movwf	??___flmul
  5580  09AB  0834               	movf	??___flmul,w
  5581  09AC  00F4               	movwf	__Umul8_16@multiplicand
  5582  09AD  0832               	movf	___flmul@a+2,w
  5583  09AE  160A  158A  2473  120A  158A  	fcall	__Umul8_16
  5584  09B3  0875               	movf	?__Umul8_16+1,w
  5585  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  5586  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  5587  09B6  00C5               	movwf	___flmul@temp+1
  5588  09B7  0874               	movf	?__Umul8_16,w
  5589  09B8  00C4               	movwf	___flmul@temp
  5590  09B9                     l2407:
  5591  09B9  0844               	movf	___flmul@temp,w
  5592  09BA  00B4               	movwf	??___flmul
  5593  09BB  01B5               	clrf	??___flmul+1
  5594  09BC  01B6               	clrf	??___flmul+2
  5595  09BD  01B7               	clrf	??___flmul+3
  5596  09BE  0837               	movf	??___flmul+3,w
  5597  09BF  00BD               	movwf	___flmul@grs+3
  5598  09C0  0836               	movf	??___flmul+2,w
  5599  09C1  00BC               	movwf	___flmul@grs+2
  5600  09C2  0835               	movf	??___flmul+1,w
  5601  09C3  00BB               	movwf	___flmul@grs+1
  5602  09C4  0834               	movf	??___flmul,w
  5603  09C5  00BA               	movwf	___flmul@grs
  5604  09C6                     l2409:
  5605  09C6  0845               	movf	___flmul@temp+1,w
  5606  09C7  00B4               	movwf	??___flmul
  5607  09C8  01B5               	clrf	??___flmul+1
  5608  09C9  01B6               	clrf	??___flmul+2
  5609  09CA  01B7               	clrf	??___flmul+3
  5610  09CB  0837               	movf	??___flmul+3,w
  5611  09CC  00C3               	movwf	___flmul@prod+3
  5612  09CD  0836               	movf	??___flmul+2,w
  5613  09CE  00C2               	movwf	___flmul@prod+2
  5614  09CF  0835               	movf	??___flmul+1,w
  5615  09D0  00C1               	movwf	___flmul@prod+1
  5616  09D1  0834               	movf	??___flmul,w
  5617  09D2  00C0               	movwf	___flmul@prod
  5618  09D3  082D               	movf	___flmul@b+1,w
  5619  09D4  00B4               	movwf	??___flmul
  5620  09D5  0834               	movf	??___flmul,w
  5621  09D6  00F4               	movwf	__Umul8_16@multiplicand
  5622  09D7  0831               	movf	___flmul@a+1,w
  5623  09D8  160A  158A  2473  120A  158A  	fcall	__Umul8_16
  5624  09DD  0875               	movf	?__Umul8_16+1,w
  5625  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  5626  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  5627  09E0  00C5               	movwf	___flmul@temp+1
  5628  09E1  0874               	movf	?__Umul8_16,w
  5629  09E2  00C4               	movwf	___flmul@temp
  5630  09E3                     l2411:
  5631  09E3  0844               	movf	___flmul@temp,w
  5632  09E4  00B4               	movwf	??___flmul
  5633  09E5  01B5               	clrf	??___flmul+1
  5634  09E6  01B6               	clrf	??___flmul+2
  5635  09E7  01B7               	clrf	??___flmul+3
  5636  09E8  0834               	movf	??___flmul,w
  5637  09E9  07BA               	addwf	___flmul@grs,f
  5638  09EA  0835               	movf	??___flmul+1,w
  5639  09EB  1103               	clrz
  5640  09EC  1803               	skipnc
  5641  09ED  3E01               	addlw	1
  5642  09EE  1903               	skipnz
  5643  09EF  29F1               	goto	u3561
  5644  09F0  07BB               	addwf	___flmul@grs+1,f
  5645  09F1                     u3561:
  5646  09F1  0836               	movf	??___flmul+2,w
  5647  09F2  1103               	clrz
  5648  09F3  1803               	skipnc
  5649  09F4  3E01               	addlw	1
  5650  09F5  1903               	skipnz
  5651  09F6  29F8               	goto	u3562
  5652  09F7  07BC               	addwf	___flmul@grs+2,f
  5653  09F8                     u3562:
  5654  09F8  0837               	movf	??___flmul+3,w
  5655  09F9  1103               	clrz
  5656  09FA  1803               	skipnc
  5657  09FB  3E01               	addlw	1
  5658  09FC  1903               	skipnz
  5659  09FD  29FF               	goto	u3563
  5660  09FE  07BD               	addwf	___flmul@grs+3,f
  5661  09FF                     u3563:
  5662  09FF                     l2413:
  5663  09FF  0845               	movf	___flmul@temp+1,w
  5664  0A00  00B4               	movwf	??___flmul
  5665  0A01  01B5               	clrf	??___flmul+1
  5666  0A02  01B6               	clrf	??___flmul+2
  5667  0A03  01B7               	clrf	??___flmul+3
  5668  0A04  0834               	movf	??___flmul,w
  5669  0A05  07C0               	addwf	___flmul@prod,f
  5670  0A06  0835               	movf	??___flmul+1,w
  5671  0A07  1103               	clrz
  5672  0A08  1803               	skipnc
  5673  0A09  3E01               	addlw	1
  5674  0A0A  1903               	skipnz
  5675  0A0B  2A0D               	goto	u3571
  5676  0A0C  07C1               	addwf	___flmul@prod+1,f
  5677  0A0D                     u3571:
  5678  0A0D  0836               	movf	??___flmul+2,w
  5679  0A0E  1103               	clrz
  5680  0A0F  1803               	skipnc
  5681  0A10  3E01               	addlw	1
  5682  0A11  1903               	skipnz
  5683  0A12  2A14               	goto	u3572
  5684  0A13  07C2               	addwf	___flmul@prod+2,f
  5685  0A14                     u3572:
  5686  0A14  0837               	movf	??___flmul+3,w
  5687  0A15  1103               	clrz
  5688  0A16  1803               	skipnc
  5689  0A17  3E01               	addlw	1
  5690  0A18  1903               	skipnz
  5691  0A19  2A1B               	goto	u3573
  5692  0A1A  07C3               	addwf	___flmul@prod+3,f
  5693  0A1B                     u3573:
  5694  0A1B  082E               	movf	___flmul@b+2,w
  5695  0A1C  00B4               	movwf	??___flmul
  5696  0A1D  0834               	movf	??___flmul,w
  5697  0A1E  00F4               	movwf	__Umul8_16@multiplicand
  5698  0A1F  0830               	movf	___flmul@a,w
  5699  0A20  160A  158A  2473  120A  158A  	fcall	__Umul8_16
  5700  0A25  0875               	movf	?__Umul8_16+1,w
  5701  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  5702  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  5703  0A28  00C5               	movwf	___flmul@temp+1
  5704  0A29  0874               	movf	?__Umul8_16,w
  5705  0A2A  00C4               	movwf	___flmul@temp
  5706  0A2B                     l2415:
  5707  0A2B  0844               	movf	___flmul@temp,w
  5708  0A2C  00B4               	movwf	??___flmul
  5709  0A2D  01B5               	clrf	??___flmul+1
  5710  0A2E  01B6               	clrf	??___flmul+2
  5711  0A2F  01B7               	clrf	??___flmul+3
  5712  0A30  0834               	movf	??___flmul,w
  5713  0A31  07BA               	addwf	___flmul@grs,f
  5714  0A32  0835               	movf	??___flmul+1,w
  5715  0A33  1103               	clrz
  5716  0A34  1803               	skipnc
  5717  0A35  3E01               	addlw	1
  5718  0A36  1903               	skipnz
  5719  0A37  2A39               	goto	u3581
  5720  0A38  07BB               	addwf	___flmul@grs+1,f
  5721  0A39                     u3581:
  5722  0A39  0836               	movf	??___flmul+2,w
  5723  0A3A  1103               	clrz
  5724  0A3B  1803               	skipnc
  5725  0A3C  3E01               	addlw	1
  5726  0A3D  1903               	skipnz
  5727  0A3E  2A40               	goto	u3582
  5728  0A3F  07BC               	addwf	___flmul@grs+2,f
  5729  0A40                     u3582:
  5730  0A40  0837               	movf	??___flmul+3,w
  5731  0A41  1103               	clrz
  5732  0A42  1803               	skipnc
  5733  0A43  3E01               	addlw	1
  5734  0A44  1903               	skipnz
  5735  0A45  2A47               	goto	u3583
  5736  0A46  07BD               	addwf	___flmul@grs+3,f
  5737  0A47                     u3583:
  5738  0A47                     l2417:
  5739  0A47  0845               	movf	___flmul@temp+1,w
  5740  0A48  00B4               	movwf	??___flmul
  5741  0A49  01B5               	clrf	??___flmul+1
  5742  0A4A  01B6               	clrf	??___flmul+2
  5743  0A4B  01B7               	clrf	??___flmul+3
  5744  0A4C  0834               	movf	??___flmul,w
  5745  0A4D  07C0               	addwf	___flmul@prod,f
  5746  0A4E  0835               	movf	??___flmul+1,w
  5747  0A4F  1103               	clrz
  5748  0A50  1803               	skipnc
  5749  0A51  3E01               	addlw	1
  5750  0A52  1903               	skipnz
  5751  0A53  2A55               	goto	u3591
  5752  0A54  07C1               	addwf	___flmul@prod+1,f
  5753  0A55                     u3591:
  5754  0A55  0836               	movf	??___flmul+2,w
  5755  0A56  1103               	clrz
  5756  0A57  1803               	skipnc
  5757  0A58  3E01               	addlw	1
  5758  0A59  1903               	skipnz
  5759  0A5A  2A5C               	goto	u3592
  5760  0A5B  07C2               	addwf	___flmul@prod+2,f
  5761  0A5C                     u3592:
  5762  0A5C  0837               	movf	??___flmul+3,w
  5763  0A5D  1103               	clrz
  5764  0A5E  1803               	skipnc
  5765  0A5F  3E01               	addlw	1
  5766  0A60  1903               	skipnz
  5767  0A61  2A63               	goto	u3593
  5768  0A62  07C3               	addwf	___flmul@prod+3,f
  5769  0A63                     u3593:
  5770  0A63                     l2419:
  5771  0A63  3008               	movlw	8
  5772  0A64  00B4               	movwf	??___flmul
  5773  0A65                     u3605:
  5774  0A65  1003               	clrc
  5775  0A66  0DBA               	rlf	___flmul@grs,f
  5776  0A67  0DBB               	rlf	___flmul@grs+1,f
  5777  0A68  0DBC               	rlf	___flmul@grs+2,f
  5778  0A69  0DBD               	rlf	___flmul@grs+3,f
  5779  0A6A  0BB4               	decfsz	??___flmul,f
  5780  0A6B  2A65               	goto	u3605
  5781  0A6C                     l2421:
  5782  0A6C  082D               	movf	___flmul@b+1,w
  5783  0A6D  00B4               	movwf	??___flmul
  5784  0A6E  0834               	movf	??___flmul,w
  5785  0A6F  00F4               	movwf	__Umul8_16@multiplicand
  5786  0A70  0830               	movf	___flmul@a,w
  5787  0A71  160A  158A  2473  120A  158A  	fcall	__Umul8_16
  5788  0A76  0875               	movf	?__Umul8_16+1,w
  5789  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  5790  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  5791  0A79  00C5               	movwf	___flmul@temp+1
  5792  0A7A  0874               	movf	?__Umul8_16,w
  5793  0A7B  00C4               	movwf	___flmul@temp
  5794  0A7C                     l2423:
  5795  0A7C  0844               	movf	___flmul@temp,w
  5796  0A7D  00B4               	movwf	??___flmul
  5797  0A7E  0845               	movf	___flmul@temp+1,w
  5798  0A7F  00B5               	movwf	??___flmul+1
  5799  0A80  01B6               	clrf	??___flmul+2
  5800  0A81  01B7               	clrf	??___flmul+3
  5801  0A82  0834               	movf	??___flmul,w
  5802  0A83  07BA               	addwf	___flmul@grs,f
  5803  0A84  0835               	movf	??___flmul+1,w
  5804  0A85  1103               	clrz
  5805  0A86  1803               	skipnc
  5806  0A87  3E01               	addlw	1
  5807  0A88  1903               	skipnz
  5808  0A89  2A8B               	goto	u3611
  5809  0A8A  07BB               	addwf	___flmul@grs+1,f
  5810  0A8B                     u3611:
  5811  0A8B  0836               	movf	??___flmul+2,w
  5812  0A8C  1103               	clrz
  5813  0A8D  1803               	skipnc
  5814  0A8E  3E01               	addlw	1
  5815  0A8F  1903               	skipnz
  5816  0A90  2A92               	goto	u3612
  5817  0A91  07BC               	addwf	___flmul@grs+2,f
  5818  0A92                     u3612:
  5819  0A92  0837               	movf	??___flmul+3,w
  5820  0A93  1103               	clrz
  5821  0A94  1803               	skipnc
  5822  0A95  3E01               	addlw	1
  5823  0A96  1903               	skipnz
  5824  0A97  2A99               	goto	u3613
  5825  0A98  07BD               	addwf	___flmul@grs+3,f
  5826  0A99                     u3613:
  5827  0A99                     l2425:
  5828  0A99  082C               	movf	___flmul@b,w
  5829  0A9A  00B4               	movwf	??___flmul
  5830  0A9B  0834               	movf	??___flmul,w
  5831  0A9C  00F4               	movwf	__Umul8_16@multiplicand
  5832  0A9D  0831               	movf	___flmul@a+1,w
  5833  0A9E  160A  158A  2473  120A  158A  	fcall	__Umul8_16
  5834  0AA3  0875               	movf	?__Umul8_16+1,w
  5835  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  5836  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  5837  0AA6  00C5               	movwf	___flmul@temp+1
  5838  0AA7  0874               	movf	?__Umul8_16,w
  5839  0AA8  00C4               	movwf	___flmul@temp
  5840  0AA9                     l2427:
  5841  0AA9  0844               	movf	___flmul@temp,w
  5842  0AAA  00B4               	movwf	??___flmul
  5843  0AAB  0845               	movf	___flmul@temp+1,w
  5844  0AAC  00B5               	movwf	??___flmul+1
  5845  0AAD  01B6               	clrf	??___flmul+2
  5846  0AAE  01B7               	clrf	??___flmul+3
  5847  0AAF  0834               	movf	??___flmul,w
  5848  0AB0  07BA               	addwf	___flmul@grs,f
  5849  0AB1  0835               	movf	??___flmul+1,w
  5850  0AB2  1103               	clrz
  5851  0AB3  1803               	skipnc
  5852  0AB4  3E01               	addlw	1
  5853  0AB5  1903               	skipnz
  5854  0AB6  2AB8               	goto	u3621
  5855  0AB7  07BB               	addwf	___flmul@grs+1,f
  5856  0AB8                     u3621:
  5857  0AB8  0836               	movf	??___flmul+2,w
  5858  0AB9  1103               	clrz
  5859  0ABA  1803               	skipnc
  5860  0ABB  3E01               	addlw	1
  5861  0ABC  1903               	skipnz
  5862  0ABD  2ABF               	goto	u3622
  5863  0ABE  07BC               	addwf	___flmul@grs+2,f
  5864  0ABF                     u3622:
  5865  0ABF  0837               	movf	??___flmul+3,w
  5866  0AC0  1103               	clrz
  5867  0AC1  1803               	skipnc
  5868  0AC2  3E01               	addlw	1
  5869  0AC3  1903               	skipnz
  5870  0AC4  2AC6               	goto	u3623
  5871  0AC5  07BD               	addwf	___flmul@grs+3,f
  5872  0AC6                     u3623:
  5873  0AC6                     l2429:
  5874  0AC6  3008               	movlw	8
  5875  0AC7  00B4               	movwf	??___flmul
  5876  0AC8                     u3635:
  5877  0AC8  1003               	clrc
  5878  0AC9  0DBA               	rlf	___flmul@grs,f
  5879  0ACA  0DBB               	rlf	___flmul@grs+1,f
  5880  0ACB  0DBC               	rlf	___flmul@grs+2,f
  5881  0ACC  0DBD               	rlf	___flmul@grs+3,f
  5882  0ACD  0BB4               	decfsz	??___flmul,f
  5883  0ACE  2AC8               	goto	u3635
  5884  0ACF  082C               	movf	___flmul@b,w
  5885  0AD0  00B4               	movwf	??___flmul
  5886  0AD1  0834               	movf	??___flmul,w
  5887  0AD2  00F4               	movwf	__Umul8_16@multiplicand
  5888  0AD3  0830               	movf	___flmul@a,w
  5889  0AD4  160A  158A  2473  120A  158A  	fcall	__Umul8_16
  5890  0AD9  0875               	movf	?__Umul8_16+1,w
  5891  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  5892  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  5893  0ADC  00C5               	movwf	___flmul@temp+1
  5894  0ADD  0874               	movf	?__Umul8_16,w
  5895  0ADE  00C4               	movwf	___flmul@temp
  5896  0ADF                     l2431:
  5897  0ADF  0844               	movf	___flmul@temp,w
  5898  0AE0  00B4               	movwf	??___flmul
  5899  0AE1  0845               	movf	___flmul@temp+1,w
  5900  0AE2  00B5               	movwf	??___flmul+1
  5901  0AE3  01B6               	clrf	??___flmul+2
  5902  0AE4  01B7               	clrf	??___flmul+3
  5903  0AE5  0834               	movf	??___flmul,w
  5904  0AE6  07BA               	addwf	___flmul@grs,f
  5905  0AE7  0835               	movf	??___flmul+1,w
  5906  0AE8  1103               	clrz
  5907  0AE9  1803               	skipnc
  5908  0AEA  3E01               	addlw	1
  5909  0AEB  1903               	skipnz
  5910  0AEC  2AEE               	goto	u3641
  5911  0AED  07BB               	addwf	___flmul@grs+1,f
  5912  0AEE                     u3641:
  5913  0AEE  0836               	movf	??___flmul+2,w
  5914  0AEF  1103               	clrz
  5915  0AF0  1803               	skipnc
  5916  0AF1  3E01               	addlw	1
  5917  0AF2  1903               	skipnz
  5918  0AF3  2AF5               	goto	u3642
  5919  0AF4  07BC               	addwf	___flmul@grs+2,f
  5920  0AF5                     u3642:
  5921  0AF5  0837               	movf	??___flmul+3,w
  5922  0AF6  1103               	clrz
  5923  0AF7  1803               	skipnc
  5924  0AF8  3E01               	addlw	1
  5925  0AF9  1903               	skipnz
  5926  0AFA  2AFC               	goto	u3643
  5927  0AFB  07BD               	addwf	___flmul@grs+3,f
  5928  0AFC                     u3643:
  5929  0AFC                     l2433:
  5930  0AFC  082D               	movf	___flmul@b+1,w
  5931  0AFD  00B4               	movwf	??___flmul
  5932  0AFE  0834               	movf	??___flmul,w
  5933  0AFF  00F4               	movwf	__Umul8_16@multiplicand
  5934  0B00  0832               	movf	___flmul@a+2,w
  5935  0B01  160A  158A  2473  120A  158A  	fcall	__Umul8_16
  5936  0B06  0875               	movf	?__Umul8_16+1,w
  5937  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5938  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5939  0B09  00C5               	movwf	___flmul@temp+1
  5940  0B0A  0874               	movf	?__Umul8_16,w
  5941  0B0B  00C4               	movwf	___flmul@temp
  5942  0B0C  0844               	movf	___flmul@temp,w
  5943  0B0D  00B4               	movwf	??___flmul
  5944  0B0E  0845               	movf	___flmul@temp+1,w
  5945  0B0F  00B5               	movwf	??___flmul+1
  5946  0B10  01B6               	clrf	??___flmul+2
  5947  0B11  01B7               	clrf	??___flmul+3
  5948  0B12  0834               	movf	??___flmul,w
  5949  0B13  07C0               	addwf	___flmul@prod,f
  5950  0B14  0835               	movf	??___flmul+1,w
  5951  0B15  1103               	clrz
  5952  0B16  1803               	skipnc
  5953  0B17  3E01               	addlw	1
  5954  0B18  1903               	skipnz
  5955  0B19  2B1B               	goto	u3651
  5956  0B1A  07C1               	addwf	___flmul@prod+1,f
  5957  0B1B                     u3651:
  5958  0B1B  0836               	movf	??___flmul+2,w
  5959  0B1C  1103               	clrz
  5960  0B1D  1803               	skipnc
  5961  0B1E  3E01               	addlw	1
  5962  0B1F  1903               	skipnz
  5963  0B20  2B22               	goto	u3652
  5964  0B21  07C2               	addwf	___flmul@prod+2,f
  5965  0B22                     u3652:
  5966  0B22  0837               	movf	??___flmul+3,w
  5967  0B23  1103               	clrz
  5968  0B24  1803               	skipnc
  5969  0B25  3E01               	addlw	1
  5970  0B26  1903               	skipnz
  5971  0B27  2B29               	goto	u3653
  5972  0B28  07C3               	addwf	___flmul@prod+3,f
  5973  0B29                     u3653:
  5974  0B29                     l2435:
  5975  0B29  082E               	movf	___flmul@b+2,w
  5976  0B2A  00B4               	movwf	??___flmul
  5977  0B2B  0834               	movf	??___flmul,w
  5978  0B2C  00F4               	movwf	__Umul8_16@multiplicand
  5979  0B2D  0831               	movf	___flmul@a+1,w
  5980  0B2E  160A  158A  2473  120A  158A  	fcall	__Umul8_16
  5981  0B33  0875               	movf	?__Umul8_16+1,w
  5982  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  5983  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  5984  0B36  00C5               	movwf	___flmul@temp+1
  5985  0B37  0874               	movf	?__Umul8_16,w
  5986  0B38  00C4               	movwf	___flmul@temp
  5987  0B39                     l2437:
  5988  0B39  0844               	movf	___flmul@temp,w
  5989  0B3A  00B4               	movwf	??___flmul
  5990  0B3B  0845               	movf	___flmul@temp+1,w
  5991  0B3C  00B5               	movwf	??___flmul+1
  5992  0B3D  01B6               	clrf	??___flmul+2
  5993  0B3E  01B7               	clrf	??___flmul+3
  5994  0B3F  0834               	movf	??___flmul,w
  5995  0B40  07C0               	addwf	___flmul@prod,f
  5996  0B41  0835               	movf	??___flmul+1,w
  5997  0B42  1103               	clrz
  5998  0B43  1803               	skipnc
  5999  0B44  3E01               	addlw	1
  6000  0B45  1903               	skipnz
  6001  0B46  2B48               	goto	u3661
  6002  0B47  07C1               	addwf	___flmul@prod+1,f
  6003  0B48                     u3661:
  6004  0B48  0836               	movf	??___flmul+2,w
  6005  0B49  1103               	clrz
  6006  0B4A  1803               	skipnc
  6007  0B4B  3E01               	addlw	1
  6008  0B4C  1903               	skipnz
  6009  0B4D  2B4F               	goto	u3662
  6010  0B4E  07C2               	addwf	___flmul@prod+2,f
  6011  0B4F                     u3662:
  6012  0B4F  0837               	movf	??___flmul+3,w
  6013  0B50  1103               	clrz
  6014  0B51  1803               	skipnc
  6015  0B52  3E01               	addlw	1
  6016  0B53  1903               	skipnz
  6017  0B54  2B56               	goto	u3663
  6018  0B55  07C3               	addwf	___flmul@prod+3,f
  6019  0B56                     u3663:
  6020  0B56  082E               	movf	___flmul@b+2,w
  6021  0B57  00B4               	movwf	??___flmul
  6022  0B58  0834               	movf	??___flmul,w
  6023  0B59  00F4               	movwf	__Umul8_16@multiplicand
  6024  0B5A  0832               	movf	___flmul@a+2,w
  6025  0B5B  160A  158A  2473  120A  158A  	fcall	__Umul8_16
  6026  0B60  0875               	movf	?__Umul8_16+1,w
  6027  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6028  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6029  0B63  00C5               	movwf	___flmul@temp+1
  6030  0B64  0874               	movf	?__Umul8_16,w
  6031  0B65  00C4               	movwf	___flmul@temp
  6032  0B66                     l2439:
  6033  0B66  0844               	movf	___flmul@temp,w
  6034  0B67  00B4               	movwf	??___flmul
  6035  0B68  0845               	movf	___flmul@temp+1,w
  6036  0B69  00B5               	movwf	??___flmul+1
  6037  0B6A  01B6               	clrf	??___flmul+2
  6038  0B6B  01B7               	clrf	??___flmul+3
  6039  0B6C  3008               	movlw	8
  6040  0B6D                     u3675:
  6041  0B6D  1003               	clrc
  6042  0B6E  0DB4               	rlf	??___flmul,f
  6043  0B6F  0DB5               	rlf	??___flmul+1,f
  6044  0B70  0DB6               	rlf	??___flmul+2,f
  6045  0B71  0DB7               	rlf	??___flmul+3,f
  6046  0B72                     u3670:
  6047  0B72  3EFF               	addlw	-1
  6048  0B73  1D03               	skipz
  6049  0B74  2B6D               	goto	u3675
  6050  0B75  0834               	movf	??___flmul,w
  6051  0B76  07C0               	addwf	___flmul@prod,f
  6052  0B77  0835               	movf	??___flmul+1,w
  6053  0B78  1103               	clrz
  6054  0B79  1803               	skipnc
  6055  0B7A  3E01               	addlw	1
  6056  0B7B  1903               	skipnz
  6057  0B7C  2B7E               	goto	u3681
  6058  0B7D  07C1               	addwf	___flmul@prod+1,f
  6059  0B7E                     u3681:
  6060  0B7E  0836               	movf	??___flmul+2,w
  6061  0B7F  1103               	clrz
  6062  0B80  1803               	skipnc
  6063  0B81  3E01               	addlw	1
  6064  0B82  1903               	skipnz
  6065  0B83  2B85               	goto	u3682
  6066  0B84  07C2               	addwf	___flmul@prod+2,f
  6067  0B85                     u3682:
  6068  0B85  0837               	movf	??___flmul+3,w
  6069  0B86  1103               	clrz
  6070  0B87  1803               	skipnc
  6071  0B88  3E01               	addlw	1
  6072  0B89  1903               	skipnz
  6073  0B8A  2B8C               	goto	u3683
  6074  0B8B  07C3               	addwf	___flmul@prod+3,f
  6075  0B8C                     u3683:
  6076  0B8C                     l2441:
  6077  0B8C  083A               	movf	___flmul@grs,w
  6078  0B8D  00B4               	movwf	??___flmul
  6079  0B8E  083B               	movf	___flmul@grs+1,w
  6080  0B8F  00B5               	movwf	??___flmul+1
  6081  0B90  083C               	movf	___flmul@grs+2,w
  6082  0B91  00B6               	movwf	??___flmul+2
  6083  0B92  083D               	movf	___flmul@grs+3,w
  6084  0B93  00B7               	movwf	??___flmul+3
  6085  0B94  3018               	movlw	24
  6086  0B95                     u3695:
  6087  0B95  1003               	clrc
  6088  0B96  0CB7               	rrf	??___flmul+3,f
  6089  0B97  0CB6               	rrf	??___flmul+2,f
  6090  0B98  0CB5               	rrf	??___flmul+1,f
  6091  0B99  0CB4               	rrf	??___flmul,f
  6092  0B9A                     u3690:
  6093  0B9A  3EFF               	addlw	-1
  6094  0B9B  1D03               	skipz
  6095  0B9C  2B95               	goto	u3695
  6096  0B9D  0834               	movf	??___flmul,w
  6097  0B9E  07C0               	addwf	___flmul@prod,f
  6098  0B9F  0835               	movf	??___flmul+1,w
  6099  0BA0  1103               	clrz
  6100  0BA1  1803               	skipnc
  6101  0BA2  3E01               	addlw	1
  6102  0BA3  1903               	skipnz
  6103  0BA4  2BA6               	goto	u3701
  6104  0BA5  07C1               	addwf	___flmul@prod+1,f
  6105  0BA6                     u3701:
  6106  0BA6  0836               	movf	??___flmul+2,w
  6107  0BA7  1103               	clrz
  6108  0BA8  1803               	skipnc
  6109  0BA9  3E01               	addlw	1
  6110  0BAA  1903               	skipnz
  6111  0BAB  2BAD               	goto	u3702
  6112  0BAC  07C2               	addwf	___flmul@prod+2,f
  6113  0BAD                     u3702:
  6114  0BAD  0837               	movf	??___flmul+3,w
  6115  0BAE  1103               	clrz
  6116  0BAF  1803               	skipnc
  6117  0BB0  3E01               	addlw	1
  6118  0BB1  1903               	skipnz
  6119  0BB2  2BB4               	goto	u3703
  6120  0BB3  07C3               	addwf	___flmul@prod+3,f
  6121  0BB4                     u3703:
  6122  0BB4                     l2443:
  6123  0BB4  3008               	movlw	8
  6124  0BB5  00B4               	movwf	??___flmul
  6125  0BB6                     u3715:
  6126  0BB6  1003               	clrc
  6127  0BB7  0DBA               	rlf	___flmul@grs,f
  6128  0BB8  0DBB               	rlf	___flmul@grs+1,f
  6129  0BB9  0DBC               	rlf	___flmul@grs+2,f
  6130  0BBA  0DBD               	rlf	___flmul@grs+3,f
  6131  0BBB  0BB4               	decfsz	??___flmul,f
  6132  0BBC  2BB6               	goto	u3715
  6133  0BBD                     l2445:
  6134  0BBD  083F               	movf	___flmul@bexp,w
  6135  0BBE  073E               	addwf	___flmul@aexp,w
  6136  0BBF  00B4               	movwf	??___flmul
  6137  0BC0  01B5               	clrf	??___flmul+1
  6138  0BC1  0DB5               	rlf	??___flmul+1,f
  6139  0BC2  0834               	movf	??___flmul,w
  6140  0BC3  3E82               	addlw	130
  6141  0BC4  00C4               	movwf	___flmul@temp
  6142  0BC5  0835               	movf	??___flmul+1,w
  6143  0BC6  1803               	skipnc
  6144  0BC7  3E01               	addlw	1
  6145  0BC8  3EFF               	addlw	255
  6146  0BC9  00C5               	movwf	___flmul@temp+1
  6147  0BCA  2BE8               	goto	l2457
  6148  0BCB                     l2447:
  6149  0BCB  3001               	movlw	1
  6150  0BCC  00B4               	movwf	??___flmul
  6151  0BCD                     u3725:
  6152  0BCD  1003               	clrc
  6153  0BCE  0DC0               	rlf	___flmul@prod,f
  6154  0BCF  0DC1               	rlf	___flmul@prod+1,f
  6155  0BD0  0DC2               	rlf	___flmul@prod+2,f
  6156  0BD1  0DC3               	rlf	___flmul@prod+3,f
  6157  0BD2  0BB4               	decfsz	??___flmul,f
  6158  0BD3  2BCD               	goto	u3725
  6159  0BD4                     l2449:
  6160  0BD4  1FBD               	btfss	___flmul@grs+3,7
  6161  0BD5  2BD7               	goto	u3731
  6162  0BD6  2BD8               	goto	u3730
  6163  0BD7                     u3731:
  6164  0BD7  2BD9               	goto	l2453
  6165  0BD8                     u3730:
  6166  0BD8                     l2451:
  6167  0BD8  1440               	bsf	___flmul@prod,0
  6168  0BD9                     l2453:
  6169  0BD9  3001               	movlw	1
  6170  0BDA  00B4               	movwf	??___flmul
  6171  0BDB                     u3745:
  6172  0BDB  1003               	clrc
  6173  0BDC  0DBA               	rlf	___flmul@grs,f
  6174  0BDD  0DBB               	rlf	___flmul@grs+1,f
  6175  0BDE  0DBC               	rlf	___flmul@grs+2,f
  6176  0BDF  0DBD               	rlf	___flmul@grs+3,f
  6177  0BE0  0BB4               	decfsz	??___flmul,f
  6178  0BE1  2BDB               	goto	u3745
  6179  0BE2                     l2455:
  6180  0BE2  30FF               	movlw	255
  6181  0BE3  07C4               	addwf	___flmul@temp,f
  6182  0BE4  1803               	skipnc
  6183  0BE5  0AC5               	incf	___flmul@temp+1,f
  6184  0BE6  30FF               	movlw	255
  6185  0BE7  07C5               	addwf	___flmul@temp+1,f
  6186  0BE8                     l2457:
  6187  0BE8  1FC2               	btfss	___flmul@prod+2,7
  6188  0BE9  2BEB               	goto	u3751
  6189  0BEA  2BEC               	goto	u3750
  6190  0BEB                     u3751:
  6191  0BEB  2BCB               	goto	l2447
  6192  0BEC                     u3750:
  6193  0BEC                     l2459:
  6194  0BEC  01BE               	clrf	___flmul@aexp
  6195  0BED                     l2461:
  6196  0BED  1FBD               	btfss	___flmul@grs+3,7
  6197  0BEE  2BF0               	goto	u3761
  6198  0BEF  2BF1               	goto	u3760
  6199  0BF0                     u3761:
  6200  0BF0  2C0D               	goto	l2469
  6201  0BF1                     u3760:
  6202  0BF1                     l2463:
  6203  0BF1  30FF               	movlw	255
  6204  0BF2  053A               	andwf	___flmul@grs,w
  6205  0BF3  00B4               	movwf	??___flmul
  6206  0BF4  30FF               	movlw	255
  6207  0BF5  053B               	andwf	___flmul@grs+1,w
  6208  0BF6  00B5               	movwf	??___flmul+1
  6209  0BF7  30FF               	movlw	255
  6210  0BF8  053C               	andwf	___flmul@grs+2,w
  6211  0BF9  00B6               	movwf	??___flmul+2
  6212  0BFA  307F               	movlw	127
  6213  0BFB  053D               	andwf	___flmul@grs+3,w
  6214  0BFC  00B7               	movwf	??___flmul+3
  6215  0BFD  0837               	movf	??___flmul+3,w
  6216  0BFE  0436               	iorwf	??___flmul+2,w
  6217  0BFF  0435               	iorwf	??___flmul+1,w
  6218  0C00  0434               	iorwf	??___flmul,w
  6219  0C01  1903               	skipnz
  6220  0C02  2C04               	goto	u3771
  6221  0C03  2C05               	goto	u3770
  6222  0C04                     u3771:
  6223  0C04  2C08               	goto	l697
  6224  0C05                     u3770:
  6225  0C05                     l2465:
  6226  0C05  01BE               	clrf	___flmul@aexp
  6227  0C06  0ABE               	incf	___flmul@aexp,f
  6228  0C07  2C0D               	goto	l2469
  6229  0C08                     l697:
  6230  0C08  1C40               	btfss	___flmul@prod,0
  6231  0C09  2C0B               	goto	u3781
  6232  0C0A  2C0C               	goto	u3780
  6233  0C0B                     u3781:
  6234  0C0B  2C0D               	goto	l2469
  6235  0C0C                     u3780:
  6236  0C0C  2C05               	goto	l2465
  6237  0C0D                     l2469:
  6238  0C0D  083E               	movf	___flmul@aexp,w
  6239  0C0E  1903               	btfsc	3,2
  6240  0C0F  2C11               	goto	u3791
  6241  0C10  2C12               	goto	u3790
  6242  0C11                     u3791:
  6243  0C11  2C43               	goto	l2479
  6244  0C12                     u3790:
  6245  0C12                     l2471:
  6246  0C12  3001               	movlw	1
  6247  0C13  07C0               	addwf	___flmul@prod,f
  6248  0C14  3000               	movlw	0
  6249  0C15  1803               	skipnc
  6250  0C16  3001               	movlw	1
  6251  0C17  07C1               	addwf	___flmul@prod+1,f
  6252  0C18  3000               	movlw	0
  6253  0C19  1803               	skipnc
  6254  0C1A  3001               	movlw	1
  6255  0C1B  07C2               	addwf	___flmul@prod+2,f
  6256  0C1C  3000               	movlw	0
  6257  0C1D  1803               	skipnc
  6258  0C1E  3001               	movlw	1
  6259  0C1F  07C3               	addwf	___flmul@prod+3,f
  6260  0C20                     l2473:
  6261  0C20  1C43               	btfss	___flmul@prod+3,0
  6262  0C21  2C23               	goto	u3801
  6263  0C22  2C24               	goto	u3800
  6264  0C23                     u3801:
  6265  0C23  2C43               	goto	l2479
  6266  0C24                     u3800:
  6267  0C24                     l2475:
  6268  0C24  0840               	movf	___flmul@prod,w
  6269  0C25  00B4               	movwf	??___flmul
  6270  0C26  0841               	movf	___flmul@prod+1,w
  6271  0C27  00B5               	movwf	??___flmul+1
  6272  0C28  0842               	movf	___flmul@prod+2,w
  6273  0C29  00B6               	movwf	??___flmul+2
  6274  0C2A  0843               	movf	___flmul@prod+3,w
  6275  0C2B  00B7               	movwf	??___flmul+3
  6276  0C2C  3001               	movlw	1
  6277  0C2D  00B8               	movwf	??___flmul+4
  6278  0C2E                     u3815:
  6279  0C2E  0D37               	rlf	??___flmul+3,w
  6280  0C2F  0CB7               	rrf	??___flmul+3,f
  6281  0C30  0CB6               	rrf	??___flmul+2,f
  6282  0C31  0CB5               	rrf	??___flmul+1,f
  6283  0C32  0CB4               	rrf	??___flmul,f
  6284  0C33                     u3810:
  6285  0C33  0BB8               	decfsz	??___flmul+4,f
  6286  0C34  2C2E               	goto	u3815
  6287  0C35  0837               	movf	??___flmul+3,w
  6288  0C36  00C3               	movwf	___flmul@prod+3
  6289  0C37  0836               	movf	??___flmul+2,w
  6290  0C38  00C2               	movwf	___flmul@prod+2
  6291  0C39  0835               	movf	??___flmul+1,w
  6292  0C3A  00C1               	movwf	___flmul@prod+1
  6293  0C3B  0834               	movf	??___flmul,w
  6294  0C3C  00C0               	movwf	___flmul@prod
  6295  0C3D                     l2477:
  6296  0C3D  3001               	movlw	1
  6297  0C3E  07C4               	addwf	___flmul@temp,f
  6298  0C3F  1803               	skipnc
  6299  0C40  0AC5               	incf	___flmul@temp+1,f
  6300  0C41  3000               	movlw	0
  6301  0C42  07C5               	addwf	___flmul@temp+1,f
  6302  0C43                     l2479:
  6303  0C43  0845               	movf	___flmul@temp+1,w
  6304  0C44  3A80               	xorlw	128
  6305  0C45  00FF               	movwf	btemp+1
  6306  0C46  3080               	movlw	128
  6307  0C47  027F               	subwf	btemp+1,w
  6308  0C48  1D03               	skipz
  6309  0C49  2C4C               	goto	u3825
  6310  0C4A  30FF               	movlw	255
  6311  0C4B  0244               	subwf	___flmul@temp,w
  6312  0C4C                     u3825:
  6313  0C4C  1C03               	skipc
  6314  0C4D  2C4F               	goto	u3821
  6315  0C4E  2C50               	goto	u3820
  6316  0C4F                     u3821:
  6317  0C4F  2C5B               	goto	l2483
  6318  0C50                     u3820:
  6319  0C50                     l2481:
  6320  0C50  307F               	movlw	127
  6321  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6322  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6323  0C53  00C3               	movwf	___flmul@prod+3
  6324  0C54  3080               	movlw	128
  6325  0C55  00C2               	movwf	___flmul@prod+2
  6326  0C56  3000               	movlw	0
  6327  0C57  00C1               	movwf	___flmul@prod+1
  6328  0C58  3000               	movlw	0
  6329  0C59  00C0               	movwf	___flmul@prod
  6330  0C5A  2C90               	goto	l703
  6331  0C5B                     l2483:
  6332  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6333  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6334  0C5D  0845               	movf	___flmul@temp+1,w
  6335  0C5E  3A80               	xorlw	128
  6336  0C5F  00FF               	movwf	btemp+1
  6337  0C60  3080               	movlw	128
  6338  0C61  027F               	subwf	btemp+1,w
  6339  0C62  1D03               	skipz
  6340  0C63  2C66               	goto	u3835
  6341  0C64  3001               	movlw	1
  6342  0C65  0244               	subwf	___flmul@temp,w
  6343  0C66                     u3835:
  6344  0C66  1803               	skipnc
  6345  0C67  2C69               	goto	u3831
  6346  0C68  2C6A               	goto	u3830
  6347  0C69                     u3831:
  6348  0C69  2C76               	goto	l2489
  6349  0C6A                     u3830:
  6350  0C6A                     l2485:
  6351  0C6A  3000               	movlw	0
  6352  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6353  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6354  0C6D  00C3               	movwf	___flmul@prod+3
  6355  0C6E  3000               	movlw	0
  6356  0C6F  00C2               	movwf	___flmul@prod+2
  6357  0C70  3000               	movlw	0
  6358  0C71  00C1               	movwf	___flmul@prod+1
  6359  0C72  3000               	movlw	0
  6360  0C73  00C0               	movwf	___flmul@prod
  6361  0C74                     l2487:
  6362  0C74  01B9               	clrf	___flmul@sign
  6363  0C75  2C90               	goto	l703
  6364  0C76                     l2489:
  6365  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6366  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6367  0C78  0844               	movf	___flmul@temp,w
  6368  0C79  00B4               	movwf	??___flmul
  6369  0C7A  0834               	movf	??___flmul,w
  6370  0C7B  00BF               	movwf	___flmul@bexp
  6371  0C7C  30FF               	movlw	255
  6372  0C7D  05C0               	andwf	___flmul@prod,f
  6373  0C7E  30FF               	movlw	255
  6374  0C7F  05C1               	andwf	___flmul@prod+1,f
  6375  0C80  307F               	movlw	127
  6376  0C81  05C2               	andwf	___flmul@prod+2,f
  6377  0C82  3000               	movlw	0
  6378  0C83  05C3               	andwf	___flmul@prod+3,f
  6379  0C84                     l2491:
  6380  0C84  1C3F               	btfss	___flmul@bexp,0
  6381  0C85  2C87               	goto	u3841
  6382  0C86  2C88               	goto	u3840
  6383  0C87                     u3841:
  6384  0C87  2C89               	goto	l2495
  6385  0C88                     u3840:
  6386  0C88                     l2493:
  6387  0C88  17C2               	bsf	___flmul@prod+2,7
  6388  0C89                     l2495:
  6389  0C89  083F               	movf	___flmul@bexp,w
  6390  0C8A  00B4               	movwf	??___flmul
  6391  0C8B  1003               	clrc
  6392  0C8C  0C34               	rrf	??___flmul,w
  6393  0C8D  00B5               	movwf	??___flmul+1
  6394  0C8E  0835               	movf	??___flmul+1,w
  6395  0C8F  00C3               	movwf	___flmul@prod+3
  6396  0C90                     l703:
  6397  0C90  0839               	movf	___flmul@sign,w
  6398  0C91  00B4               	movwf	??___flmul
  6399  0C92  0834               	movf	??___flmul,w
  6400  0C93  04C3               	iorwf	___flmul@prod+3,f
  6401  0C94                     l2497:
  6402  0C94  0843               	movf	___flmul@prod+3,w
  6403  0C95  00AF               	movwf	?___flmul+3
  6404  0C96  0842               	movf	___flmul@prod+2,w
  6405  0C97  00AE               	movwf	?___flmul+2
  6406  0C98  0841               	movf	___flmul@prod+1,w
  6407  0C99  00AD               	movwf	?___flmul+1
  6408  0C9A  0840               	movf	___flmul@prod,w
  6409  0C9B  00AC               	movwf	?___flmul
  6410  0C9C                     l691:
  6411  0C9C  0008               	return
  6412  0C9D                     __end_of___flmul:
  6413                           
  6414                           	psect	text11
  6415  1C73                     __ptext11:	
  6416 ;; *************** function __Umul8_16 *****************
  6417 ;; Defined at:
  6418 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  multiplier      1    wreg     unsigned char 
  6421 ;;  multiplicand    1    4[COMMON] unsigned char 
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6424 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6425 ;;  product         2    0[BANK0 ] unsigned int 
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  2    4[COMMON] unsigned int 
  6428 ;; Registers used:
  6429 ;;		wreg, status,2, status,0
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6435 ;;      Params:         2       0       0       0       0
  6436 ;;      Locals:         0       5       0       0       0
  6437 ;;      Temps:          2       0       0       0       0
  6438 ;;      Totals:         4       5       0       0       0
  6439 ;;Total ram usage:        9 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:    1
  6442 ;; This function calls:
  6443 ;;		Nothing
  6444 ;; This function is called by:
  6445 ;;		___flmul
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           
  6450                           ;psect for function __Umul8_16
  6451  1C73                     __Umul8_16:
  6452                           
  6453                           ;incstack = 0
  6454                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6455                           ;__Umul8_16@multiplier stored from wreg
  6456  1C73  1283               	bcf	3,5	;RP0=0, select bank0
  6457  1C74  1303               	bcf	3,6	;RP1=0, select bank0
  6458  1C75  00A4               	movwf	__Umul8_16@multiplier
  6459  1C76                     l2023:
  6460  1C76  01A0               	clrf	__Umul8_16@product
  6461  1C77  01A1               	clrf	__Umul8_16@product+1
  6462  1C78                     l2025:
  6463  1C78  0874               	movf	__Umul8_16@multiplicand,w
  6464  1C79  00F6               	movwf	??__Umul8_16
  6465  1C7A  01F7               	clrf	??__Umul8_16+1
  6466  1C7B  0876               	movf	??__Umul8_16,w
  6467  1C7C  00A2               	movwf	__Umul8_16@word_mpld
  6468  1C7D  0877               	movf	??__Umul8_16+1,w
  6469  1C7E  00A3               	movwf	__Umul8_16@word_mpld+1
  6470  1C7F                     l2027:
  6471  1C7F  1C24               	btfss	__Umul8_16@multiplier,0
  6472  1C80  2C82               	goto	u2671
  6473  1C81  2C83               	goto	u2670
  6474  1C82                     u2671:
  6475  1C82  2C89               	goto	l710
  6476  1C83                     u2670:
  6477  1C83                     l2029:
  6478  1C83  0822               	movf	__Umul8_16@word_mpld,w
  6479  1C84  07A0               	addwf	__Umul8_16@product,f
  6480  1C85  1803               	skipnc
  6481  1C86  0AA1               	incf	__Umul8_16@product+1,f
  6482  1C87  0823               	movf	__Umul8_16@word_mpld+1,w
  6483  1C88  07A1               	addwf	__Umul8_16@product+1,f
  6484  1C89                     l710:
  6485  1C89  3001               	movlw	1
  6486  1C8A                     u2685:
  6487  1C8A  1003               	clrc
  6488  1C8B  0DA2               	rlf	__Umul8_16@word_mpld,f
  6489  1C8C  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6490  1C8D  3EFF               	addlw	-1
  6491  1C8E  1D03               	skipz
  6492  1C8F  2C8A               	goto	u2685
  6493  1C90  1003               	clrc
  6494  1C91  0CA4               	rrf	__Umul8_16@multiplier,f
  6495  1C92                     l2031:
  6496  1C92  0824               	movf	__Umul8_16@multiplier,w
  6497  1C93  1D03               	btfss	3,2
  6498  1C94  2C96               	goto	u2691
  6499  1C95  2C97               	goto	u2690
  6500  1C96                     u2691:
  6501  1C96  2C7F               	goto	l2027
  6502  1C97                     u2690:
  6503  1C97                     l2033:
  6504  1C97  0821               	movf	__Umul8_16@product+1,w
  6505  1C98  00F5               	movwf	?__Umul8_16+1
  6506  1C99  0820               	movf	__Umul8_16@product,w
  6507  1C9A  00F4               	movwf	?__Umul8_16
  6508  1C9B                     l712:
  6509  1C9B  0008               	return
  6510  1C9C                     __end_of__Umul8_16:
  6511                           
  6512                           	psect	text12
  6513  11F0                     __ptext12:	
  6514 ;; *************** function __tdiv_to_l_ *****************
  6515 ;; Defined at:
  6516 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;  f1              4    0[BANK0 ] float 
  6519 ;;  f2              4    4[BANK0 ] float 
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;  quot            4    8[BANK0 ] unsigned long 
  6522 ;;  exp1            1   13[BANK0 ] unsigned char 
  6523 ;;  cntr            1   12[BANK0 ] unsigned char 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  4    0[BANK0 ] unsigned long 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6533 ;;      Params:         0       8       0       0       0
  6534 ;;      Locals:         0       6       0       0       0
  6535 ;;      Temps:          4       0       0       0       0
  6536 ;;      Totals:         4      14       0       0       0
  6537 ;;Total ram usage:       18 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    1
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_sprintf
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           
  6548                           ;psect for function __tdiv_to_l_
  6549  11F0                     __tdiv_to_l_:
  6550  11F0                     l2587:	
  6551                           ;incstack = 0
  6552                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6553                           
  6554  11F0  1283               	bcf	3,5	;RP0=0, select bank0
  6555  11F1  1303               	bcf	3,6	;RP1=0, select bank0
  6556  11F2  0820               	movf	__tdiv_to_l_@f1,w
  6557  11F3  00F4               	movwf	??__tdiv_to_l_
  6558  11F4  0821               	movf	__tdiv_to_l_@f1+1,w
  6559  11F5  00F5               	movwf	??__tdiv_to_l_+1
  6560  11F6  0822               	movf	__tdiv_to_l_@f1+2,w
  6561  11F7  00F6               	movwf	??__tdiv_to_l_+2
  6562  11F8  1003               	clrc
  6563  11F9  0D75               	rlf	??__tdiv_to_l_+1,w
  6564  11FA  0D76               	rlf	??__tdiv_to_l_+2,w
  6565  11FB  00F7               	movwf	??__tdiv_to_l_+3
  6566  11FC  0877               	movf	??__tdiv_to_l_+3,w
  6567  11FD  00AD               	movwf	__tdiv_to_l_@exp1
  6568  11FE  082D               	movf	__tdiv_to_l_@exp1,w
  6569  11FF  1D03               	btfss	3,2
  6570  1200  2A02               	goto	u4121
  6571  1201  2A03               	goto	u4120
  6572  1202                     u4121:
  6573  1202  2A0C               	goto	l2593
  6574  1203                     u4120:
  6575  1203                     l2589:
  6576  1203  3000               	movlw	0
  6577  1204  00A3               	movwf	?__tdiv_to_l_+3
  6578  1205  3000               	movlw	0
  6579  1206  00A2               	movwf	?__tdiv_to_l_+2
  6580  1207  3000               	movlw	0
  6581  1208  00A1               	movwf	?__tdiv_to_l_+1
  6582  1209  3000               	movlw	0
  6583  120A  00A0               	movwf	?__tdiv_to_l_
  6584  120B  2AAC               	goto	l485
  6585  120C                     l2593:
  6586  120C  0824               	movf	__tdiv_to_l_@f2,w
  6587  120D  00F4               	movwf	??__tdiv_to_l_
  6588  120E  0825               	movf	__tdiv_to_l_@f2+1,w
  6589  120F  00F5               	movwf	??__tdiv_to_l_+1
  6590  1210  0826               	movf	__tdiv_to_l_@f2+2,w
  6591  1211  00F6               	movwf	??__tdiv_to_l_+2
  6592  1212  1003               	clrc
  6593  1213  0D75               	rlf	??__tdiv_to_l_+1,w
  6594  1214  0D76               	rlf	??__tdiv_to_l_+2,w
  6595  1215  00F7               	movwf	??__tdiv_to_l_+3
  6596  1216  0877               	movf	??__tdiv_to_l_+3,w
  6597  1217  00AC               	movwf	__tdiv_to_l_@cntr
  6598  1218  082C               	movf	__tdiv_to_l_@cntr,w
  6599  1219  1D03               	btfss	3,2
  6600  121A  2A1C               	goto	u4131
  6601  121B  2A1D               	goto	u4130
  6602  121C                     u4131:
  6603  121C  2A1E               	goto	l486
  6604  121D                     u4130:
  6605  121D  2A03               	goto	l2589
  6606  121E                     l486:
  6607  121E  17A1               	bsf	__tdiv_to_l_@f1+1,7
  6608  121F                     l2599:
  6609  121F  30FF               	movlw	255
  6610  1220  05A0               	andwf	__tdiv_to_l_@f1,f
  6611  1221  30FF               	movlw	255
  6612  1222  05A1               	andwf	__tdiv_to_l_@f1+1,f
  6613  1223  3000               	movlw	0
  6614  1224  05A2               	andwf	__tdiv_to_l_@f1+2,f
  6615  1225                     l2601:
  6616  1225  17A5               	bsf	__tdiv_to_l_@f2+1,7
  6617  1226  30FF               	movlw	255
  6618  1227  05A4               	andwf	__tdiv_to_l_@f2,f
  6619  1228  30FF               	movlw	255
  6620  1229  05A5               	andwf	__tdiv_to_l_@f2+1,f
  6621  122A  3000               	movlw	0
  6622  122B  05A6               	andwf	__tdiv_to_l_@f2+2,f
  6623  122C  3000               	movlw	0
  6624  122D  00AB               	movwf	__tdiv_to_l_@quot+3
  6625  122E  3000               	movlw	0
  6626  122F  00AA               	movwf	__tdiv_to_l_@quot+2
  6627  1230  3000               	movlw	0
  6628  1231  00A9               	movwf	__tdiv_to_l_@quot+1
  6629  1232  3000               	movlw	0
  6630  1233  00A8               	movwf	__tdiv_to_l_@quot
  6631  1234                     l2603:
  6632  1234  307F               	movlw	127
  6633  1235  02AD               	subwf	__tdiv_to_l_@exp1,f
  6634  1236                     l2605:
  6635  1236  3098               	movlw	152
  6636  1237  072C               	addwf	__tdiv_to_l_@cntr,w
  6637  1238  00F4               	movwf	??__tdiv_to_l_
  6638  1239  0874               	movf	??__tdiv_to_l_,w
  6639  123A  02AD               	subwf	__tdiv_to_l_@exp1,f
  6640  123B  3018               	movlw	24
  6641  123C  00F4               	movwf	??__tdiv_to_l_
  6642  123D  0874               	movf	??__tdiv_to_l_,w
  6643  123E  00AC               	movwf	__tdiv_to_l_@cntr
  6644  123F                     l2607:
  6645  123F  3001               	movlw	1
  6646  1240  00F4               	movwf	??__tdiv_to_l_
  6647  1241                     u4145:
  6648  1241  1003               	clrc
  6649  1242  0DA8               	rlf	__tdiv_to_l_@quot,f
  6650  1243  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6651  1244  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6652  1245  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6653  1246  0BF4               	decfsz	??__tdiv_to_l_,f
  6654  1247  2A41               	goto	u4145
  6655  1248                     l2609:
  6656  1248  0826               	movf	__tdiv_to_l_@f2+2,w
  6657  1249  0222               	subwf	__tdiv_to_l_@f1+2,w
  6658  124A  1D03               	skipz
  6659  124B  2A52               	goto	u4155
  6660  124C  0825               	movf	__tdiv_to_l_@f2+1,w
  6661  124D  0221               	subwf	__tdiv_to_l_@f1+1,w
  6662  124E  1D03               	skipz
  6663  124F  2A52               	goto	u4155
  6664  1250  0824               	movf	__tdiv_to_l_@f2,w
  6665  1251  0220               	subwf	__tdiv_to_l_@f1,w
  6666  1252                     u4155:
  6667  1252  1C03               	skipc
  6668  1253  2A55               	goto	u4151
  6669  1254  2A56               	goto	u4150
  6670  1255                     u4151:
  6671  1255  2A61               	goto	l2615
  6672  1256                     u4150:
  6673  1256                     l2611:
  6674  1256  0824               	movf	__tdiv_to_l_@f2,w
  6675  1257  02A0               	subwf	__tdiv_to_l_@f1,f
  6676  1258  0825               	movf	__tdiv_to_l_@f2+1,w
  6677  1259  1C03               	skipc
  6678  125A  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  6679  125B  02A1               	subwf	__tdiv_to_l_@f1+1,f
  6680  125C  0826               	movf	__tdiv_to_l_@f2+2,w
  6681  125D  1C03               	skipc
  6682  125E  0A26               	incf	__tdiv_to_l_@f2+2,w
  6683  125F  02A2               	subwf	__tdiv_to_l_@f1+2,f
  6684  1260                     l2613:
  6685  1260  1428               	bsf	__tdiv_to_l_@quot,0
  6686  1261                     l2615:
  6687  1261  3001               	movlw	1
  6688  1262                     u4165:
  6689  1262  1003               	clrc
  6690  1263  0DA0               	rlf	__tdiv_to_l_@f1,f
  6691  1264  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  6692  1265  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  6693  1266  3EFF               	addlw	-1
  6694  1267  1D03               	skipz
  6695  1268  2A62               	goto	u4165
  6696  1269                     l2617:
  6697  1269  3001               	movlw	1
  6698  126A  02AC               	subwf	__tdiv_to_l_@cntr,f
  6699  126B  1D03               	btfss	3,2
  6700  126C  2A6E               	goto	u4171
  6701  126D  2A6F               	goto	u4170
  6702  126E                     u4171:
  6703  126E  2A3F               	goto	l2607
  6704  126F                     u4170:
  6705  126F                     l489:
  6706  126F  1FAD               	btfss	__tdiv_to_l_@exp1,7
  6707  1270  2A72               	goto	u4181
  6708  1271  2A73               	goto	u4180
  6709  1272                     u4181:
  6710  1272  2A8D               	goto	l2627
  6711  1273                     u4180:
  6712  1273                     l2619:
  6713  1273  082D               	movf	__tdiv_to_l_@exp1,w
  6714  1274  3A80               	xorlw	128
  6715  1275  3E97               	addlw	151
  6716  1276  1803               	skipnc
  6717  1277  2A79               	goto	u4191
  6718  1278  2A7A               	goto	u4190
  6719  1279                     u4191:
  6720  1279  2A7B               	goto	l2625
  6721  127A                     u4190:
  6722  127A  2A03               	goto	l2589
  6723  127B                     l2625:
  6724  127B  3001               	movlw	1
  6725  127C                     u4205:
  6726  127C  1003               	clrc
  6727  127D  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  6728  127E  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  6729  127F  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  6730  1280  0CA8               	rrf	__tdiv_to_l_@quot,f
  6731  1281  3EFF               	addlw	-1
  6732  1282  1D03               	skipz
  6733  1283  2A7C               	goto	u4205
  6734  1284  3001               	movlw	1
  6735  1285  00F4               	movwf	??__tdiv_to_l_
  6736  1286  0874               	movf	??__tdiv_to_l_,w
  6737  1287  07AD               	addwf	__tdiv_to_l_@exp1,f
  6738  1288  1D03               	btfss	3,2
  6739  1289  2A8B               	goto	u4211
  6740  128A  2A8C               	goto	u4210
  6741  128B                     u4211:
  6742  128B  2A7B               	goto	l2625
  6743  128C                     u4210:
  6744  128C  2AA4               	goto	l2635
  6745  128D                     l2627:
  6746  128D  3018               	movlw	24
  6747  128E  022D               	subwf	__tdiv_to_l_@exp1,w
  6748  128F  1C03               	skipc
  6749  1290  2A92               	goto	u4221
  6750  1291  2A93               	goto	u4220
  6751  1292                     u4221:
  6752  1292  2A9F               	goto	l496
  6753  1293                     u4220:
  6754  1293  2A03               	goto	l2589
  6755  1294                     l2633:
  6756  1294  3001               	movlw	1
  6757  1295  00F4               	movwf	??__tdiv_to_l_
  6758  1296                     u4235:
  6759  1296  1003               	clrc
  6760  1297  0DA8               	rlf	__tdiv_to_l_@quot,f
  6761  1298  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6762  1299  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6763  129A  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6764  129B  0BF4               	decfsz	??__tdiv_to_l_,f
  6765  129C  2A96               	goto	u4235
  6766  129D  3001               	movlw	1
  6767  129E  02AD               	subwf	__tdiv_to_l_@exp1,f
  6768  129F                     l496:
  6769  129F  082D               	movf	__tdiv_to_l_@exp1,w
  6770  12A0  1D03               	btfss	3,2
  6771  12A1  2AA3               	goto	u4241
  6772  12A2  2AA4               	goto	u4240
  6773  12A3                     u4241:
  6774  12A3  2A94               	goto	l2633
  6775  12A4                     u4240:
  6776  12A4                     l2635:
  6777  12A4  082B               	movf	__tdiv_to_l_@quot+3,w
  6778  12A5  00A3               	movwf	?__tdiv_to_l_+3
  6779  12A6  082A               	movf	__tdiv_to_l_@quot+2,w
  6780  12A7  00A2               	movwf	?__tdiv_to_l_+2
  6781  12A8  0829               	movf	__tdiv_to_l_@quot+1,w
  6782  12A9  00A1               	movwf	?__tdiv_to_l_+1
  6783  12AA  0828               	movf	__tdiv_to_l_@quot,w
  6784  12AB  00A0               	movwf	?__tdiv_to_l_
  6785  12AC                     l485:
  6786  12AC  0008               	return
  6787  12AD                     __end_of__tdiv_to_l_:
  6788                           
  6789                           	psect	text13
  6790  12AD                     __ptext13:	
  6791 ;; *************** function __div_to_l_ *****************
  6792 ;; Defined at:
  6793 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;  f1              4    0[BANK0 ] unsigned long 
  6796 ;;  f2              4    4[BANK0 ] unsigned long 
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;  quot            4    8[BANK0 ] unsigned long 
  6799 ;;  exp1            1   13[BANK0 ] unsigned char 
  6800 ;;  cntr            1   12[BANK0 ] unsigned char 
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  4    0[BANK0 ] unsigned long 
  6803 ;; Registers used:
  6804 ;;		wreg, status,2, status,0
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6810 ;;      Params:         0       8       0       0       0
  6811 ;;      Locals:         0       6       0       0       0
  6812 ;;      Temps:          1       0       0       0       0
  6813 ;;      Totals:         1      14       0       0       0
  6814 ;;Total ram usage:       15 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; Hardware stack levels required when called:    1
  6817 ;; This function calls:
  6818 ;;		Nothing
  6819 ;; This function is called by:
  6820 ;;		_sprintf
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           
  6825                           ;psect for function __div_to_l_
  6826  12AD                     __div_to_l_:
  6827  12AD                     l2639:	
  6828                           ;incstack = 0
  6829                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6830                           
  6831  12AD  1003               	clrc
  6832  12AE  1283               	bcf	3,5	;RP0=0, select bank0
  6833  12AF  1303               	bcf	3,6	;RP1=0, select bank0
  6834  12B0  0D22               	rlf	__div_to_l_@f1+2,w
  6835  12B1  0D23               	rlf	__div_to_l_@f1+3,w
  6836  12B2  00F4               	movwf	??__div_to_l_
  6837  12B3  0874               	movf	??__div_to_l_,w
  6838  12B4  00AD               	movwf	__div_to_l_@exp1
  6839  12B5  082D               	movf	__div_to_l_@exp1,w
  6840  12B6  1D03               	btfss	3,2
  6841  12B7  2AB9               	goto	u4251
  6842  12B8  2ABA               	goto	u4250
  6843  12B9                     u4251:
  6844  12B9  2AC3               	goto	l2645
  6845  12BA                     u4250:
  6846  12BA                     l2641:
  6847  12BA  3000               	movlw	0
  6848  12BB  00A3               	movwf	?__div_to_l_+3
  6849  12BC  3000               	movlw	0
  6850  12BD  00A2               	movwf	?__div_to_l_+2
  6851  12BE  3000               	movlw	0
  6852  12BF  00A1               	movwf	?__div_to_l_+1
  6853  12C0  3000               	movlw	0
  6854  12C1  00A0               	movwf	?__div_to_l_
  6855  12C2  2B6A               	goto	l438
  6856  12C3                     l2645:
  6857  12C3  1003               	clrc
  6858  12C4  0D26               	rlf	__div_to_l_@f2+2,w
  6859  12C5  0D27               	rlf	__div_to_l_@f2+3,w
  6860  12C6  00F4               	movwf	??__div_to_l_
  6861  12C7  0874               	movf	??__div_to_l_,w
  6862  12C8  00AC               	movwf	__div_to_l_@cntr
  6863  12C9  082C               	movf	__div_to_l_@cntr,w
  6864  12CA  1D03               	btfss	3,2
  6865  12CB  2ACD               	goto	u4261
  6866  12CC  2ACE               	goto	u4260
  6867  12CD                     u4261:
  6868  12CD  2ACF               	goto	l439
  6869  12CE                     u4260:
  6870  12CE  2ABA               	goto	l2641
  6871  12CF                     l439:
  6872  12CF  17A2               	bsf	__div_to_l_@f1+2,7
  6873  12D0                     l2651:
  6874  12D0  30FF               	movlw	255
  6875  12D1  05A0               	andwf	__div_to_l_@f1,f
  6876  12D2  30FF               	movlw	255
  6877  12D3  05A1               	andwf	__div_to_l_@f1+1,f
  6878  12D4  30FF               	movlw	255
  6879  12D5  05A2               	andwf	__div_to_l_@f1+2,f
  6880  12D6  3000               	movlw	0
  6881  12D7  05A3               	andwf	__div_to_l_@f1+3,f
  6882  12D8                     l2653:
  6883  12D8  17A6               	bsf	__div_to_l_@f2+2,7
  6884  12D9  30FF               	movlw	255
  6885  12DA  05A4               	andwf	__div_to_l_@f2,f
  6886  12DB  30FF               	movlw	255
  6887  12DC  05A5               	andwf	__div_to_l_@f2+1,f
  6888  12DD  30FF               	movlw	255
  6889  12DE  05A6               	andwf	__div_to_l_@f2+2,f
  6890  12DF  3000               	movlw	0
  6891  12E0  05A7               	andwf	__div_to_l_@f2+3,f
  6892  12E1  3000               	movlw	0
  6893  12E2  00AB               	movwf	__div_to_l_@quot+3
  6894  12E3  3000               	movlw	0
  6895  12E4  00AA               	movwf	__div_to_l_@quot+2
  6896  12E5  3000               	movlw	0
  6897  12E6  00A9               	movwf	__div_to_l_@quot+1
  6898  12E7  3000               	movlw	0
  6899  12E8  00A8               	movwf	__div_to_l_@quot
  6900  12E9                     l2655:
  6901  12E9  307F               	movlw	127
  6902  12EA  02AD               	subwf	__div_to_l_@exp1,f
  6903  12EB                     l2657:
  6904  12EB  30A0               	movlw	160
  6905  12EC  072C               	addwf	__div_to_l_@cntr,w
  6906  12ED  00F4               	movwf	??__div_to_l_
  6907  12EE  0874               	movf	??__div_to_l_,w
  6908  12EF  02AD               	subwf	__div_to_l_@exp1,f
  6909  12F0  3020               	movlw	32
  6910  12F1  00F4               	movwf	??__div_to_l_
  6911  12F2  0874               	movf	??__div_to_l_,w
  6912  12F3  00AC               	movwf	__div_to_l_@cntr
  6913  12F4                     l2659:
  6914  12F4  3001               	movlw	1
  6915  12F5  00F4               	movwf	??__div_to_l_
  6916  12F6                     u4275:
  6917  12F6  1003               	clrc
  6918  12F7  0DA8               	rlf	__div_to_l_@quot,f
  6919  12F8  0DA9               	rlf	__div_to_l_@quot+1,f
  6920  12F9  0DAA               	rlf	__div_to_l_@quot+2,f
  6921  12FA  0DAB               	rlf	__div_to_l_@quot+3,f
  6922  12FB  0BF4               	decfsz	??__div_to_l_,f
  6923  12FC  2AF6               	goto	u4275
  6924  12FD                     l2661:
  6925  12FD  0827               	movf	__div_to_l_@f2+3,w
  6926  12FE  0223               	subwf	__div_to_l_@f1+3,w
  6927  12FF  1D03               	skipz
  6928  1300  2B0B               	goto	u4285
  6929  1301  0826               	movf	__div_to_l_@f2+2,w
  6930  1302  0222               	subwf	__div_to_l_@f1+2,w
  6931  1303  1D03               	skipz
  6932  1304  2B0B               	goto	u4285
  6933  1305  0825               	movf	__div_to_l_@f2+1,w
  6934  1306  0221               	subwf	__div_to_l_@f1+1,w
  6935  1307  1D03               	skipz
  6936  1308  2B0B               	goto	u4285
  6937  1309  0824               	movf	__div_to_l_@f2,w
  6938  130A  0220               	subwf	__div_to_l_@f1,w
  6939  130B                     u4285:
  6940  130B  1C03               	skipc
  6941  130C  2B0E               	goto	u4281
  6942  130D  2B0F               	goto	u4280
  6943  130E                     u4281:
  6944  130E  2B1E               	goto	l2667
  6945  130F                     u4280:
  6946  130F                     l2663:
  6947  130F  0824               	movf	__div_to_l_@f2,w
  6948  1310  02A0               	subwf	__div_to_l_@f1,f
  6949  1311  0825               	movf	__div_to_l_@f2+1,w
  6950  1312  1C03               	skipc
  6951  1313  0F25               	incfsz	__div_to_l_@f2+1,w
  6952  1314  02A1               	subwf	__div_to_l_@f1+1,f
  6953  1315  0826               	movf	__div_to_l_@f2+2,w
  6954  1316  1C03               	skipc
  6955  1317  0F26               	incfsz	__div_to_l_@f2+2,w
  6956  1318  02A2               	subwf	__div_to_l_@f1+2,f
  6957  1319  0827               	movf	__div_to_l_@f2+3,w
  6958  131A  1C03               	skipc
  6959  131B  0F27               	incfsz	__div_to_l_@f2+3,w
  6960  131C  02A3               	subwf	__div_to_l_@f1+3,f
  6961  131D                     l2665:
  6962  131D  1428               	bsf	__div_to_l_@quot,0
  6963  131E                     l2667:
  6964  131E  3001               	movlw	1
  6965  131F  00F4               	movwf	??__div_to_l_
  6966  1320                     u4295:
  6967  1320  1003               	clrc
  6968  1321  0DA0               	rlf	__div_to_l_@f1,f
  6969  1322  0DA1               	rlf	__div_to_l_@f1+1,f
  6970  1323  0DA2               	rlf	__div_to_l_@f1+2,f
  6971  1324  0DA3               	rlf	__div_to_l_@f1+3,f
  6972  1325  0BF4               	decfsz	??__div_to_l_,f
  6973  1326  2B20               	goto	u4295
  6974  1327                     l2669:
  6975  1327  3001               	movlw	1
  6976  1328  02AC               	subwf	__div_to_l_@cntr,f
  6977  1329  1D03               	btfss	3,2
  6978  132A  2B2C               	goto	u4301
  6979  132B  2B2D               	goto	u4300
  6980  132C                     u4301:
  6981  132C  2AF4               	goto	l2659
  6982  132D                     u4300:
  6983  132D                     l442:
  6984  132D  1FAD               	btfss	__div_to_l_@exp1,7
  6985  132E  2B30               	goto	u4311
  6986  132F  2B31               	goto	u4310
  6987  1330                     u4311:
  6988  1330  2B4B               	goto	l2679
  6989  1331                     u4310:
  6990  1331                     l2671:
  6991  1331  082D               	movf	__div_to_l_@exp1,w
  6992  1332  3A80               	xorlw	128
  6993  1333  3E9F               	addlw	159
  6994  1334  1803               	skipnc
  6995  1335  2B37               	goto	u4321
  6996  1336  2B38               	goto	u4320
  6997  1337                     u4321:
  6998  1337  2B39               	goto	l2677
  6999  1338                     u4320:
  7000  1338  2ABA               	goto	l2641
  7001  1339                     l2677:
  7002  1339  3001               	movlw	1
  7003  133A                     u4335:
  7004  133A  1003               	clrc
  7005  133B  0CAB               	rrf	__div_to_l_@quot+3,f
  7006  133C  0CAA               	rrf	__div_to_l_@quot+2,f
  7007  133D  0CA9               	rrf	__div_to_l_@quot+1,f
  7008  133E  0CA8               	rrf	__div_to_l_@quot,f
  7009  133F  3EFF               	addlw	-1
  7010  1340  1D03               	skipz
  7011  1341  2B3A               	goto	u4335
  7012  1342  3001               	movlw	1
  7013  1343  00F4               	movwf	??__div_to_l_
  7014  1344  0874               	movf	??__div_to_l_,w
  7015  1345  07AD               	addwf	__div_to_l_@exp1,f
  7016  1346  1D03               	btfss	3,2
  7017  1347  2B49               	goto	u4341
  7018  1348  2B4A               	goto	u4340
  7019  1349                     u4341:
  7020  1349  2B39               	goto	l2677
  7021  134A                     u4340:
  7022  134A  2B62               	goto	l2687
  7023  134B                     l2679:
  7024  134B  3020               	movlw	32
  7025  134C  022D               	subwf	__div_to_l_@exp1,w
  7026  134D  1C03               	skipc
  7027  134E  2B50               	goto	u4351
  7028  134F  2B51               	goto	u4350
  7029  1350                     u4351:
  7030  1350  2B5D               	goto	l449
  7031  1351                     u4350:
  7032  1351  2ABA               	goto	l2641
  7033  1352                     l2685:
  7034  1352  3001               	movlw	1
  7035  1353  00F4               	movwf	??__div_to_l_
  7036  1354                     u4365:
  7037  1354  1003               	clrc
  7038  1355  0DA8               	rlf	__div_to_l_@quot,f
  7039  1356  0DA9               	rlf	__div_to_l_@quot+1,f
  7040  1357  0DAA               	rlf	__div_to_l_@quot+2,f
  7041  1358  0DAB               	rlf	__div_to_l_@quot+3,f
  7042  1359  0BF4               	decfsz	??__div_to_l_,f
  7043  135A  2B54               	goto	u4365
  7044  135B  3001               	movlw	1
  7045  135C  02AD               	subwf	__div_to_l_@exp1,f
  7046  135D                     l449:
  7047  135D  082D               	movf	__div_to_l_@exp1,w
  7048  135E  1D03               	btfss	3,2
  7049  135F  2B61               	goto	u4371
  7050  1360  2B62               	goto	u4370
  7051  1361                     u4371:
  7052  1361  2B52               	goto	l2685
  7053  1362                     u4370:
  7054  1362                     l2687:
  7055  1362  082B               	movf	__div_to_l_@quot+3,w
  7056  1363  00A3               	movwf	?__div_to_l_+3
  7057  1364  082A               	movf	__div_to_l_@quot+2,w
  7058  1365  00A2               	movwf	?__div_to_l_+2
  7059  1366  0829               	movf	__div_to_l_@quot+1,w
  7060  1367  00A1               	movwf	?__div_to_l_+1
  7061  1368  0828               	movf	__div_to_l_@quot,w
  7062  1369  00A0               	movwf	?__div_to_l_
  7063  136A                     l438:
  7064  136A  0008               	return
  7065  136B                     __end_of__div_to_l_:
  7066                           
  7067                           	psect	text14
  7068  1134                     __ptext14:	
  7069 ;; *************** function ___xxtofl *****************
  7070 ;; Defined at:
  7071 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  sign            1    wreg     unsigned char 
  7074 ;;  val             4   12[BANK0 ] long 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  sign            1   20[BANK0 ] unsigned char 
  7077 ;;  arg             4   22[BANK0 ] unsigned long 
  7078 ;;  exp             1   21[BANK0 ] unsigned char 
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  4   12[BANK0 ] unsigned char 
  7081 ;; Registers used:
  7082 ;;		wreg, status,2, status,0
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7088 ;;      Params:         0       4       0       0       0
  7089 ;;      Locals:         0       6       0       0       0
  7090 ;;      Temps:          0       4       0       0       0
  7091 ;;      Totals:         0      14       0       0       0
  7092 ;;Total ram usage:       14 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; Hardware stack levels required when called:    1
  7095 ;; This function calls:
  7096 ;;		Nothing
  7097 ;; This function is called by:
  7098 ;;		_conversion
  7099 ;;		_sprintf
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           
  7104                           ;psect for function ___xxtofl
  7105  1134                     ___xxtofl:
  7106                           
  7107                           ;incstack = 0
  7108                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7109                           ;___xxtofl@sign stored from wreg
  7110  1134  1283               	bcf	3,5	;RP0=0, select bank0
  7111  1135  1303               	bcf	3,6	;RP1=0, select bank0
  7112  1136  00B4               	movwf	___xxtofl@sign
  7113  1137                     l2831:
  7114  1137  0834               	movf	___xxtofl@sign,w
  7115  1138  1903               	btfsc	3,2
  7116  1139  293B               	goto	u4761
  7117  113A  293C               	goto	u4760
  7118  113B                     u4761:
  7119  113B  2950               	goto	l2837
  7120  113C                     u4760:
  7121  113C                     l2833:
  7122  113C  1FAF               	btfss	___xxtofl@val+3,7
  7123  113D  293F               	goto	u4771
  7124  113E  2940               	goto	u4770
  7125  113F                     u4771:
  7126  113F  2950               	goto	l2837
  7127  1140                     u4770:
  7128  1140                     l2835:
  7129  1140  092C               	comf	___xxtofl@val,w
  7130  1141  00B6               	movwf	___xxtofl@arg
  7131  1142  092D               	comf	___xxtofl@val+1,w
  7132  1143  00B7               	movwf	___xxtofl@arg+1
  7133  1144  092E               	comf	___xxtofl@val+2,w
  7134  1145  00B8               	movwf	___xxtofl@arg+2
  7135  1146  092F               	comf	___xxtofl@val+3,w
  7136  1147  00B9               	movwf	___xxtofl@arg+3
  7137  1148  0AB6               	incf	___xxtofl@arg,f
  7138  1149  1903               	skipnz
  7139  114A  0AB7               	incf	___xxtofl@arg+1,f
  7140  114B  1903               	skipnz
  7141  114C  0AB8               	incf	___xxtofl@arg+2,f
  7142  114D  1903               	skipnz
  7143  114E  0AB9               	incf	___xxtofl@arg+3,f
  7144  114F  2958               	goto	l735
  7145  1150                     l2837:
  7146  1150  082F               	movf	___xxtofl@val+3,w
  7147  1151  00B9               	movwf	___xxtofl@arg+3
  7148  1152  082E               	movf	___xxtofl@val+2,w
  7149  1153  00B8               	movwf	___xxtofl@arg+2
  7150  1154  082D               	movf	___xxtofl@val+1,w
  7151  1155  00B7               	movwf	___xxtofl@arg+1
  7152  1156  082C               	movf	___xxtofl@val,w
  7153  1157  00B6               	movwf	___xxtofl@arg
  7154  1158                     l735:
  7155  1158  082F               	movf	___xxtofl@val+3,w
  7156  1159  042E               	iorwf	___xxtofl@val+2,w
  7157  115A  042D               	iorwf	___xxtofl@val+1,w
  7158  115B  042C               	iorwf	___xxtofl@val,w
  7159  115C  1D03               	skipz
  7160  115D  295F               	goto	u4781
  7161  115E  2960               	goto	u4780
  7162  115F                     u4781:
  7163  115F  2969               	goto	l2843
  7164  1160                     u4780:
  7165  1160                     l2839:
  7166  1160  3000               	movlw	0
  7167  1161  00AF               	movwf	?___xxtofl+3
  7168  1162  3000               	movlw	0
  7169  1163  00AE               	movwf	?___xxtofl+2
  7170  1164  3000               	movlw	0
  7171  1165  00AD               	movwf	?___xxtofl+1
  7172  1166  3000               	movlw	0
  7173  1167  00AC               	movwf	?___xxtofl
  7174  1168  29EF               	goto	l737
  7175  1169                     l2843:
  7176  1169  3096               	movlw	150
  7177  116A  00B0               	movwf	??___xxtofl
  7178  116B  0830               	movf	??___xxtofl,w
  7179  116C  00B5               	movwf	___xxtofl@exp
  7180  116D  297B               	goto	l2847
  7181  116E                     l2845:
  7182  116E  3001               	movlw	1
  7183  116F  00B0               	movwf	??___xxtofl
  7184  1170  0830               	movf	??___xxtofl,w
  7185  1171  07B5               	addwf	___xxtofl@exp,f
  7186  1172  3001               	movlw	1
  7187  1173                     u4795:
  7188  1173  1003               	clrc
  7189  1174  0CB9               	rrf	___xxtofl@arg+3,f
  7190  1175  0CB8               	rrf	___xxtofl@arg+2,f
  7191  1176  0CB7               	rrf	___xxtofl@arg+1,f
  7192  1177  0CB6               	rrf	___xxtofl@arg,f
  7193  1178  3EFF               	addlw	-1
  7194  1179  1D03               	skipz
  7195  117A  2973               	goto	u4795
  7196  117B                     l2847:
  7197  117B  30FE               	movlw	254
  7198  117C  0539               	andwf	___xxtofl@arg+3,w
  7199  117D  1D03               	btfss	3,2
  7200  117E  2980               	goto	u4801
  7201  117F  2981               	goto	u4800
  7202  1180                     u4801:
  7203  1180  296E               	goto	l2845
  7204  1181                     u4800:
  7205  1181  299D               	goto	l741
  7206  1182                     l2849:
  7207  1182  3001               	movlw	1
  7208  1183  00B0               	movwf	??___xxtofl
  7209  1184  0830               	movf	??___xxtofl,w
  7210  1185  07B5               	addwf	___xxtofl@exp,f
  7211  1186                     l2851:
  7212  1186  3001               	movlw	1
  7213  1187  07B6               	addwf	___xxtofl@arg,f
  7214  1188  3000               	movlw	0
  7215  1189  1803               	skipnc
  7216  118A  3001               	movlw	1
  7217  118B  07B7               	addwf	___xxtofl@arg+1,f
  7218  118C  3000               	movlw	0
  7219  118D  1803               	skipnc
  7220  118E  3001               	movlw	1
  7221  118F  07B8               	addwf	___xxtofl@arg+2,f
  7222  1190  3000               	movlw	0
  7223  1191  1803               	skipnc
  7224  1192  3001               	movlw	1
  7225  1193  07B9               	addwf	___xxtofl@arg+3,f
  7226  1194                     l2853:
  7227  1194  3001               	movlw	1
  7228  1195                     u4815:
  7229  1195  1003               	clrc
  7230  1196  0CB9               	rrf	___xxtofl@arg+3,f
  7231  1197  0CB8               	rrf	___xxtofl@arg+2,f
  7232  1198  0CB7               	rrf	___xxtofl@arg+1,f
  7233  1199  0CB6               	rrf	___xxtofl@arg,f
  7234  119A  3EFF               	addlw	-1
  7235  119B  1D03               	skipz
  7236  119C  2995               	goto	u4815
  7237  119D                     l741:
  7238  119D  30FF               	movlw	255
  7239  119E  0539               	andwf	___xxtofl@arg+3,w
  7240  119F  1D03               	btfss	3,2
  7241  11A0  29A2               	goto	u4821
  7242  11A1  29A3               	goto	u4820
  7243  11A2                     u4821:
  7244  11A2  2982               	goto	l2849
  7245  11A3                     u4820:
  7246  11A3  29AF               	goto	l2857
  7247  11A4                     l2855:
  7248  11A4  3001               	movlw	1
  7249  11A5  02B5               	subwf	___xxtofl@exp,f
  7250  11A6  3001               	movlw	1
  7251  11A7  00B0               	movwf	??___xxtofl
  7252  11A8                     u4835:
  7253  11A8  1003               	clrc
  7254  11A9  0DB6               	rlf	___xxtofl@arg,f
  7255  11AA  0DB7               	rlf	___xxtofl@arg+1,f
  7256  11AB  0DB8               	rlf	___xxtofl@arg+2,f
  7257  11AC  0DB9               	rlf	___xxtofl@arg+3,f
  7258  11AD  0BB0               	decfsz	??___xxtofl,f
  7259  11AE  29A8               	goto	u4835
  7260  11AF                     l2857:
  7261  11AF  1BB8               	btfsc	___xxtofl@arg+2,7
  7262  11B0  29B2               	goto	u4841
  7263  11B1  29B3               	goto	u4840
  7264  11B2                     u4841:
  7265  11B2  29B9               	goto	l748
  7266  11B3                     u4840:
  7267  11B3                     l2859:
  7268  11B3  3002               	movlw	2
  7269  11B4  0235               	subwf	___xxtofl@exp,w
  7270  11B5  1803               	skipnc
  7271  11B6  29B8               	goto	u4851
  7272  11B7  29B9               	goto	u4850
  7273  11B8                     u4851:
  7274  11B8  29A4               	goto	l2855
  7275  11B9                     u4850:
  7276  11B9                     l748:
  7277  11B9  1835               	btfsc	___xxtofl@exp,0
  7278  11BA  29BC               	goto	u4861
  7279  11BB  29BD               	goto	u4860
  7280  11BC                     u4861:
  7281  11BC  29C5               	goto	l749
  7282  11BD                     u4860:
  7283  11BD                     l2861:
  7284  11BD  30FF               	movlw	255
  7285  11BE  05B6               	andwf	___xxtofl@arg,f
  7286  11BF  30FF               	movlw	255
  7287  11C0  05B7               	andwf	___xxtofl@arg+1,f
  7288  11C1  307F               	movlw	127
  7289  11C2  05B8               	andwf	___xxtofl@arg+2,f
  7290  11C3  30FF               	movlw	255
  7291  11C4  05B9               	andwf	___xxtofl@arg+3,f
  7292  11C5                     l749:
  7293  11C5  1003               	clrc
  7294  11C6  0CB5               	rrf	___xxtofl@exp,f
  7295  11C7                     l2863:
  7296  11C7  0835               	movf	___xxtofl@exp,w
  7297  11C8  00B0               	movwf	??___xxtofl
  7298  11C9  01B1               	clrf	??___xxtofl+1
  7299  11CA  01B2               	clrf	??___xxtofl+2
  7300  11CB  01B3               	clrf	??___xxtofl+3
  7301  11CC  3018               	movlw	24
  7302  11CD                     u4875:
  7303  11CD  1003               	clrc
  7304  11CE  0DB0               	rlf	??___xxtofl,f
  7305  11CF  0DB1               	rlf	??___xxtofl+1,f
  7306  11D0  0DB2               	rlf	??___xxtofl+2,f
  7307  11D1  0DB3               	rlf	??___xxtofl+3,f
  7308  11D2                     u4870:
  7309  11D2  3EFF               	addlw	-1
  7310  11D3  1D03               	skipz
  7311  11D4  29CD               	goto	u4875
  7312  11D5  0830               	movf	??___xxtofl,w
  7313  11D6  04B6               	iorwf	___xxtofl@arg,f
  7314  11D7  0831               	movf	??___xxtofl+1,w
  7315  11D8  04B7               	iorwf	___xxtofl@arg+1,f
  7316  11D9  0832               	movf	??___xxtofl+2,w
  7317  11DA  04B8               	iorwf	___xxtofl@arg+2,f
  7318  11DB  0833               	movf	??___xxtofl+3,w
  7319  11DC  04B9               	iorwf	___xxtofl@arg+3,f
  7320  11DD                     l2865:
  7321  11DD  0834               	movf	___xxtofl@sign,w
  7322  11DE  1903               	btfsc	3,2
  7323  11DF  29E1               	goto	u4881
  7324  11E0  29E2               	goto	u4880
  7325  11E1                     u4881:
  7326  11E1  29E7               	goto	l2871
  7327  11E2                     u4880:
  7328  11E2                     l2867:
  7329  11E2  1FAF               	btfss	___xxtofl@val+3,7
  7330  11E3  29E5               	goto	u4891
  7331  11E4  29E6               	goto	u4890
  7332  11E5                     u4891:
  7333  11E5  29E7               	goto	l2871
  7334  11E6                     u4890:
  7335  11E6                     l2869:
  7336  11E6  17B9               	bsf	___xxtofl@arg+3,7
  7337  11E7                     l2871:
  7338  11E7  0839               	movf	___xxtofl@arg+3,w
  7339  11E8  00AF               	movwf	?___xxtofl+3
  7340  11E9  0838               	movf	___xxtofl@arg+2,w
  7341  11EA  00AE               	movwf	?___xxtofl+2
  7342  11EB  0837               	movf	___xxtofl@arg+1,w
  7343  11EC  00AD               	movwf	?___xxtofl+1
  7344  11ED  0836               	movf	___xxtofl@arg,w
  7345  11EE  00AC               	movwf	?___xxtofl
  7346  11EF                     l737:
  7347  11EF  0008               	return
  7348  11F0                     __end_of___xxtofl:
  7349                           
  7350                           	psect	text15
  7351  1C9C                     __ptext15:	
  7352 ;; *************** function ___wmul *****************
  7353 ;; Defined at:
  7354 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;  multiplier      2    4[COMMON] unsigned int 
  7357 ;;  multiplicand    2    6[COMMON] unsigned int 
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;  product         2    0[BANK0 ] unsigned int 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  2    4[COMMON] unsigned int 
  7362 ;; Registers used:
  7363 ;;		wreg, status,2, status,0
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7369 ;;      Params:         4       0       0       0       0
  7370 ;;      Locals:         0       2       0       0       0
  7371 ;;      Temps:          0       0       0       0       0
  7372 ;;      Totals:         4       2       0       0       0
  7373 ;;Total ram usage:        6 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; Hardware stack levels required when called:    1
  7376 ;; This function calls:
  7377 ;;		Nothing
  7378 ;; This function is called by:
  7379 ;;		_conversion
  7380 ;;		_sprintf
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           
  7385                           ;psect for function ___wmul
  7386  1C9C                     ___wmul:
  7387  1C9C                     l3311:	
  7388                           ;incstack = 0
  7389                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7390                           
  7391  1C9C  1283               	bcf	3,5	;RP0=0, select bank0
  7392  1C9D  1303               	bcf	3,6	;RP1=0, select bank0
  7393  1C9E  01A0               	clrf	___wmul@product
  7394  1C9F  01A1               	clrf	___wmul@product+1
  7395  1CA0                     l3313:
  7396  1CA0  1C74               	btfss	___wmul@multiplier,0
  7397  1CA1  2CA3               	goto	u5731
  7398  1CA2  2CA4               	goto	u5730
  7399  1CA3                     u5731:
  7400  1CA3  2CAC               	goto	l268
  7401  1CA4                     u5730:
  7402  1CA4                     l3315:
  7403  1CA4  0876               	movf	___wmul@multiplicand,w
  7404  1CA5  1283               	bcf	3,5	;RP0=0, select bank0
  7405  1CA6  1303               	bcf	3,6	;RP1=0, select bank0
  7406  1CA7  07A0               	addwf	___wmul@product,f
  7407  1CA8  1803               	skipnc
  7408  1CA9  0AA1               	incf	___wmul@product+1,f
  7409  1CAA  0877               	movf	___wmul@multiplicand+1,w
  7410  1CAB  07A1               	addwf	___wmul@product+1,f
  7411  1CAC                     l268:
  7412  1CAC  3001               	movlw	1
  7413  1CAD                     u5745:
  7414  1CAD  1003               	clrc
  7415  1CAE  0DF6               	rlf	___wmul@multiplicand,f
  7416  1CAF  0DF7               	rlf	___wmul@multiplicand+1,f
  7417  1CB0  3EFF               	addlw	-1
  7418  1CB1  1D03               	skipz
  7419  1CB2  2CAD               	goto	u5745
  7420  1CB3                     l3317:
  7421  1CB3  3001               	movlw	1
  7422  1CB4                     u5755:
  7423  1CB4  1003               	clrc
  7424  1CB5  0CF5               	rrf	___wmul@multiplier+1,f
  7425  1CB6  0CF4               	rrf	___wmul@multiplier,f
  7426  1CB7  3EFF               	addlw	-1
  7427  1CB8  1D03               	skipz
  7428  1CB9  2CB4               	goto	u5755
  7429  1CBA                     l3319:
  7430  1CBA  0874               	movf	___wmul@multiplier,w
  7431  1CBB  0475               	iorwf	___wmul@multiplier+1,w
  7432  1CBC  1D03               	btfss	3,2
  7433  1CBD  2CBF               	goto	u5761
  7434  1CBE  2CC0               	goto	u5760
  7435  1CBF                     u5761:
  7436  1CBF  2CA0               	goto	l3313
  7437  1CC0                     u5760:
  7438  1CC0                     l3321:
  7439  1CC0  1283               	bcf	3,5	;RP0=0, select bank0
  7440  1CC1  1303               	bcf	3,6	;RP1=0, select bank0
  7441  1CC2  0821               	movf	___wmul@product+1,w
  7442  1CC3  00F5               	movwf	?___wmul+1
  7443  1CC4  0820               	movf	___wmul@product,w
  7444  1CC5  00F4               	movwf	?___wmul
  7445  1CC6                     l270:
  7446  1CC6  0008               	return
  7447  1CC7                     __end_of___wmul:
  7448                           
  7449                           	psect	text16
  7450  07A8                     __ptext16:	
  7451 ;; *************** function ___llmod *****************
  7452 ;; Defined at:
  7453 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  divisor         4    0[BANK0 ] unsigned long 
  7456 ;;  dividend        4    4[BANK0 ] unsigned long 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  counter         1    5[COMMON] unsigned char 
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  4    0[BANK0 ] unsigned long 
  7461 ;; Registers used:
  7462 ;;		wreg, status,2, status,0
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7468 ;;      Params:         0       8       0       0       0
  7469 ;;      Locals:         1       0       0       0       0
  7470 ;;      Temps:          1       0       0       0       0
  7471 ;;      Totals:         2       8       0       0       0
  7472 ;;Total ram usage:       10 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:    1
  7475 ;; This function calls:
  7476 ;;		Nothing
  7477 ;; This function is called by:
  7478 ;;		_sprintf
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           
  7483                           ;psect for function ___llmod
  7484  07A8                     ___llmod:
  7485  07A8                     l2805:	
  7486                           ;incstack = 0
  7487                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7488                           
  7489  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  7490  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  7491  07AA  0823               	movf	___llmod@divisor+3,w
  7492  07AB  0422               	iorwf	___llmod@divisor+2,w
  7493  07AC  0421               	iorwf	___llmod@divisor+1,w
  7494  07AD  0420               	iorwf	___llmod@divisor,w
  7495  07AE  1903               	skipnz
  7496  07AF  2FB1               	goto	u4701
  7497  07B0  2FB2               	goto	u4700
  7498  07B1                     u4701:
  7499  07B1  2FF5               	goto	l2821
  7500  07B2                     u4700:
  7501  07B2                     l2807:
  7502  07B2  01F5               	clrf	___llmod@counter
  7503  07B3  0AF5               	incf	___llmod@counter,f
  7504  07B4  2FC2               	goto	l2811
  7505  07B5                     l2809:
  7506  07B5  3001               	movlw	1
  7507  07B6  00F4               	movwf	??___llmod
  7508  07B7                     u4715:
  7509  07B7  1003               	clrc
  7510  07B8  0DA0               	rlf	___llmod@divisor,f
  7511  07B9  0DA1               	rlf	___llmod@divisor+1,f
  7512  07BA  0DA2               	rlf	___llmod@divisor+2,f
  7513  07BB  0DA3               	rlf	___llmod@divisor+3,f
  7514  07BC  0BF4               	decfsz	??___llmod,f
  7515  07BD  2FB7               	goto	u4715
  7516  07BE  3001               	movlw	1
  7517  07BF  00F4               	movwf	??___llmod
  7518  07C0  0874               	movf	??___llmod,w
  7519  07C1  07F5               	addwf	___llmod@counter,f
  7520  07C2                     l2811:
  7521  07C2  1FA3               	btfss	___llmod@divisor+3,7
  7522  07C3  2FC5               	goto	u4721
  7523  07C4  2FC6               	goto	u4720
  7524  07C5                     u4721:
  7525  07C5  2FB5               	goto	l2809
  7526  07C6                     u4720:
  7527  07C6                     l2813:
  7528  07C6  0823               	movf	___llmod@divisor+3,w
  7529  07C7  0227               	subwf	___llmod@dividend+3,w
  7530  07C8  1D03               	skipz
  7531  07C9  2FD4               	goto	u4735
  7532  07CA  0822               	movf	___llmod@divisor+2,w
  7533  07CB  0226               	subwf	___llmod@dividend+2,w
  7534  07CC  1D03               	skipz
  7535  07CD  2FD4               	goto	u4735
  7536  07CE  0821               	movf	___llmod@divisor+1,w
  7537  07CF  0225               	subwf	___llmod@dividend+1,w
  7538  07D0  1D03               	skipz
  7539  07D1  2FD4               	goto	u4735
  7540  07D2  0820               	movf	___llmod@divisor,w
  7541  07D3  0224               	subwf	___llmod@dividend,w
  7542  07D4                     u4735:
  7543  07D4  1C03               	skipc
  7544  07D5  2FD7               	goto	u4731
  7545  07D6  2FD8               	goto	u4730
  7546  07D7                     u4731:
  7547  07D7  2FE6               	goto	l2817
  7548  07D8                     u4730:
  7549  07D8                     l2815:
  7550  07D8  0820               	movf	___llmod@divisor,w
  7551  07D9  02A4               	subwf	___llmod@dividend,f
  7552  07DA  0821               	movf	___llmod@divisor+1,w
  7553  07DB  1C03               	skipc
  7554  07DC  0F21               	incfsz	___llmod@divisor+1,w
  7555  07DD  02A5               	subwf	___llmod@dividend+1,f
  7556  07DE  0822               	movf	___llmod@divisor+2,w
  7557  07DF  1C03               	skipc
  7558  07E0  0F22               	incfsz	___llmod@divisor+2,w
  7559  07E1  02A6               	subwf	___llmod@dividend+2,f
  7560  07E2  0823               	movf	___llmod@divisor+3,w
  7561  07E3  1C03               	skipc
  7562  07E4  0F23               	incfsz	___llmod@divisor+3,w
  7563  07E5  02A7               	subwf	___llmod@dividend+3,f
  7564  07E6                     l2817:
  7565  07E6  3001               	movlw	1
  7566  07E7                     u4745:
  7567  07E7  1003               	clrc
  7568  07E8  0CA3               	rrf	___llmod@divisor+3,f
  7569  07E9  0CA2               	rrf	___llmod@divisor+2,f
  7570  07EA  0CA1               	rrf	___llmod@divisor+1,f
  7571  07EB  0CA0               	rrf	___llmod@divisor,f
  7572  07EC  3EFF               	addlw	-1
  7573  07ED  1D03               	skipz
  7574  07EE  2FE7               	goto	u4745
  7575  07EF                     l2819:
  7576  07EF  3001               	movlw	1
  7577  07F0  02F5               	subwf	___llmod@counter,f
  7578  07F1  1D03               	btfss	3,2
  7579  07F2  2FF4               	goto	u4751
  7580  07F3  2FF5               	goto	u4750
  7581  07F4                     u4751:
  7582  07F4  2FC6               	goto	l2813
  7583  07F5                     u4750:
  7584  07F5                     l2821:
  7585  07F5  0827               	movf	___llmod@dividend+3,w
  7586  07F6  00A3               	movwf	?___llmod+3
  7587  07F7  0826               	movf	___llmod@dividend+2,w
  7588  07F8  00A2               	movwf	?___llmod+2
  7589  07F9  0825               	movf	___llmod@dividend+1,w
  7590  07FA  00A1               	movwf	?___llmod+1
  7591  07FB  0824               	movf	___llmod@dividend,w
  7592  07FC  00A0               	movwf	?___llmod
  7593  07FD                     l524:
  7594  07FD  0008               	return
  7595  07FE                     __end_of___llmod:
  7596                           
  7597                           	psect	text17
  7598  1F1C                     __ptext17:	
  7599 ;; *************** function ___lldiv *****************
  7600 ;; Defined at:
  7601 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;  divisor         4    0[BANK0 ] unsigned long 
  7604 ;;  dividend        4    4[BANK0 ] unsigned long 
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;  quotient        4    8[BANK0 ] unsigned long 
  7607 ;;  counter         1   12[BANK0 ] unsigned char 
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  4    0[BANK0 ] unsigned long 
  7610 ;; Registers used:
  7611 ;;		wreg, status,2, status,0
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7617 ;;      Params:         0       8       0       0       0
  7618 ;;      Locals:         0       5       0       0       0
  7619 ;;      Temps:          1       0       0       0       0
  7620 ;;      Totals:         1      13       0       0       0
  7621 ;;Total ram usage:       14 bytes
  7622 ;; Hardware stack levels used:    1
  7623 ;; Hardware stack levels required when called:    1
  7624 ;; This function calls:
  7625 ;;		Nothing
  7626 ;; This function is called by:
  7627 ;;		_sprintf
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           
  7632                           ;psect for function ___lldiv
  7633  1F1C                     ___lldiv:
  7634  1F1C                     l3325:	
  7635                           ;incstack = 0
  7636                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7637                           
  7638  1F1C  3000               	movlw	0
  7639  1F1D  1283               	bcf	3,5	;RP0=0, select bank0
  7640  1F1E  1303               	bcf	3,6	;RP1=0, select bank0
  7641  1F1F  00AB               	movwf	___lldiv@quotient+3
  7642  1F20  3000               	movlw	0
  7643  1F21  00AA               	movwf	___lldiv@quotient+2
  7644  1F22  3000               	movlw	0
  7645  1F23  00A9               	movwf	___lldiv@quotient+1
  7646  1F24  3000               	movlw	0
  7647  1F25  00A8               	movwf	___lldiv@quotient
  7648  1F26  0823               	movf	___lldiv@divisor+3,w
  7649  1F27  0422               	iorwf	___lldiv@divisor+2,w
  7650  1F28  0421               	iorwf	___lldiv@divisor+1,w
  7651  1F29  0420               	iorwf	___lldiv@divisor,w
  7652  1F2A  1903               	skipnz
  7653  1F2B  2F2D               	goto	u5771
  7654  1F2C  2F2E               	goto	u5770
  7655  1F2D                     u5771:
  7656  1F2D  2F7B               	goto	l3345
  7657  1F2E                     u5770:
  7658  1F2E                     l3327:
  7659  1F2E  01AC               	clrf	___lldiv@counter
  7660  1F2F  0AAC               	incf	___lldiv@counter,f
  7661  1F30  2F3E               	goto	l3331
  7662  1F31                     l3329:
  7663  1F31  3001               	movlw	1
  7664  1F32  00F4               	movwf	??___lldiv
  7665  1F33                     u5785:
  7666  1F33  1003               	clrc
  7667  1F34  0DA0               	rlf	___lldiv@divisor,f
  7668  1F35  0DA1               	rlf	___lldiv@divisor+1,f
  7669  1F36  0DA2               	rlf	___lldiv@divisor+2,f
  7670  1F37  0DA3               	rlf	___lldiv@divisor+3,f
  7671  1F38  0BF4               	decfsz	??___lldiv,f
  7672  1F39  2F33               	goto	u5785
  7673  1F3A  3001               	movlw	1
  7674  1F3B  00F4               	movwf	??___lldiv
  7675  1F3C  0874               	movf	??___lldiv,w
  7676  1F3D  07AC               	addwf	___lldiv@counter,f
  7677  1F3E                     l3331:
  7678  1F3E  1FA3               	btfss	___lldiv@divisor+3,7
  7679  1F3F  2F41               	goto	u5791
  7680  1F40  2F42               	goto	u5790
  7681  1F41                     u5791:
  7682  1F41  2F31               	goto	l3329
  7683  1F42                     u5790:
  7684  1F42                     l3333:
  7685  1F42  3001               	movlw	1
  7686  1F43  00F4               	movwf	??___lldiv
  7687  1F44                     u5805:
  7688  1F44  1003               	clrc
  7689  1F45  0DA8               	rlf	___lldiv@quotient,f
  7690  1F46  0DA9               	rlf	___lldiv@quotient+1,f
  7691  1F47  0DAA               	rlf	___lldiv@quotient+2,f
  7692  1F48  0DAB               	rlf	___lldiv@quotient+3,f
  7693  1F49  0BF4               	decfsz	??___lldiv,f
  7694  1F4A  2F44               	goto	u5805
  7695  1F4B                     l3335:
  7696  1F4B  0823               	movf	___lldiv@divisor+3,w
  7697  1F4C  0227               	subwf	___lldiv@dividend+3,w
  7698  1F4D  1D03               	skipz
  7699  1F4E  2F59               	goto	u5815
  7700  1F4F  0822               	movf	___lldiv@divisor+2,w
  7701  1F50  0226               	subwf	___lldiv@dividend+2,w
  7702  1F51  1D03               	skipz
  7703  1F52  2F59               	goto	u5815
  7704  1F53  0821               	movf	___lldiv@divisor+1,w
  7705  1F54  0225               	subwf	___lldiv@dividend+1,w
  7706  1F55  1D03               	skipz
  7707  1F56  2F59               	goto	u5815
  7708  1F57  0820               	movf	___lldiv@divisor,w
  7709  1F58  0224               	subwf	___lldiv@dividend,w
  7710  1F59                     u5815:
  7711  1F59  1C03               	skipc
  7712  1F5A  2F5C               	goto	u5811
  7713  1F5B  2F5D               	goto	u5810
  7714  1F5C                     u5811:
  7715  1F5C  2F6C               	goto	l3341
  7716  1F5D                     u5810:
  7717  1F5D                     l3337:
  7718  1F5D  0820               	movf	___lldiv@divisor,w
  7719  1F5E  02A4               	subwf	___lldiv@dividend,f
  7720  1F5F  0821               	movf	___lldiv@divisor+1,w
  7721  1F60  1C03               	skipc
  7722  1F61  0F21               	incfsz	___lldiv@divisor+1,w
  7723  1F62  02A5               	subwf	___lldiv@dividend+1,f
  7724  1F63  0822               	movf	___lldiv@divisor+2,w
  7725  1F64  1C03               	skipc
  7726  1F65  0F22               	incfsz	___lldiv@divisor+2,w
  7727  1F66  02A6               	subwf	___lldiv@dividend+2,f
  7728  1F67  0823               	movf	___lldiv@divisor+3,w
  7729  1F68  1C03               	skipc
  7730  1F69  0F23               	incfsz	___lldiv@divisor+3,w
  7731  1F6A  02A7               	subwf	___lldiv@dividend+3,f
  7732  1F6B                     l3339:
  7733  1F6B  1428               	bsf	___lldiv@quotient,0
  7734  1F6C                     l3341:
  7735  1F6C  3001               	movlw	1
  7736  1F6D                     u5825:
  7737  1F6D  1003               	clrc
  7738  1F6E  0CA3               	rrf	___lldiv@divisor+3,f
  7739  1F6F  0CA2               	rrf	___lldiv@divisor+2,f
  7740  1F70  0CA1               	rrf	___lldiv@divisor+1,f
  7741  1F71  0CA0               	rrf	___lldiv@divisor,f
  7742  1F72  3EFF               	addlw	-1
  7743  1F73  1D03               	skipz
  7744  1F74  2F6D               	goto	u5825
  7745  1F75                     l3343:
  7746  1F75  3001               	movlw	1
  7747  1F76  02AC               	subwf	___lldiv@counter,f
  7748  1F77  1D03               	btfss	3,2
  7749  1F78  2F7A               	goto	u5831
  7750  1F79  2F7B               	goto	u5830
  7751  1F7A                     u5831:
  7752  1F7A  2F42               	goto	l3333
  7753  1F7B                     u5830:
  7754  1F7B                     l3345:
  7755  1F7B  082B               	movf	___lldiv@quotient+3,w
  7756  1F7C  00A3               	movwf	?___lldiv+3
  7757  1F7D  082A               	movf	___lldiv@quotient+2,w
  7758  1F7E  00A2               	movwf	?___lldiv+2
  7759  1F7F  0829               	movf	___lldiv@quotient+1,w
  7760  1F80  00A1               	movwf	?___lldiv+1
  7761  1F81  0828               	movf	___lldiv@quotient,w
  7762  1F82  00A0               	movwf	?___lldiv
  7763  1F83                     l304:
  7764  1F83  0008               	return
  7765  1F84                     __end_of___lldiv:
  7766                           
  7767                           	psect	text18
  7768  1F84                     __ptext18:	
  7769 ;; *************** function ___fltol *****************
  7770 ;; Defined at:
  7771 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;  f1              4   57[BANK0 ] unsigned long 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;  exp1            1   67[BANK0 ] unsigned char 
  7776 ;;  sign1           1   66[BANK0 ] unsigned char 
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  4   57[BANK0 ] long 
  7779 ;; Registers used:
  7780 ;;		wreg, status,2, status,0
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7786 ;;      Params:         0       4       0       0       0
  7787 ;;      Locals:         0       2       0       0       0
  7788 ;;      Temps:          0       5       0       0       0
  7789 ;;      Totals:         0      11       0       0       0
  7790 ;;Total ram usage:       11 bytes
  7791 ;; Hardware stack levels used:    1
  7792 ;; Hardware stack levels required when called:    1
  7793 ;; This function calls:
  7794 ;;		Nothing
  7795 ;; This function is called by:
  7796 ;;		_sprintf
  7797 ;; This function uses a non-reentrant model
  7798 ;;
  7799                           
  7800                           
  7801                           ;psect for function ___fltol
  7802  1F84                     ___fltol:
  7803  1F84                     l2769:	
  7804                           ;incstack = 0
  7805                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7806                           
  7807  1F84  1003               	clrc
  7808  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  7809  1F86  1303               	bcf	3,6	;RP1=0, select bank0
  7810  1F87  0D5B               	rlf	___fltol@f1+2,w
  7811  1F88  0D5C               	rlf	___fltol@f1+3,w
  7812  1F89  00DD               	movwf	??___fltol
  7813  1F8A  085D               	movf	??___fltol,w
  7814  1F8B  00E3               	movwf	___fltol@exp1
  7815  1F8C  0863               	movf	___fltol@exp1,w
  7816  1F8D  1D03               	btfss	3,2
  7817  1F8E  2F90               	goto	u4601
  7818  1F8F  2F91               	goto	u4600
  7819  1F90                     u4601:
  7820  1F90  2F9A               	goto	l2775
  7821  1F91                     u4600:
  7822  1F91                     l2771:
  7823  1F91  3000               	movlw	0
  7824  1F92  00DC               	movwf	?___fltol+3
  7825  1F93  3000               	movlw	0
  7826  1F94  00DB               	movwf	?___fltol+2
  7827  1F95  3000               	movlw	0
  7828  1F96  00DA               	movwf	?___fltol+1
  7829  1F97  3000               	movlw	0
  7830  1F98  00D9               	movwf	?___fltol
  7831  1F99  2FFF               	goto	l471
  7832  1F9A                     l2775:
  7833  1F9A  0859               	movf	___fltol@f1,w
  7834  1F9B  00DD               	movwf	??___fltol
  7835  1F9C  085A               	movf	___fltol@f1+1,w
  7836  1F9D  00DE               	movwf	??___fltol+1
  7837  1F9E  085B               	movf	___fltol@f1+2,w
  7838  1F9F  00DF               	movwf	??___fltol+2
  7839  1FA0  085C               	movf	___fltol@f1+3,w
  7840  1FA1  00E0               	movwf	??___fltol+3
  7841  1FA2  301F               	movlw	31
  7842  1FA3                     u4615:
  7843  1FA3  1003               	clrc
  7844  1FA4  0CE0               	rrf	??___fltol+3,f
  7845  1FA5  0CDF               	rrf	??___fltol+2,f
  7846  1FA6  0CDE               	rrf	??___fltol+1,f
  7847  1FA7  0CDD               	rrf	??___fltol,f
  7848  1FA8                     u4610:
  7849  1FA8  3EFF               	addlw	-1
  7850  1FA9  1D03               	skipz
  7851  1FAA  2FA3               	goto	u4615
  7852  1FAB  085D               	movf	??___fltol,w
  7853  1FAC  00E1               	movwf	??___fltol+4
  7854  1FAD  0861               	movf	??___fltol+4,w
  7855  1FAE  00E2               	movwf	___fltol@sign1
  7856  1FAF                     l2777:
  7857  1FAF  17DB               	bsf	___fltol@f1+2,7
  7858  1FB0                     l2779:
  7859  1FB0  30FF               	movlw	255
  7860  1FB1  05D9               	andwf	___fltol@f1,f
  7861  1FB2  30FF               	movlw	255
  7862  1FB3  05DA               	andwf	___fltol@f1+1,f
  7863  1FB4  30FF               	movlw	255
  7864  1FB5  05DB               	andwf	___fltol@f1+2,f
  7865  1FB6  3000               	movlw	0
  7866  1FB7  05DC               	andwf	___fltol@f1+3,f
  7867  1FB8                     l2781:
  7868  1FB8  3096               	movlw	150
  7869  1FB9  02E3               	subwf	___fltol@exp1,f
  7870  1FBA                     l2783:
  7871  1FBA  1FE3               	btfss	___fltol@exp1,7
  7872  1FBB  2FBD               	goto	u4621
  7873  1FBC  2FBE               	goto	u4620
  7874  1FBD                     u4621:
  7875  1FBD  2FD8               	goto	l2793
  7876  1FBE                     u4620:
  7877  1FBE                     l2785:
  7878  1FBE  0863               	movf	___fltol@exp1,w
  7879  1FBF  3A80               	xorlw	128
  7880  1FC0  3E97               	addlw	151
  7881  1FC1  1803               	skipnc
  7882  1FC2  2FC4               	goto	u4631
  7883  1FC3  2FC5               	goto	u4630
  7884  1FC4                     u4631:
  7885  1FC4  2FC6               	goto	l2791
  7886  1FC5                     u4630:
  7887  1FC5  2F91               	goto	l2771
  7888  1FC6                     l2791:
  7889  1FC6  3001               	movlw	1
  7890  1FC7                     u4645:
  7891  1FC7  1003               	clrc
  7892  1FC8  0CDC               	rrf	___fltol@f1+3,f
  7893  1FC9  0CDB               	rrf	___fltol@f1+2,f
  7894  1FCA  0CDA               	rrf	___fltol@f1+1,f
  7895  1FCB  0CD9               	rrf	___fltol@f1,f
  7896  1FCC  3EFF               	addlw	-1
  7897  1FCD  1D03               	skipz
  7898  1FCE  2FC7               	goto	u4645
  7899  1FCF  3001               	movlw	1
  7900  1FD0  00DD               	movwf	??___fltol
  7901  1FD1  085D               	movf	??___fltol,w
  7902  1FD2  07E3               	addwf	___fltol@exp1,f
  7903  1FD3  1D03               	btfss	3,2
  7904  1FD4  2FD6               	goto	u4651
  7905  1FD5  2FD7               	goto	u4650
  7906  1FD6                     u4651:
  7907  1FD6  2FC6               	goto	l2791
  7908  1FD7                     u4650:
  7909  1FD7  2FEF               	goto	l2801
  7910  1FD8                     l2793:
  7911  1FD8  3020               	movlw	32
  7912  1FD9  0263               	subwf	___fltol@exp1,w
  7913  1FDA  1C03               	skipc
  7914  1FDB  2FDD               	goto	u4661
  7915  1FDC  2FDE               	goto	u4660
  7916  1FDD                     u4661:
  7917  1FDD  2FEA               	goto	l478
  7918  1FDE                     u4660:
  7919  1FDE  2F91               	goto	l2771
  7920  1FDF                     l2799:
  7921  1FDF  3001               	movlw	1
  7922  1FE0  00DD               	movwf	??___fltol
  7923  1FE1                     u4675:
  7924  1FE1  1003               	clrc
  7925  1FE2  0DD9               	rlf	___fltol@f1,f
  7926  1FE3  0DDA               	rlf	___fltol@f1+1,f
  7927  1FE4  0DDB               	rlf	___fltol@f1+2,f
  7928  1FE5  0DDC               	rlf	___fltol@f1+3,f
  7929  1FE6  0BDD               	decfsz	??___fltol,f
  7930  1FE7  2FE1               	goto	u4675
  7931  1FE8  3001               	movlw	1
  7932  1FE9  02E3               	subwf	___fltol@exp1,f
  7933  1FEA                     l478:
  7934  1FEA  0863               	movf	___fltol@exp1,w
  7935  1FEB  1D03               	btfss	3,2
  7936  1FEC  2FEE               	goto	u4681
  7937  1FED  2FEF               	goto	u4680
  7938  1FEE                     u4681:
  7939  1FEE  2FDF               	goto	l2799
  7940  1FEF                     u4680:
  7941  1FEF                     l2801:
  7942  1FEF  0862               	movf	___fltol@sign1,w
  7943  1FF0  1903               	btfsc	3,2
  7944  1FF1  2FF3               	goto	u4691
  7945  1FF2  2FF4               	goto	u4690
  7946  1FF3                     u4691:
  7947  1FF3  2FFF               	goto	l481
  7948  1FF4                     u4690:
  7949  1FF4                     l2803:
  7950  1FF4  09D9               	comf	___fltol@f1,f
  7951  1FF5  09DA               	comf	___fltol@f1+1,f
  7952  1FF6  09DB               	comf	___fltol@f1+2,f
  7953  1FF7  09DC               	comf	___fltol@f1+3,f
  7954  1FF8  0AD9               	incf	___fltol@f1,f
  7955  1FF9  1903               	skipnz
  7956  1FFA  0ADA               	incf	___fltol@f1+1,f
  7957  1FFB  1903               	skipnz
  7958  1FFC  0ADB               	incf	___fltol@f1+2,f
  7959  1FFD  1903               	skipnz
  7960  1FFE  0ADC               	incf	___fltol@f1+3,f
  7961  1FFF                     l481:
  7962  1FFF                     l471:
  7963  1FFF  0008               	return
  7964  2000                     __end_of___fltol:
  7965                           
  7966                           	psect	text19
  7967  1E17                     __ptext19:	
  7968 ;; *************** function ___flsub *****************
  7969 ;; Defined at:
  7970 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;  a               4    0[BANK1 ] long 
  7973 ;;  b               4    4[BANK1 ] long 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;		None
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  4    0[BANK1 ] long 
  7978 ;; Registers used:
  7979 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7980 ;; Tracked objects:
  7981 ;;		On entry : 0/0
  7982 ;;		On exit  : 0/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7985 ;;      Params:         0       0       8       0       0
  7986 ;;      Locals:         0       0       0       0       0
  7987 ;;      Temps:          0       0       0       0       0
  7988 ;;      Totals:         0       0       8       0       0
  7989 ;;Total ram usage:        8 bytes
  7990 ;; Hardware stack levels used:    1
  7991 ;; Hardware stack levels required when called:    2
  7992 ;; This function calls:
  7993 ;;		___fladd
  7994 ;; This function is called by:
  7995 ;;		_sprintf
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           
  8000                           ;psect for function ___flsub
  8001  1E17                     ___flsub:
  8002  1E17                     l2825:	
  8003                           ;incstack = 0
  8004                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8005                           
  8006  1E17  3080               	movlw	128
  8007  1E18  1683               	bsf	3,5	;RP0=1, select bank1
  8008  1E19  1303               	bcf	3,6	;RP1=0, select bank1
  8009  1E1A  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8010  1E1B                     l2827:
  8011  1E1B  0827               	movf	(___flsub@b+3)^(0+128),w
  8012  1E1C  1283               	bcf	3,5	;RP0=0, select bank0
  8013  1E1D  1303               	bcf	3,6	;RP1=0, select bank0
  8014  1E1E  00DD               	movwf	___fladd@b+3
  8015  1E1F  1683               	bsf	3,5	;RP0=1, select bank1
  8016  1E20  1303               	bcf	3,6	;RP1=0, select bank1
  8017  1E21  0826               	movf	(___flsub@b+2)^(0+128),w
  8018  1E22  1283               	bcf	3,5	;RP0=0, select bank0
  8019  1E23  1303               	bcf	3,6	;RP1=0, select bank0
  8020  1E24  00DC               	movwf	___fladd@b+2
  8021  1E25  1683               	bsf	3,5	;RP0=1, select bank1
  8022  1E26  1303               	bcf	3,6	;RP1=0, select bank1
  8023  1E27  0825               	movf	(___flsub@b+1)^(0+128),w
  8024  1E28  1283               	bcf	3,5	;RP0=0, select bank0
  8025  1E29  1303               	bcf	3,6	;RP1=0, select bank0
  8026  1E2A  00DB               	movwf	___fladd@b+1
  8027  1E2B  1683               	bsf	3,5	;RP0=1, select bank1
  8028  1E2C  1303               	bcf	3,6	;RP1=0, select bank1
  8029  1E2D  0824               	movf	___flsub@b^(0+128),w
  8030  1E2E  1283               	bcf	3,5	;RP0=0, select bank0
  8031  1E2F  1303               	bcf	3,6	;RP1=0, select bank0
  8032  1E30  00DA               	movwf	___fladd@b
  8033  1E31  1683               	bsf	3,5	;RP0=1, select bank1
  8034  1E32  1303               	bcf	3,6	;RP1=0, select bank1
  8035  1E33  0823               	movf	(___flsub@a+3)^(0+128),w
  8036  1E34  1283               	bcf	3,5	;RP0=0, select bank0
  8037  1E35  1303               	bcf	3,6	;RP1=0, select bank0
  8038  1E36  00E1               	movwf	___fladd@a+3
  8039  1E37  1683               	bsf	3,5	;RP0=1, select bank1
  8040  1E38  1303               	bcf	3,6	;RP1=0, select bank1
  8041  1E39  0822               	movf	(___flsub@a+2)^(0+128),w
  8042  1E3A  1283               	bcf	3,5	;RP0=0, select bank0
  8043  1E3B  1303               	bcf	3,6	;RP1=0, select bank0
  8044  1E3C  00E0               	movwf	___fladd@a+2
  8045  1E3D  1683               	bsf	3,5	;RP0=1, select bank1
  8046  1E3E  1303               	bcf	3,6	;RP1=0, select bank1
  8047  1E3F  0821               	movf	(___flsub@a+1)^(0+128),w
  8048  1E40  1283               	bcf	3,5	;RP0=0, select bank0
  8049  1E41  1303               	bcf	3,6	;RP1=0, select bank0
  8050  1E42  00DF               	movwf	___fladd@a+1
  8051  1E43  1683               	bsf	3,5	;RP0=1, select bank1
  8052  1E44  1303               	bcf	3,6	;RP1=0, select bank1
  8053  1E45  0820               	movf	___flsub@a^(0+128),w
  8054  1E46  1283               	bcf	3,5	;RP0=0, select bank0
  8055  1E47  1303               	bcf	3,6	;RP1=0, select bank0
  8056  1E48  00DE               	movwf	___fladd@a
  8057  1E49  160A  118A  2578  160A  158A  	fcall	___fladd
  8058  1E4E  1283               	bcf	3,5	;RP0=0, select bank0
  8059  1E4F  1303               	bcf	3,6	;RP1=0, select bank0
  8060  1E50  085D               	movf	?___fladd+3,w
  8061  1E51  1683               	bsf	3,5	;RP0=1, select bank1
  8062  1E52  1303               	bcf	3,6	;RP1=0, select bank1
  8063  1E53  00A3               	movwf	(?___flsub+3)^(0+128)
  8064  1E54  1283               	bcf	3,5	;RP0=0, select bank0
  8065  1E55  1303               	bcf	3,6	;RP1=0, select bank0
  8066  1E56  085C               	movf	?___fladd+2,w
  8067  1E57  1683               	bsf	3,5	;RP0=1, select bank1
  8068  1E58  1303               	bcf	3,6	;RP1=0, select bank1
  8069  1E59  00A2               	movwf	(?___flsub+2)^(0+128)
  8070  1E5A  1283               	bcf	3,5	;RP0=0, select bank0
  8071  1E5B  1303               	bcf	3,6	;RP1=0, select bank0
  8072  1E5C  085B               	movf	?___fladd+1,w
  8073  1E5D  1683               	bsf	3,5	;RP0=1, select bank1
  8074  1E5E  1303               	bcf	3,6	;RP1=0, select bank1
  8075  1E5F  00A1               	movwf	(?___flsub+1)^(0+128)
  8076  1E60  1283               	bcf	3,5	;RP0=0, select bank0
  8077  1E61  1303               	bcf	3,6	;RP1=0, select bank0
  8078  1E62  085A               	movf	?___fladd,w
  8079  1E63  1683               	bsf	3,5	;RP0=1, select bank1
  8080  1E64  1303               	bcf	3,6	;RP1=0, select bank1
  8081  1E65  00A0               	movwf	?___flsub^(0+128)
  8082  1E66                     l641:
  8083  1E66  0008               	return
  8084  1E67                     __end_of___flsub:
  8085                           
  8086                           	psect	text20
  8087  1578                     __ptext20:	
  8088 ;; *************** function ___fladd *****************
  8089 ;; Defined at:
  8090 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  b               4   58[BANK0 ] long 
  8093 ;;  a               4   62[BANK0 ] long 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;  grs             1   77[BANK0 ] unsigned char 
  8096 ;;  bexp            1   76[BANK0 ] unsigned char 
  8097 ;;  aexp            1   75[BANK0 ] unsigned char 
  8098 ;;  signs           1   74[BANK0 ] unsigned char 
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  4   58[BANK0 ] unsigned char 
  8101 ;; Registers used:
  8102 ;;		wreg, status,2, status,0, btemp+1
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8108 ;;      Params:         0       8       0       0       0
  8109 ;;      Locals:         0       4       0       0       0
  8110 ;;      Temps:          0       8       0       0       0
  8111 ;;      Totals:         0      20       0       0       0
  8112 ;;Total ram usage:       20 bytes
  8113 ;; Hardware stack levels used:    1
  8114 ;; Hardware stack levels required when called:    1
  8115 ;; This function calls:
  8116 ;;		Nothing
  8117 ;; This function is called by:
  8118 ;;		_sprintf
  8119 ;;		___flsub
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           
  8124                           ;psect for function ___fladd
  8125  1578                     ___fladd:
  8126  1578                     l2167:	
  8127                           ;incstack = 0
  8128                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8129                           
  8130  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8131  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8132  157A  085D               	movf	___fladd@b+3,w
  8133  157B  3980               	andlw	128
  8134  157C  00E2               	movwf	??___fladd
  8135  157D  0862               	movf	??___fladd,w
  8136  157E  00EA               	movwf	___fladd@signs
  8137  157F                     l2169:
  8138  157F  085D               	movf	___fladd@b+3,w
  8139  1580  00E2               	movwf	??___fladd
  8140  1581  0762               	addwf	??___fladd,w
  8141  1582  00E3               	movwf	??___fladd+1
  8142  1583  0863               	movf	??___fladd+1,w
  8143  1584  00EC               	movwf	___fladd@bexp
  8144  1585                     l2171:
  8145  1585  1FDC               	btfss	___fladd@b+2,7
  8146  1586  2D88               	goto	u3021
  8147  1587  2D89               	goto	u3020
  8148  1588                     u3021:
  8149  1588  2D8A               	goto	l2175
  8150  1589                     u3020:
  8151  1589                     l2173:
  8152  1589  146C               	bsf	___fladd@bexp,0
  8153  158A                     l2175:
  8154  158A  086C               	movf	___fladd@bexp,w
  8155  158B  1903               	btfsc	3,2
  8156  158C  2D8E               	goto	u3031
  8157  158D  2D8F               	goto	u3030
  8158  158E                     u3031:
  8159  158E  2D9F               	goto	l2185
  8160  158F                     u3030:
  8161  158F                     l2177:
  8162  158F  0A6C               	incf	___fladd@bexp,w
  8163  1590  1D03               	btfss	3,2
  8164  1591  2D93               	goto	u3041
  8165  1592  2D94               	goto	u3040
  8166  1593                     u3041:
  8167  1593  2D9C               	goto	l2181
  8168  1594                     u3040:
  8169  1594                     l2179:
  8170  1594  3000               	movlw	0
  8171  1595  00DD               	movwf	___fladd@b+3
  8172  1596  3000               	movlw	0
  8173  1597  00DC               	movwf	___fladd@b+2
  8174  1598  3000               	movlw	0
  8175  1599  00DB               	movwf	___fladd@b+1
  8176  159A  3000               	movlw	0
  8177  159B  00DA               	movwf	___fladd@b
  8178  159C                     l2181:
  8179  159C  17DC               	bsf	___fladd@b+2,7
  8180  159D                     l2183:
  8181  159D  01DD               	clrf	___fladd@b+3
  8182  159E  2DA7               	goto	l2187
  8183  159F                     l2185:
  8184  159F  3000               	movlw	0
  8185  15A0  00DD               	movwf	___fladd@b+3
  8186  15A1  3000               	movlw	0
  8187  15A2  00DC               	movwf	___fladd@b+2
  8188  15A3  3000               	movlw	0
  8189  15A4  00DB               	movwf	___fladd@b+1
  8190  15A5  3000               	movlw	0
  8191  15A6  00DA               	movwf	___fladd@b
  8192  15A7                     l2187:
  8193  15A7  0861               	movf	___fladd@a+3,w
  8194  15A8  3980               	andlw	128
  8195  15A9  00E2               	movwf	??___fladd
  8196  15AA  0862               	movf	??___fladd,w
  8197  15AB  00EB               	movwf	___fladd@aexp
  8198  15AC                     l2189:
  8199  15AC  086B               	movf	___fladd@aexp,w
  8200  15AD  066A               	xorwf	___fladd@signs,w
  8201  15AE  1903               	skipnz
  8202  15AF  2DB1               	goto	u3051
  8203  15B0  2DB2               	goto	u3050
  8204  15B1                     u3051:
  8205  15B1  2DB3               	goto	l2193
  8206  15B2                     u3050:
  8207  15B2                     l2191:
  8208  15B2  176A               	bsf	___fladd@signs,6
  8209  15B3                     l2193:
  8210  15B3  0861               	movf	___fladd@a+3,w
  8211  15B4  00E2               	movwf	??___fladd
  8212  15B5  0762               	addwf	??___fladd,w
  8213  15B6  00E3               	movwf	??___fladd+1
  8214  15B7  0863               	movf	??___fladd+1,w
  8215  15B8  00EB               	movwf	___fladd@aexp
  8216  15B9                     l2195:
  8217  15B9  1FE0               	btfss	___fladd@a+2,7
  8218  15BA  2DBC               	goto	u3061
  8219  15BB  2DBD               	goto	u3060
  8220  15BC                     u3061:
  8221  15BC  2DBE               	goto	l2199
  8222  15BD                     u3060:
  8223  15BD                     l2197:
  8224  15BD  146B               	bsf	___fladd@aexp,0
  8225  15BE                     l2199:
  8226  15BE  086B               	movf	___fladd@aexp,w
  8227  15BF  1903               	btfsc	3,2
  8228  15C0  2DC2               	goto	u3071
  8229  15C1  2DC3               	goto	u3070
  8230  15C2                     u3071:
  8231  15C2  2DD3               	goto	l2209
  8232  15C3                     u3070:
  8233  15C3                     l2201:
  8234  15C3  0A6B               	incf	___fladd@aexp,w
  8235  15C4  1D03               	btfss	3,2
  8236  15C5  2DC7               	goto	u3081
  8237  15C6  2DC8               	goto	u3080
  8238  15C7                     u3081:
  8239  15C7  2DD0               	goto	l2205
  8240  15C8                     u3080:
  8241  15C8                     l2203:
  8242  15C8  3000               	movlw	0
  8243  15C9  00E1               	movwf	___fladd@a+3
  8244  15CA  3000               	movlw	0
  8245  15CB  00E0               	movwf	___fladd@a+2
  8246  15CC  3000               	movlw	0
  8247  15CD  00DF               	movwf	___fladd@a+1
  8248  15CE  3000               	movlw	0
  8249  15CF  00DE               	movwf	___fladd@a
  8250  15D0                     l2205:
  8251  15D0  17E0               	bsf	___fladd@a+2,7
  8252  15D1                     l2207:
  8253  15D1  01E1               	clrf	___fladd@a+3
  8254  15D2  2DDB               	goto	l595
  8255  15D3                     l2209:
  8256  15D3  3000               	movlw	0
  8257  15D4  00E1               	movwf	___fladd@a+3
  8258  15D5  3000               	movlw	0
  8259  15D6  00E0               	movwf	___fladd@a+2
  8260  15D7  3000               	movlw	0
  8261  15D8  00DF               	movwf	___fladd@a+1
  8262  15D9  3000               	movlw	0
  8263  15DA  00DE               	movwf	___fladd@a
  8264  15DB                     l595:
  8265  15DB  086C               	movf	___fladd@bexp,w
  8266  15DC  026B               	subwf	___fladd@aexp,w
  8267  15DD  1803               	skipnc
  8268  15DE  2DE0               	goto	u3091
  8269  15DF  2DE1               	goto	u3090
  8270  15E0                     u3091:
  8271  15E0  2E25               	goto	l2245
  8272  15E1                     u3090:
  8273  15E1                     l2211:
  8274  15E1  1F6A               	btfss	___fladd@signs,6
  8275  15E2  2DE4               	goto	u3101
  8276  15E3  2DE5               	goto	u3100
  8277  15E4                     u3101:
  8278  15E4  2DE9               	goto	l2215
  8279  15E5                     u3100:
  8280  15E5                     l2213:
  8281  15E5  3080               	movlw	128
  8282  15E6  00E2               	movwf	??___fladd
  8283  15E7  0862               	movf	??___fladd,w
  8284  15E8  06EA               	xorwf	___fladd@signs,f
  8285  15E9                     l2215:
  8286  15E9  086C               	movf	___fladd@bexp,w
  8287  15EA  00E2               	movwf	??___fladd
  8288  15EB  0862               	movf	??___fladd,w
  8289  15EC  00ED               	movwf	___fladd@grs
  8290  15ED                     l2217:
  8291  15ED  086B               	movf	___fladd@aexp,w
  8292  15EE  00E2               	movwf	??___fladd
  8293  15EF  0862               	movf	??___fladd,w
  8294  15F0  00EC               	movwf	___fladd@bexp
  8295  15F1                     l2219:
  8296  15F1  086D               	movf	___fladd@grs,w
  8297  15F2  00E2               	movwf	??___fladd
  8298  15F3  0862               	movf	??___fladd,w
  8299  15F4  00EB               	movwf	___fladd@aexp
  8300  15F5                     l2221:
  8301  15F5  085A               	movf	___fladd@b,w
  8302  15F6  00E2               	movwf	??___fladd
  8303  15F7  0862               	movf	??___fladd,w
  8304  15F8  00ED               	movwf	___fladd@grs
  8305  15F9                     l2223:
  8306  15F9  085E               	movf	___fladd@a,w
  8307  15FA  00E2               	movwf	??___fladd
  8308  15FB  0862               	movf	??___fladd,w
  8309  15FC  00DA               	movwf	___fladd@b
  8310  15FD                     l2225:
  8311  15FD  086D               	movf	___fladd@grs,w
  8312  15FE  00E2               	movwf	??___fladd
  8313  15FF  0862               	movf	??___fladd,w
  8314  1600  00DE               	movwf	___fladd@a
  8315  1601                     l2227:
  8316  1601  085B               	movf	___fladd@b+1,w
  8317  1602  00E2               	movwf	??___fladd
  8318  1603  0862               	movf	??___fladd,w
  8319  1604  00ED               	movwf	___fladd@grs
  8320  1605                     l2229:
  8321  1605  085F               	movf	___fladd@a+1,w
  8322  1606  00E2               	movwf	??___fladd
  8323  1607  0862               	movf	??___fladd,w
  8324  1608  00DB               	movwf	___fladd@b+1
  8325  1609                     l2231:
  8326  1609  086D               	movf	___fladd@grs,w
  8327  160A  00E2               	movwf	??___fladd
  8328  160B  0862               	movf	??___fladd,w
  8329  160C  00DF               	movwf	___fladd@a+1
  8330  160D                     l2233:
  8331  160D  085C               	movf	___fladd@b+2,w
  8332  160E  00E2               	movwf	??___fladd
  8333  160F  0862               	movf	??___fladd,w
  8334  1610  00ED               	movwf	___fladd@grs
  8335  1611                     l2235:
  8336  1611  0860               	movf	___fladd@a+2,w
  8337  1612  00E2               	movwf	??___fladd
  8338  1613  0862               	movf	??___fladd,w
  8339  1614  00DC               	movwf	___fladd@b+2
  8340  1615                     l2237:
  8341  1615  086D               	movf	___fladd@grs,w
  8342  1616  00E2               	movwf	??___fladd
  8343  1617  0862               	movf	??___fladd,w
  8344  1618  00E0               	movwf	___fladd@a+2
  8345  1619                     l2239:
  8346  1619  085D               	movf	___fladd@b+3,w
  8347  161A  00E2               	movwf	??___fladd
  8348  161B  0862               	movf	??___fladd,w
  8349  161C  00ED               	movwf	___fladd@grs
  8350  161D                     l2241:
  8351  161D  0861               	movf	___fladd@a+3,w
  8352  161E  00E2               	movwf	??___fladd
  8353  161F  0862               	movf	??___fladd,w
  8354  1620  00DD               	movwf	___fladd@b+3
  8355  1621                     l2243:
  8356  1621  086D               	movf	___fladd@grs,w
  8357  1622  00E2               	movwf	??___fladd
  8358  1623  0862               	movf	??___fladd,w
  8359  1624  00E1               	movwf	___fladd@a+3
  8360  1625                     l2245:
  8361  1625  01ED               	clrf	___fladd@grs
  8362  1626                     l2247:
  8363  1626  086B               	movf	___fladd@aexp,w
  8364  1627  00E2               	movwf	??___fladd
  8365  1628  01E3               	clrf	??___fladd+1
  8366  1629  0863               	movf	??___fladd+1,w
  8367  162A  00E5               	movwf	??___fladd+3
  8368  162B  086C               	movf	___fladd@bexp,w
  8369  162C  0262               	subwf	??___fladd,w
  8370  162D  00E4               	movwf	??___fladd+2
  8371  162E  1C03               	skipc
  8372  162F  03E5               	decf	??___fladd+3,f
  8373  1630  0865               	movf	??___fladd+3,w
  8374  1631  3A80               	xorlw	128
  8375  1632  00FF               	movwf	btemp+1
  8376  1633  3080               	movlw	128
  8377  1634  027F               	subwf	btemp+1,w
  8378  1635  1D03               	skipz
  8379  1636  2E39               	goto	u3115
  8380  1637  301A               	movlw	26
  8381  1638  0264               	subwf	??___fladd+2,w
  8382  1639                     u3115:
  8383  1639  1C03               	skipc
  8384  163A  2E3C               	goto	u3111
  8385  163B  2E3D               	goto	u3110
  8386  163C                     u3111:
  8387  163C  2E7A               	goto	l2263
  8388  163D                     u3110:
  8389  163D                     l2249:
  8390  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8391  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8392  163F  085D               	movf	___fladd@b+3,w
  8393  1640  045C               	iorwf	___fladd@b+2,w
  8394  1641  045B               	iorwf	___fladd@b+1,w
  8395  1642  045A               	iorwf	___fladd@b,w
  8396  1643  1D03               	skipz
  8397  1644  2E46               	goto	u3121
  8398  1645  2E48               	goto	u3120
  8399  1646                     u3121:
  8400  1646  3001               	movlw	1
  8401  1647  2E49               	goto	u3130
  8402  1648                     u3120:
  8403  1648  3000               	movlw	0
  8404  1649                     u3130:
  8405  1649  00E2               	movwf	??___fladd
  8406  164A  0862               	movf	??___fladd,w
  8407  164B  00ED               	movwf	___fladd@grs
  8408  164C  3000               	movlw	0
  8409  164D  00DD               	movwf	___fladd@b+3
  8410  164E  3000               	movlw	0
  8411  164F  00DC               	movwf	___fladd@b+2
  8412  1650  3000               	movlw	0
  8413  1651  00DB               	movwf	___fladd@b+1
  8414  1652  3000               	movlw	0
  8415  1653  00DA               	movwf	___fladd@b
  8416  1654  086B               	movf	___fladd@aexp,w
  8417  1655  00E2               	movwf	??___fladd
  8418  1656  0862               	movf	??___fladd,w
  8419  1657  00EC               	movwf	___fladd@bexp
  8420  1658  2E82               	goto	l599
  8421  1659                     l601:
  8422  1659  1C6D               	btfss	___fladd@grs,0
  8423  165A  2E5C               	goto	u3141
  8424  165B  2E5D               	goto	u3140
  8425  165C                     u3141:
  8426  165C  2E66               	goto	l2253
  8427  165D                     u3140:
  8428  165D                     l2251:
  8429  165D  086D               	movf	___fladd@grs,w
  8430  165E  00E2               	movwf	??___fladd
  8431  165F  1003               	clrc
  8432  1660  0C62               	rrf	??___fladd,w
  8433  1661  3801               	iorlw	1
  8434  1662  00E3               	movwf	??___fladd+1
  8435  1663  0863               	movf	??___fladd+1,w
  8436  1664  00ED               	movwf	___fladd@grs
  8437  1665  2E68               	goto	l2255
  8438  1666                     l2253:
  8439  1666  1003               	clrc
  8440  1667  0CED               	rrf	___fladd@grs,f
  8441  1668                     l2255:
  8442  1668  1C5A               	btfss	___fladd@b,0
  8443  1669  2E6B               	goto	u3151
  8444  166A  2E6C               	goto	u3150
  8445  166B                     u3151:
  8446  166B  2E6D               	goto	l2259
  8447  166C                     u3150:
  8448  166C                     l2257:
  8449  166C  17ED               	bsf	___fladd@grs,7
  8450  166D                     l2259:
  8451  166D  3001               	movlw	1
  8452  166E  00E2               	movwf	??___fladd
  8453  166F                     u3165:
  8454  166F  0D5D               	rlf	___fladd@b+3,w
  8455  1670  0CDD               	rrf	___fladd@b+3,f
  8456  1671  0CDC               	rrf	___fladd@b+2,f
  8457  1672  0CDB               	rrf	___fladd@b+1,f
  8458  1673  0CDA               	rrf	___fladd@b,f
  8459  1674  0BE2               	decfsz	??___fladd& (0+127),f
  8460  1675  2E6F               	goto	u3165
  8461  1676                     l2261:
  8462  1676  3001               	movlw	1
  8463  1677  00E2               	movwf	??___fladd
  8464  1678  0862               	movf	??___fladd,w
  8465  1679  07EC               	addwf	___fladd@bexp,f
  8466  167A                     l2263:
  8467  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8468  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8469  167C  086B               	movf	___fladd@aexp,w
  8470  167D  026C               	subwf	___fladd@bexp,w
  8471  167E  1C03               	skipc
  8472  167F  2E81               	goto	u3171
  8473  1680  2E82               	goto	u3170
  8474  1681                     u3171:
  8475  1681  2E59               	goto	l601
  8476  1682                     u3170:
  8477  1682                     l599:
  8478  1682  1B6A               	btfsc	___fladd@signs,6
  8479  1683  2E85               	goto	u3181
  8480  1684  2E86               	goto	u3180
  8481  1685                     u3181:
  8482  1685  2ED1               	goto	l2289
  8483  1686                     u3180:
  8484  1686                     l2265:
  8485  1686  086C               	movf	___fladd@bexp,w
  8486  1687  1D03               	btfss	3,2
  8487  1688  2E8A               	goto	u3191
  8488  1689  2E8B               	goto	u3190
  8489  168A                     u3191:
  8490  168A  2E94               	goto	l2271
  8491  168B                     u3190:
  8492  168B                     l2267:
  8493  168B  3000               	movlw	0
  8494  168C  00DD               	movwf	?___fladd+3
  8495  168D  3000               	movlw	0
  8496  168E  00DC               	movwf	?___fladd+2
  8497  168F  3000               	movlw	0
  8498  1690  00DB               	movwf	?___fladd+1
  8499  1691  3000               	movlw	0
  8500  1692  00DA               	movwf	?___fladd
  8501  1693  2FFF               	goto	l608
  8502  1694                     l2271:
  8503  1694  085E               	movf	___fladd@a,w
  8504  1695  07DA               	addwf	___fladd@b,f
  8505  1696  085F               	movf	___fladd@a+1,w
  8506  1697  1103               	clrz
  8507  1698  1803               	skipnc
  8508  1699  3E01               	addlw	1
  8509  169A  1903               	skipnz
  8510  169B  2E9D               	goto	u3201
  8511  169C  07DB               	addwf	___fladd@b+1,f
  8512  169D                     u3201:
  8513  169D  0860               	movf	___fladd@a+2,w
  8514  169E  1103               	clrz
  8515  169F  1803               	skipnc
  8516  16A0  3E01               	addlw	1
  8517  16A1  1903               	skipnz
  8518  16A2  2EA4               	goto	u3202
  8519  16A3  07DC               	addwf	___fladd@b+2,f
  8520  16A4                     u3202:
  8521  16A4  0861               	movf	___fladd@a+3,w
  8522  16A5  1103               	clrz
  8523  16A6  1803               	skipnc
  8524  16A7  3E01               	addlw	1
  8525  16A8  1903               	skipnz
  8526  16A9  2EAB               	goto	u3203
  8527  16AA  07DD               	addwf	___fladd@b+3,f
  8528  16AB                     u3203:
  8529  16AB                     l2273:
  8530  16AB  1C5D               	btfss	___fladd@b+3,0
  8531  16AC  2EAE               	goto	u3211
  8532  16AD  2EAF               	goto	u3210
  8533  16AE                     u3211:
  8534  16AE  2F85               	goto	l2323
  8535  16AF                     u3210:
  8536  16AF                     l2275:
  8537  16AF  1C6D               	btfss	___fladd@grs,0
  8538  16B0  2EB2               	goto	u3221
  8539  16B1  2EB3               	goto	u3220
  8540  16B2                     u3221:
  8541  16B2  2EBC               	goto	l2279
  8542  16B3                     u3220:
  8543  16B3                     l2277:
  8544  16B3  086D               	movf	___fladd@grs,w
  8545  16B4  00E2               	movwf	??___fladd
  8546  16B5  1003               	clrc
  8547  16B6  0C62               	rrf	??___fladd,w
  8548  16B7  3801               	iorlw	1
  8549  16B8  00E3               	movwf	??___fladd+1
  8550  16B9  0863               	movf	??___fladd+1,w
  8551  16BA  00ED               	movwf	___fladd@grs
  8552  16BB  2EBE               	goto	l2281
  8553  16BC                     l2279:
  8554  16BC  1003               	clrc
  8555  16BD  0CED               	rrf	___fladd@grs,f
  8556  16BE                     l2281:
  8557  16BE  1C5A               	btfss	___fladd@b,0
  8558  16BF  2EC1               	goto	u3231
  8559  16C0  2EC2               	goto	u3230
  8560  16C1                     u3231:
  8561  16C1  2EC3               	goto	l2285
  8562  16C2                     u3230:
  8563  16C2                     l2283:
  8564  16C2  17ED               	bsf	___fladd@grs,7
  8565  16C3                     l2285:
  8566  16C3  3001               	movlw	1
  8567  16C4  00E2               	movwf	??___fladd
  8568  16C5                     u3245:
  8569  16C5  0D5D               	rlf	___fladd@b+3,w
  8570  16C6  0CDD               	rrf	___fladd@b+3,f
  8571  16C7  0CDC               	rrf	___fladd@b+2,f
  8572  16C8  0CDB               	rrf	___fladd@b+1,f
  8573  16C9  0CDA               	rrf	___fladd@b,f
  8574  16CA  0BE2               	decfsz	??___fladd& (0+127),f
  8575  16CB  2EC5               	goto	u3245
  8576  16CC                     l2287:
  8577  16CC  3001               	movlw	1
  8578  16CD  00E2               	movwf	??___fladd
  8579  16CE  0862               	movf	??___fladd,w
  8580  16CF  07EC               	addwf	___fladd@bexp,f
  8581  16D0  2F85               	goto	l2323
  8582  16D1                     l2289:
  8583  16D1  085D               	movf	___fladd@b+3,w
  8584  16D2  3A80               	xorlw	128
  8585  16D3  00FF               	movwf	btemp+1
  8586  16D4  0861               	movf	___fladd@a+3,w
  8587  16D5  3A80               	xorlw	128
  8588  16D6  027F               	subwf	btemp+1,w
  8589  16D7  1D03               	skipz
  8590  16D8  2EE3               	goto	u3253
  8591  16D9  0860               	movf	___fladd@a+2,w
  8592  16DA  025C               	subwf	___fladd@b+2,w
  8593  16DB  1D03               	skipz
  8594  16DC  2EE3               	goto	u3253
  8595  16DD  085F               	movf	___fladd@a+1,w
  8596  16DE  025B               	subwf	___fladd@b+1,w
  8597  16DF  1D03               	skipz
  8598  16E0  2EE3               	goto	u3253
  8599  16E1  085E               	movf	___fladd@a,w
  8600  16E2  025A               	subwf	___fladd@b,w
  8601  16E3                     u3253:
  8602  16E3  1803               	skipnc
  8603  16E4  2EE6               	goto	u3251
  8604  16E5  2EE7               	goto	u3250
  8605  16E6                     u3251:
  8606  16E6  2F3F               	goto	l2299
  8607  16E7                     u3250:
  8608  16E7                     l2291:
  8609  16E7  30FF               	movlw	255
  8610  16E8  00E2               	movwf	??___fladd
  8611  16E9  30FF               	movlw	255
  8612  16EA  00E3               	movwf	??___fladd+1
  8613  16EB  30FF               	movlw	255
  8614  16EC  00E4               	movwf	??___fladd+2
  8615  16ED  30FF               	movlw	255
  8616  16EE  00E5               	movwf	??___fladd+3
  8617  16EF  085E               	movf	___fladd@a,w
  8618  16F0  00E6               	movwf	??___fladd+4
  8619  16F1  085F               	movf	___fladd@a+1,w
  8620  16F2  00E7               	movwf	??___fladd+5
  8621  16F3  0860               	movf	___fladd@a+2,w
  8622  16F4  00E8               	movwf	??___fladd+6
  8623  16F5  0861               	movf	___fladd@a+3,w
  8624  16F6  00E9               	movwf	??___fladd+7
  8625  16F7  085A               	movf	___fladd@b,w
  8626  16F8  02E6               	subwf	??___fladd+4,f
  8627  16F9  085B               	movf	___fladd@b+1,w
  8628  16FA  1C03               	skipc
  8629  16FB  0F5B               	incfsz	___fladd@b+1,w
  8630  16FC  2EFE               	goto	u3261
  8631  16FD  2EFF               	goto	u3262
  8632  16FE                     u3261:
  8633  16FE  02E7               	subwf	??___fladd+5,f
  8634  16FF                     u3262:
  8635  16FF  085C               	movf	___fladd@b+2,w
  8636  1700  1C03               	skipc
  8637  1701  0F5C               	incfsz	___fladd@b+2,w
  8638  1702  2F04               	goto	u3263
  8639  1703  2F05               	goto	u3264
  8640  1704                     u3263:
  8641  1704  02E8               	subwf	??___fladd+6,f
  8642  1705                     u3264:
  8643  1705  085D               	movf	___fladd@b+3,w
  8644  1706  1C03               	skipc
  8645  1707  0F5D               	incfsz	___fladd@b+3,w
  8646  1708  2F0A               	goto	u3265
  8647  1709  2F0B               	goto	u3266
  8648  170A                     u3265:
  8649  170A  02E9               	subwf	??___fladd+7,f
  8650  170B                     u3266:
  8651  170B  0866               	movf	??___fladd+4,w
  8652  170C  07E2               	addwf	??___fladd,f
  8653  170D  0867               	movf	??___fladd+5,w
  8654  170E  1803               	skipnc
  8655  170F  0F67               	incfsz	??___fladd+5,w
  8656  1710  2F12               	goto	u3270
  8657  1711  2F13               	goto	u3271
  8658  1712                     u3270:
  8659  1712  07E3               	addwf	??___fladd+1,f
  8660  1713                     u3271:
  8661  1713  0868               	movf	??___fladd+6,w
  8662  1714  1803               	skipnc
  8663  1715  0F68               	incfsz	??___fladd+6,w
  8664  1716  2F18               	goto	u3272
  8665  1717  2F19               	goto	u3273
  8666  1718                     u3272:
  8667  1718  07E4               	addwf	??___fladd+2,f
  8668  1719                     u3273:
  8669  1719  0869               	movf	??___fladd+7,w
  8670  171A  1803               	skipnc
  8671  171B  0A69               	incf	??___fladd+7,w
  8672  171C  07E5               	addwf	??___fladd+3,f
  8673  171D  0865               	movf	??___fladd+3,w
  8674  171E  00DD               	movwf	___fladd@b+3
  8675  171F  0864               	movf	??___fladd+2,w
  8676  1720  00DC               	movwf	___fladd@b+2
  8677  1721  0863               	movf	??___fladd+1,w
  8678  1722  00DB               	movwf	___fladd@b+1
  8679  1723  0862               	movf	??___fladd,w
  8680  1724  00DA               	movwf	___fladd@b
  8681  1725                     l2293:
  8682  1725  3080               	movlw	128
  8683  1726  00E2               	movwf	??___fladd
  8684  1727  0862               	movf	??___fladd,w
  8685  1728  06EA               	xorwf	___fladd@signs,f
  8686  1729  09ED               	comf	___fladd@grs,f
  8687  172A  0AED               	incf	___fladd@grs,f
  8688  172B                     l2295:
  8689  172B  086D               	movf	___fladd@grs,w
  8690  172C  1D03               	btfss	3,2
  8691  172D  2F2F               	goto	u3281
  8692  172E  2F30               	goto	u3280
  8693  172F                     u3281:
  8694  172F  2F4D               	goto	l616
  8695  1730                     u3280:
  8696  1730                     l2297:
  8697  1730  3001               	movlw	1
  8698  1731  07DA               	addwf	___fladd@b,f
  8699  1732  3000               	movlw	0
  8700  1733  1803               	skipnc
  8701  1734  3001               	movlw	1
  8702  1735  07DB               	addwf	___fladd@b+1,f
  8703  1736  3000               	movlw	0
  8704  1737  1803               	skipnc
  8705  1738  3001               	movlw	1
  8706  1739  07DC               	addwf	___fladd@b+2,f
  8707  173A  3000               	movlw	0
  8708  173B  1803               	skipnc
  8709  173C  3001               	movlw	1
  8710  173D  07DD               	addwf	___fladd@b+3,f
  8711  173E  2F4D               	goto	l616
  8712  173F                     l2299:
  8713  173F  085E               	movf	___fladd@a,w
  8714  1740  02DA               	subwf	___fladd@b,f
  8715  1741  085F               	movf	___fladd@a+1,w
  8716  1742  1C03               	skipc
  8717  1743  0F5F               	incfsz	___fladd@a+1,w
  8718  1744  02DB               	subwf	___fladd@b+1,f
  8719  1745  0860               	movf	___fladd@a+2,w
  8720  1746  1C03               	skipc
  8721  1747  0F60               	incfsz	___fladd@a+2,w
  8722  1748  02DC               	subwf	___fladd@b+2,f
  8723  1749  0861               	movf	___fladd@a+3,w
  8724  174A  1C03               	skipc
  8725  174B  0F61               	incfsz	___fladd@a+3,w
  8726  174C  02DD               	subwf	___fladd@b+3,f
  8727  174D                     l616:
  8728  174D  085D               	movf	___fladd@b+3,w
  8729  174E  045C               	iorwf	___fladd@b+2,w
  8730  174F  045B               	iorwf	___fladd@b+1,w
  8731  1750  045A               	iorwf	___fladd@b,w
  8732  1751  1D03               	skipz
  8733  1752  2F54               	goto	u3291
  8734  1753  2F55               	goto	u3290
  8735  1754                     u3291:
  8736  1754  2F81               	goto	l2321
  8737  1755                     u3290:
  8738  1755                     l2301:
  8739  1755  086D               	movf	___fladd@grs,w
  8740  1756  1D03               	btfss	3,2
  8741  1757  2F59               	goto	u3301
  8742  1758  2F5A               	goto	u3300
  8743  1759                     u3301:
  8744  1759  2F81               	goto	l2321
  8745  175A                     u3300:
  8746  175A                     l2303:
  8747  175A  3000               	movlw	0
  8748  175B  00DD               	movwf	?___fladd+3
  8749  175C  3000               	movlw	0
  8750  175D  00DC               	movwf	?___fladd+2
  8751  175E  3000               	movlw	0
  8752  175F  00DB               	movwf	?___fladd+1
  8753  1760  3000               	movlw	0
  8754  1761  00DA               	movwf	?___fladd
  8755  1762  2FFF               	goto	l608
  8756  1763                     l2307:
  8757  1763  3001               	movlw	1
  8758  1764  00E2               	movwf	??___fladd
  8759  1765                     u3315:
  8760  1765  1003               	clrc
  8761  1766  0DDA               	rlf	___fladd@b,f
  8762  1767  0DDB               	rlf	___fladd@b+1,f
  8763  1768  0DDC               	rlf	___fladd@b+2,f
  8764  1769  0DDD               	rlf	___fladd@b+3,f
  8765  176A  0BE2               	decfsz	??___fladd,f
  8766  176B  2F65               	goto	u3315
  8767  176C                     l2309:
  8768  176C  1FED               	btfss	___fladd@grs,7
  8769  176D  2F6F               	goto	u3321
  8770  176E  2F70               	goto	u3320
  8771  176F                     u3321:
  8772  176F  2F71               	goto	l620
  8773  1770                     u3320:
  8774  1770                     l2311:
  8775  1770  145A               	bsf	___fladd@b,0
  8776  1771                     l620:
  8777  1771  1C6D               	btfss	___fladd@grs,0
  8778  1772  2F74               	goto	u3331
  8779  1773  2F75               	goto	u3330
  8780  1774                     u3331:
  8781  1774  2F78               	goto	l2315
  8782  1775                     u3330:
  8783  1775                     l2313:
  8784  1775  1403               	setc
  8785  1776  0DED               	rlf	___fladd@grs,f
  8786  1777  2F7A               	goto	l2317
  8787  1778                     l2315:
  8788  1778  1003               	clrc
  8789  1779  0DED               	rlf	___fladd@grs,f
  8790  177A                     l2317:
  8791  177A  086C               	movf	___fladd@bexp,w
  8792  177B  1903               	btfsc	3,2
  8793  177C  2F7E               	goto	u3341
  8794  177D  2F7F               	goto	u3340
  8795  177E                     u3341:
  8796  177E  2F81               	goto	l2321
  8797  177F                     u3340:
  8798  177F                     l2319:
  8799  177F  3001               	movlw	1
  8800  1780  02EC               	subwf	___fladd@bexp,f
  8801  1781                     l2321:
  8802  1781  1FDC               	btfss	___fladd@b+2,7
  8803  1782  2F84               	goto	u3351
  8804  1783  2F85               	goto	u3350
  8805  1784                     u3351:
  8806  1784  2F63               	goto	l2307
  8807  1785                     u3350:
  8808  1785                     l2323:
  8809  1785  01EB               	clrf	___fladd@aexp
  8810  1786                     l2325:
  8811  1786  1FED               	btfss	___fladd@grs,7
  8812  1787  2F89               	goto	u3361
  8813  1788  2F8A               	goto	u3360
  8814  1789                     u3361:
  8815  1789  2F98               	goto	l2333
  8816  178A                     u3360:
  8817  178A                     l2327:
  8818  178A  086D               	movf	___fladd@grs,w
  8819  178B  397F               	andlw	127
  8820  178C  1903               	btfsc	3,2
  8821  178D  2F8F               	goto	u3371
  8822  178E  2F90               	goto	u3370
  8823  178F                     u3371:
  8824  178F  2F93               	goto	l626
  8825  1790                     u3370:
  8826  1790                     l2329:
  8827  1790  01EB               	clrf	___fladd@aexp
  8828  1791  0AEB               	incf	___fladd@aexp,f
  8829  1792  2F98               	goto	l2333
  8830  1793                     l626:
  8831  1793  1C5A               	btfss	___fladd@b,0
  8832  1794  2F96               	goto	u3381
  8833  1795  2F97               	goto	u3380
  8834  1796                     u3381:
  8835  1796  2F98               	goto	l2333
  8836  1797                     u3380:
  8837  1797  2F90               	goto	l2329
  8838  1798                     l2333:
  8839  1798  086B               	movf	___fladd@aexp,w
  8840  1799  1903               	btfsc	3,2
  8841  179A  2F9C               	goto	u3391
  8842  179B  2F9D               	goto	u3390
  8843  179C                     u3391:
  8844  179C  2FD1               	goto	l629
  8845  179D                     u3390:
  8846  179D                     l2335:
  8847  179D  3001               	movlw	1
  8848  179E  07DA               	addwf	___fladd@b,f
  8849  179F  3000               	movlw	0
  8850  17A0  1803               	skipnc
  8851  17A1  3001               	movlw	1
  8852  17A2  07DB               	addwf	___fladd@b+1,f
  8853  17A3  3000               	movlw	0
  8854  17A4  1803               	skipnc
  8855  17A5  3001               	movlw	1
  8856  17A6  07DC               	addwf	___fladd@b+2,f
  8857  17A7  3000               	movlw	0
  8858  17A8  1803               	skipnc
  8859  17A9  3001               	movlw	1
  8860  17AA  07DD               	addwf	___fladd@b+3,f
  8861  17AB                     l2337:
  8862  17AB  1C5D               	btfss	___fladd@b+3,0
  8863  17AC  2FAE               	goto	u3401
  8864  17AD  2FAF               	goto	u3400
  8865  17AE                     u3401:
  8866  17AE  2FD1               	goto	l629
  8867  17AF                     u3400:
  8868  17AF                     l2339:
  8869  17AF  085A               	movf	___fladd@b,w
  8870  17B0  00E2               	movwf	??___fladd
  8871  17B1  085B               	movf	___fladd@b+1,w
  8872  17B2  00E3               	movwf	??___fladd+1
  8873  17B3  085C               	movf	___fladd@b+2,w
  8874  17B4  00E4               	movwf	??___fladd+2
  8875  17B5  085D               	movf	___fladd@b+3,w
  8876  17B6  00E5               	movwf	??___fladd+3
  8877  17B7  3001               	movlw	1
  8878  17B8  00E6               	movwf	??___fladd+4
  8879  17B9                     u3415:
  8880  17B9  0D65               	rlf	??___fladd+3,w
  8881  17BA  0CE5               	rrf	??___fladd+3,f
  8882  17BB  0CE4               	rrf	??___fladd+2,f
  8883  17BC  0CE3               	rrf	??___fladd+1,f
  8884  17BD  0CE2               	rrf	??___fladd,f
  8885  17BE                     u3410:
  8886  17BE  0BE6               	decfsz	??___fladd+4,f
  8887  17BF  2FB9               	goto	u3415
  8888  17C0  0865               	movf	??___fladd+3,w
  8889  17C1  00DD               	movwf	___fladd@b+3
  8890  17C2  0864               	movf	??___fladd+2,w
  8891  17C3  00DC               	movwf	___fladd@b+2
  8892  17C4  0863               	movf	??___fladd+1,w
  8893  17C5  00DB               	movwf	___fladd@b+1
  8894  17C6  0862               	movf	??___fladd,w
  8895  17C7  00DA               	movwf	___fladd@b
  8896  17C8  0A6C               	incf	___fladd@bexp,w
  8897  17C9  1903               	btfsc	3,2
  8898  17CA  2FCC               	goto	u3421
  8899  17CB  2FCD               	goto	u3420
  8900  17CC                     u3421:
  8901  17CC  2FD1               	goto	l629
  8902  17CD                     u3420:
  8903  17CD                     l2341:
  8904  17CD  3001               	movlw	1
  8905  17CE  00E2               	movwf	??___fladd
  8906  17CF  0862               	movf	??___fladd,w
  8907  17D0  07EC               	addwf	___fladd@bexp,f
  8908  17D1                     l629:
  8909  17D1  0A6C               	incf	___fladd@bexp,w
  8910  17D2  1903               	btfsc	3,2
  8911  17D3  2FD5               	goto	u3431
  8912  17D4  2FD6               	goto	u3430
  8913  17D5                     u3431:
  8914  17D5  2FDB               	goto	l2345
  8915  17D6                     u3430:
  8916  17D6                     l2343:
  8917  17D6  086C               	movf	___fladd@bexp,w
  8918  17D7  1D03               	btfss	3,2
  8919  17D8  2FDA               	goto	u3441
  8920  17D9  2FDB               	goto	u3440
  8921  17DA                     u3441:
  8922  17DA  2FE9               	goto	l2351
  8923  17DB                     u3440:
  8924  17DB                     l2345:
  8925  17DB  3000               	movlw	0
  8926  17DC  00DD               	movwf	___fladd@b+3
  8927  17DD  3000               	movlw	0
  8928  17DE  00DC               	movwf	___fladd@b+2
  8929  17DF  3000               	movlw	0
  8930  17E0  00DB               	movwf	___fladd@b+1
  8931  17E1  3000               	movlw	0
  8932  17E2  00DA               	movwf	___fladd@b
  8933  17E3                     l2347:
  8934  17E3  086C               	movf	___fladd@bexp,w
  8935  17E4  1D03               	btfss	3,2
  8936  17E5  2FE7               	goto	u3451
  8937  17E6  2FE8               	goto	u3450
  8938  17E7                     u3451:
  8939  17E7  2FE9               	goto	l2351
  8940  17E8                     u3450:
  8941  17E8                     l2349:
  8942  17E8  01EA               	clrf	___fladd@signs
  8943  17E9                     l2351:
  8944  17E9  1C6C               	btfss	___fladd@bexp,0
  8945  17EA  2FEC               	goto	u3461
  8946  17EB  2FED               	goto	u3460
  8947  17EC                     u3461:
  8948  17EC  2FEF               	goto	l2355
  8949  17ED                     u3460:
  8950  17ED                     l2353:
  8951  17ED  17DC               	bsf	___fladd@b+2,7
  8952  17EE  2FF3               	goto	l637
  8953  17EF                     l2355:
  8954  17EF  307F               	movlw	127
  8955  17F0  00E2               	movwf	??___fladd
  8956  17F1  0862               	movf	??___fladd,w
  8957  17F2  05DC               	andwf	___fladd@b+2,f
  8958  17F3                     l637:
  8959  17F3  086C               	movf	___fladd@bexp,w
  8960  17F4  00E2               	movwf	??___fladd
  8961  17F5  1003               	clrc
  8962  17F6  0C62               	rrf	??___fladd,w
  8963  17F7  00E3               	movwf	??___fladd+1
  8964  17F8  0863               	movf	??___fladd+1,w
  8965  17F9  00DD               	movwf	___fladd@b+3
  8966  17FA                     l2357:
  8967  17FA  1FEA               	btfss	___fladd@signs,7
  8968  17FB  2FFD               	goto	u3471
  8969  17FC  2FFE               	goto	u3470
  8970  17FD                     u3471:
  8971  17FD  2FFF               	goto	l638
  8972  17FE                     u3470:
  8973  17FE                     l2359:
  8974  17FE  17DD               	bsf	___fladd@b+3,7
  8975  17FF                     l638:
  8976  17FF                     l608:
  8977  17FF  0008               	return
  8978  1800                     __end_of___fladd:
  8979                           
  8980                           	psect	text21
  8981  1BD2                     __ptext21:	
  8982 ;; *************** function ___flneg *****************
  8983 ;; Defined at:
  8984 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;  f1              4    4[COMMON] unsigned char 
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;		None
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  4    4[COMMON] unsigned char 
  8991 ;; Registers used:
  8992 ;;		wreg
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8998 ;;      Params:         4       0       0       0       0
  8999 ;;      Locals:         0       0       0       0       0
  9000 ;;      Temps:          0       0       0       0       0
  9001 ;;      Totals:         4       0       0       0       0
  9002 ;;Total ram usage:        4 bytes
  9003 ;; Hardware stack levels used:    1
  9004 ;; Hardware stack levels required when called:    1
  9005 ;; This function calls:
  9006 ;;		Nothing
  9007 ;; This function is called by:
  9008 ;;		_sprintf
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012                           
  9013                           ;psect for function ___flneg
  9014  1BD2                     ___flneg:
  9015  1BD2                     l2761:	
  9016                           ;incstack = 0
  9017                           ; Regs used in ___flneg: [wreg]
  9018                           
  9019  1BD2  0877               	movf	___flneg@f1+3,w
  9020  1BD3  0476               	iorwf	___flneg@f1+2,w
  9021  1BD4  0475               	iorwf	___flneg@f1+1,w
  9022  1BD5  0474               	iorwf	___flneg@f1,w
  9023  1BD6  1903               	skipnz
  9024  1BD7  2BD9               	goto	u4591
  9025  1BD8  2BDA               	goto	u4590
  9026  1BD9                     u4591:
  9027  1BD9  2BDC               	goto	l2765
  9028  1BDA                     u4590:
  9029  1BDA                     l2763:
  9030  1BDA  3080               	movlw	128
  9031  1BDB  06F7               	xorwf	___flneg@f1+3,f
  9032  1BDC                     l2765:
  9033  1BDC                     l467:
  9034  1BDC  0008               	return
  9035  1BDD                     __end_of___flneg:
  9036                           
  9037                           	psect	text22
  9038  1090                     __ptext22:	
  9039 ;; *************** function ___flge *****************
  9040 ;; Defined at:
  9041 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  9042 ;; Parameters:    Size  Location     Type
  9043 ;;  ff1             4    0[BANK0 ] unsigned char 
  9044 ;;  ff2             4    4[BANK0 ] unsigned char 
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;		None
  9047 ;; Return value:  Size  Location     Type
  9048 ;;		None               void
  9049 ;; Registers used:
  9050 ;;		wreg, status,2, status,0
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9056 ;;      Params:         0       8       0       0       0
  9057 ;;      Locals:         0       0       0       0       0
  9058 ;;      Temps:          4       0       0       0       0
  9059 ;;      Totals:         4       8       0       0       0
  9060 ;;Total ram usage:       12 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; Hardware stack levels required when called:    1
  9063 ;; This function calls:
  9064 ;;		Nothing
  9065 ;; This function is called by:
  9066 ;;		_sprintf
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070                           
  9071                           ;psect for function ___flge
  9072  1090                     ___flge:
  9073  1090                     l2741:	
  9074                           ;incstack = 0
  9075                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9076                           
  9077  1090  3000               	movlw	0
  9078  1091  1283               	bcf	3,5	;RP0=0, select bank0
  9079  1092  1303               	bcf	3,6	;RP1=0, select bank0
  9080  1093  0520               	andwf	___flge@ff1,w
  9081  1094  00F4               	movwf	??___flge
  9082  1095  3000               	movlw	0
  9083  1096  0521               	andwf	___flge@ff1+1,w
  9084  1097  00F5               	movwf	??___flge+1
  9085  1098  3080               	movlw	128
  9086  1099  0522               	andwf	___flge@ff1+2,w
  9087  109A  00F6               	movwf	??___flge+2
  9088  109B  307F               	movlw	127
  9089  109C  0523               	andwf	___flge@ff1+3,w
  9090  109D  00F7               	movwf	??___flge+3
  9091  109E  0877               	movf	??___flge+3,w
  9092  109F  0476               	iorwf	??___flge+2,w
  9093  10A0  0475               	iorwf	??___flge+1,w
  9094  10A1  0474               	iorwf	??___flge,w
  9095  10A2  1D03               	skipz
  9096  10A3  28A5               	goto	u4521
  9097  10A4  28A6               	goto	u4520
  9098  10A5                     u4521:
  9099  10A5  28AE               	goto	l459
  9100  10A6                     u4520:
  9101  10A6                     l2743:
  9102  10A6  3000               	movlw	0
  9103  10A7  00A3               	movwf	___flge@ff1+3
  9104  10A8  3000               	movlw	0
  9105  10A9  00A2               	movwf	___flge@ff1+2
  9106  10AA  3000               	movlw	0
  9107  10AB  00A1               	movwf	___flge@ff1+1
  9108  10AC  3000               	movlw	0
  9109  10AD  00A0               	movwf	___flge@ff1
  9110  10AE                     l459:
  9111  10AE  3000               	movlw	0
  9112  10AF  0524               	andwf	___flge@ff2,w
  9113  10B0  00F4               	movwf	??___flge
  9114  10B1  3000               	movlw	0
  9115  10B2  0525               	andwf	___flge@ff2+1,w
  9116  10B3  00F5               	movwf	??___flge+1
  9117  10B4  3080               	movlw	128
  9118  10B5  0526               	andwf	___flge@ff2+2,w
  9119  10B6  00F6               	movwf	??___flge+2
  9120  10B7  307F               	movlw	127
  9121  10B8  0527               	andwf	___flge@ff2+3,w
  9122  10B9  00F7               	movwf	??___flge+3
  9123  10BA  0877               	movf	??___flge+3,w
  9124  10BB  0476               	iorwf	??___flge+2,w
  9125  10BC  0475               	iorwf	??___flge+1,w
  9126  10BD  0474               	iorwf	??___flge,w
  9127  10BE  1D03               	skipz
  9128  10BF  28C1               	goto	u4531
  9129  10C0  28C2               	goto	u4530
  9130  10C1                     u4531:
  9131  10C1  28CA               	goto	l2747
  9132  10C2                     u4530:
  9133  10C2                     l2745:
  9134  10C2  3000               	movlw	0
  9135  10C3  00A7               	movwf	___flge@ff2+3
  9136  10C4  3000               	movlw	0
  9137  10C5  00A6               	movwf	___flge@ff2+2
  9138  10C6  3000               	movlw	0
  9139  10C7  00A5               	movwf	___flge@ff2+1
  9140  10C8  3000               	movlw	0
  9141  10C9  00A4               	movwf	___flge@ff2
  9142  10CA                     l2747:
  9143  10CA  1FA3               	btfss	___flge@ff1+3,7
  9144  10CB  28CD               	goto	u4541
  9145  10CC  28CE               	goto	u4540
  9146  10CD                     u4541:
  9147  10CD  28F2               	goto	l2751
  9148  10CE                     u4540:
  9149  10CE                     l2749:
  9150  10CE  3000               	movlw	0
  9151  10CF  00F4               	movwf	??___flge
  9152  10D0  3000               	movlw	0
  9153  10D1  00F5               	movwf	??___flge+1
  9154  10D2  3000               	movlw	0
  9155  10D3  00F6               	movwf	??___flge+2
  9156  10D4  3080               	movlw	128
  9157  10D5  00F7               	movwf	??___flge+3
  9158  10D6  0820               	movf	___flge@ff1,w
  9159  10D7  02F4               	subwf	??___flge,f
  9160  10D8  0821               	movf	___flge@ff1+1,w
  9161  10D9  1C03               	skipc
  9162  10DA  0F21               	incfsz	___flge@ff1+1,w
  9163  10DB  28DD               	goto	u4551
  9164  10DC  28DE               	goto	u4552
  9165  10DD                     u4551:
  9166  10DD  02F5               	subwf	??___flge+1,f
  9167  10DE                     u4552:
  9168  10DE  0822               	movf	___flge@ff1+2,w
  9169  10DF  1C03               	skipc
  9170  10E0  0F22               	incfsz	___flge@ff1+2,w
  9171  10E1  28E3               	goto	u4553
  9172  10E2  28E4               	goto	u4554
  9173  10E3                     u4553:
  9174  10E3  02F6               	subwf	??___flge+2,f
  9175  10E4                     u4554:
  9176  10E4  0823               	movf	___flge@ff1+3,w
  9177  10E5  1C03               	skipc
  9178  10E6  0F23               	incfsz	___flge@ff1+3,w
  9179  10E7  28E9               	goto	u4555
  9180  10E8  28EA               	goto	u4556
  9181  10E9                     u4555:
  9182  10E9  02F7               	subwf	??___flge+3,f
  9183  10EA                     u4556:
  9184  10EA  0877               	movf	??___flge+3,w
  9185  10EB  00A3               	movwf	___flge@ff1+3
  9186  10EC  0876               	movf	??___flge+2,w
  9187  10ED  00A2               	movwf	___flge@ff1+2
  9188  10EE  0875               	movf	??___flge+1,w
  9189  10EF  00A1               	movwf	___flge@ff1+1
  9190  10F0  0874               	movf	??___flge,w
  9191  10F1  00A0               	movwf	___flge@ff1
  9192  10F2                     l2751:
  9193  10F2  1FA7               	btfss	___flge@ff2+3,7
  9194  10F3  28F5               	goto	u4561
  9195  10F4  28F6               	goto	u4560
  9196  10F5                     u4561:
  9197  10F5  291A               	goto	l462
  9198  10F6                     u4560:
  9199  10F6                     l2753:
  9200  10F6  3000               	movlw	0
  9201  10F7  00F4               	movwf	??___flge
  9202  10F8  3000               	movlw	0
  9203  10F9  00F5               	movwf	??___flge+1
  9204  10FA  3000               	movlw	0
  9205  10FB  00F6               	movwf	??___flge+2
  9206  10FC  3080               	movlw	128
  9207  10FD  00F7               	movwf	??___flge+3
  9208  10FE  0824               	movf	___flge@ff2,w
  9209  10FF  02F4               	subwf	??___flge,f
  9210  1100  0825               	movf	___flge@ff2+1,w
  9211  1101  1C03               	skipc
  9212  1102  0F25               	incfsz	___flge@ff2+1,w
  9213  1103  2905               	goto	u4571
  9214  1104  2906               	goto	u4572
  9215  1105                     u4571:
  9216  1105  02F5               	subwf	??___flge+1,f
  9217  1106                     u4572:
  9218  1106  0826               	movf	___flge@ff2+2,w
  9219  1107  1C03               	skipc
  9220  1108  0F26               	incfsz	___flge@ff2+2,w
  9221  1109  290B               	goto	u4573
  9222  110A  290C               	goto	u4574
  9223  110B                     u4573:
  9224  110B  02F6               	subwf	??___flge+2,f
  9225  110C                     u4574:
  9226  110C  0827               	movf	___flge@ff2+3,w
  9227  110D  1C03               	skipc
  9228  110E  0F27               	incfsz	___flge@ff2+3,w
  9229  110F  2911               	goto	u4575
  9230  1110  2912               	goto	u4576
  9231  1111                     u4575:
  9232  1111  02F7               	subwf	??___flge+3,f
  9233  1112                     u4576:
  9234  1112  0877               	movf	??___flge+3,w
  9235  1113  00A7               	movwf	___flge@ff2+3
  9236  1114  0876               	movf	??___flge+2,w
  9237  1115  00A6               	movwf	___flge@ff2+2
  9238  1116  0875               	movf	??___flge+1,w
  9239  1117  00A5               	movwf	___flge@ff2+1
  9240  1118  0874               	movf	??___flge,w
  9241  1119  00A4               	movwf	___flge@ff2
  9242  111A                     l462:
  9243  111A  3080               	movlw	128
  9244  111B  06A3               	xorwf	___flge@ff1+3,f
  9245  111C  3080               	movlw	128
  9246  111D  06A7               	xorwf	___flge@ff2+3,f
  9247  111E  0827               	movf	___flge@ff2+3,w
  9248  111F  0223               	subwf	___flge@ff1+3,w
  9249  1120  1D03               	skipz
  9250  1121  292C               	goto	u4585
  9251  1122  0826               	movf	___flge@ff2+2,w
  9252  1123  0222               	subwf	___flge@ff1+2,w
  9253  1124  1D03               	skipz
  9254  1125  292C               	goto	u4585
  9255  1126  0825               	movf	___flge@ff2+1,w
  9256  1127  0221               	subwf	___flge@ff1+1,w
  9257  1128  1D03               	skipz
  9258  1129  292C               	goto	u4585
  9259  112A  0824               	movf	___flge@ff2,w
  9260  112B  0220               	subwf	___flge@ff1,w
  9261  112C                     u4585:
  9262  112C  1803               	skipnc
  9263  112D  292F               	goto	u4581
  9264  112E  2930               	goto	u4580
  9265  112F                     u4581:
  9266  112F  2932               	goto	l2757
  9267  1130                     u4580:
  9268  1130                     l2755:
  9269  1130  1003               	clrc
  9270  1131  2933               	goto	l463
  9271  1132                     l2757:
  9272  1132  1403               	setc
  9273  1133                     l463:
  9274  1133  0008               	return
  9275  1134                     __end_of___flge:
  9276                           
  9277                           	psect	text23
  9278  1DC7                     __ptext23:	
  9279 ;; *************** function ___fleq *****************
  9280 ;; Defined at:
  9281 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9282 ;; Parameters:    Size  Location     Type
  9283 ;;  ff1             4    0[BANK0 ] unsigned char 
  9284 ;;  ff2             4    4[BANK0 ] unsigned char 
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;		None               void
  9289 ;; Registers used:
  9290 ;;		wreg, status,2, status,0
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9296 ;;      Params:         0       8       0       0       0
  9297 ;;      Locals:         0       0       0       0       0
  9298 ;;      Temps:          4       0       0       0       0
  9299 ;;      Totals:         4       8       0       0       0
  9300 ;;Total ram usage:       12 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; Hardware stack levels required when called:    1
  9303 ;; This function calls:
  9304 ;;		Nothing
  9305 ;; This function is called by:
  9306 ;;		_sprintf
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           
  9311                           ;psect for function ___fleq
  9312  1DC7                     ___fleq:
  9313  1DC7                     l2729:	
  9314                           ;incstack = 0
  9315                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9316                           
  9317  1DC7  3000               	movlw	0
  9318  1DC8  1283               	bcf	3,5	;RP0=0, select bank0
  9319  1DC9  1303               	bcf	3,6	;RP1=0, select bank0
  9320  1DCA  0520               	andwf	___fleq@ff1,w
  9321  1DCB  00F4               	movwf	??___fleq
  9322  1DCC  3000               	movlw	0
  9323  1DCD  0521               	andwf	___fleq@ff1+1,w
  9324  1DCE  00F5               	movwf	??___fleq+1
  9325  1DCF  3080               	movlw	128
  9326  1DD0  0522               	andwf	___fleq@ff1+2,w
  9327  1DD1  00F6               	movwf	??___fleq+2
  9328  1DD2  307F               	movlw	127
  9329  1DD3  0523               	andwf	___fleq@ff1+3,w
  9330  1DD4  00F7               	movwf	??___fleq+3
  9331  1DD5  0877               	movf	??___fleq+3,w
  9332  1DD6  0476               	iorwf	??___fleq+2,w
  9333  1DD7  0475               	iorwf	??___fleq+1,w
  9334  1DD8  0474               	iorwf	??___fleq,w
  9335  1DD9  1D03               	skipz
  9336  1DDA  2DDC               	goto	u4491
  9337  1DDB  2DDD               	goto	u4490
  9338  1DDC                     u4491:
  9339  1DDC  2DE5               	goto	l454
  9340  1DDD                     u4490:
  9341  1DDD                     l2731:
  9342  1DDD  3000               	movlw	0
  9343  1DDE  00A3               	movwf	___fleq@ff1+3
  9344  1DDF  3000               	movlw	0
  9345  1DE0  00A2               	movwf	___fleq@ff1+2
  9346  1DE1  3000               	movlw	0
  9347  1DE2  00A1               	movwf	___fleq@ff1+1
  9348  1DE3  3000               	movlw	0
  9349  1DE4  00A0               	movwf	___fleq@ff1
  9350  1DE5                     l454:
  9351  1DE5  3000               	movlw	0
  9352  1DE6  0524               	andwf	___fleq@ff2,w
  9353  1DE7  00F4               	movwf	??___fleq
  9354  1DE8  3000               	movlw	0
  9355  1DE9  0525               	andwf	___fleq@ff2+1,w
  9356  1DEA  00F5               	movwf	??___fleq+1
  9357  1DEB  3080               	movlw	128
  9358  1DEC  0526               	andwf	___fleq@ff2+2,w
  9359  1DED  00F6               	movwf	??___fleq+2
  9360  1DEE  307F               	movlw	127
  9361  1DEF  0527               	andwf	___fleq@ff2+3,w
  9362  1DF0  00F7               	movwf	??___fleq+3
  9363  1DF1  0877               	movf	??___fleq+3,w
  9364  1DF2  0476               	iorwf	??___fleq+2,w
  9365  1DF3  0475               	iorwf	??___fleq+1,w
  9366  1DF4  0474               	iorwf	??___fleq,w
  9367  1DF5  1D03               	skipz
  9368  1DF6  2DF8               	goto	u4501
  9369  1DF7  2DF9               	goto	u4500
  9370  1DF8                     u4501:
  9371  1DF8  2E01               	goto	l455
  9372  1DF9                     u4500:
  9373  1DF9                     l2733:
  9374  1DF9  3000               	movlw	0
  9375  1DFA  00A7               	movwf	___fleq@ff2+3
  9376  1DFB  3000               	movlw	0
  9377  1DFC  00A6               	movwf	___fleq@ff2+2
  9378  1DFD  3000               	movlw	0
  9379  1DFE  00A5               	movwf	___fleq@ff2+1
  9380  1DFF  3000               	movlw	0
  9381  1E00  00A4               	movwf	___fleq@ff2
  9382  1E01                     l455:
  9383  1E01  0827               	movf	___fleq@ff2+3,w
  9384  1E02  0623               	xorwf	___fleq@ff1+3,w
  9385  1E03  1D03               	skipz
  9386  1E04  2E0F               	goto	u4515
  9387  1E05  0826               	movf	___fleq@ff2+2,w
  9388  1E06  0622               	xorwf	___fleq@ff1+2,w
  9389  1E07  1D03               	skipz
  9390  1E08  2E0F               	goto	u4515
  9391  1E09  0825               	movf	___fleq@ff2+1,w
  9392  1E0A  0621               	xorwf	___fleq@ff1+1,w
  9393  1E0B  1D03               	skipz
  9394  1E0C  2E0F               	goto	u4515
  9395  1E0D  0824               	movf	___fleq@ff2,w
  9396  1E0E  0620               	xorwf	___fleq@ff1,w
  9397  1E0F                     u4515:
  9398  1E0F  1903               	skipnz
  9399  1E10  2E12               	goto	u4511
  9400  1E11  2E13               	goto	u4510
  9401  1E12                     u4511:
  9402  1E12  2E15               	goto	l2737
  9403  1E13                     u4510:
  9404  1E13                     l2735:
  9405  1E13  1003               	clrc
  9406  1E14  2E16               	goto	l456
  9407  1E15                     l2737:
  9408  1E15  1403               	setc
  9409  1E16                     l456:
  9410  1E16  0008               	return
  9411  1E17                     __end_of___fleq:
  9412                           
  9413                           	psect	text24
  9414  1D3B                     __ptext24:	
  9415 ;; *************** function _Lcd_Write_String *****************
  9416 ;; Defined at:
  9417 ;;		line 86 in file "./LibreriaPrueba.h"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;  a               2    6[COMMON] PTR unsigned char 
  9420 ;;		 -> buffer(1), STR_3(6), STR_2(17), STR_1(10), 
  9421 ;; Auto vars:     Size  Location     Type
  9422 ;;  i               2    3[BANK0 ] int 
  9423 ;; Return value:  Size  Location     Type
  9424 ;;                  1    wreg      void 
  9425 ;; Registers used:
  9426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9427 ;; Tracked objects:
  9428 ;;		On entry : 0/0
  9429 ;;		On exit  : 0/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9432 ;;      Params:         2       0       0       0       0
  9433 ;;      Locals:         0       2       0       0       0
  9434 ;;      Temps:          0       3       0       0       0
  9435 ;;      Totals:         2       5       0       0       0
  9436 ;;Total ram usage:        7 bytes
  9437 ;; Hardware stack levels used:    1
  9438 ;; Hardware stack levels required when called:    2
  9439 ;; This function calls:
  9440 ;;		_Lcd_Write_Char
  9441 ;; This function is called by:
  9442 ;;		_main
  9443 ;;		_conversion
  9444 ;; This function uses a non-reentrant model
  9445 ;;
  9446                           
  9447                           
  9448                           ;psect for function _Lcd_Write_String
  9449  1D3B                     _Lcd_Write_String:
  9450  1D3B                     l3361:	
  9451                           ;incstack = 0
  9452                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9453                           
  9454                           
  9455                           ;./LibreriaPrueba.h: 86:      Lcd_Write_Char(a[i]);;./LibreriaPrueba.h: 87: };./Libreria
      +                          Prueba.h: 88: ;./LibreriaPrueba.h: 89: void Lcd_Init(){
  9456  1D3B  1283               	bcf	3,5	;RP0=0, select bank0
  9457  1D3C  1303               	bcf	3,6	;RP1=0, select bank0
  9458  1D3D  01A3               	clrf	Lcd_Write_String@i
  9459  1D3E  01A4               	clrf	Lcd_Write_String@i+1
  9460  1D3F  2D64               	goto	l3367
  9461  1D40                     l3363:
  9462                           
  9463                           ;./LibreriaPrueba.h: 90: 
  9464  1D40  0823               	movf	Lcd_Write_String@i,w
  9465  1D41  0776               	addwf	Lcd_Write_String@a,w
  9466  1D42  00A1               	movwf	??_Lcd_Write_String+1
  9467  1D43  0877               	movf	Lcd_Write_String@a+1,w
  9468  1D44  00A0               	movwf	??_Lcd_Write_String
  9469  1D45  1803               	skipnc
  9470  1D46  0AA0               	incf	??_Lcd_Write_String,f
  9471  1D47  1FA3               	btfss	Lcd_Write_String@i,7
  9472  1D48  2D4A               	goto	u5860
  9473  1D49  03A0               	decf	??_Lcd_Write_String,f
  9474  1D4A                     u5860:
  9475  1D4A  1283               	bcf	3,5	;RP0=0, select bank0
  9476  1D4B  1303               	bcf	3,6	;RP1=0, select bank0
  9477  1D4C  0820               	movf	??_Lcd_Write_String,w
  9478  1D4D  00A2               	movwf	??_Lcd_Write_String+2
  9479  1D4E  0822               	movf	??_Lcd_Write_String+2,w
  9480  1D4F  00FF               	movwf	btemp+1
  9481  1D50  0821               	movf	??_Lcd_Write_String+1,w
  9482  1D51  0084               	movwf	4
  9483  1D52  120A  158A  2000  160A  158A  	fcall	stringtab
  9484  1D57  160A  158A  23DD  160A  158A  	fcall	_Lcd_Write_Char
  9485  1D5C                     l3365:
  9486  1D5C  3001               	movlw	1
  9487  1D5D  1283               	bcf	3,5	;RP0=0, select bank0
  9488  1D5E  1303               	bcf	3,6	;RP1=0, select bank0
  9489  1D5F  07A3               	addwf	Lcd_Write_String@i,f
  9490  1D60  1803               	skipnc
  9491  1D61  0AA4               	incf	Lcd_Write_String@i+1,f
  9492  1D62  3000               	movlw	0
  9493  1D63  07A4               	addwf	Lcd_Write_String@i+1,f
  9494  1D64                     l3367:
  9495  1D64  0823               	movf	Lcd_Write_String@i,w
  9496  1D65  0776               	addwf	Lcd_Write_String@a,w
  9497  1D66  00A1               	movwf	??_Lcd_Write_String+1
  9498  1D67  0877               	movf	Lcd_Write_String@a+1,w
  9499  1D68  00A0               	movwf	??_Lcd_Write_String
  9500  1D69  1803               	skipnc
  9501  1D6A  0AA0               	incf	??_Lcd_Write_String,f
  9502  1D6B  1FA3               	btfss	Lcd_Write_String@i,7
  9503  1D6C  2D6E               	goto	u5870
  9504  1D6D  03A0               	decf	??_Lcd_Write_String,f
  9505  1D6E                     u5870:
  9506  1D6E  1283               	bcf	3,5	;RP0=0, select bank0
  9507  1D6F  1303               	bcf	3,6	;RP1=0, select bank0
  9508  1D70  0820               	movf	??_Lcd_Write_String,w
  9509  1D71  00A2               	movwf	??_Lcd_Write_String+2
  9510  1D72  0822               	movf	??_Lcd_Write_String+2,w
  9511  1D73  00FF               	movwf	btemp+1
  9512  1D74  0821               	movf	??_Lcd_Write_String+1,w
  9513  1D75  0084               	movwf	4
  9514  1D76  120A  158A  2000  160A  158A  	fcall	stringtab
  9515  1D7B  3A00               	xorlw	0
  9516  1D7C  1D03               	skipz
  9517  1D7D  2D7F               	goto	u5881
  9518  1D7E  2D80               	goto	u5880
  9519  1D7F                     u5881:
  9520  1D7F  2D40               	goto	l3363
  9521  1D80                     u5880:
  9522  1D80                     l68:
  9523  1D80  0008               	return
  9524  1D81                     __end_of_Lcd_Write_String:
  9525                           
  9526                           	psect	text25
  9527  1BDD                     __ptext25:	
  9528 ;; *************** function _Lcd_Write_Char *****************
  9529 ;; Defined at:
  9530 ;;		line 78 in file "./LibreriaPrueba.h"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;  a               1    wreg     unsigned char 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;  a               1    5[COMMON] unsigned char 
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1    wreg      void 
  9537 ;; Registers used:
  9538 ;;		wreg
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9544 ;;      Params:         0       0       0       0       0
  9545 ;;      Locals:         1       0       0       0       0
  9546 ;;      Temps:          1       0       0       0       0
  9547 ;;      Totals:         2       0       0       0       0
  9548 ;;Total ram usage:        2 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; Hardware stack levels required when called:    1
  9551 ;; This function calls:
  9552 ;;		Nothing
  9553 ;; This function is called by:
  9554 ;;		_Lcd_Write_String
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           
  9559                           ;psect for function _Lcd_Write_Char
  9560  1BDD                     _Lcd_Write_Char:
  9561                           
  9562                           ;incstack = 0
  9563                           ; Regs used in _Lcd_Write_Char: [wreg]
  9564                           ;Lcd_Write_Char@a stored from wreg
  9565  1BDD  00F5               	movwf	Lcd_Write_Char@a
  9566  1BDE                     l3245:
  9567                           
  9568                           ;./LibreriaPrueba.h: 79:     PORTDbits.RD3=0;
  9569  1BDE  1283               	bcf	3,5	;RP0=0, select bank0
  9570  1BDF  1303               	bcf	3,6	;RP1=0, select bank0
  9571  1BE0  1508               	bsf	8,2	;volatile
  9572  1BE1                     l3247:
  9573                           
  9574                           ;./LibreriaPrueba.h: 80: }
  9575  1BE1  0875               	movf	Lcd_Write_Char@a,w
  9576  1BE2  0086               	movwf	6	;volatile
  9577  1BE3                     l3249:
  9578                           
  9579                           ;./LibreriaPrueba.h: 81: 
  9580  1BE3  1588               	bsf	8,3	;volatile
  9581                           
  9582                           ;./LibreriaPrueba.h: 82: void Lcd_Write_String(char *a)
  9583  1BE4  301D               	movlw	29
  9584  1BE5  00F4               	movwf	??_Lcd_Write_Char
  9585  1BE6                     u6277:
  9586  1BE6  0BF4               	decfsz	??_Lcd_Write_Char,f
  9587  1BE7  2BE6               	goto	u6277
  9588  1BE8  2BE9               	nop2
  9589  1BE9                     l3251:
  9590                           
  9591                           ;./LibreriaPrueba.h: 83: {
  9592  1BE9  1283               	bcf	3,5	;RP0=0, select bank0
  9593  1BEA  1303               	bcf	3,6	;RP1=0, select bank0
  9594  1BEB  1188               	bcf	8,3	;volatile
  9595  1BEC                     l62:
  9596  1BEC  0008               	return
  9597  1BED                     __end_of_Lcd_Write_Char:
  9598                           
  9599                           	psect	text26
  9600  1C4D                     __ptext26:	
  9601 ;; *************** function _Lcd_Set_Cursor *****************
  9602 ;; Defined at:
  9603 ;;		line 57 in file "./LibreriaPrueba.h"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  a               1    wreg     unsigned char 
  9606 ;;  b               1    7[COMMON] unsigned char 
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;  a               1    1[BANK0 ] unsigned char 
  9609 ;;  temp            1    2[BANK0 ] unsigned char 
  9610 ;;  y               1    0        unsigned char 
  9611 ;;  z               1    0        unsigned char 
  9612 ;; Return value:  Size  Location     Type
  9613 ;;                  1    wreg      void 
  9614 ;; Registers used:
  9615 ;;		wreg, status,2, status,0, pclath, cstack
  9616 ;; Tracked objects:
  9617 ;;		On entry : 0/0
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9621 ;;      Params:         1       0       0       0       0
  9622 ;;      Locals:         0       2       0       0       0
  9623 ;;      Temps:          0       1       0       0       0
  9624 ;;      Totals:         1       3       0       0       0
  9625 ;;Total ram usage:        4 bytes
  9626 ;; Hardware stack levels used:    1
  9627 ;; Hardware stack levels required when called:    2
  9628 ;; This function calls:
  9629 ;;		_Lcd_Cmd
  9630 ;; This function is called by:
  9631 ;;		_main
  9632 ;;		_conversion
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           
  9637                           ;psect for function _Lcd_Set_Cursor
  9638  1C4D                     _Lcd_Set_Cursor:
  9639                           
  9640                           ;incstack = 0
  9641                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9642                           ;Lcd_Set_Cursor@a stored from wreg
  9643  1C4D  1283               	bcf	3,5	;RP0=0, select bank0
  9644  1C4E  1303               	bcf	3,6	;RP1=0, select bank0
  9645  1C4F  00A1               	movwf	Lcd_Set_Cursor@a
  9646  1C50                     l3349:
  9647                           
  9648                           ;./LibreriaPrueba.h: 57:  {;./LibreriaPrueba.h: 58:    temp = 0x80 + b - 1;;./LibreriaPr
      +                          ueba.h: 59: ;./LibreriaPrueba.h: 60: 
  9649  1C50  0321               	decf	Lcd_Set_Cursor@a,w
  9650  1C51  1D03               	btfss	3,2
  9651  1C52  2C54               	goto	u5841
  9652  1C53  2C55               	goto	u5840
  9653  1C54                     u5841:
  9654  1C54  2C61               	goto	l3355
  9655  1C55                     u5840:
  9656  1C55                     l3351:
  9657                           
  9658                           ;./LibreriaPrueba.h: 61:   Lcd_Cmd(temp);;./LibreriaPrueba.h: 62: 
  9659  1C55  0877               	movf	Lcd_Set_Cursor@b,w
  9660  1C56  3E7F               	addlw	127
  9661  1C57  00A0               	movwf	??_Lcd_Set_Cursor
  9662  1C58  0820               	movf	??_Lcd_Set_Cursor,w
  9663  1C59  00A2               	movwf	Lcd_Set_Cursor@temp
  9664  1C5A                     l3353:
  9665                           
  9666                           ;./LibreriaPrueba.h: 65:  {
  9667  1C5A  0822               	movf	Lcd_Set_Cursor@temp,w
  9668  1C5B  160A  158A  23FF  160A  158A  	fcall	_Lcd_Cmd
  9669                           
  9670                           ;./LibreriaPrueba.h: 67: 
  9671  1C60  2C72               	goto	l59
  9672  1C61                     l3355:
  9673  1C61  3002               	movlw	2
  9674  1C62  0621               	xorwf	Lcd_Set_Cursor@a,w
  9675  1C63  1D03               	btfss	3,2
  9676  1C64  2C66               	goto	u5851
  9677  1C65  2C67               	goto	u5850
  9678  1C66                     u5851:
  9679  1C66  2C72               	goto	l59
  9680  1C67                     u5850:
  9681  1C67                     l3357:
  9682                           
  9683                           ;./LibreriaPrueba.h: 69:   Lcd_Cmd(temp);;./LibreriaPrueba.h: 70: 
  9684  1C67  0877               	movf	Lcd_Set_Cursor@b,w
  9685  1C68  3EBF               	addlw	191
  9686  1C69  00A0               	movwf	??_Lcd_Set_Cursor
  9687  1C6A  0820               	movf	??_Lcd_Set_Cursor,w
  9688  1C6B  00A2               	movwf	Lcd_Set_Cursor@temp
  9689  1C6C                     l3359:
  9690                           
  9691                           ;./LibreriaPrueba.h: 73: 
  9692  1C6C  0822               	movf	Lcd_Set_Cursor@temp,w
  9693  1C6D  160A  158A  23FF  160A  158A  	fcall	_Lcd_Cmd
  9694  1C72                     l59:
  9695  1C72  0008               	return
  9696  1C73                     __end_of_Lcd_Set_Cursor:
  9697                           
  9698                           	psect	text27
  9699  1C12                     __ptext27:	
  9700 ;; *************** function _config *****************
  9701 ;; Defined at:
  9702 ;;		line 18 in file "./LibreriaPrueba.h"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;		None
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;		None
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  1    wreg      void 
  9709 ;; Registers used:
  9710 ;;		wreg, status,2
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9716 ;;      Params:         0       0       0       0       0
  9717 ;;      Locals:         0       0       0       0       0
  9718 ;;      Temps:          0       0       0       0       0
  9719 ;;      Totals:         0       0       0       0       0
  9720 ;;Total ram usage:        0 bytes
  9721 ;; Hardware stack levels used:    1
  9722 ;; Hardware stack levels required when called:    1
  9723 ;; This function calls:
  9724 ;;		Nothing
  9725 ;; This function is called by:
  9726 ;;		_main
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           
  9731                           ;psect for function _config
  9732  1C12                     _config:
  9733  1C12                     l1917:	
  9734                           ;incstack = 0
  9735                           ; Regs used in _config: [wreg+status,2]
  9736                           
  9737                           
  9738                           ;./LibreriaPrueba.h: 20:     TRISB = 0b00000000;
  9739  1C12  1683               	bsf	3,5	;RP0=1, select bank3
  9740  1C13  1703               	bsf	3,6	;RP1=1, select bank3
  9741  1C14  0188               	clrf	8	;volatile
  9742                           
  9743                           ;./LibreriaPrueba.h: 21:     TRISD = 0b00000000;
  9744  1C15  0189               	clrf	9	;volatile
  9745  1C16                     l1919:
  9746                           
  9747                           ;./LibreriaPrueba.h: 23:     ANSELbits.ANS0 = 1;
  9748  1C16  3003               	movlw	3
  9749  1C17  1683               	bsf	3,5	;RP0=1, select bank1
  9750  1C18  1303               	bcf	3,6	;RP1=0, select bank1
  9751  1C19  0085               	movwf	5	;volatile
  9752  1C1A                     l1921:
  9753                           
  9754                           ;./LibreriaPrueba.h: 24:     ANSELbits.ANS1 = 1;
  9755  1C1A  0186               	clrf	6	;volatile
  9756  1C1B                     l1923:
  9757                           
  9758                           ;./LibreriaPrueba.h: 25: 
  9759  1C1B  0188               	clrf	8	;volatile
  9760  1C1C                     l1925:
  9761                           
  9762                           ;./LibreriaPrueba.h: 27:     ADCON0bits.ADON=1;
  9763  1C1C  1683               	bsf	3,5	;RP0=1, select bank3
  9764  1C1D  1703               	bsf	3,6	;RP1=1, select bank3
  9765  1C1E  1408               	bsf	8,0	;volatile
  9766  1C1F                     l1927:
  9767                           
  9768                           ;./LibreriaPrueba.h: 28:     ADCON1bits.ADFM=0;
  9769  1C1F  1488               	bsf	8,1	;volatile
  9770  1C20                     l1929:
  9771                           
  9772                           ;./LibreriaPrueba.h: 31:     INTCONbits.PEIE = 1;
  9773  1C20  1283               	bcf	3,5	;RP0=0, select bank0
  9774  1C21  1303               	bcf	3,6	;RP1=0, select bank0
  9775  1C22  141F               	bsf	31,0	;volatile
  9776  1C23                     l1931:
  9777                           
  9778                           ;./LibreriaPrueba.h: 32: 
  9779  1C23  1683               	bsf	3,5	;RP0=1, select bank1
  9780  1C24  1303               	bcf	3,6	;RP1=0, select bank1
  9781  1C25  139F               	bcf	31,7	;volatile
  9782  1C26                     l1933:
  9783                           
  9784                           ;./LibreriaPrueba.h: 34:     PIR1bits.ADIF = 0;
  9785  1C26  178B               	bsf	11,7	;volatile
  9786  1C27                     l1935:
  9787                           
  9788                           ;./LibreriaPrueba.h: 35: 
  9789  1C27  170B               	bsf	11,6	;volatile
  9790  1C28                     l1937:
  9791                           
  9792                           ;./LibreriaPrueba.h: 37: }
  9793  1C28  170C               	bsf	12,6	;volatile
  9794  1C29                     l1939:
  9795                           
  9796                           ;./LibreriaPrueba.h: 38: 
  9797  1C29  1283               	bcf	3,5	;RP0=0, select bank0
  9798  1C2A  1303               	bcf	3,6	;RP1=0, select bank0
  9799  1C2B  130C               	bcf	12,6	;volatile
  9800  1C2C                     l47:
  9801  1C2C  0008               	return
  9802  1C2D                     __end_of_config:
  9803                           
  9804                           	psect	text28
  9805  1CC7                     __ptext28:	
  9806 ;; *************** function _Lcd_Init *****************
  9807 ;; Defined at:
  9808 ;;		line 93 in file "./LibreriaPrueba.h"
  9809 ;; Parameters:    Size  Location     Type
  9810 ;;		None
  9811 ;; Auto vars:     Size  Location     Type
  9812 ;;		None
  9813 ;; Return value:  Size  Location     Type
  9814 ;;                  1    wreg      void 
  9815 ;; Registers used:
  9816 ;;		wreg, status,2, status,0, pclath, cstack
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9822 ;;      Params:         0       0       0       0       0
  9823 ;;      Locals:         0       0       0       0       0
  9824 ;;      Temps:          0       2       0       0       0
  9825 ;;      Totals:         0       2       0       0       0
  9826 ;;Total ram usage:        2 bytes
  9827 ;; Hardware stack levels used:    1
  9828 ;; Hardware stack levels required when called:    2
  9829 ;; This function calls:
  9830 ;;		_Lcd_Cmd
  9831 ;; This function is called by:
  9832 ;;		_main
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           
  9837                           ;psect for function _Lcd_Init
  9838  1CC7                     _Lcd_Init:
  9839  1CC7                     l3575:	
  9840                           ;incstack = 0
  9841                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9842                           
  9843                           
  9844                           ;./LibreriaPrueba.h: 95: 
  9845  1CC7  1283               	bcf	3,5	;RP0=0, select bank0
  9846  1CC8  1303               	bcf	3,6	;RP1=0, select bank0
  9847  1CC9  1108               	bcf	8,2	;volatile
  9848  1CCA                     l3577:
  9849                           
  9850                           ;./LibreriaPrueba.h: 97:     Lcd_Cmd(0x30);
  9851  1CCA  3000               	movlw	0
  9852  1CCB  160A  158A  23FF  160A  158A  	fcall	_Lcd_Cmd
  9853  1CD0                     l3579:
  9854                           
  9855                           ;./LibreriaPrueba.h: 98:     _delay((unsigned long)((160)*(9000000/4000000.0)));
  9856  1CD0  302C               	movlw	44
  9857  1CD1  1283               	bcf	3,5	;RP0=0, select bank0
  9858  1CD2  1303               	bcf	3,6	;RP1=0, select bank0
  9859  1CD3  00A1               	movwf	??_Lcd_Init+1
  9860  1CD4  30D3               	movlw	211
  9861  1CD5  00A0               	movwf	??_Lcd_Init
  9862  1CD6                     u6287:
  9863  1CD6  0BA0               	decfsz	??_Lcd_Init,f
  9864  1CD7  2CD6               	goto	u6287
  9865  1CD8  0BA1               	decfsz	??_Lcd_Init+1,f
  9866  1CD9  2CD6               	goto	u6287
  9867  1CDA                     l3581:
  9868                           
  9869                           ;./LibreriaPrueba.h: 101:     Lcd_Cmd(0x01);
  9870  1CDA  3030               	movlw	48
  9871  1CDB  160A  158A  23FF  160A  158A  	fcall	_Lcd_Cmd
  9872                           
  9873                           ;./LibreriaPrueba.h: 102:     Lcd_Cmd(0x06);
  9874  1CE0  3077               	movlw	119
  9875  1CE1  1283               	bcf	3,5	;RP0=0, select bank0
  9876  1CE2  1303               	bcf	3,6	;RP1=0, select bank0
  9877  1CE3  00A0               	movwf	??_Lcd_Init
  9878  1CE4                     u6297:
  9879  1CE4  0BA0               	decfsz	??_Lcd_Init,f
  9880  1CE5  2CE4               	goto	u6297
  9881  1CE6                     l3583:
  9882                           
  9883                           ;./LibreriaPrueba.h: 104: 
  9884  1CE6  3038               	movlw	56
  9885  1CE7  160A  158A  23FF  160A  158A  	fcall	_Lcd_Cmd
  9886  1CEC                     l3585:
  9887                           
  9888                           ;./LibreriaPrueba.h: 105: }
  9889  1CEC  3001               	movlw	1
  9890  1CED  160A  158A  23FF  160A  158A  	fcall	_Lcd_Cmd
  9891  1CF2                     l3587:
  9892  1CF2  3006               	movlw	6
  9893  1CF3  160A  158A  23FF  160A  158A  	fcall	_Lcd_Cmd
  9894  1CF8                     l3589:
  9895  1CF8  300F               	movlw	15
  9896  1CF9  160A  158A  23FF  160A  158A  	fcall	_Lcd_Cmd
  9897  1CFE                     l71:
  9898  1CFE  0008               	return
  9899  1CFF                     __end_of_Lcd_Init:
  9900                           
  9901                           	psect	text29
  9902  08C6                     __ptext29:	
  9903 ;; *************** function _Lcd_Clear *****************
  9904 ;; Defined at:
  9905 ;;		line 52 in file "./LibreriaPrueba.h"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;		None
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;		None
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  2   52[None  ] int 
  9912 ;; Registers used:
  9913 ;;		wreg, status,2, status,0, pclath, cstack
  9914 ;; Tracked objects:
  9915 ;;		On entry : 0/0
  9916 ;;		On exit  : 0/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9919 ;;      Params:         0       0       0       0       0
  9920 ;;      Locals:         0       0       0       0       0
  9921 ;;      Temps:          0       0       0       0       0
  9922 ;;      Totals:         0       0       0       0       0
  9923 ;;Total ram usage:        0 bytes
  9924 ;; Hardware stack levels used:    1
  9925 ;; Hardware stack levels required when called:    2
  9926 ;; This function calls:
  9927 ;;		_Lcd_Cmd
  9928 ;; This function is called by:
  9929 ;;		_main
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           
  9934                           ;psect for function _Lcd_Clear
  9935  08C6                     _Lcd_Clear:
  9936  08C6                     l3101:	
  9937                           ;incstack = 0
  9938                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9939                           
  9940                           
  9941                           ;./LibreriaPrueba.h: 53: void Lcd_Set_Cursor(char a, char b)
  9942  08C6  3000               	movlw	0
  9943  08C7  160A  158A  23FF  120A  158A  	fcall	_Lcd_Cmd
  9944                           
  9945                           ;./LibreriaPrueba.h: 54: {
  9946  08CC  3001               	movlw	1
  9947  08CD  160A  158A  23FF  120A  158A  	fcall	_Lcd_Cmd
  9948  08D2                     l53:
  9949  08D2  0008               	return
  9950  08D3                     __end_of_Lcd_Clear:
  9951                           
  9952                           	psect	text30
  9953  1BFF                     __ptext30:	
  9954 ;; *************** function _Lcd_Cmd *****************
  9955 ;; Defined at:
  9956 ;;		line 43 in file "./LibreriaPrueba.h"
  9957 ;; Parameters:    Size  Location     Type
  9958 ;;  a               1    wreg     unsigned char 
  9959 ;; Auto vars:     Size  Location     Type
  9960 ;;  a               1    6[COMMON] unsigned char 
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  1    wreg      void 
  9963 ;; Registers used:
  9964 ;;		wreg
  9965 ;; Tracked objects:
  9966 ;;		On entry : 0/0
  9967 ;;		On exit  : 0/0
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9970 ;;      Params:         0       0       0       0       0
  9971 ;;      Locals:         1       0       0       0       0
  9972 ;;      Temps:          2       0       0       0       0
  9973 ;;      Totals:         3       0       0       0       0
  9974 ;;Total ram usage:        3 bytes
  9975 ;; Hardware stack levels used:    1
  9976 ;; Hardware stack levels required when called:    1
  9977 ;; This function calls:
  9978 ;;		Nothing
  9979 ;; This function is called by:
  9980 ;;		_Lcd_Clear
  9981 ;;		_Lcd_Set_Cursor
  9982 ;;		_Lcd_Init
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           
  9987                           ;psect for function _Lcd_Cmd
  9988  1BFF                     _Lcd_Cmd:
  9989                           
  9990                           ;incstack = 0
  9991                           ; Regs used in _Lcd_Cmd: [wreg]
  9992                           ;Lcd_Cmd@a stored from wreg
  9993  1BFF  00F6               	movwf	Lcd_Cmd@a
  9994  1C00                     l2501:
  9995                           
  9996                           ;./LibreriaPrueba.h: 44:     PORTDbits.RD3=0;
  9997  1C00  1283               	bcf	3,5	;RP0=0, select bank0
  9998  1C01  1303               	bcf	3,6	;RP1=0, select bank0
  9999  1C02  1108               	bcf	8,2	;volatile
 10000  1C03                     l2503:
 10001                           
 10002                           ;./LibreriaPrueba.h: 45: }
 10003  1C03  0876               	movf	Lcd_Cmd@a,w
 10004  1C04  0086               	movwf	6	;volatile
 10005  1C05                     l2505:
 10006                           
 10007                           ;./LibreriaPrueba.h: 46: 
 10008  1C05  1588               	bsf	8,3	;volatile
 10009                           
 10010                           ;./LibreriaPrueba.h: 47: 
 10011  1C06  300C               	movlw	12
 10012  1C07  00F5               	movwf	??_Lcd_Cmd+1
 10013  1C08  30AF               	movlw	175
 10014  1C09  00F4               	movwf	??_Lcd_Cmd
 10015  1C0A                     u6307:
 10016  1C0A  0BF4               	decfsz	??_Lcd_Cmd,f
 10017  1C0B  2C0A               	goto	u6307
 10018  1C0C  0BF5               	decfsz	??_Lcd_Cmd+1,f
 10019  1C0D  2C0A               	goto	u6307
 10020  1C0E                     l2507:
 10021                           
 10022                           ;./LibreriaPrueba.h: 48: Lcd_Clear(){
 10023  1C0E  1283               	bcf	3,5	;RP0=0, select bank0
 10024  1C0F  1303               	bcf	3,6	;RP1=0, select bank0
 10025  1C10  1188               	bcf	8,3	;volatile
 10026  1C11                     l50:
 10027  1C11  0008               	return
 10028  1C12                     __end_of_Lcd_Cmd:
 10029                           
 10030                           	psect	text31
 10031  1C2D                     __ptext31:	
 10032 ;; *************** function _ISR *****************
 10033 ;; Defined at:
 10034 ;;		line 37 in file "potenciometro.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;		None
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;		None
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  1    wreg      void 
 10041 ;; Registers used:
 10042 ;;		wreg
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10048 ;;      Params:         0       0       0       0       0
 10049 ;;      Locals:         0       0       0       0       0
 10050 ;;      Temps:          4       0       0       0       0
 10051 ;;      Totals:         4       0       0       0       0
 10052 ;;Total ram usage:        4 bytes
 10053 ;; Hardware stack levels used:    1
 10054 ;; This function calls:
 10055 ;;		Nothing
 10056 ;; This function is called by:
 10057 ;;		Interrupt level 1
 10058 ;; This function uses a non-reentrant model
 10059 ;;
 10060                           
 10061                           
 10062                           ;psect for function _ISR
 10063  1C2D                     _ISR:
 10064  1C2D                     i1l3133:
 10065                           
 10066                           ;potenciometro.c: 39:      if (PIR1bits.ADIF ==1){
 10067  1C2D  1283               	bcf	3,5	;RP0=0, select bank0
 10068  1C2E  1303               	bcf	3,6	;RP1=0, select bank0
 10069  1C2F  1F0C               	btfss	12,6	;volatile
 10070  1C30  2C32               	goto	u532_21
 10071  1C31  2C33               	goto	u532_20
 10072  1C32                     u532_21:
 10073  1C32  2C46               	goto	i1l77
 10074  1C33                     u532_20:
 10075  1C33                     i1l3135:
 10076                           
 10077                           ;potenciometro.c: 40:         PIR1bits.ADIF = 0;
 10078  1C33  130C               	bcf	12,6	;volatile
 10079  1C34                     i1l3137:
 10080                           
 10081                           ;potenciometro.c: 41:         c = ADRESH;
 10082  1C34  081E               	movf	30,w	;volatile
 10083  1C35  00F0               	movwf	??_ISR
 10084  1C36  01F1               	clrf	??_ISR+1
 10085  1C37  0870               	movf	??_ISR,w
 10086  1C38  1683               	bsf	3,5	;RP0=1, select bank1
 10087  1C39  1303               	bcf	3,6	;RP1=0, select bank1
 10088  1C3A  00D6               	movwf	_c^(0+128)
 10089  1C3B  0871               	movf	??_ISR+1,w
 10090  1C3C  00D7               	movwf	(_c+1)^(0+128)
 10091                           
 10092                           ;potenciometro.c: 42:         b = ADRESH;
 10093  1C3D  1283               	bcf	3,5	;RP0=0, select bank0
 10094  1C3E  1303               	bcf	3,6	;RP1=0, select bank0
 10095  1C3F  081E               	movf	30,w	;volatile
 10096  1C40  00F0               	movwf	??_ISR
 10097  1C41  01F1               	clrf	??_ISR+1
 10098  1C42  0870               	movf	??_ISR,w
 10099  1C43  00F8               	movwf	_b
 10100  1C44  0871               	movf	??_ISR+1,w
 10101  1C45  00F9               	movwf	_b+1
 10102  1C46                     i1l77:
 10103  1C46  0873               	movf	??_ISR+3,w
 10104  1C47  008A               	movwf	10
 10105  1C48  0E72               	swapf	??_ISR+2,w
 10106  1C49  0083               	movwf	3
 10107  1C4A  0EFE               	swapf	btemp,f
 10108  1C4B  0E7E               	swapf	btemp,w
 10109  1C4C  0009               	retfie
 10110  1C4D                     __end_of_ISR:
 10111  007E                     btemp	set	126	;btemp
 10112  007E                     wtemp0	set	126
 10113                           
 10114                           	psect	intentry
 10115  0004                     __pintentry:	
 10116                           ;incstack = 0
 10117                           ; Regs used in _ISR: [wreg]
 10118                           
 10119  0004                     interrupt_function:
 10120  007E                     saved_w	set	btemp
 10121  0004  00FE               	movwf	btemp
 10122  0005  0E03               	swapf	3,w
 10123  0006  00F2               	movwf	??_ISR+2
 10124  0007  080A               	movf	10,w
 10125  0008  00F3               	movwf	??_ISR+3
 10126  0009  160A  158A  2C2D   	ljmp	_ISR
 10127                           
 10128                           	psect	config
 10129                           
 10130                           ;Config register CONFIG1 @ 0x2007
 10131                           ;	Oscillator Selection bits
 10132                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 10133                           ;	Watchdog Timer Enable bit
 10134                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10135                           ;	Power-up Timer Enable bit
 10136                           ;	PWRTE = OFF, PWRT disabled
 10137                           ;	RE3/MCLR pin function select bit
 10138                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10139                           ;	Code Protection bit
 10140                           ;	CP = OFF, Program memory code protection is disabled
 10141                           ;	Data Code Protection bit
 10142                           ;	CPD = OFF, Data memory code protection is disabled
 10143                           ;	Brown Out Reset Selection bits
 10144                           ;	BOREN = OFF, BOR disabled
 10145                           ;	Internal External Switchover bit
 10146                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10147                           ;	Fail-Safe Clock Monitor Enabled bit
 10148                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10149                           ;	Low Voltage Programming Enable bit
 10150                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10151                           ;	In-Circuit Debugger Mode bit
 10152                           ;	DEBUG = 0x1, unprogrammed default
 10153  2007                     	org	8199
 10154  2007  20D4               	dw	8404
 10155                           
 10156                           ;Config register CONFIG2 @ 0x2008
 10157                           ;	Brown-out Reset Selection bit
 10158                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10159                           ;	Flash Program Memory Self Write Enable bits
 10160                           ;	WRT = OFF, Write protection off
 10161  2008                     	org	8200
 10162  2008  3FFF               	dw	16383

Data Sizes:
    Strings     38
    Constant    144
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     80      80
    BANK1            80     46      57
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_4(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> buffer(BANK1[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> buffer(BANK1[1]), STR_3(CODE[6]), STR_2(CODE[17]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _conversion->_Lcd_Set_Cursor
    _conversion->_Lcd_Write_String
    _conversion->___wmul
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___flneg
    _sprintf->___wmul
    _sprintf->__tdiv_to_l_
    _scale->___awmod
    ___awdiv->___awmod
    ___awdiv->___wmul
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    ___flmul->___awmod
    ___flmul->___lwmod
    ___xxtofl->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_conversion
    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___xxtofl->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _conversion->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   37822
                                             43 BANK1      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _config
                         _conversion
 ---------------------------------------------------------------------------------
 (1) _conversion                                           2     2      0   36683
                                             78 BANK0      2     2      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                             ___wmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   32860
                                              8 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    8051
                                             38 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1513
                                              4 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1516
                                              3 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    6133
                                             38 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     772
                                              4 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              2 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4393
                                             12 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              4 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              4 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                             12 BANK0     14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     676
                                              4 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              4 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     601
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             57 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             58 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              4 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              4 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              4 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     521
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     574
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      22
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _config
   _conversion
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      93       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2E      39       7       71.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      93      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 19 12:22:31 2021

                        _b 0078                          _c 00D6                          pc 0002  
                       l50 1C11                         l53 08D2                         l62 1BEC  
                       l71 1CFE                         l47 1C2C                         l59 1C72  
                       l68 1D80                         l89 108F               ___awdiv@sign 0029  
                       fsr 0004        ___wmul@multiplicand 0076        __Umul8_16@word_mpld 0022  
                      l304 1F83                        l217 0093                        l250 0599  
                      l243 0555                        l421 093B                        l270 1CC6  
                      l191 1577                        l264 07A7                        l601 1659  
                      l442 132D                        l434 1F1B                        l258 0760  
                      l620 1771                        l524 07FD                        l268 1CAC  
                      l454 1DE5                        l462 111A                        l438 136A  
                      l710 1C89                        l198 0FFF                        l455 1E01  
                      l463 1133                        l471 1FFF                        l439 12CF  
                      l703 0C90                        l456 1E16                        l616 174D  
                      l608 17FF                        l712 1C9B                        l641 1E66  
                      l481 1FFF                        l449 135D                        l626 1793  
                      l459 10AE                        l467 1BDC                        l637 17F3  
                      l629 17D1                        l741 119D                        l485 12AC  
                      l638 17FF                        l478 1FEA                        l486 121E  
                      l574 1DC6                        l735 1158                        l496 129F  
                      l584 1D3A                        l737 11EF                        l489 126F  
                      l595 15DB                        l691 0C9C                        l755 1BFE  
                      l748 11B9                        l749 11C5                        l599 1682  
                      l697 0C08                        _ISR 1C2D                        fsr0 0004  
                      indf 0000               ___awmod@sign 0022               ___flmul@aexp 003E  
             ___flmul@bexp 003F                _sprintf$986 00B2               ___flmul@sign 0039  
             ___flmul@temp 0044               ___flmul@prod 0040                       ?_ISR 0070  
             ___fltol@exp1 0063                       l2031 1C92                       l2023 1C76  
                     l2201 15C3                       l2033 1C97                       l2025 1C78  
                     l2121 1D85                       l2041 08DA                       l2211 15E1  
                     l2203 15C8                       l2027 1C7F                       l2131 1D9D  
                     l2123 1D8B                       l2051 08EE                       l2043 08DF  
                     l3101 08C6                       l2301 1755                       l2221 15F5  
                     l2213 15E5                       l2205 15D0                       l2029 1C83  
                     l2133 1DAE                       l2125 1D8E                       l2141 1DC2  
                     l2061 0904                       l2053 08F0                       l2045 08E1  
                     l2037 08D3                       l2311 1770                       l2303 175A  
                     l2231 1609                       l2223 15F9                       l2215 15E9  
                     l2207 15D1                       l2135 1DB4                       l2127 1D95  
                     l2119 1D81                       l2071 0927                       l2063 0908  
                     l2055 08F6                       l2047 08E5                       l2039 08D6  
                     l2313 1775                       l2321 1781                       l2241 161D  
                     l2233 160D                       l2225 15FD                       l2217 15ED  
                     l2209 15D3                       l2401 09A0                       l2137 1DB5  
                     l2129 1D99                       l2065 0919                       l2057 08F9  
                     l2073 092D                       l2049 08EA                       l3201 1EE1  
                     l2315 1778                       l2307 1763                       l2323 1785  
                     l2251 165D                       l2243 1621                       l2235 1611  
                     l2227 1601                       l2219 15F1                       l2171 1585  
                     l2411 09E3                       l2139 1DBC                       l2075 0932  
                     l2067 091F                       l2059 0900                       l3211 1F00  
                     l3203 1EE8                       l2501 1C00                       l2341 17CD  
                     l2333 1798                       l2325 1786                       l2317 177A  
                     l2309 176C                       l2261 1676                       l2253 1666  
                     l2237 1615                       l2229 1605                       l2245 1625  
                     l2181 159C                       l2173 1589                       l2421 0A6C  
                     l2413 09FF                       l2405 09A9                       l2077 0937  
                     l2069 0920                       l3213 1F07                       l3205 1EEC  
                     l3301 0F44                       l2503 1C03                       l2351 17E9  
                     l2343 17D6                       l2335 179D                       l2327 178A  
                     l2319 177F                       l2271 1694                       l2255 1668  
                     l2263 167A                       l2247 1626                       l2239 1619  
                     l2191 15B2                       l2183 159D                       l2175 158A  
                     l2167 1578                       l3311 1C9C                       l2431 0ADF  
                     l2423 0A7C                       l2415 0A2B                       l2407 09B9  
                     l3231 1D15                       l3223 1CFF                       l3207 1EF0  
                     l3215 1F0D                       l3303 0F4B                       l2505 1C05  
                     l2353 17ED                       l2345 17DB                       l2337 17AB  
                     l2329 1790                       l2281 16BE                       l2273 16AB  
                     l2265 1686                       l2257 166C                       l2249 163D  
                     l2193 15B3                       l2177 158F                       l2185 159F  
                     l2169 157F                       l3321 1CC0                       l3313 1CA0  
                     l2601 1225                       l2441 0B8C                       l2433 0AFC  
                     l2425 0A99                       l2417 0A47                       l2409 09C6  
                     l2361 093C                       l3233 1D19                       l3225 1D05  
                     l3241 1D36                       l3217 1F12                       l3209 1EFA  
                     l3401 0095                       l2507 1C0E                       l3251 1BE9  
                     l2355 17EF                       l2347 17E3                       l2339 17AF  
                     l2291 16E7                       l2283 16C2                       l2275 16AF  
                     l2267 168B                       l2259 166D                       l2195 15B9  
                     l2187 15A7                       l2179 1594                       l3331 1F3E  
                     l3315 1CA4                       l2611 1256                       l2603 1234  
                     l2451 0BD8                       l2443 0BB4                       l2435 0B29  
                     l2427 0AA9                       l2419 0A63                       l2371 0953  
                     l2363 0943                       l3235 1D23                       l3227 1D0A  
                     l3219 1F17                       l3307 0FD3                       l3411 00D3  
                     l3403 00B1                       l3245 1BDE                       l2357 17FA  
                     l2349 17E8                       l2293 1725                       l2285 16C3  
                     l2277 16B3                       l2197 15BD                       l2189 15AC  
                     l3341 1F6C                       l3333 1F42                       l3325 1F1C  
                     l3317 1CB3                       l2613 1260                       l2605 1236  
                     l2461 0BED                       l2453 0BD9                       l2445 0BBD  
                     l2437 0B39                       l2429 0AC6                       l2381 096F  
                     l2373 0958                       l2365 0949                       l3237 1D29  
                     l3229 1D11                       l3261 1483                       l3253 136E  
                     l3501 0549                       l3421 011F                       l3413 00D7  
                     l3405 00BD                       l3351 1C55                       l3247 1BE1  
                     l2359 17FE                       l2295 172B                       l2287 16CC  
                     l2279 16BC                       l2199 15BE                       l3343 1F75  
                     l3335 1F4B                       l3327 1F2E                       l3319 1CBA  
                     l2615 1261                       l2607 123F                       l2471 0C12  
                     l2463 0BF1                       l2455 0BE2                       l2447 0BCB  
                     l2439 0B66                       l2391 0984                       l2383 0975  
                     l2375 0960                       l2367 094D                       l3239 1D30  
                     l3263 1489                       l3255 1374                       l3191 1ECD  
                     l3271 0CA0                       l3511 057D                       l3503 055D  
                     l3431 018D                       l3423 0146                       l3415 00FE  
                     l3407 00C1                       l1921 1C1A                       l3353 1C5A  
                     l3249 1BE3                       l3361 1D3B                       l2297 1730  
                     l2289 16D1                       l2801 1FEF                       l3337 1F5D  
                     l3329 1F31                       l3345 1F7B                       l2641 12BA  
                     l2633 1294                       l2625 127B                       l2617 1269  
                     l2609 1248                       l2481 0C50                       l2473 0C20  
                     l2465 0C05                       l2449 0BD4                       l2457 0BE8  
                     l2393 098C                       l2385 0979                       l2377 0962  
                     l2369 094E                       l3193 1ECF                       l3185 1EC1  
                     l3273 0CA4                       l3521 05AE                       l3513 058C  
                     l3505 0566                       l3441 0228                       l3433 0191  
                     l3425 0151                       l3417 0117                       l3409 00C5  
                     l3601 107B                       l1931 1C23                       l1923 1C1B  
                     l3355 1C61                       l3363 1D40                       l2731 1DDD  
                     l2299 173F                       l2803 1FF4                       l3339 1F6B  
                     l2811 07C2                       l2651 12D0                       l2635 12A4  
                     l2619 1273                       l2627 128D                       l2491 0C84  
                     l2483 0C5B                       l2475 0C24                       l2459 0BEC  
                     l2395 098E                       l2387 097A                       l2379 096A  
                     l3267 1534                       l3195 1ED3                       l3187 1EC4  
                     l3283 0D97                       l3275 0CA6                       l3531 06C5  
                     l3523 05B2                       l3515 0593                       l3507 056A  
                     l3451 02B8                       l3443 0231                       l3435 0197  
                     l3427 0157                       l3419 011B                       l3371 002A  
                     l3603 108C                       l3611 1E93                       l1933 1C26  
                     l1925 1C1C                       l1917 1C12                       l3357 1C67  
                     l3349 1C50                       l3365 1D5C                       l2733 1DF9  
                     l2741 1090                       l2813 07C6                       l2821 07F5  
                     l2805 07A8                       l2661 12FD                       l2653 12D8  
                     l2645 12C3                       l2493 0C88                       l2485 0C6A  
                     l2477 0C3D                       l2469 0C0D                       l2397 0996  
                     l2389 097F                       l2581 1BFB                       l3197 1ED8  
                     l3189 1EC8                       l3285 0D9E                       l3277 0CAD  
                     l3293 0E53                       l3541 073F                       l3533 06D1  
                     l3525 05D0                       l3517 05A2                       l3509 0570  
                     l3461 034F                       l3453 02C7                       l3445 025A  
                     l3437 01B6                       l3429 016A                       l3381 004A  
                     l3373 0030                       l3613 1EA1                       l3605 1E67  
                     l1935 1C27                       l1927 1C1F                       l1919 1C16  
                     l3359 1C6C                       l3367 1D64                       l2735 1E13  
                     l2751 10F2                       l2743 10A6                       l2815 07D8  
                     l2807 07B2                       l2831 1137                       l2671 1331  
                     l2663 130F                       l2655 12E9                       l2639 12AD  
                     l2495 0C89                       l2487 0C74                       l2479 0C43  
                     l2399 099B                       l2583 1BFD                       l2575 1BEE  
                     l3199 1EDE                       l3295 0E5A                       l3551 076B  
                     l3543 0745                       l3527 062B                       l3535 072C  
                     l3519 05A7                       l3471 03C9                       l3463 0358  
                     l3455 02F0                       l3439 0201                       l3447 0262  
                     l3391 007A                       l3383 004B                       l3375 0037  
                     l3615 1EA6                       l3607 1E79                       l1937 1C28  
                     l1929 1C20                       l2737 1E15                       l2729 1DC7  
                     l2753 10F6                       l2745 10C2                       l2761 1BD2  
                     l2825 1E17                       l2817 07E6                       l2809 07B5  
                     l2833 113C                       l2665 131D                       l2657 12EB  
                     l2593 120C                       l2497 0C94                       l2489 0C76  
                     l2577 1BEF                       l3289 0E26                       l3553 076C  
                     l3537 0734                       l3529 0686                       l3465 0360  
                     l3457 0317                       l3473 03D2                       l3449 0271  
                     l3545 074C                       l3393 007E                       l3385 004F  
                     l3377 003C                       l3369 0025                       l3617 1EAE  
                     l3609 1E82                       l1939 1C29                       l2755 1130  
                     l2747 10CA                       l2763 1BDA                       l2827 1E1B  
                     l2771 1F91                       l2819 07EF                       l2851 1186  
                     l2843 1169                       l2835 1140                       l2667 131E  
                     l2659 12F4                       l2587 11F0                       l2579 1BF5  
                     l3555 077B                       l3547 0752                       l3539 073B  
                     l3491 0497                       l3475 0407                       l3467 037E  
                     l3459 0326                       l3651 00A9                       l3387 0052  
                     l3395 008F                       l3379 003E                       l3563 0791  
                     l3619 1EB7                       l3581 1CDA                       l2757 1132  
                     l2749 10CE                       l2765 1BDC                       l2781 1FB8  
                     l2861 11BD                       l2853 1194                       l2845 116E  
                     l2837 1150                       l2685 1352                       l2677 1339  
                     l2669 1327                       l2589 1203                       l3557 077B  
                     l3549 075A                       l3493 04A3                       l3485 0456  
                     l3477 0452                       l3565 07A3                       l3397 0091  
                     l3389 0067                       l3583 1CE6                       l3575 1CC7  
                     l2791 1FC6                       l2783 1FBA                       l2775 1F9A  
                     l2871 11E7                       l2863 11C7                       l2855 11A4  
                     l2847 117B                       l2839 1160                       l2687 1362  
                     l2679 134B                       l2599 121F                       l3559 0789  
                     l3495 04AA                       l3479 0454                       l3591 100C  
                     l3585 1CEC                       l3577 1CCA                       l2785 1FBE  
                     l2793 1FD8                       l2777 1FAF                       l2769 1F84  
                     l2865 11DD                       l2857 11AF                       l2849 1182  
                     l3497 04AF                       l3489 048D                       l3593 1015  
                     l3587 1CF2                       l3579 1CD0                       l2779 1FB0  
                     l2867 11E2                       l2859 11B3                       l3499 050A  
                     l3595 1019                       l3589 1CF8                       l2869 11E6  
                     l3597 101E                       l2799 1FDF                       l3599 1065  
                     STR_1 08B1                       STR_2 08A0                       STR_3 08BB  
                     STR_4 08C1                       u3100 15E5                       u3020 1589  
                     u3101 15E4                       u3021 1588                       u3110 163D  
                     u3030 158F                       u3111 163C                       u3031 158E  
                     u3120 1648                       u3040 1594                       u3201 169D  
                     u3121 1646                       u3041 1593                       u3210 16AF  
                     u3202 16A4                       u3130 1649                       u3050 15B2  
                     u3211 16AE                       u3203 16AB                       u3115 1639  
                     u3051 15B1                       u3300 175A                       u3220 16B3  
                     u3140 165D                       u3060 15BD                       u4100 1BF5  
                     u3301 1759                       u3221 16B2                       u3141 165C  
                     u3061 15BC                       u4101 1BF4                       u3230 16C2  
                     u3150 166C                       u3070 15C3                       u4110 1BFB  
                     u3231 16C1                       u3151 166B                       u3071 15C2  
                     u4111 1BFA                       u3400 17AF                       u3320 1770  
                     u3080 15C8                       u4120 1203                       u3401 17AE  
                     u3321 176F                       u3081 15C7                       u4121 1202  
                     u3410 17BE                       u3330 1775                       u3250 16E7  
                     u3170 1682                       u3090 15E1                       u4210 128C  
                     u4130 121D                       u3331 1774                       u3315 1765  
                     u3251 16E6                       u3171 1681                       u3091 15E0  
                     u4211 128B                       u4131 121C                       u3420 17CD  
                     u3340 177F                       u3180 1686                       u4300 132D  
                     u4220 1293                       u3500 0958                       u2700 08DA  
                     u3421 17CC                       u3341 177E                       u3261 16FE  
                     u3253 16E3                       u3245 16C5                       u3181 1685  
                     u3165 166F                       u4301 132C                       u4221 1292  
                     u4205 127C                       u3501 0957                       u2701 08D9  
                     u3430 17D6                       u3350 1785                       u3270 1712  
                     u3262 16FF                       u3190 168B                       u4310 1331  
                     u4150 1256                       u3510 0979                       u2710 08E5  
                     u3431 17D5                       u3415 17B9                       u3351 1784  
                     u3271 1713                       u3263 1704                       u3191 168A  
                     u4311 1330                       u4151 1255                       u3511 0978  
                     u2711 08E4                       u3440 17DB                       u3360 178A  
                     u3280 1730                       u3272 1718                       u3264 1705  
                     u4320 1338                       u4240 12A4                       u3520 097F  
                     u2720 08F6                       u6000 02C7                       u3441 17DA  
                     u3361 1789                       u3281 172F                       u3273 1719  
                     u3265 170A                       u4321 1337                       u4241 12A3  
                     u4145 1241                       u3521 097E                       u2721 08F5  
                     u6001 02C6                       u3450 17E8                       u3370 1790  
                     u3290 1755                       u3266 170B                       u4250 12BA  
                     u4170 126F                       u3530 0984                       u6010 02F0  
                     u3451 17E7                       u3371 178F                       u3291 1754  
                     u4251 12B9                       u4235 1296                       u4171 126E  
                     u4155 1252                       u3611 0A8B                       u3531 0983  
                     u6011 02EF                       u4500 1DF9                       u3460 17ED  
                     u3380 1797                       u4340 134A                       u4260 12CE  
                     u4180 1273                       u3612 0A92                       u3540 099B  
                     u2740 0908                       u6100 055C                       u6020 0317  
                     u4501 1DF8                       u3461 17EC                       u3381 1796  
                     u4341 1349                       u4261 12CD                       u4181 1272  
                     u4165 1262                       u3701 0BA6                       u3621 0AB8  
                     u3613 0A99                       u3605 0A65                       u3541 099A  
                     u2741 0907                       u6101 055B                       u6021 0316  
                     u6005 02C3                       u4510 1E13                       u3470 17FE  
                     u3390 179D                       u4350 1351                       u4190 127A  
                     u2670 1C83                       u3702 0BAD                       u3622 0ABF  
                     u3550 09A0                       u2910 1D9D                       u6110 057D  
                     u6030 0326                       u4511 1E12                       u3471 17FD  
                     u3391 179C                       u4351 1350                       u4335 133A  
                     u4191 1279                       u2671 1C82                       u3703 0BB4  
                     u3623 0AC6                       u3551 099F                       u2911 1D9C  
                     u2735 08FA                       u6111 057C                       u6031 0325  
                     u4520 10A6                       u4600 1F91                       u4280 130F  
                     u3800 0C24                       u3480 094D                       u2760 0919  
                     u5400 1F0D                       u6200 076B                       u6120 058C  
                     u6040 034F                       u4521 10A5                       u4601 1F90  
                     u4281 130E                       u3801 0C23                       u3641 0AEE  
                     u3561 09F1                       u3481 094C                       u2905 1D8F  
                     u2761 0918                       u5401 1F0C                       u6201 076A  
                     u6121 058B                       u6041 034E                       u4530 10C2  
                     u4610 1FA8                       u4370 1362                       u2690 1C97  
                     u3810 0C33                       u3730 0BD8                       u3642 0AF5  
                     u3562 09F8                       u3490 0953                       u2930 1DAE  
                     u5410 1F12                       u5330 1EC8                       u6210 077B  
                     u6130 05A7                       u4515 1E0F                       u4531 10C1  
                     u4371 1361                       u4275 12F6                       u2691 1C96  
                     u3731 0BD7                       u3715 0BB6                       u3651 0B1B  
                     u3643 0AFC                       u3635 0AC8                       u3571 0A0D  
                     u3563 09FF                       u3491 0952                       u2931 1DAD  
                     u2755 0909                       u5411 1F11                       u5331 1EC7  
                     u6211 077A                       u6131 05A6                       u6115 0579  
                     u6035 0322                       u4540 10CE                       u4620 1FBE  
                     u4700 07B2                       u3820 0C50                       u3652 0B22  
                     u3572 0A14                       u5420 1D05                       u2780 092D  
                     u5340 1ED3                       u6220 0789                       u6060 048C  
                     u4541 10CD                       u4621 1FBD                       u4701 07B1  
                     u4365 1354                       u4285 130B                       u2685 1C8A  
                     u3821 0C4F                       u3725 0BCD                       u3661 0B48  
                     u3653 0B29                       u3581 0A39                       u3573 0A1B  
                     u2925 1D9E                       u5421 1D04                       u2781 092C  
                     u2765 0915                       u5341 1ED2                       u6221 0788  
                     u6205 0767                       u6125 0588                       u6061 048B  
                     u4630 1FC5                       u3830 0C6A                       u3750 0BEC  
                     u3670 0B72                       u3662 0B4F                       u3582 0A40  
                     u2950 1DC2                       u2790 0932                       u5350 1EDE  
                     u6230 07A3                       u6070 0497                       u4551 10DD  
                     u4631 1FC4                       u4615 1FA3                       u4295 1320  
                     u3831 0C69                       u3815 0C2E                       u3751 0BEB  
                     u3663 0B56                       u3591 0A55                       u3583 0A47  
                     u2951 1DC1                       u2935 1DAA                       u2791 0931  
                     u2775 0921                       u5351 1EDD                       u6231 07A2  
                     u6215 0777                       u6071 0496                       u6055 0459  
                     u4560 10F6                       u4552 10DE                       u4720 07C6  
                     u4800 1181                       u3840 0C88                       u3760 0BF1  
                     u3592 0A5C                       u5440 1D19                       u5520 1489  
                     u6160 0733                       u6080 04A3                       u6240 1019  
                     u4561 10F5                       u4553 10E3                       u4721 07C5  
                     u4801 1180                       u3841 0C87                       u3825 0C4C  
                     u3761 0BF0                       u3745 0BDB                       u3681 0B7E  
                     u3593 0A63                       u2945 1DB6                       u5441 1D18  
                     u5521 1488                       u5505 13ED                       u6161 0732  
                     u6145 062E                       u6081 04A2                       u6065 0488  
                     u6241 1018                       u4490 1DDD                       u4554 10E4  
                     u4650 1FD7                       u4730 07D8                       u3770 0C05  
                     u3690 0B9A                       u3682 0B85                       u2890 1D8B  
                     u5450 1D23                       u5370 1EF0                       u5610 0D9E  
                     u6170 074B                       u6250 101E                       u6307 1C0A  
                     u4491 1DDC                       u4571 1105                       u4555 10E9  
                     u4651 1FD6                       u4731 07D7                       u4715 07B7  
                     u3835 0C66                       u3771 0C04                       u3683 0B8C  
                     u3675 0B6D                       u2891 1D8A                       u5451 1D22  
                     u5435 1D0B                       u5515 1442                       u5371 1EEF  
                     u5611 0D9D                       u6171 074A                       u6155 06D4  
                     u6251 101D                       u4580 1130                       u4572 1106  
                     u4556 10EA                       u4660 1FDE                       u4820 11A3  
                     u3780 0C0C                       u5380 1EFA                       u6180 0752  
                     u4581 112F                       u4573 110B                       u4661 1FDD  
                     u4645 1FC7                       u4821 11A2                       u3781 0C0B  
                     u5381 1EF9                       u5365 1EE2                       u5605 0D56  
                     u6181 0751                       u4574 110C                       u4590 1BDA  
                     u4750 07F5                       u3790 0C12                       u5470 1D36  
                     u6190 075A                       u4575 1111                       u4591 1BD9  
                     u4751 07F4                       u4735 07D4                       u4815 1195  
                     u3791 0C11                       u3695 0B95                       u5471 1D35  
                     u5455 1D1F                       u5535 14A6                       u6191 0759  
                     u6095 04B2                       u4576 1112                       u4680 1FEF  
                     u4840 11B3                       u4760 113C                       u5480 1374  
                     u5560 0CA4                       u4585 112C                       u4681 1FEE  
                     u4745 07E7                       u4841 11B2                       u4761 113B  
                     u5465 1D2A                       u5545 14F3                       u5481 1373  
                     u5385 1EF6                       u5705 0F5E                       u5625 0DB1  
                     u5561 0CA3                       u4690 1FF4                       u5810 1F5D  
                     u5730 1CA4                       u4850 11B9                       u4770 1140  
                     u5650 0E5A                       u5570 0CAD                       u4691 1FF3  
                     u4675 1FE1                       u5811 1F5C                       u5731 1CA3  
                     u4851 11B8                       u4835 11A8                       u4771 113F  
                     u5555 153F                       u5395 1F01                       u5715 0F9A  
                     u5651 0E59                       u5635 0DED                       u5571 0CAC  
                     u6267 1E9B                       u4860 11BD                       u4780 1160  
                     u5900 004A                       i1l77 1C46                       u6277 1BE6  
                     u5805 1F44                       u4861 11BC                       u4781 115F  
                     u5725 0FD6                       u5645 0E29                       u5901 0049  
                     u5830 1F7B                       u4870 11D2                       u5910 008E  
                     u6287 1CD6                       u5831 1F7A                       u5815 1F59  
                     u5495 1391                       u5911 008D                       u5840 1C55  
                     u5760 1CC0                       u4880 11E2                       u5920 00BD  
                     u6297 1CE4                       u5841 1C54                       u5825 1F6D  
                     u5761 1CBF                       u5745 1CAD                       u4881 11E1  
                     u5665 0E7C                       u5585 0CCF                       u5921 00BC  
                     u5850 1C67                       u5770 1F2E                       u4890 11E6  
                     u5690 0F4B                       u5930 00C1                       u5851 1C66  
                     u5771 1F2D                       u5755 1CB4                       u4891 11E5  
                     u4875 11CD                       u4795 1173                       u5691 0F4A  
                     u5675 0EB8                       u5595 0D0B                       u5931 00C0  
                     u5860 1D4A                       u5940 00FE                       u5685 0F03  
                     u5941 00FD                       u5870 1D6E                       u5790 1F42  
                     u5950 0146                       u5791 1F41                       u5951 0145  
                     u5880 1D80                       u5960 0191                       u5881 1D7F  
                     u5785 1F33                       u5961 0190                       u5970 0228  
                     u5890 0030                       u5971 0227                       u5891 002F  
                     u5980 025A                       u5981 0259                       u5990 0271  
                     u5991 0270                       u5995 026D          ?_Lcd_Write_String 0076  
                     _main 1E67                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0020            __end_of_Lcd_Cmd 1C12                      ??_ISR 0070  
            ___fltol@sign1 0062            __end_of___fladd 1800                      ?_main 0070  
          __end_of___awdiv 093C            __end_of___flneg 1BDD            __end_of___awmod 1F1C  
          __end_of___flmul 0C9D            __end_of___flsub 1E67            __end_of___fltol 2000  
                    _ANSEL 0188            __end_of___lldiv 1F84            ___awdiv@divisor 0023  
          __end_of___llmod 07FE            __end_of___lwdiv 1DC7            __end_of___lwmod 1D3B  
          ___awdiv@counter 0028                      _PORTB 0006    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
          __end_of_dpowers 08A0                      _scale 0C9D            __end_of_isdigit 1BFF  
                    _vpot1 00D2                      _vpot2 00CE                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07A8  
         __end_of_Lcd_Init 1CFF            __initialization 000F               __end_of_main 1EC1  
                   ??_main 00CB         __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD  
         ___llmod@dividend 0024                     ?_scale 0046                     _ADRESH 001E  
         ___awdiv@dividend 0025                     _ANSELH 0189                     i1l3133 1C2D  
                   i1l3135 1C33                     i1l3137 1C34                     u532_20 1C33  
                   u532_21 1C32                  ??_Lcd_Cmd 0074    __size_of_Lcd_Write_Char 0010  
         __end_of___xxtofl 11F0           __end_of__powers_ 0844                     ___flge 1090  
                   ___fleq 1DC7                  ??___fladd 0062                     ___wmul 1C9C  
                ??___awdiv 0027                  ??___flneg 0078                  ??___awmod 0020  
                ??___flmul 0034                  ??___flsub 0078                  ??___fltol 005D  
                ??___lldiv 0074                  ??___llmod 0074                  ??___lwdiv 0026  
                ??___lwmod 0020                     _config 1C12                     _buffer 00D8  
                   _fround 136B           ___awdiv@quotient 002A            ___awmod@divisor 0074  
          ___awmod@counter 0021                  ??_isdigit 0074         __size_of__Umul8_16 0029  
                   saved_w 007E                  ??_sprintf 00AD            Lcd_Set_Cursor@a 0021  
          Lcd_Set_Cursor@b 0077                 ___flge@ff1 0020                 ___flge@ff2 0024  
             ___xxtofl@arg 0036               ___xxtofl@exp 0035               ___xxtofl@val 002C  
               ___fleq@ff1 0020                 ___fleq@ff2 0024    __end_of__initialization 001E  
               ___flneg@f1 0074          __end_of_Lcd_Clear 08D3                 ___fltol@f1 0059  
           __pcstackCOMMON 0070              __end_of_scale 1000             _Lcd_Set_Cursor 1C4D  
               __div_to_l_ 12AD                  ?_Lcd_Init 0070            __div_to_l_@exp1 002D  
          __div_to_l_@cntr 002C                    ??_scale 004A            __div_to_l_@quot 0028  
               __pbssBANK1 00CE              __div_to_l_@f1 0020              __div_to_l_@f2 0024  
        __end_of__Umul8_16 1C9C                 __pmaintext 1E67                    ?___flge 0020  
                  ?___fleq 0020                    ?___wmul 0074                 __pintentry 0004  
                  ?_config 0070                    ?_fround 0046  __size_of_Lcd_Write_String 0046  
   __end_of_Lcd_Set_Cursor 1C73                  ?___xxtofl 002C                 ??_Lcd_Init 0020  
               __stringtab 0800             _Lcd_Write_Char 1BDD                    _Lcd_Cmd 1BFF  
               _conversion 1009          __end_of__npowers_ 0878            __size_of___flge 00A4  
          __size_of___fleq 0050                    ___fladd 1578                    ___awdiv 08D3  
                  ___flneg 1BD2                    ___awmod 1EC1                    ___flmul 093C  
                  ___flsub 1E17                    ___fltol 1F84                    ___lldiv 1F1C  
          __size_of___wmul 002B                    ___llmod 07A8                    ___lwdiv 1D81  
               _fround$983 0055                 _fround$984 0051                    ___lwmod 1CFF  
          __size_of_config 001B                  _ANSELbits 0188            __size_of_fround 020D  
          ?_Lcd_Set_Cursor 0077                    __ptext1 1009                    __ptext2 0022  
                  __ptext3 0C9D                    __ptext4 1EC1                    __ptext5 08D3  
                  __ptext6 1BED                    __ptext7 136B                    __ptext8 1CFF  
                  __ptext9 1D81               __size_of_ISR 0020                ?__div_to_l_ 0020  
                  _dpowers 0878                    _isdigit 1BED                 ??___xxtofl 0030  
         ___awmod@dividend 0076                    _sprintf 0022     __end_of_Lcd_Write_Char 1BED  
     end_of_initialization 001E            ___lldiv@divisor 0020            ___lldiv@counter 002C  
           __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024              ??__tdiv_to_l_ 0074  
                _PORTDbits 0008                ___fladd@grs 006D              ___xxtofl@sign 0034  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076          Lcd_Write_String@i 0023  
              ___flmul@grs 003A                ?_conversion 0070        __size_of__div_to_l_ 00BE  
                _Lcd_Clear 08C6             __end_of___flge 1134             __end_of___fleq 1E17  
           __end_of___wmul 1CC7           _Lcd_Write_String 1D3B             __end_of_config 1C2D  
           __end_of_fround 1578        start_initialization 000F                __end_of_ISR 1C4D  
      __end_of__tdiv_to_l_ 12AD          __size_of_Lcd_Init 0038            ___llmod@divisor 0020  
          ___llmod@counter 0075        conversion@puertoANL 006F                 ?_Lcd_Clear 0070  
                 ??___flge 0074                   ??___fleq 0074                   ??___wmul 0078  
                __Umul8_16 1C73                   ??_config 0074            Lcd_Write_Char@a 0075  
                 ??_fround 004A              sprintf@tmpval 00C0                  ___fladd@a 005E  
                ___fladd@b 005A        __size_of_conversion 0087                 fround@prec 0059  
                ___flmul@a 0030                  ___flmul@b 002C                __pbssCOMMON 0078  
                ___flsub@a 00A0                  ___flsub@b 00A4                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of___xxtofl 00BC  
                 ?_Lcd_Cmd 0070                sprintf@flag 00B7                sprintf@eexp 00BD  
              sprintf@fval 00C6                sprintf@prec 00C4           ___lwdiv@dividend 0024  
         ??_Lcd_Set_Cursor 0020                   ?___fladd 005A                   ?___awdiv 0023  
                 ?___flneg 0074                   ?___awmod 0074                   ?___flmul 002C  
                 ?___flsub 00A0                   ?___fltol 0059                   ?___lldiv 0020  
                 ?___llmod 0020                  __npowers_ 0844                 ?__Umul8_16 0074  
                 ?___lwdiv 0022                   ?___lwmod 0074                  __pstrings 0800  
              __tdiv_to_l_ 11F0               ??__div_to_l_ 0074                   ?_isdigit 0070  
                _scale$985 0054           ___lwdiv@quotient 0027                   ?_sprintf 00A8  
           __size_of_scale 0363          interrupt_function 0004             ___wmul@product 0020  
                 _PIE1bits 008C                   Lcd_Cmd@a 0076                   _PIR1bits 000C  
       __end_of__div_to_l_ 136B                ??_Lcd_Clear 0077                 _ADCON0bits 001F  
              __stringbase 080F                 _ADCON1bits 009F          ___wmul@multiplier 0074  
         ??_Lcd_Write_Char 0074                   _Lcd_Init 1CC7   __end_of_Lcd_Write_String 1D81  
             ??_conversion 006E           __size_of_Lcd_Cmd 0013                ??__Umul8_16 0076  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 005B           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0068           __size_of___llmod 0056  
         __size_of___lwdiv 0046           __size_of___lwmod 003C         __end_of__stringtab 0810  
              _isdigit$800 0074                 sprintf@val 00B9         __end_of_conversion 1090  
                 ___xxtofl 1134           __size_of_isdigit 0012            ___lwdiv@divisor 0022  
          ___lwdiv@counter 0029                   __ptext10 093C                   __ptext11 1C73  
                 __ptext20 1578                   __ptext12 11F0                   __ptext21 1BD2  
                 __ptext13 12AD                   __ptext30 1BFF                   __ptext22 1090  
                 __ptext14 1134                   __ptext31 1C2D                   __ptext23 1DC7  
                 __ptext15 1C9C                   __ptext24 1D3B                   __ptext16 07A8  
                 __ptext25 1BDD                   __ptext17 1F1C                   __ptext26 1C4D  
                 __ptext18 1F84                   __ptext27 1C12                   __ptext19 1E17  
                 __ptext28 1CC7                   __ptext29 08C6                   __powers_ 0810  
         __size_of_sprintf 0786              __size_of_main 005A                 _INTCONbits 000B  
                 isdigit@c 0075                   scale@scl 0058                   intlevel1 0000  
                sprintf@ap 00B6           __tdiv_to_l_@exp1 002D           __tdiv_to_l_@cntr 002C  
                sprintf@sp 00BF           __tdiv_to_l_@quot 0028           ___lwmod@dividend 0076  
         ___lldiv@dividend 0024                  stringcode 080A         Lcd_Set_Cursor@temp 0022  
             ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0074                   sprintf@c 00CA  
                 sprintf@f 00A8           ___lldiv@quotient 0028            ___lwmod@divisor 0074  
          ___lwmod@counter 0021                   stringdir 080A                   stringtab 0800  
            ___fladd@signs 006A               ___fladd@aexp 006B               ___fladd@bexp 006C  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
