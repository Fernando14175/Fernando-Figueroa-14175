

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 18:08:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F887 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  008F                     	;# 
   127  0090                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145  0105                     	;# 
   146  0107                     	;# 
   147  0108                     	;# 
   148  0109                     	;# 
   149  010C                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010F                     	;# 
   154  0185                     	;# 
   155  0187                     	;# 
   156  0188                     	;# 
   157  0189                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  000E                     	;# 
   176  000F                     	;# 
   177  0010                     	;# 
   178  0011                     	;# 
   179  0012                     	;# 
   180  0013                     	;# 
   181  0014                     	;# 
   182  0015                     	;# 
   183  0015                     	;# 
   184  0016                     	;# 
   185  0017                     	;# 
   186  0018                     	;# 
   187  0019                     	;# 
   188  001A                     	;# 
   189  001B                     	;# 
   190  001B                     	;# 
   191  001C                     	;# 
   192  001D                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  0086                     	;# 
   198  0087                     	;# 
   199  0088                     	;# 
   200  0089                     	;# 
   201  008C                     	;# 
   202  008D                     	;# 
   203  008E                     	;# 
   204  008F                     	;# 
   205  0090                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0094                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  0105                     	;# 
   224  0107                     	;# 
   225  0108                     	;# 
   226  0109                     	;# 
   227  010C                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  0185                     	;# 
   233  0187                     	;# 
   234  0188                     	;# 
   235  0189                     	;# 
   236  018C                     	;# 
   237  018D                     	;# 
   238                           
   239                           	psect	strings
   240  0800                     __pstrings:
   241  0800                     stringtab:
   242  0800                     __stringtab:
   243                           
   244                           ;	String table - string pointers are 1 byte each
   245  0800  1BFF               	btfsc	btemp+1,7
   246  0801  280A               	ljmp	stringcode
   247  0802  1383               	bcf	3,7
   248  0803  187F               	btfsc	btemp+1,0
   249  0804  1783               	bsf	3,7
   250  0805  0800               	movf	0,w
   251  0806  0A84               	incf	4,f
   252  0807  1903               	skipnz
   253  0808  0AFF               	incf	btemp+1,f
   254  0809  0008               	return
   255  080A                     stringcode:
   256  080A                     stringdir:
   257  080A  3008               	movlw	high stringdir
   258  080B  008A               	movwf	10
   259  080C  0804               	movf	4,w
   260  080D  0A84               	incf	4,f
   261  080E  0782               	addwf	2,f
   262  080F                     __stringbase:
   263  080F  3400               	retlw	0
   264  0810                     __end_of__stringtab:
   265  0810                     __powers_:
   266  0810  3400               	retlw	0
   267  0811  3400               	retlw	0
   268  0812  3480               	retlw	128
   269  0813  343F               	retlw	63
   270  0814  3400               	retlw	0
   271  0815  3400               	retlw	0
   272  0816  3420               	retlw	32
   273  0817  3441               	retlw	65
   274  0818  3400               	retlw	0
   275  0819  3400               	retlw	0
   276  081A  34C8               	retlw	200
   277  081B  3442               	retlw	66
   278  081C  3400               	retlw	0
   279  081D  3400               	retlw	0
   280  081E  347A               	retlw	122
   281  081F  3444               	retlw	68
   282  0820  3400               	retlw	0
   283  0821  3440               	retlw	64
   284  0822  341C               	retlw	28
   285  0823  3446               	retlw	70
   286  0824  3400               	retlw	0
   287  0825  3450               	retlw	80
   288  0826  34C3               	retlw	195
   289  0827  3447               	retlw	71
   290  0828  3400               	retlw	0
   291  0829  3424               	retlw	36
   292  082A  3474               	retlw	116
   293  082B  3449               	retlw	73
   294  082C  3480               	retlw	128
   295  082D  3496               	retlw	150
   296  082E  3418               	retlw	24
   297  082F  344B               	retlw	75
   298  0830  3420               	retlw	32
   299  0831  34BC               	retlw	188
   300  0832  34BE               	retlw	190
   301  0833  344C               	retlw	76
   302  0834  3428               	retlw	40
   303  0835  346B               	retlw	107
   304  0836  346E               	retlw	110
   305  0837  344E               	retlw	78
   306  0838  34F9               	retlw	249
   307  0839  3402               	retlw	2
   308  083A  3415               	retlw	21
   309  083B  3450               	retlw	80
   310  083C  34EC               	retlw	236
   311  083D  3478               	retlw	120
   312  083E  34AD               	retlw	173
   313  083F  3460               	retlw	96
   314  0840  34CA               	retlw	202
   315  0841  34F2               	retlw	242
   316  0842  3449               	retlw	73
   317  0843  3471               	retlw	113
   318  0844                     __end_of__powers_:
   319  0844                     __npowers_:
   320  0844  3400               	retlw	0
   321  0845  3400               	retlw	0
   322  0846  3480               	retlw	128
   323  0847  343F               	retlw	63
   324  0848  34CD               	retlw	205
   325  0849  34CC               	retlw	204
   326  084A  34CC               	retlw	204
   327  084B  343D               	retlw	61
   328  084C  340A               	retlw	10
   329  084D  34D7               	retlw	215
   330  084E  3423               	retlw	35
   331  084F  343C               	retlw	60
   332  0850  346F               	retlw	111
   333  0851  3412               	retlw	18
   334  0852  3483               	retlw	131
   335  0853  343A               	retlw	58
   336  0854  3417               	retlw	23
   337  0855  34B7               	retlw	183
   338  0856  34D1               	retlw	209
   339  0857  3438               	retlw	56
   340  0858  34AC               	retlw	172
   341  0859  34C5               	retlw	197
   342  085A  3427               	retlw	39
   343  085B  3437               	retlw	55
   344  085C  34BD               	retlw	189
   345  085D  3437               	retlw	55
   346  085E  3486               	retlw	134
   347  085F  3435               	retlw	53
   348  0860  3495               	retlw	149
   349  0861  34BF               	retlw	191
   350  0862  34D6               	retlw	214
   351  0863  3433               	retlw	51
   352  0864  3477               	retlw	119
   353  0865  34CC               	retlw	204
   354  0866  342B               	retlw	43
   355  0867  3432               	retlw	50
   356  0868  345F               	retlw	95
   357  0869  3470               	retlw	112
   358  086A  3489               	retlw	137
   359  086B  3430               	retlw	48
   360  086C  34FF               	retlw	255
   361  086D  34E6               	retlw	230
   362  086E  34DB               	retlw	219
   363  086F  342E               	retlw	46
   364  0870  3408               	retlw	8
   365  0871  34E5               	retlw	229
   366  0872  343C               	retlw	60
   367  0873  341E               	retlw	30
   368  0874  3460               	retlw	96
   369  0875  3442               	retlw	66
   370  0876  34A2               	retlw	162
   371  0877  340D               	retlw	13
   372  0878                     __end_of__npowers_:
   373  0878                     _dpowers:
   374  0878  3401               	retlw	1
   375  0879  3400               	retlw	0
   376  087A  3400               	retlw	0
   377  087B  3400               	retlw	0
   378  087C  340A               	retlw	10
   379  087D  3400               	retlw	0
   380  087E  3400               	retlw	0
   381  087F  3400               	retlw	0
   382  0880  3464               	retlw	100
   383  0881  3400               	retlw	0
   384  0882  3400               	retlw	0
   385  0883  3400               	retlw	0
   386  0884  34E8               	retlw	232
   387  0885  3403               	retlw	3
   388  0886  3400               	retlw	0
   389  0887  3400               	retlw	0
   390  0888  3410               	retlw	16
   391  0889  3427               	retlw	39
   392  088A  3400               	retlw	0
   393  088B  3400               	retlw	0
   394  088C  34A0               	retlw	160
   395  088D  3486               	retlw	134
   396  088E  3401               	retlw	1
   397  088F  3400               	retlw	0
   398  0890  3440               	retlw	64
   399  0891  3442               	retlw	66
   400  0892  340F               	retlw	15
   401  0893  3400               	retlw	0
   402  0894  3480               	retlw	128
   403  0895  3496               	retlw	150
   404  0896  3498               	retlw	152
   405  0897  3400               	retlw	0
   406  0898  3400               	retlw	0
   407  0899  34E1               	retlw	225
   408  089A  34F5               	retlw	245
   409  089B  3405               	retlw	5
   410  089C  3400               	retlw	0
   411  089D  34CA               	retlw	202
   412  089E  349A               	retlw	154
   413  089F  343B               	retlw	59
   414  08A0                     __end_of_dpowers:
   415  0013                     _SSPBUF	set	19
   416  0014                     _SSPCON	set	20
   417  000B                     _INTCONbits	set	11
   418  001F                     _ADCON0bits	set	31
   419  001E                     _ADRESH	set	30
   420  000C                     _PIR1bits	set	12
   421  0006                     _PORTB	set	6
   422  0008                     _PORTDbits	set	8
   423  0063                     _SSPIF	set	99
   424  0094                     _SSPSTATbits	set	148
   425  0094                     _SSPSTAT	set	148
   426  0085                     _TRISAbits	set	133
   427  008C                     _PIE1bits	set	140
   428  009F                     _ADCON1bits	set	159
   429  0088                     _TRISD	set	136
   430  0086                     _TRISB	set	134
   431  0085                     _TRISA	set	133
   432  043B                     _TRISC3	set	1083
   433  043D                     _TRISC5	set	1085
   434  0188                     _ANSELbits	set	392
   435  0189                     _ANSELH	set	393
   436  0188                     _ANSEL	set	392
   437  08A0                     STR_2:
   438  08A0  3446               	retlw	70	;'F'
   439  08A1  3465               	retlw	101	;'e'
   440  08A2  3472               	retlw	114	;'r'
   441  08A3  346E               	retlw	110	;'n'
   442  08A4  3461               	retlw	97	;'a'
   443  08A5  346E               	retlw	110	;'n'
   444  08A6  3464               	retlw	100	;'d'
   445  08A7  346F               	retlw	111	;'o'
   446  08A8  3446               	retlw	70	;'F'
   447  08A9  3469               	retlw	105	;'i'
   448  08AA  3467               	retlw	103	;'g'
   449  08AB  3475               	retlw	117	;'u'
   450  08AC  3465               	retlw	101	;'e'
   451  08AD  3472               	retlw	114	;'r'
   452  08AE  346F               	retlw	111	;'o'
   453  08AF  3461               	retlw	97	;'a'
   454  08B0  3400               	retlw	0
   455  08B1                     STR_1:
   456  08B1  3444               	retlw	68	;'D'
   457  08B2  3449               	retlw	73	;'I'
   458  08B3  3447               	retlw	71	;'G'
   459  08B4  3449               	retlw	73	;'I'
   460  08B5  3454               	retlw	84	;'T'
   461  08B6  3441               	retlw	65	;'A'
   462  08B7  344C               	retlw	76	;'L'
   463  08B8  3420               	retlw	32	;' '
   464  08B9  3432               	retlw	50	;'2'
   465  08BA  3400               	retlw	0
   466  08BB                     STR_3:
   467  08BB  3456               	retlw	86	;'V'
   468  08BC  346F               	retlw	111	;'o'
   469  08BD  346C               	retlw	108	;'l'
   470  08BE  3474               	retlw	116	;'t'
   471  08BF  3431               	retlw	49	;'1'
   472  08C0  3400               	retlw	0
   473  08C1                     STR_4:
   474  08C1  3425               	retlw	37	;'%'
   475  08C2  342E               	retlw	46	;'.'
   476  08C3  3433               	retlw	51	;'3'
   477  08C4  3466               	retlw	102	;'f'
   478  08C5  3400               	retlw	0
   479                           
   480                           	psect	cinit
   481  000F                     start_initialization:	
   482                           ; #config settings
   483                           
   484  000F                     __initialization:
   485                           
   486                           ; Clear objects allocated to BANK1
   487  000F  1683               	bsf	3,5	;RP0=1, select bank1
   488  0010  1303               	bcf	3,6	;RP1=0, select bank1
   489  0011  01CE               	clrf	__pbssBANK1& (0+127)
   490  0012  01CF               	clrf	(__pbssBANK1+1)& (0+127)
   491  0013  01D0               	clrf	(__pbssBANK1+2)& (0+127)
   492  0014  01D1               	clrf	(__pbssBANK1+3)& (0+127)
   493  0015  01D2               	clrf	(__pbssBANK1+4)& (0+127)
   494  0016  01D3               	clrf	(__pbssBANK1+5)& (0+127)
   495  0017  01D4               	clrf	(__pbssBANK1+6)& (0+127)
   496  0018                     end_of_initialization:	
   497                           ;End of C runtime variable initialization code
   498                           
   499  0018                     __end_of__initialization:
   500  0018  0183               	clrf	3
   501  0019  160A  158A  2EC2   	ljmp	_main	;jump to C main() function
   502                           
   503                           	psect	bssBANK1
   504  00CE                     __pbssBANK1:
   505  00CE                     _vpot1:
   506  00CE                     	ds	4
   507  00D2                     _c:
   508  00D2                     	ds	2
   509  00D4                     _buffer:
   510  00D4                     	ds	1
   511                           
   512                           	psect	cstackBANK1
   513  00A0                     __pcstackBANK1:
   514  00A0                     ?___flsub:
   515  00A0                     ___flsub@a:	
   516                           ; 4 bytes @ 0x0
   517                           
   518                           
   519                           ; 4 bytes @ 0x0
   520  00A0                     	ds	4
   521  00A4                     ___flsub@b:
   522                           
   523                           ; 4 bytes @ 0x4
   524  00A4                     	ds	4
   525  00A8                     ?_sprintf:
   526  00A8                     sprintf@f:	
   527                           ; 2 bytes @ 0x8
   528                           
   529                           
   530                           ; 1 bytes @ 0x8
   531  00A8                     	ds	5
   532  00AD                     ??_sprintf:
   533                           
   534                           ; 1 bytes @ 0xD
   535  00AD                     	ds	5
   536  00B2                     _sprintf$1165:
   537                           
   538                           ; 4 bytes @ 0x12
   539  00B2                     	ds	4
   540  00B6                     sprintf@ap:
   541                           
   542                           ; 1 bytes @ 0x16
   543  00B6                     	ds	1
   544  00B7                     sprintf@flag:
   545                           
   546                           ; 2 bytes @ 0x17
   547  00B7                     	ds	2
   548  00B9                     sprintf@val:
   549                           
   550                           ; 4 bytes @ 0x19
   551  00B9                     	ds	4
   552  00BD                     sprintf@eexp:
   553                           
   554                           ; 2 bytes @ 0x1D
   555  00BD                     	ds	2
   556  00BF                     sprintf@tmpval:
   557                           
   558                           ; 4 bytes @ 0x1F
   559  00BF                     	ds	4
   560  00C3                     sprintf@sp:
   561                           
   562                           ; 1 bytes @ 0x23
   563  00C3                     	ds	1
   564  00C4                     sprintf@prec:
   565                           
   566                           ; 2 bytes @ 0x24
   567  00C4                     	ds	2
   568  00C6                     sprintf@fval:
   569                           
   570                           ; 4 bytes @ 0x26
   571  00C6                     	ds	4
   572  00CA                     sprintf@c:
   573                           
   574                           ; 1 bytes @ 0x2A
   575  00CA                     	ds	1
   576  00CB                     ??_main:
   577                           
   578                           ; 1 bytes @ 0x2B
   579  00CB                     	ds	3
   580                           
   581                           	psect	cstackCOMMON
   582  0070                     __pcstackCOMMON:
   583  0070                     ?_isdigit:
   584  0070                     ?_spiWrite:	
   585                           ; 1 bit 
   586                           
   587  0070                     ??_spiWrite:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_config:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_conversion:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_Lcd_Cmd:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_Lcd_Write_Char:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_Lcd_Init:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_ISR:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_main:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_Lcd_Clear:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     spiWrite@dat:	
   615                           ; 2 bytes @ 0x0
   616                           
   617                           
   618                           ; 1 bytes @ 0x0
   619  0070                     	ds	1
   620  0071                     ??_ISR:
   621                           
   622                           ; 1 bytes @ 0x1
   623  0071                     	ds	4
   624  0075                     ?_spiInit:
   625  0075                     ??_isdigit:	
   626                           ; 1 bytes @ 0x5
   627                           
   628  0075                     ??__tdiv_to_l_:	
   629                           ; 1 bytes @ 0x5
   630                           
   631  0075                     ??__div_to_l_:	
   632                           ; 1 bytes @ 0x5
   633                           
   634  0075                     ??_Lcd_Cmd:	
   635                           ; 1 bytes @ 0x5
   636                           
   637  0075                     ??_Lcd_Write_Char:	
   638                           ; 1 bytes @ 0x5
   639                           
   640  0075                     ??___lldiv:	
   641                           ; 1 bytes @ 0x5
   642                           
   643  0075                     ??___fleq:	
   644                           ; 1 bytes @ 0x5
   645                           
   646  0075                     ??___flge:	
   647                           ; 1 bytes @ 0x5
   648                           
   649  0075                     ??___llmod:	
   650                           ; 1 bytes @ 0x5
   651                           
   652  0075                     ?__Umul8_16:	
   653                           ; 1 bytes @ 0x5
   654                           
   655  0075                     ?___wmul:	
   656                           ; 2 bytes @ 0x5
   657                           
   658  0075                     ?___awmod:	
   659                           ; 2 bytes @ 0x5
   660                           
   661  0075                     ?___lwmod:	
   662                           ; 2 bytes @ 0x5
   663                           
   664  0075                     ?___flneg:	
   665                           ; 2 bytes @ 0x5
   666                           
   667  0075                     spiInit@sDataSample:	
   668                           ; 4 bytes @ 0x5
   669                           
   670  0075                     __Umul8_16@multiplicand:	
   671                           ; 1 bytes @ 0x5
   672                           
   673  0075                     _isdigit$973:	
   674                           ; 1 bytes @ 0x5
   675                           
   676  0075                     ___wmul@multiplier:	
   677                           ; 1 bytes @ 0x5
   678                           
   679  0075                     ___awmod@divisor:	
   680                           ; 2 bytes @ 0x5
   681                           
   682  0075                     ___lwmod@divisor:	
   683                           ; 2 bytes @ 0x5
   684                           
   685  0075                     ___flneg@f1:	
   686                           ; 2 bytes @ 0x5
   687                           
   688                           
   689                           ; 4 bytes @ 0x5
   690  0075                     	ds	1
   691  0076                     Lcd_Write_Char@a:
   692  0076                     spiInit@sClockIdle:	
   693                           ; 1 bytes @ 0x6
   694                           
   695  0076                     ___llmod@counter:	
   696                           ; 1 bytes @ 0x6
   697                           
   698  0076                     isdigit@c:	
   699                           ; 1 bytes @ 0x6
   700                           
   701                           
   702                           ; 1 bytes @ 0x6
   703  0076                     	ds	1
   704  0077                     ??__Umul8_16:
   705  0077                     ?_Lcd_Write_String:	
   706                           ; 1 bytes @ 0x7
   707                           
   708  0077                     Lcd_Cmd@a:	
   709                           ; 1 bytes @ 0x7
   710                           
   711  0077                     spiInit@sTransmitEdge:	
   712                           ; 1 bytes @ 0x7
   713                           
   714  0077                     Lcd_Write_String@a:	
   715                           ; 1 bytes @ 0x7
   716                           
   717  0077                     ___wmul@multiplicand:	
   718                           ; 2 bytes @ 0x7
   719                           
   720  0077                     ___awmod@dividend:	
   721                           ; 2 bytes @ 0x7
   722                           
   723  0077                     ___lwmod@dividend:	
   724                           ; 2 bytes @ 0x7
   725                           
   726                           
   727                           ; 2 bytes @ 0x7
   728  0077                     	ds	1
   729  0078                     ??_spiInit:
   730  0078                     ??_Lcd_Clear:	
   731                           ; 1 bytes @ 0x8
   732                           
   733  0078                     ?_Lcd_Set_Cursor:	
   734                           ; 1 bytes @ 0x8
   735                           
   736  0078                     Lcd_Set_Cursor@b:	
   737                           ; 1 bytes @ 0x8
   738                           
   739  0078                     spiInit@sType:	
   740                           ; 1 bytes @ 0x8
   741                           
   742                           
   743                           ; 1 bytes @ 0x8
   744  0078                     	ds	1
   745  0079                     ??_config:
   746  0079                     ??___wmul:	
   747                           ; 1 bytes @ 0x9
   748                           
   749  0079                     ??___flneg:	
   750                           ; 1 bytes @ 0x9
   751                           
   752  0079                     ??___flsub:	
   753                           ; 1 bytes @ 0x9
   754                           
   755                           
   756                           	psect	cstackBANK0
   757  0020                     __pcstackBANK0:	
   758                           ; 1 bytes @ 0x9
   759                           
   760  0020                     ?___fleq:
   761  0020                     ?___flge:	
   762                           ; 1 bit 
   763                           
   764  0020                     ??_Lcd_Set_Cursor:	
   765                           ; 1 bit 
   766                           
   767  0020                     ??_Lcd_Write_String:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0020                     ??_Lcd_Init:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0020                     ??___awmod:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0020                     ??___lwmod:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0020                     ?__tdiv_to_l_:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0020                     ?__div_to_l_:	
   783                           ; 4 bytes @ 0x0
   784                           
   785  0020                     ?___lldiv:	
   786                           ; 4 bytes @ 0x0
   787                           
   788  0020                     ?___llmod:	
   789                           ; 4 bytes @ 0x0
   790                           
   791  0020                     ___wmul@product:	
   792                           ; 4 bytes @ 0x0
   793                           
   794  0020                     __Umul8_16@product:	
   795                           ; 2 bytes @ 0x0
   796                           
   797  0020                     ___lldiv@divisor:	
   798                           ; 2 bytes @ 0x0
   799                           
   800  0020                     __div_to_l_@f1:	
   801                           ; 4 bytes @ 0x0
   802                           
   803  0020                     ___fleq@ff1:	
   804                           ; 4 bytes @ 0x0
   805                           
   806  0020                     ___flge@ff1:	
   807                           ; 4 bytes @ 0x0
   808                           
   809  0020                     __tdiv_to_l_@f1:	
   810                           ; 4 bytes @ 0x0
   811                           
   812  0020                     ___llmod@divisor:	
   813                           ; 4 bytes @ 0x0
   814                           
   815                           
   816                           ; 4 bytes @ 0x0
   817  0020                     	ds	1
   818  0021                     Lcd_Set_Cursor@a:
   819  0021                     ___awmod@counter:	
   820                           ; 1 bytes @ 0x1
   821                           
   822  0021                     ___lwmod@counter:	
   823                           ; 1 bytes @ 0x1
   824                           
   825                           
   826                           ; 1 bytes @ 0x1
   827  0021                     	ds	1
   828  0022                     ?___lwdiv:
   829  0022                     Lcd_Set_Cursor@temp:	
   830                           ; 2 bytes @ 0x2
   831                           
   832  0022                     ___awmod@sign:	
   833                           ; 1 bytes @ 0x2
   834                           
   835  0022                     ___lwdiv@divisor:	
   836                           ; 1 bytes @ 0x2
   837                           
   838  0022                     __Umul8_16@word_mpld:	
   839                           ; 2 bytes @ 0x2
   840                           
   841                           
   842                           ; 2 bytes @ 0x2
   843  0022                     	ds	1
   844  0023                     ?___awdiv:
   845  0023                     Lcd_Write_String@i:	
   846                           ; 2 bytes @ 0x3
   847                           
   848  0023                     ___awdiv@divisor:	
   849                           ; 2 bytes @ 0x3
   850                           
   851                           
   852                           ; 2 bytes @ 0x3
   853  0023                     	ds	1
   854  0024                     __Umul8_16@multiplier:
   855  0024                     ___lwdiv@dividend:	
   856                           ; 1 bytes @ 0x4
   857                           
   858  0024                     ___lldiv@dividend:	
   859                           ; 2 bytes @ 0x4
   860                           
   861  0024                     __div_to_l_@f2:	
   862                           ; 4 bytes @ 0x4
   863                           
   864  0024                     ___fleq@ff2:	
   865                           ; 4 bytes @ 0x4
   866                           
   867  0024                     ___flge@ff2:	
   868                           ; 4 bytes @ 0x4
   869                           
   870  0024                     __tdiv_to_l_@f2:	
   871                           ; 4 bytes @ 0x4
   872                           
   873  0024                     ___llmod@dividend:	
   874                           ; 4 bytes @ 0x4
   875                           
   876                           
   877                           ; 4 bytes @ 0x4
   878  0024                     	ds	1
   879  0025                     ___awdiv@dividend:
   880                           
   881                           ; 2 bytes @ 0x5
   882  0025                     	ds	1
   883  0026                     ??___lwdiv:
   884                           
   885                           ; 1 bytes @ 0x6
   886  0026                     	ds	1
   887  0027                     ??___awdiv:
   888  0027                     ___lwdiv@quotient:	
   889                           ; 1 bytes @ 0x7
   890                           
   891                           
   892                           ; 2 bytes @ 0x7
   893  0027                     	ds	1
   894  0028                     ___awdiv@counter:
   895  0028                     ___lldiv@quotient:	
   896                           ; 1 bytes @ 0x8
   897                           
   898  0028                     __div_to_l_@quot:	
   899                           ; 4 bytes @ 0x8
   900                           
   901  0028                     __tdiv_to_l_@quot:	
   902                           ; 4 bytes @ 0x8
   903                           
   904                           
   905                           ; 4 bytes @ 0x8
   906  0028                     	ds	1
   907  0029                     ___awdiv@sign:
   908  0029                     ___lwdiv@counter:	
   909                           ; 1 bytes @ 0x9
   910                           
   911                           
   912                           ; 1 bytes @ 0x9
   913  0029                     	ds	1
   914  002A                     ___awdiv@quotient:
   915                           
   916                           ; 2 bytes @ 0xA
   917  002A                     	ds	2
   918  002C                     ?___flmul:
   919  002C                     ?___xxtofl:	
   920                           ; 4 bytes @ 0xC
   921                           
   922  002C                     ___lldiv@counter:	
   923                           ; 4 bytes @ 0xC
   924                           
   925  002C                     __div_to_l_@cntr:	
   926                           ; 1 bytes @ 0xC
   927                           
   928  002C                     __tdiv_to_l_@cntr:	
   929                           ; 1 bytes @ 0xC
   930                           
   931  002C                     ___flmul@b:	
   932                           ; 1 bytes @ 0xC
   933                           
   934  002C                     ___xxtofl@val:	
   935                           ; 4 bytes @ 0xC
   936                           
   937                           
   938                           ; 4 bytes @ 0xC
   939  002C                     	ds	1
   940  002D                     __div_to_l_@exp1:
   941  002D                     __tdiv_to_l_@exp1:	
   942                           ; 1 bytes @ 0xD
   943                           
   944                           
   945                           ; 1 bytes @ 0xD
   946  002D                     	ds	3
   947  0030                     ??___xxtofl:
   948  0030                     ___flmul@a:	
   949                           ; 1 bytes @ 0x10
   950                           
   951                           
   952                           ; 4 bytes @ 0x10
   953  0030                     	ds	4
   954  0034                     ??___flmul:
   955  0034                     ___xxtofl@sign:	
   956                           ; 1 bytes @ 0x14
   957                           
   958                           
   959                           ; 1 bytes @ 0x14
   960  0034                     	ds	1
   961  0035                     ___xxtofl@exp:
   962                           
   963                           ; 1 bytes @ 0x15
   964  0035                     	ds	1
   965  0036                     ___xxtofl@arg:
   966                           
   967                           ; 4 bytes @ 0x16
   968  0036                     	ds	3
   969  0039                     ___flmul@sign:
   970                           
   971                           ; 1 bytes @ 0x19
   972  0039                     	ds	1
   973  003A                     ___flmul@grs:
   974                           
   975                           ; 4 bytes @ 0x1A
   976  003A                     	ds	4
   977  003E                     ___flmul@aexp:
   978                           
   979                           ; 1 bytes @ 0x1E
   980  003E                     	ds	1
   981  003F                     ___flmul@bexp:
   982                           
   983                           ; 1 bytes @ 0x1F
   984  003F                     	ds	1
   985  0040                     ___flmul@prod:
   986                           
   987                           ; 4 bytes @ 0x20
   988  0040                     	ds	4
   989  0044                     ___flmul@temp:
   990                           
   991                           ; 2 bytes @ 0x24
   992  0044                     	ds	2
   993  0046                     ?_fround:
   994  0046                     ?_scale:	
   995                           ; 4 bytes @ 0x26
   996                           
   997                           
   998                           ; 4 bytes @ 0x26
   999  0046                     	ds	4
  1000  004A                     ??_fround:
  1001  004A                     ??_scale:	
  1002                           ; 1 bytes @ 0x2A
  1003                           
  1004                           
  1005                           ; 1 bytes @ 0x2A
  1006  004A                     	ds	7
  1007  0051                     _fround$1163:
  1008                           
  1009                           ; 4 bytes @ 0x31
  1010  0051                     	ds	3
  1011  0054                     _scale$1164:
  1012                           
  1013                           ; 4 bytes @ 0x34
  1014  0054                     	ds	1
  1015  0055                     _fround$1162:
  1016                           
  1017                           ; 4 bytes @ 0x35
  1018  0055                     	ds	3
  1019  0058                     scale@scl:
  1020                           
  1021                           ; 1 bytes @ 0x38
  1022  0058                     	ds	1
  1023  0059                     ?___fltol:
  1024  0059                     fround@prec:	
  1025                           ; 4 bytes @ 0x39
  1026                           
  1027  0059                     ___fltol@f1:	
  1028                           ; 1 bytes @ 0x39
  1029                           
  1030                           
  1031                           ; 4 bytes @ 0x39
  1032  0059                     	ds	1
  1033  005A                     ?___fladd:
  1034  005A                     ___fladd@b:	
  1035                           ; 4 bytes @ 0x3A
  1036                           
  1037                           
  1038                           ; 4 bytes @ 0x3A
  1039  005A                     	ds	3
  1040  005D                     ??___fltol:
  1041                           
  1042                           ; 1 bytes @ 0x3D
  1043  005D                     	ds	1
  1044  005E                     ___fladd@a:
  1045                           
  1046                           ; 4 bytes @ 0x3E
  1047  005E                     	ds	4
  1048  0062                     ??___fladd:
  1049  0062                     ___fltol@sign1:	
  1050                           ; 1 bytes @ 0x42
  1051                           
  1052                           
  1053                           ; 1 bytes @ 0x42
  1054  0062                     	ds	1
  1055  0063                     ___fltol@exp1:
  1056                           
  1057                           ; 1 bytes @ 0x43
  1058  0063                     	ds	7
  1059  006A                     ___fladd@signs:
  1060                           
  1061                           ; 1 bytes @ 0x4A
  1062  006A                     	ds	1
  1063  006B                     ___fladd@aexp:
  1064                           
  1065                           ; 1 bytes @ 0x4B
  1066  006B                     	ds	1
  1067  006C                     ___fladd@bexp:
  1068                           
  1069                           ; 1 bytes @ 0x4C
  1070  006C                     	ds	1
  1071  006D                     ___fladd@grs:
  1072                           
  1073                           ; 1 bytes @ 0x4D
  1074  006D                     	ds	1
  1075  006E                     ??_conversion:
  1076                           
  1077                           ; 1 bytes @ 0x4E
  1078  006E                     	ds	1
  1079  006F                     conversion@puertoANL:
  1080                           
  1081                           ; 1 bytes @ 0x4F
  1082  006F                     	ds	1
  1083                           
  1084                           	psect	maintext
  1085  1EC2                     __pmaintext:	
  1086 ;;
  1087 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1088 ;;
  1089 ;; *************** function _main *****************
  1090 ;; Defined at:
  1091 ;;		line 51 in file "potenciometro.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : B00/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1105 ;;      Params:         0       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0
  1107 ;;      Temps:          0       0       3       0       0
  1108 ;;      Totals:         0       0       3       0       0
  1109 ;;Total ram usage:        3 bytes
  1110 ;; Hardware stack levels required when called:    7
  1111 ;; This function calls:
  1112 ;;		_Lcd_Clear
  1113 ;;		_Lcd_Init
  1114 ;;		_Lcd_Set_Cursor
  1115 ;;		_Lcd_Write_String
  1116 ;;		_config
  1117 ;;		_conversion
  1118 ;; This function is called by:
  1119 ;;		Startup code after reset
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           
  1124                           ;psect for function _main
  1125  1EC2                     _main:
  1126  1EC2                     l3270:	
  1127                           ;incstack = 0
  1128                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1129                           
  1130                           
  1131                           ;potenciometro.c: 52:     config();
  1132  1EC2  160A  158A  244F  160A  158A  	fcall	_config
  1133                           
  1134                           ;potenciometro.c: 53:     Lcd_Init();
  1135  1EC7  160A  158A  24CC  160A  158A  	fcall	_Lcd_Init
  1136                           
  1137                           ;potenciometro.c: 54:     Lcd_Set_Cursor(1,1);
  1138  1ECC  01F8               	clrf	Lcd_Set_Cursor@b
  1139  1ECD  0AF8               	incf	Lcd_Set_Cursor@b,f
  1140  1ECE  3001               	movlw	1
  1141  1ECF  160A  158A  2402  160A  158A  	fcall	_Lcd_Set_Cursor
  1142  1ED4                     l3272:
  1143                           
  1144                           ;potenciometro.c: 55:     Lcd_Write_String("DIGITAL 2");
  1145  1ED4  30A2               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1146  1ED5  00F7               	movwf	Lcd_Write_String@a
  1147  1ED6  3080               	movlw	128
  1148  1ED7  00F8               	movwf	Lcd_Write_String@a+1
  1149  1ED8  160A  158A  2540  160A  158A  	fcall	_Lcd_Write_String
  1150  1EDD                     l3274:
  1151                           
  1152                           ;potenciometro.c: 56:     Lcd_Set_Cursor(2,1);
  1153  1EDD  01F8               	clrf	Lcd_Set_Cursor@b
  1154  1EDE  0AF8               	incf	Lcd_Set_Cursor@b,f
  1155  1EDF  3002               	movlw	2
  1156  1EE0  160A  158A  2402  160A  158A  	fcall	_Lcd_Set_Cursor
  1157                           
  1158                           ;potenciometro.c: 57:     Lcd_Write_String("FernandoFigueroa");
  1159  1EE5  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1160  1EE6  00F7               	movwf	Lcd_Write_String@a
  1161  1EE7  3080               	movlw	128
  1162  1EE8  00F8               	movwf	Lcd_Write_String@a+1
  1163  1EE9  160A  158A  2540  160A  158A  	fcall	_Lcd_Write_String
  1164  1EEE                     l3276:
  1165                           
  1166                           ;potenciometro.c: 58:     _delay((unsigned long)((100)*(9000000/4000.0)));
  1167  1EEE  3002               	movlw	2
  1168  1EEF  1683               	bsf	3,5	;RP0=1, select bank1
  1169  1EF0  1303               	bcf	3,6	;RP1=0, select bank1
  1170  1EF1  00CD               	movwf	(??_main^(0+128)+2)
  1171  1EF2  3025               	movlw	37
  1172  1EF3  00CC               	movwf	(??_main^(0+128)+1)
  1173  1EF4  3031               	movlw	49
  1174  1EF5  00CB               	movwf	??_main^(0+128)
  1175  1EF6                     u5387:
  1176  1EF6  0BCB               	decfsz	??_main^(0+128),f
  1177  1EF7  2EF6               	goto	u5387
  1178  1EF8  0BCC               	decfsz	(??_main^(0+128)+1),f
  1179  1EF9  2EF6               	goto	u5387
  1180  1EFA  0BCD               	decfsz	(??_main^(0+128)+2),f
  1181  1EFB  2EF6               	goto	u5387
  1182  1EFC                     l3278:
  1183                           
  1184                           ;potenciometro.c: 59:     Lcd_Clear();
  1185  1EFC  120A  158A  20C6  160A  158A  	fcall	_Lcd_Clear
  1186  1F01                     l3280:
  1187                           
  1188                           ;potenciometro.c: 61:      Lcd_Set_Cursor(1,1);
  1189  1F01  01F8               	clrf	Lcd_Set_Cursor@b
  1190  1F02  0AF8               	incf	Lcd_Set_Cursor@b,f
  1191  1F03  3001               	movlw	1
  1192  1F04  160A  158A  2402  160A  158A  	fcall	_Lcd_Set_Cursor
  1193  1F09                     l3282:
  1194                           
  1195                           ;potenciometro.c: 62:      Lcd_Write_String("Volt1");
  1196  1F09  30AC               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1197  1F0A  00F7               	movwf	Lcd_Write_String@a
  1198  1F0B  3080               	movlw	128
  1199  1F0C  00F8               	movwf	Lcd_Write_String@a+1
  1200  1F0D  160A  158A  2540  160A  158A  	fcall	_Lcd_Write_String
  1201  1F12                     l3284:
  1202                           
  1203                           ;potenciometro.c: 67:         conversion(0);
  1204  1F12  3000               	movlw	0
  1205  1F13  160A  118A  2009  160A  158A  	fcall	_conversion
  1206  1F18  2F12               	goto	l3284
  1207  1F19  120A  118A  280C   	ljmp	start
  1208  1F1C                     __end_of_main:
  1209                           
  1210                           	psect	text1
  1211  1009                     __ptext1:	
  1212 ;; *************** function _conversion *****************
  1213 ;; Defined at:
  1214 ;;		line 73 in file "potenciometro.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  puertoANL       1    wreg     unsigned char 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  puertoANL       1   79[BANK0 ] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1228 ;;      Params:         0       0       0       0       0
  1229 ;;      Locals:         0       1       0       0       0
  1230 ;;      Temps:          0       1       0       0       0
  1231 ;;      Totals:         0       2       0       0       0
  1232 ;;Total ram usage:        2 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    6
  1235 ;; This function calls:
  1236 ;;		_Lcd_Set_Cursor
  1237 ;;		_Lcd_Write_String
  1238 ;;		___awdiv
  1239 ;;		___wmul
  1240 ;;		___xxtofl
  1241 ;;		_sprintf
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           
  1248                           ;psect for function _conversion
  1249  1009                     _conversion:
  1250                           
  1251                           ;incstack = 0
  1252                           ; Regs used in _conversion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1253                           ;conversion@puertoANL stored from wreg
  1254  1009  1283               	bcf	3,5	;RP0=0, select bank0
  1255  100A  1303               	bcf	3,6	;RP1=0, select bank0
  1256  100B  00EF               	movwf	conversion@puertoANL
  1257  100C                     l3244:
  1258                           
  1259                           ;potenciometro.c: 75:     ADCON0bits.CHS = puertoANL;
  1260  100C  086F               	movf	conversion@puertoANL,w
  1261  100D  00EE               	movwf	??_conversion
  1262  100E  0DEE               	rlf	??_conversion,f
  1263  100F  0DEE               	rlf	??_conversion,f
  1264  1010  081F               	movf	31,w	;volatile
  1265  1011  066E               	xorwf	??_conversion,w
  1266  1012  39C3               	andlw	-61
  1267  1013  066E               	xorwf	??_conversion,w
  1268  1014  009F               	movwf	31	;volatile
  1269  1015                     l3246:
  1270                           
  1271                           ;potenciometro.c: 76:     if (ADCON0bits.GO_DONE==0 && puertoANL ==0){
  1272  1015  189F               	btfsc	31,1	;volatile
  1273  1016  2818               	goto	u5341
  1274  1017  2819               	goto	u5340
  1275  1018                     u5341:
  1276  1018  288F               	goto	l105
  1277  1019                     u5340:
  1278  1019                     l3248:
  1279  1019  086F               	movf	conversion@puertoANL,w
  1280  101A  1D03               	btfss	3,2
  1281  101B  281D               	goto	u5351
  1282  101C  281E               	goto	u5350
  1283  101D                     u5351:
  1284  101D  288F               	goto	l105
  1285  101E                     u5350:
  1286  101E                     l3250:
  1287                           
  1288                           ;potenciometro.c: 78:         vpot1 = (5*c)/255;
  1289  101E  3005               	movlw	5
  1290  101F  00F7               	movwf	___wmul@multiplicand
  1291  1020  3000               	movlw	0
  1292  1021  00F8               	movwf	___wmul@multiplicand+1
  1293  1022  1683               	bsf	3,5	;RP0=1, select bank1
  1294  1023  1303               	bcf	3,6	;RP1=0, select bank1
  1295  1024  0853               	movf	(_c+1)^(0+128),w
  1296  1025  00F6               	movwf	___wmul@multiplier+1
  1297  1026  0852               	movf	_c^(0+128),w
  1298  1027  00F5               	movwf	___wmul@multiplier
  1299  1028  160A  158A  24A1  160A  118A  	fcall	___wmul
  1300  102D  0876               	movf	?___wmul+1,w
  1301  102E  1283               	bcf	3,5	;RP0=0, select bank0
  1302  102F  1303               	bcf	3,6	;RP1=0, select bank0
  1303  1030  00A6               	movwf	___awdiv@dividend+1
  1304  1031  0875               	movf	?___wmul,w
  1305  1032  00A5               	movwf	___awdiv@dividend
  1306  1033  30FF               	movlw	255
  1307  1034  00A3               	movwf	___awdiv@divisor
  1308  1035  3000               	movlw	0
  1309  1036  00A4               	movwf	___awdiv@divisor+1
  1310  1037  120A  158A  20D3  160A  118A  	fcall	___awdiv
  1311  103C  1283               	bcf	3,5	;RP0=0, select bank0
  1312  103D  1303               	bcf	3,6	;RP1=0, select bank0
  1313  103E  0823               	movf	?___awdiv,w
  1314  103F  00AC               	movwf	___xxtofl@val
  1315  1040  0824               	movf	?___awdiv+1,w
  1316  1041  00AD               	movwf	___xxtofl@val+1
  1317  1042  3000               	movlw	0
  1318  1043  1BAD               	btfsc	___xxtofl@val+1,7
  1319  1044  30FF               	movlw	255
  1320  1045  00AE               	movwf	___xxtofl@val+2
  1321  1046  00AF               	movwf	___xxtofl@val+3
  1322  1047  3001               	movlw	1
  1323  1048  160A  118A  2134  160A  118A  	fcall	___xxtofl
  1324  104D  1283               	bcf	3,5	;RP0=0, select bank0
  1325  104E  1303               	bcf	3,6	;RP1=0, select bank0
  1326  104F  082F               	movf	?___xxtofl+3,w
  1327  1050  1683               	bsf	3,5	;RP0=1, select bank1
  1328  1051  1303               	bcf	3,6	;RP1=0, select bank1
  1329  1052  00D1               	movwf	(_vpot1+3)^(0+128)
  1330  1053  1283               	bcf	3,5	;RP0=0, select bank0
  1331  1054  1303               	bcf	3,6	;RP1=0, select bank0
  1332  1055  082E               	movf	?___xxtofl+2,w
  1333  1056  1683               	bsf	3,5	;RP0=1, select bank1
  1334  1057  1303               	bcf	3,6	;RP1=0, select bank1
  1335  1058  00D0               	movwf	(_vpot1+2)^(0+128)
  1336  1059  1283               	bcf	3,5	;RP0=0, select bank0
  1337  105A  1303               	bcf	3,6	;RP1=0, select bank0
  1338  105B  082D               	movf	?___xxtofl+1,w
  1339  105C  1683               	bsf	3,5	;RP0=1, select bank1
  1340  105D  1303               	bcf	3,6	;RP1=0, select bank1
  1341  105E  00CF               	movwf	(_vpot1+1)^(0+128)
  1342  105F  1283               	bcf	3,5	;RP0=0, select bank0
  1343  1060  1303               	bcf	3,6	;RP1=0, select bank0
  1344  1061  082C               	movf	?___xxtofl,w
  1345  1062  1683               	bsf	3,5	;RP0=1, select bank1
  1346  1063  1303               	bcf	3,6	;RP1=0, select bank1
  1347  1064  00CE               	movwf	_vpot1^(0+128)
  1348  1065                     l3252:
  1349                           
  1350                           ;potenciometro.c: 79:         sprintf(buffer, "%.3f", vpot1);
  1351  1065  30B2               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1352  1066  1283               	bcf	3,5	;RP0=0, select bank0
  1353  1067  1303               	bcf	3,6	;RP1=0, select bank0
  1354  1068  00EE               	movwf	??_conversion
  1355  1069  086E               	movf	??_conversion,w
  1356  106A  1683               	bsf	3,5	;RP0=1, select bank1
  1357  106B  1303               	bcf	3,6	;RP1=0, select bank1
  1358  106C  00A8               	movwf	sprintf@f^(0+128)
  1359  106D  0851               	movf	(_vpot1+3)^(0+128),w
  1360  106E  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1361  106F  0850               	movf	(_vpot1+2)^(0+128),w
  1362  1070  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1363  1071  084F               	movf	(_vpot1+1)^(0+128),w
  1364  1072  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1365  1073  084E               	movf	_vpot1^(0+128),w
  1366  1074  00A9               	movwf	(?_sprintf^(0+128)+1)
  1367  1075  30D4               	movlw	(low (_buffer| 0))& (0+255)
  1368  1076  120A  118A  201C  160A  118A  	fcall	_sprintf
  1369  107B                     l3254:
  1370                           
  1371                           ;potenciometro.c: 80:         Lcd_Set_Cursor(2,1);
  1372  107B  01F8               	clrf	Lcd_Set_Cursor@b
  1373  107C  0AF8               	incf	Lcd_Set_Cursor@b,f
  1374  107D  3002               	movlw	2
  1375  107E  160A  158A  2402  160A  118A  	fcall	_Lcd_Set_Cursor
  1376                           
  1377                           ;potenciometro.c: 81:         Lcd_Write_String(buffer);
  1378  1083  30D4               	movlw	(low (_buffer| 0))& (0+255)
  1379  1084  00F7               	movwf	Lcd_Write_String@a
  1380  1085  3000               	movlw	0
  1381  1086  00F8               	movwf	Lcd_Write_String@a+1
  1382  1087  160A  158A  2540  160A  118A  	fcall	_Lcd_Write_String
  1383  108C                     l3256:
  1384                           
  1385                           ;potenciometro.c: 82:         ADCON0bits.GO_DONE=1;
  1386  108C  1283               	bcf	3,5	;RP0=0, select bank0
  1387  108D  1303               	bcf	3,6	;RP1=0, select bank0
  1388  108E  149F               	bsf	31,1	;volatile
  1389  108F                     l105:
  1390  108F  0008               	return
  1391  1090                     __end_of_conversion:
  1392                           
  1393                           	psect	text2
  1394  001C                     __ptext2:	
  1395 ;; *************** function _sprintf *****************
  1396 ;; Defined at:
  1397 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  sp              1    wreg     PTR unsigned char 
  1400 ;;		 -> buffer(1), 
  1401 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1402 ;;		 -> STR_4(5), 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  sp              1   35[BANK1 ] PTR unsigned char 
  1405 ;;		 -> buffer(1), 
  1406 ;;  fval            4   38[BANK1 ] PTR unsigned char 
  1407 ;;  tmpval          4   31[BANK1 ] struct .
  1408 ;;  val             4   25[BANK1 ] unsigned long 
  1409 ;;  prec            2   36[BANK1 ] int 
  1410 ;;  eexp            2   29[BANK1 ] int 
  1411 ;;  flag            2   23[BANK1 ] unsigned short 
  1412 ;;  cp              2    0        PTR const unsigned char 
  1413 ;;  len             2    0        unsigned int 
  1414 ;;  width           2    0        int 
  1415 ;;  c               1   42[BANK1 ] unsigned char 
  1416 ;;  ap              1   22[BANK1 ] PTR void [1]
  1417 ;;		 -> ?_sprintf(2), 
  1418 ;;  d               1    0        unsigned char 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  2    8[BANK1 ] int 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         0       0       5       0       0
  1429 ;;      Locals:         0       0      25       0       0
  1430 ;;      Temps:          0       0       5       0       0
  1431 ;;      Totals:         0       0      35       0       0
  1432 ;;Total ram usage:       35 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    5
  1435 ;; This function calls:
  1436 ;;		___awdiv
  1437 ;;		___fladd
  1438 ;;		___fleq
  1439 ;;		___flge
  1440 ;;		___flmul
  1441 ;;		___flneg
  1442 ;;		___flsub
  1443 ;;		___fltol
  1444 ;;		___lldiv
  1445 ;;		___llmod
  1446 ;;		___wmul
  1447 ;;		___xxtofl
  1448 ;;		__div_to_l_
  1449 ;;		__tdiv_to_l_
  1450 ;;		_fround
  1451 ;;		_isdigit
  1452 ;;		_scale
  1453 ;; This function is called by:
  1454 ;;		_conversion
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           
  1459                           ;psect for function _sprintf
  1460  001C                     _sprintf:
  1461                           
  1462                           ;incstack = 0
  1463                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1464                           ;sprintf@sp stored from wreg
  1465  001C  1683               	bsf	3,5	;RP0=1, select bank1
  1466  001D  1303               	bcf	3,6	;RP1=0, select bank1
  1467  001E  00C3               	movwf	sprintf@sp^(0+128)
  1468  001F                     l2976:
  1469                           
  1470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1471  001F  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1472  0020  00AD               	movwf	??_sprintf^(0+128)
  1473  0021  082D               	movf	??_sprintf^(0+128),w
  1474  0022  00B6               	movwf	sprintf@ap^(0+128)
  1475                           
  1476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1477  0023  2F8B               	goto	l3170
  1478  0024                     l2978:
  1479                           
  1480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1481  0024  3025               	movlw	37
  1482  0025  064A               	xorwf	sprintf@c^(0+128),w
  1483  0026  1903               	btfsc	3,2
  1484  0027  2829               	goto	u4981
  1485  0028  282A               	goto	u4980
  1486  0029                     u4981:
  1487  0029  2836               	goto	l2984
  1488  002A                     u4980:
  1489  002A                     l2980:
  1490                           
  1491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1492  002A  084A               	movf	sprintf@c^(0+128),w
  1493  002B  00AD               	movwf	??_sprintf^(0+128)
  1494  002C  0843               	movf	sprintf@sp^(0+128),w
  1495  002D  0084               	movwf	4
  1496  002E  082D               	movf	??_sprintf^(0+128),w
  1497  002F  1383               	bcf	3,7	;select IRP bank0
  1498  0030  0080               	movwf	0
  1499  0031                     l2982:
  1500  0031  3001               	movlw	1
  1501  0032  00AD               	movwf	??_sprintf^(0+128)
  1502  0033  082D               	movf	??_sprintf^(0+128),w
  1503  0034  07C3               	addwf	sprintf@sp^(0+128),f
  1504                           
  1505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1506  0035  2F8B               	goto	l3170
  1507  0036                     l2984:
  1508                           
  1509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1510  0036  01B7               	clrf	sprintf@flag^(0+128)
  1511  0037  01B8               	clrf	(sprintf@flag+1)^(0+128)
  1512  0038                     l2986:
  1513                           
  1514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1515  0038  0828               	movf	sprintf@f^(0+128),w
  1516  0039  0084               	movwf	4
  1517  003A  120A  158A  200A  120A  118A  	fcall	stringdir
  1518  003F  3A2E               	xorlw	46
  1519  0040  1D03               	skipz
  1520  0041  2843               	goto	u4991
  1521  0042  2844               	goto	u4990
  1522  0043                     u4991:
  1523  0043  2889               	goto	l3002
  1524  0044                     u4990:
  1525  0044                     l2988:
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1528  0044  1738               	bsf	(sprintf@flag^(0+128)+1),6
  1529  0045                     l2990:
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1532  0045  3001               	movlw	1
  1533  0046  00AD               	movwf	??_sprintf^(0+128)
  1534  0047  082D               	movf	??_sprintf^(0+128),w
  1535  0048  07A8               	addwf	sprintf@f^(0+128),f
  1536  0049                     l2992:
  1537                           
  1538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1539  0049  01C4               	clrf	sprintf@prec^(0+128)
  1540  004A  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1543  004B  2878               	goto	l3000
  1544  004C                     l2994:
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1547  004C  300A               	movlw	10
  1548  004D  00F5               	movwf	___wmul@multiplier
  1549  004E  3000               	movlw	0
  1550  004F  00F6               	movwf	___wmul@multiplier+1
  1551  0050  1683               	bsf	3,5	;RP0=1, select bank1
  1552  0051  1303               	bcf	3,6	;RP1=0, select bank1
  1553  0052  0845               	movf	(sprintf@prec+1)^(0+128),w
  1554  0053  00F8               	movwf	___wmul@multiplicand+1
  1555  0054  0844               	movf	sprintf@prec^(0+128),w
  1556  0055  00F7               	movwf	___wmul@multiplicand
  1557  0056  160A  158A  24A1  120A  118A  	fcall	___wmul
  1558  005B  0876               	movf	?___wmul+1,w
  1559  005C  1683               	bsf	3,5	;RP0=1, select bank1
  1560  005D  1303               	bcf	3,6	;RP1=0, select bank1
  1561  005E  00C5               	movwf	(sprintf@prec+1)^(0+128)
  1562  005F  0875               	movf	?___wmul,w
  1563  0060  00C4               	movwf	sprintf@prec^(0+128)
  1564  0061                     l2996:
  1565                           
  1566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1567  0061  0828               	movf	sprintf@f^(0+128),w
  1568  0062  0084               	movwf	4
  1569  0063  120A  158A  200A  120A  118A  	fcall	stringdir
  1570  0068  3ED0               	addlw	208
  1571  0069  00AD               	movwf	??_sprintf^(0+128)
  1572  006A  30FF               	movlw	255
  1573  006B  1803               	skipnc
  1574  006C  3000               	movlw	0
  1575  006D  00AE               	movwf	(??_sprintf^(0+128)+1)
  1576  006E  082D               	movf	??_sprintf^(0+128),w
  1577  006F  07C4               	addwf	sprintf@prec^(0+128),f
  1578  0070  1803               	skipnc
  1579  0071  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  1580  0072  082E               	movf	(??_sprintf+1)^(0+128),w
  1581  0073  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  1582  0074                     l2998:
  1583  0074  3001               	movlw	1
  1584  0075  00AD               	movwf	??_sprintf^(0+128)
  1585  0076  082D               	movf	??_sprintf^(0+128),w
  1586  0077  07A8               	addwf	sprintf@f^(0+128),f
  1587  0078                     l3000:
  1588                           
  1589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1590  0078  0828               	movf	sprintf@f^(0+128),w
  1591  0079  0084               	movwf	4
  1592  007A  120A  158A  200A  120A  118A  	fcall	stringdir
  1593  007F  160A  158A  23C7  120A  118A  	fcall	_isdigit
  1594  0084  1803               	btfsc	3,0
  1595  0085  2887               	goto	u5001
  1596  0086  2888               	goto	u5000
  1597  0087                     u5001:
  1598  0087  284C               	goto	l2994
  1599  0088                     u5000:
  1600  0088  288F               	goto	l3008
  1601  0089                     l3002:
  1602                           
  1603                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1604  0089  01C4               	clrf	sprintf@prec^(0+128)
  1605  008A  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1606  008B                     l3004:
  1607                           
  1608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1609  008B  1638               	bsf	(sprintf@flag^(0+128)+1),4
  1610  008C  288F               	goto	l3008
  1611  008D                     l258:	
  1612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1613                           
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1616  008D  1538               	bsf	(sprintf@flag^(0+128)+1),2
  1617                           
  1618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1619  008E  28AB               	goto	l3010
  1620  008F                     l3008:
  1621  008F  3001               	movlw	1
  1622  0090  1683               	bsf	3,5	;RP0=1, select bank1
  1623  0091  1303               	bcf	3,6	;RP1=0, select bank1
  1624  0092  07A8               	addwf	sprintf@f^(0+128),f
  1625  0093  30FF               	movlw	-1
  1626  0094  0728               	addwf	sprintf@f^(0+128),w
  1627  0095  0084               	movwf	4
  1628  0096  120A  158A  200A  120A  118A  	fcall	stringdir
  1629  009B  00CA               	movwf	sprintf@c^(0+128)
  1630  009C  00AD               	movwf	??_sprintf^(0+128)
  1631  009D  01AE               	clrf	(??_sprintf^(0+128)+1)
  1632                           
  1633                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1634                           ; Switch size 1, requested type "simple"
  1635                           ; Number of cases is 1, Range of values is 0 to 0
  1636                           ; switch strategies available:
  1637                           ; Name         Instructions Cycles
  1638                           ; simple_byte            4     3 (average)
  1639                           ; direct_byte           11     8 (fixed)
  1640                           ; jumptable            260     6 (fixed)
  1641                           ;	Chosen strategy is simple_byte
  1642  009E  082E               	movf	(??_sprintf+1)^(0+128),w
  1643  009F  3A00               	xorlw	0	; case 0
  1644  00A0  1903               	skipnz
  1645  00A1  28A3               	goto	l3316
  1646  00A2  2F8B               	goto	l3170
  1647  00A3                     l3316:
  1648                           
  1649                           ; Switch size 1, requested type "simple"
  1650                           ; Number of cases is 2, Range of values is 0 to 102
  1651                           ; switch strategies available:
  1652                           ; Name         Instructions Cycles
  1653                           ; simple_byte            7     4 (average)
  1654                           ; jumptable            260     6 (fixed)
  1655                           ;	Chosen strategy is simple_byte
  1656  00A3  082D               	movf	??_sprintf^(0+128),w
  1657  00A4  3A00               	xorlw	0	; case 0
  1658  00A5  1903               	skipnz
  1659  00A6  2F9D               	goto	l3172
  1660  00A7  3A66               	xorlw	102	; case 102
  1661  00A8  1903               	skipnz
  1662  00A9  288D               	goto	l258
  1663  00AA  2F8B               	goto	l3170
  1664  00AB                     l3010:
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1667  00AB  3000               	movlw	0
  1668  00AC  0537               	andwf	sprintf@flag^(0+128),w
  1669  00AD  00AD               	movwf	??_sprintf^(0+128)
  1670  00AE  3007               	movlw	7
  1671  00AF  0538               	andwf	(sprintf@flag+1)^(0+128),w
  1672  00B0  00AE               	movwf	(??_sprintf+1)^(0+128)
  1673  00B1  082D               	movf	??_sprintf^(0+128),w
  1674  00B2  042E               	iorwf	(??_sprintf^(0+128)+1),w
  1675  00B3  1903               	btfsc	3,2
  1676  00B4  28B6               	goto	u5011
  1677  00B5  28B7               	goto	u5010
  1678  00B6                     u5011:
  1679  00B6  2F46               	goto	l3152
  1680  00B7                     u5010:
  1681  00B7                     l3012:
  1682                           
  1683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1684  00B7  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  1685  00B8  28BA               	goto	u5021
  1686  00B9  28BB               	goto	u5020
  1687  00BA                     u5021:
  1688  00BA  28BF               	goto	l3016
  1689  00BB                     u5020:
  1690  00BB                     l3014:
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1693  00BB  3006               	movlw	6
  1694  00BC  00C4               	movwf	sprintf@prec^(0+128)
  1695  00BD  3000               	movlw	0
  1696  00BE  00C5               	movwf	(sprintf@prec^(0+128)+1)
  1697  00BF                     l3016:
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1700  00BF  0836               	movf	sprintf@ap^(0+128),w
  1701  00C0  0084               	movwf	4
  1702  00C1  1383               	bcf	3,7	;select IRP bank0
  1703  00C2  0800               	movf	0,w
  1704  00C3  00C6               	movwf	sprintf@fval^(0+128)
  1705  00C4  0A84               	incf	4,f
  1706  00C5  0800               	movf	0,w
  1707  00C6  00C7               	movwf	(sprintf@fval+1)^(0+128)
  1708  00C7  0A84               	incf	4,f
  1709  00C8  0800               	movf	0,w
  1710  00C9  00C8               	movwf	(sprintf@fval+2)^(0+128)
  1711  00CA  0A84               	incf	4,f
  1712  00CB  0800               	movf	0,w
  1713  00CC  00C9               	movwf	(sprintf@fval+3)^(0+128)
  1714  00CD                     l3018:
  1715  00CD  3004               	movlw	4
  1716  00CE  00AD               	movwf	??_sprintf^(0+128)
  1717  00CF  082D               	movf	??_sprintf^(0+128),w
  1718  00D0  07B6               	addwf	sprintf@ap^(0+128),f
  1719  00D1                     l3020:
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1722  00D1  0849               	movf	(sprintf@fval+3)^(0+128),w
  1723  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1724  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1725  00D4  00A3               	movwf	___flge@ff1+3
  1726  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1727  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1728  00D7  0848               	movf	(sprintf@fval+2)^(0+128),w
  1729  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1730  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1731  00DA  00A2               	movwf	___flge@ff1+2
  1732  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  1733  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  1734  00DD  0847               	movf	(sprintf@fval+1)^(0+128),w
  1735  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1736  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1737  00E0  00A1               	movwf	___flge@ff1+1
  1738  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1739  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1740  00E3  0846               	movf	sprintf@fval^(0+128),w
  1741  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1742  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1743  00E6  00A0               	movwf	___flge@ff1
  1744  00E7  3000               	movlw	0
  1745  00E8  00A7               	movwf	___flge@ff2+3
  1746  00E9  3000               	movlw	0
  1747  00EA  00A6               	movwf	___flge@ff2+2
  1748  00EB  3000               	movlw	0
  1749  00EC  00A5               	movwf	___flge@ff2+1
  1750  00ED  3000               	movlw	0
  1751  00EE  00A4               	movwf	___flge@ff2
  1752  00EF  160A  118A  2090  120A  118A  	fcall	___flge
  1753  00F4  1803               	btfsc	3,0
  1754  00F5  28F7               	goto	u5031
  1755  00F6  28F8               	goto	u5030
  1756  00F7                     u5031:
  1757  00F7  2915               	goto	l3026
  1758  00F8                     u5030:
  1759  00F8                     l3022:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1762  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  1763  00F9  1303               	bcf	3,6	;RP1=0, select bank1
  1764  00FA  0849               	movf	(sprintf@fval+3)^(0+128),w
  1765  00FB  00F8               	movwf	___flneg@f1+3
  1766  00FC  0848               	movf	(sprintf@fval+2)^(0+128),w
  1767  00FD  00F7               	movwf	___flneg@f1+2
  1768  00FE  0847               	movf	(sprintf@fval+1)^(0+128),w
  1769  00FF  00F6               	movwf	___flneg@f1+1
  1770  0100  0846               	movf	sprintf@fval^(0+128),w
  1771  0101  00F5               	movwf	___flneg@f1
  1772  0102  160A  158A  23AC  120A  118A  	fcall	___flneg
  1773  0107  0878               	movf	?___flneg+3,w
  1774  0108  1683               	bsf	3,5	;RP0=1, select bank1
  1775  0109  1303               	bcf	3,6	;RP1=0, select bank1
  1776  010A  00C9               	movwf	(sprintf@fval+3)^(0+128)
  1777  010B  0877               	movf	?___flneg+2,w
  1778  010C  00C8               	movwf	(sprintf@fval+2)^(0+128)
  1779  010D  0876               	movf	?___flneg+1,w
  1780  010E  00C7               	movwf	(sprintf@fval+1)^(0+128)
  1781  010F  0875               	movf	?___flneg,w
  1782  0110  00C6               	movwf	sprintf@fval^(0+128)
  1783  0111                     l3024:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1786  0111  3003               	movlw	3
  1787  0112  04B7               	iorwf	sprintf@flag^(0+128),f
  1788  0113  3000               	movlw	0
  1789  0114  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  1790  0115                     l3026:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1793  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1794  0116  1303               	bcf	3,6	;RP1=0, select bank1
  1795  0117  01BD               	clrf	sprintf@eexp^(0+128)
  1796  0118  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  1797  0119                     l3028:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1800  0119  0849               	movf	(sprintf@fval+3)^(0+128),w
  1801  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1802  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1803  011C  00A3               	movwf	___fleq@ff1+3
  1804  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1805  011E  1303               	bcf	3,6	;RP1=0, select bank1
  1806  011F  0848               	movf	(sprintf@fval+2)^(0+128),w
  1807  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1808  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1809  0122  00A2               	movwf	___fleq@ff1+2
  1810  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1811  0124  1303               	bcf	3,6	;RP1=0, select bank1
  1812  0125  0847               	movf	(sprintf@fval+1)^(0+128),w
  1813  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1814  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1815  0128  00A1               	movwf	___fleq@ff1+1
  1816  0129  1683               	bsf	3,5	;RP0=1, select bank1
  1817  012A  1303               	bcf	3,6	;RP1=0, select bank1
  1818  012B  0846               	movf	sprintf@fval^(0+128),w
  1819  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1820  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1821  012E  00A0               	movwf	___fleq@ff1
  1822  012F  3000               	movlw	0
  1823  0130  00A7               	movwf	___fleq@ff2+3
  1824  0131  3000               	movlw	0
  1825  0132  00A6               	movwf	___fleq@ff2+2
  1826  0133  3000               	movlw	0
  1827  0134  00A5               	movwf	___fleq@ff2+1
  1828  0135  3000               	movlw	0
  1829  0136  00A4               	movwf	___fleq@ff2
  1830  0137  160A  158A  25CC  120A  118A  	fcall	___fleq
  1831  013C  1803               	btfsc	3,0
  1832  013D  293F               	goto	u5041
  1833  013E  2940               	goto	u5040
  1834  013F                     u5041:
  1835  013F  2A5C               	goto	l3054
  1836  0140                     u5040:
  1837  0140                     l3030:
  1838                           
  1839                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1840  0140  1003               	clrc
  1841  0141  1683               	bsf	3,5	;RP0=1, select bank1
  1842  0142  1303               	bcf	3,6	;RP1=0, select bank1
  1843  0143  0D48               	rlf	(sprintf@fval+2)^(0+128),w
  1844  0144  0D49               	rlf	(sprintf@fval+3)^(0+128),w
  1845  0145  3E82               	addlw	130
  1846  0146  00BD               	movwf	sprintf@eexp^(0+128)
  1847  0147  30FF               	movlw	255
  1848  0148  1803               	skipnc
  1849  0149  3000               	movlw	0
  1850  014A  00BE               	movwf	(sprintf@eexp^(0+128)+1)
  1851  014B                     l3032:
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1854  014B  30FF               	movlw	255
  1855  014C  07BD               	addwf	sprintf@eexp^(0+128),f
  1856  014D  1803               	skipnc
  1857  014E  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  1858  014F  30FF               	movlw	255
  1859  0150  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  1860  0151                     l3034:
  1861                           
  1862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1863  0151  3003               	movlw	3
  1864  0152  00F5               	movwf	___wmul@multiplier
  1865  0153  3000               	movlw	0
  1866  0154  00F6               	movwf	___wmul@multiplier+1
  1867  0155  083E               	movf	(sprintf@eexp+1)^(0+128),w
  1868  0156  00F8               	movwf	___wmul@multiplicand+1
  1869  0157  083D               	movf	sprintf@eexp^(0+128),w
  1870  0158  00F7               	movwf	___wmul@multiplicand
  1871  0159  160A  158A  24A1  120A  118A  	fcall	___wmul
  1872  015E  0876               	movf	?___wmul+1,w
  1873  015F  1683               	bsf	3,5	;RP0=1, select bank1
  1874  0160  1303               	bcf	3,6	;RP1=0, select bank1
  1875  0161  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  1876  0162  0875               	movf	?___wmul,w
  1877  0163  00BD               	movwf	sprintf@eexp^(0+128)
  1878  0164                     l3036:
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1881  0164  300A               	movlw	10
  1882  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1884  0167  00A3               	movwf	___awdiv@divisor
  1885  0168  3000               	movlw	0
  1886  0169  00A4               	movwf	___awdiv@divisor+1
  1887  016A  1683               	bsf	3,5	;RP0=1, select bank1
  1888  016B  1303               	bcf	3,6	;RP1=0, select bank1
  1889  016C  083E               	movf	(sprintf@eexp+1)^(0+128),w
  1890  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1891  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1892  016F  00A6               	movwf	___awdiv@dividend+1
  1893  0170  1683               	bsf	3,5	;RP0=1, select bank1
  1894  0171  1303               	bcf	3,6	;RP1=0, select bank1
  1895  0172  083D               	movf	sprintf@eexp^(0+128),w
  1896  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1897  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1898  0175  00A5               	movwf	___awdiv@dividend
  1899  0176  120A  158A  20D3  120A  118A  	fcall	___awdiv
  1900  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1901  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1902  017D  0824               	movf	?___awdiv+1,w
  1903  017E  1683               	bsf	3,5	;RP0=1, select bank1
  1904  017F  1303               	bcf	3,6	;RP1=0, select bank1
  1905  0180  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  1906  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0183  0823               	movf	?___awdiv,w
  1909  0184  1683               	bsf	3,5	;RP0=1, select bank1
  1910  0185  1303               	bcf	3,6	;RP1=0, select bank1
  1911  0186  00BD               	movwf	sprintf@eexp^(0+128)
  1912  0187                     l3038:
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1915  0187  1FBE               	btfss	(sprintf@eexp+1)^(0+128),7
  1916  0188  298A               	goto	u5051
  1917  0189  298B               	goto	u5050
  1918  018A                     u5051:
  1919  018A  2991               	goto	l3042
  1920  018B                     u5050:
  1921  018B                     l3040:
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1924  018B  30FF               	movlw	255
  1925  018C  07BD               	addwf	sprintf@eexp^(0+128),f
  1926  018D  1803               	skipnc
  1927  018E  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  1928  018F  30FF               	movlw	255
  1929  0190  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  1930  0191                     l3042:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1933  0191  033D               	decf	sprintf@eexp^(0+128),w
  1934  0192  3AFF               	xorlw	255
  1935  0193  120A  158A  249D  120A  118A  	fcall	_scale
  1936  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1938  019A  0849               	movf	?_scale+3,w
  1939  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1940  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1941  019D  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  1942  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1943  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1944  01A0  0848               	movf	?_scale+2,w
  1945  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  1946  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  1947  01A3  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  1948  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1949  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1950  01A6  0847               	movf	?_scale+1,w
  1951  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  1952  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  1953  01A9  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  1954  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1955  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1956  01AC  0846               	movf	?_scale,w
  1957  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  1958  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  1959  01AF  00BF               	movwf	sprintf@tmpval^(0+128)
  1960  01B0                     l3044:
  1961                           
  1962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  1963  01B0  0849               	movf	(sprintf@fval+3)^(0+128),w
  1964  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1965  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1966  01B3  00AF               	movwf	___flmul@b+3
  1967  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  1968  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  1969  01B6  0848               	movf	(sprintf@fval+2)^(0+128),w
  1970  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1971  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1972  01B9  00AE               	movwf	___flmul@b+2
  1973  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  1974  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  1975  01BC  0847               	movf	(sprintf@fval+1)^(0+128),w
  1976  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1977  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1978  01BF  00AD               	movwf	___flmul@b+1
  1979  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  1980  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  1981  01C2  0846               	movf	sprintf@fval^(0+128),w
  1982  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1983  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1984  01C5  00AC               	movwf	___flmul@b
  1985  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  1986  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  1987  01C8  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  1988  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1989  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1990  01CB  00B3               	movwf	___flmul@a+3
  1991  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  1992  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  1993  01CE  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  1994  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1995  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1996  01D1  00B2               	movwf	___flmul@a+2
  1997  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  1998  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  1999  01D4  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2000  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2001  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2002  01D7  00B1               	movwf	___flmul@a+1
  2003  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2004  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2005  01DA  083F               	movf	sprintf@tmpval^(0+128),w
  2006  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2007  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2008  01DD  00B0               	movwf	___flmul@a
  2009  01DE  120A  158A  213C  120A  118A  	fcall	___flmul
  2010  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2011  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2012  01E5  082F               	movf	?___flmul+3,w
  2013  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2014  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  2015  01E8  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2016  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2017  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2018  01EB  082E               	movf	?___flmul+2,w
  2019  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2020  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2021  01EE  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2022  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2023  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2024  01F1  082D               	movf	?___flmul+1,w
  2025  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  2026  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  2027  01F4  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2028  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2029  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2030  01F7  082C               	movf	?___flmul,w
  2031  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  2032  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  2033  01FA  00BF               	movwf	sprintf@tmpval^(0+128)
  2034  01FB                     l3046:
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2037  01FB  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2038  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2039  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2040  01FE  00A3               	movwf	___flge@ff1+3
  2041  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2042  0200  1303               	bcf	3,6	;RP1=0, select bank1
  2043  0201  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2044  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2045  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2046  0204  00A2               	movwf	___flge@ff1+2
  2047  0205  1683               	bsf	3,5	;RP0=1, select bank1
  2048  0206  1303               	bcf	3,6	;RP1=0, select bank1
  2049  0207  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2050  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2052  020A  00A1               	movwf	___flge@ff1+1
  2053  020B  1683               	bsf	3,5	;RP0=1, select bank1
  2054  020C  1303               	bcf	3,6	;RP1=0, select bank1
  2055  020D  083F               	movf	sprintf@tmpval^(0+128),w
  2056  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2057  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0210  00A0               	movwf	___flge@ff1
  2059  0211  303F               	movlw	63
  2060  0212  00A7               	movwf	___flge@ff2+3
  2061  0213  3080               	movlw	128
  2062  0214  00A6               	movwf	___flge@ff2+2
  2063  0215  3000               	movlw	0
  2064  0216  00A5               	movwf	___flge@ff2+1
  2065  0217  3000               	movlw	0
  2066  0218  00A4               	movwf	___flge@ff2
  2067  0219  160A  118A  2090  120A  118A  	fcall	___flge
  2068  021E  1803               	btfsc	3,0
  2069  021F  2A21               	goto	u5061
  2070  0220  2A22               	goto	u5060
  2071  0221                     u5061:
  2072  0221  2A2B               	goto	l3050
  2073  0222                     u5060:
  2074  0222                     l3048:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2077  0222  30FF               	movlw	255
  2078  0223  1683               	bsf	3,5	;RP0=1, select bank1
  2079  0224  1303               	bcf	3,6	;RP1=0, select bank1
  2080  0225  07BD               	addwf	sprintf@eexp^(0+128),f
  2081  0226  1803               	skipnc
  2082  0227  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2083  0228  30FF               	movlw	255
  2084  0229  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2085  022A  2A5C               	goto	l3054
  2086  022B                     l3050:
  2087  022B  1683               	bsf	3,5	;RP0=1, select bank1
  2088  022C  1303               	bcf	3,6	;RP1=0, select bank1
  2089  022D  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2090  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2091  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2092  0230  00A3               	movwf	___flge@ff1+3
  2093  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2094  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2095  0233  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2096  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0236  00A2               	movwf	___flge@ff1+2
  2099  0237  1683               	bsf	3,5	;RP0=1, select bank1
  2100  0238  1303               	bcf	3,6	;RP1=0, select bank1
  2101  0239  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2102  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2103  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2104  023C  00A1               	movwf	___flge@ff1+1
  2105  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2106  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2107  023F  083F               	movf	sprintf@tmpval^(0+128),w
  2108  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2109  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2110  0242  00A0               	movwf	___flge@ff1
  2111  0243  3041               	movlw	65
  2112  0244  00A7               	movwf	___flge@ff2+3
  2113  0245  3020               	movlw	32
  2114  0246  00A6               	movwf	___flge@ff2+2
  2115  0247  3000               	movlw	0
  2116  0248  00A5               	movwf	___flge@ff2+1
  2117  0249  3000               	movlw	0
  2118  024A  00A4               	movwf	___flge@ff2
  2119  024B  160A  118A  2090  120A  118A  	fcall	___flge
  2120  0250  1C03               	btfss	3,0
  2121  0251  2A53               	goto	u5071
  2122  0252  2A54               	goto	u5070
  2123  0253                     u5071:
  2124  0253  2A5C               	goto	l3054
  2125  0254                     u5070:
  2126  0254                     l3052:
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2129  0254  3001               	movlw	1
  2130  0255  1683               	bsf	3,5	;RP0=1, select bank1
  2131  0256  1303               	bcf	3,6	;RP1=0, select bank1
  2132  0257  07BD               	addwf	sprintf@eexp^(0+128),f
  2133  0258  1803               	skipnc
  2134  0259  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2135  025A  3000               	movlw	0
  2136  025B  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2137  025C                     l3054:
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2140  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2141  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2142  025E  0845               	movf	(sprintf@prec+1)^(0+128),w
  2143  025F  3A80               	xorlw	128
  2144  0260  00FF               	movwf	btemp+1
  2145  0261  3080               	movlw	128
  2146  0262  027F               	subwf	btemp+1,w
  2147  0263  1D03               	skipz
  2148  0264  2A67               	goto	u5085
  2149  0265  300D               	movlw	13
  2150  0266  0244               	subwf	sprintf@prec^(0+128),w
  2151  0267                     u5085:
  2152  0267  1803               	skipnc
  2153  0268  2A6A               	goto	u5081
  2154  0269  2A6B               	goto	u5080
  2155  026A                     u5081:
  2156  026A  2AB2               	goto	l3058
  2157  026B                     u5080:
  2158  026B                     l3056:
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2161  026B  1683               	bsf	3,5	;RP0=1, select bank1
  2162  026C  1303               	bcf	3,6	;RP1=0, select bank1
  2163  026D  0844               	movf	sprintf@prec^(0+128),w
  2164  026E  160A  118A  236B  120A  118A  	fcall	_fround
  2165  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0275  0849               	movf	?_fround+3,w
  2168  0276  00DD               	movwf	___fladd@b+3
  2169  0277  0848               	movf	?_fround+2,w
  2170  0278  00DC               	movwf	___fladd@b+2
  2171  0279  0847               	movf	?_fround+1,w
  2172  027A  00DB               	movwf	___fladd@b+1
  2173  027B  0846               	movf	?_fround,w
  2174  027C  00DA               	movwf	___fladd@b
  2175  027D  1683               	bsf	3,5	;RP0=1, select bank1
  2176  027E  1303               	bcf	3,6	;RP1=0, select bank1
  2177  027F  0849               	movf	(sprintf@fval+3)^(0+128),w
  2178  0280  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0281  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0282  00E1               	movwf	___fladd@a+3
  2181  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2182  0284  1303               	bcf	3,6	;RP1=0, select bank1
  2183  0285  0848               	movf	(sprintf@fval+2)^(0+128),w
  2184  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0288  00E0               	movwf	___fladd@a+2
  2187  0289  1683               	bsf	3,5	;RP0=1, select bank1
  2188  028A  1303               	bcf	3,6	;RP1=0, select bank1
  2189  028B  0847               	movf	(sprintf@fval+1)^(0+128),w
  2190  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2191  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2192  028E  00DF               	movwf	___fladd@a+1
  2193  028F  1683               	bsf	3,5	;RP0=1, select bank1
  2194  0290  1303               	bcf	3,6	;RP1=0, select bank1
  2195  0291  0846               	movf	sprintf@fval^(0+128),w
  2196  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2198  0294  00DE               	movwf	___fladd@a
  2199  0295  160A  118A  2578  120A  118A  	fcall	___fladd
  2200  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2201  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2202  029C  085D               	movf	?___fladd+3,w
  2203  029D  1683               	bsf	3,5	;RP0=1, select bank1
  2204  029E  1303               	bcf	3,6	;RP1=0, select bank1
  2205  029F  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2206  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2207  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2208  02A2  085C               	movf	?___fladd+2,w
  2209  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2210  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2211  02A5  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2212  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2213  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2214  02A8  085B               	movf	?___fladd+1,w
  2215  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2216  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2217  02AB  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2218  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2219  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2220  02AE  085A               	movf	?___fladd,w
  2221  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2222  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  2223  02B1  00C6               	movwf	sprintf@fval^(0+128)
  2224  02B2                     l3058:
  2225                           
  2226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2227  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2228  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  2229  02B4  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2230  02B5  3A80               	xorlw	128
  2231  02B6  00FF               	movwf	btemp+1
  2232  02B7  3080               	movlw	128
  2233  02B8  027F               	subwf	btemp+1,w
  2234  02B9  1D03               	skipz
  2235  02BA  2ABD               	goto	u5095
  2236  02BB  300A               	movlw	10
  2237  02BC  023D               	subwf	sprintf@eexp^(0+128),w
  2238  02BD                     u5095:
  2239  02BD  1803               	skipnc
  2240  02BE  2AC0               	goto	u5091
  2241  02BF  2AC1               	goto	u5090
  2242  02C0                     u5091:
  2243  02C0  2B20               	goto	l3066
  2244  02C1                     u5090:
  2245  02C1                     l3060:
  2246  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2247  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2248  02C3  0849               	movf	(sprintf@fval+3)^(0+128),w
  2249  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2250  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2251  02C6  00A3               	movwf	___fleq@ff1+3
  2252  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2253  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2254  02C9  0848               	movf	(sprintf@fval+2)^(0+128),w
  2255  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2256  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2257  02CC  00A2               	movwf	___fleq@ff1+2
  2258  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  2259  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  2260  02CF  0847               	movf	(sprintf@fval+1)^(0+128),w
  2261  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2262  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2263  02D2  00A1               	movwf	___fleq@ff1+1
  2264  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2265  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2266  02D5  0846               	movf	sprintf@fval^(0+128),w
  2267  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2268  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2269  02D8  00A0               	movwf	___fleq@ff1
  2270  02D9  3000               	movlw	0
  2271  02DA  00A7               	movwf	___fleq@ff2+3
  2272  02DB  3000               	movlw	0
  2273  02DC  00A6               	movwf	___fleq@ff2+2
  2274  02DD  3000               	movlw	0
  2275  02DE  00A5               	movwf	___fleq@ff2+1
  2276  02DF  3000               	movlw	0
  2277  02E0  00A4               	movwf	___fleq@ff2
  2278  02E1  160A  158A  25CC  120A  118A  	fcall	___fleq
  2279  02E6  1803               	btfsc	3,0
  2280  02E7  2AE9               	goto	u5101
  2281  02E8  2AEA               	goto	u5100
  2282  02E9                     u5101:
  2283  02E9  2BCC               	goto	l3080
  2284  02EA                     u5100:
  2285  02EA                     l3062:
  2286  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2287  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2288  02EC  0849               	movf	(sprintf@fval+3)^(0+128),w
  2289  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2290  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2291  02EF  00DC               	movwf	___fltol@f1+3
  2292  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2293  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2294  02F2  0848               	movf	(sprintf@fval+2)^(0+128),w
  2295  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2296  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2297  02F5  00DB               	movwf	___fltol@f1+2
  2298  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  2299  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  2300  02F8  0847               	movf	(sprintf@fval+1)^(0+128),w
  2301  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2302  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2303  02FB  00DA               	movwf	___fltol@f1+1
  2304  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  2305  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  2306  02FE  0846               	movf	sprintf@fval^(0+128),w
  2307  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2308  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2309  0301  00D9               	movwf	___fltol@f1
  2310  0302  160A  158A  2784  120A  118A  	fcall	___fltol
  2311  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0309  085C               	movf	?___fltol+3,w
  2314  030A  045B               	iorwf	?___fltol+2,w
  2315  030B  045A               	iorwf	?___fltol+1,w
  2316  030C  0459               	iorwf	?___fltol,w
  2317  030D  1D03               	skipz
  2318  030E  2B10               	goto	u5111
  2319  030F  2B11               	goto	u5110
  2320  0310                     u5111:
  2321  0310  2BCC               	goto	l3080
  2322  0311                     u5110:
  2323  0311                     l3064:
  2324  0311  1683               	bsf	3,5	;RP0=1, select bank1
  2325  0312  1303               	bcf	3,6	;RP1=0, select bank1
  2326  0313  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2327  0314  3A80               	xorlw	128
  2328  0315  00FF               	movwf	btemp+1
  2329  0316  3080               	movlw	128
  2330  0317  027F               	subwf	btemp+1,w
  2331  0318  1D03               	skipz
  2332  0319  2B1C               	goto	u5125
  2333  031A  3002               	movlw	2
  2334  031B  023D               	subwf	sprintf@eexp^(0+128),w
  2335  031C                     u5125:
  2336  031C  1C03               	skipc
  2337  031D  2B1F               	goto	u5121
  2338  031E  2B20               	goto	u5120
  2339  031F                     u5121:
  2340  031F  2BCC               	goto	l3080
  2341  0320                     u5120:
  2342  0320                     l3066:
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2345  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2346  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2347  0322  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2348  0323  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0324  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0325  00A3               	movwf	___flge@ff1+3
  2351  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2352  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2353  0328  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2354  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2355  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2356  032B  00A2               	movwf	___flge@ff1+2
  2357  032C  1683               	bsf	3,5	;RP0=1, select bank1
  2358  032D  1303               	bcf	3,6	;RP1=0, select bank1
  2359  032E  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2360  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2361  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2362  0331  00A1               	movwf	___flge@ff1+1
  2363  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2364  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2365  0334  083F               	movf	sprintf@tmpval^(0+128),w
  2366  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2367  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0337  00A0               	movwf	___flge@ff1
  2369  0338  3040               	movlw	64
  2370  0339  00A7               	movwf	___flge@ff2+3
  2371  033A  3089               	movlw	137
  2372  033B  00A6               	movwf	___flge@ff2+2
  2373  033C  3070               	movlw	112
  2374  033D  00A5               	movwf	___flge@ff2+1
  2375  033E  305F               	movlw	95
  2376  033F  00A4               	movwf	___flge@ff2
  2377  0340  160A  118A  2090  120A  118A  	fcall	___flge
  2378  0345  1803               	btfsc	3,0
  2379  0346  2B48               	goto	u5131
  2380  0347  2B49               	goto	u5130
  2381  0348                     u5131:
  2382  0348  2B52               	goto	l3070
  2383  0349                     u5130:
  2384  0349                     l3068:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2387  0349  30F7               	movlw	247
  2388  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2389  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2390  034C  07BD               	addwf	sprintf@eexp^(0+128),f
  2391  034D  1803               	skipnc
  2392  034E  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2393  034F  30FF               	movlw	255
  2394  0350  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2395                           
  2396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2397  0351  2B5A               	goto	l3072
  2398  0352                     l3070:
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2401  0352  30F8               	movlw	248
  2402  0353  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0354  1303               	bcf	3,6	;RP1=0, select bank1
  2404  0355  07BD               	addwf	sprintf@eexp^(0+128),f
  2405  0356  1803               	skipnc
  2406  0357  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2407  0358  30FF               	movlw	255
  2408  0359  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2409  035A                     l3072:
  2410                           
  2411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2412  035A  083D               	movf	sprintf@eexp^(0+128),w
  2413  035B  120A  158A  249D  120A  118A  	fcall	_scale
  2414  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2415  0361  1303               	bcf	3,6	;RP1=0, select bank0
  2416  0362  0849               	movf	?_scale+3,w
  2417  0363  1683               	bsf	3,5	;RP0=1, select bank1
  2418  0364  1303               	bcf	3,6	;RP1=0, select bank1
  2419  0365  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2420  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2421  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2422  0368  0848               	movf	?_scale+2,w
  2423  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2424  036A  1303               	bcf	3,6	;RP1=0, select bank1
  2425  036B  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2426  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2427  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2428  036E  0847               	movf	?_scale+1,w
  2429  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2430  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2431  0371  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2432  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2433  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2434  0374  0846               	movf	?_scale,w
  2435  0375  1683               	bsf	3,5	;RP0=1, select bank1
  2436  0376  1303               	bcf	3,6	;RP1=0, select bank1
  2437  0377  00BF               	movwf	sprintf@tmpval^(0+128)
  2438  0378                     l3074:
  2439  0378  0849               	movf	(sprintf@fval+3)^(0+128),w
  2440  0379  1283               	bcf	3,5	;RP0=0, select bank0
  2441  037A  1303               	bcf	3,6	;RP1=0, select bank0
  2442  037B  00A3               	movwf	__div_to_l_@f1+3
  2443  037C  1683               	bsf	3,5	;RP0=1, select bank1
  2444  037D  1303               	bcf	3,6	;RP1=0, select bank1
  2445  037E  0848               	movf	(sprintf@fval+2)^(0+128),w
  2446  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0381  00A2               	movwf	__div_to_l_@f1+2
  2449  0382  1683               	bsf	3,5	;RP0=1, select bank1
  2450  0383  1303               	bcf	3,6	;RP1=0, select bank1
  2451  0384  0847               	movf	(sprintf@fval+1)^(0+128),w
  2452  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2453  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2454  0387  00A1               	movwf	__div_to_l_@f1+1
  2455  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2456  0389  1303               	bcf	3,6	;RP1=0, select bank1
  2457  038A  0846               	movf	sprintf@fval^(0+128),w
  2458  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2459  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2460  038D  00A0               	movwf	__div_to_l_@f1
  2461  038E  1683               	bsf	3,5	;RP0=1, select bank1
  2462  038F  1303               	bcf	3,6	;RP1=0, select bank1
  2463  0390  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2464  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0393  00A7               	movwf	__div_to_l_@f2+3
  2467  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2468  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2469  0396  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2470  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0399  00A6               	movwf	__div_to_l_@f2+2
  2473  039A  1683               	bsf	3,5	;RP0=1, select bank1
  2474  039B  1303               	bcf	3,6	;RP1=0, select bank1
  2475  039C  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2476  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2477  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2478  039F  00A5               	movwf	__div_to_l_@f2+1
  2479  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2480  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2481  03A2  083F               	movf	sprintf@tmpval^(0+128),w
  2482  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2483  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2484  03A5  00A4               	movwf	__div_to_l_@f2
  2485  03A6  160A  118A  22AD  120A  118A  	fcall	__div_to_l_
  2486  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2487  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2488  03AD  0823               	movf	?__div_to_l_+3,w
  2489  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2490  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  2491  03B0  00BC               	movwf	(sprintf@val+3)^(0+128)
  2492  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2493  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2494  03B3  0822               	movf	?__div_to_l_+2,w
  2495  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2496  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2497  03B6  00BB               	movwf	(sprintf@val+2)^(0+128)
  2498  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2499  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2500  03B9  0821               	movf	?__div_to_l_+1,w
  2501  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2502  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  2503  03BC  00BA               	movwf	(sprintf@val+1)^(0+128)
  2504  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2505  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2506  03BF  0820               	movf	?__div_to_l_,w
  2507  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  2508  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  2509  03C2  00B9               	movwf	sprintf@val^(0+128)
  2510  03C3                     l3078:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2513  03C3  3000               	movlw	0
  2514  03C4  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2515  03C5  3000               	movlw	0
  2516  03C6  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2517  03C7  3000               	movlw	0
  2518  03C8  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2519  03C9  3000               	movlw	0
  2520  03CA  00C6               	movwf	sprintf@fval^(0+128)
  2521                           
  2522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2523  03CB  2C4E               	goto	l3086
  2524  03CC                     l3080:
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2527  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  2528  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  2529  03CE  0849               	movf	(sprintf@fval+3)^(0+128),w
  2530  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2531  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2532  03D1  00DC               	movwf	___fltol@f1+3
  2533  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2534  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  2535  03D4  0848               	movf	(sprintf@fval+2)^(0+128),w
  2536  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2537  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2538  03D7  00DB               	movwf	___fltol@f1+2
  2539  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2540  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  2541  03DA  0847               	movf	(sprintf@fval+1)^(0+128),w
  2542  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2543  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2544  03DD  00DA               	movwf	___fltol@f1+1
  2545  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  2546  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  2547  03E0  0846               	movf	sprintf@fval^(0+128),w
  2548  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2549  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2550  03E3  00D9               	movwf	___fltol@f1
  2551  03E4  160A  158A  2784  120A  118A  	fcall	___fltol
  2552  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2553  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2554  03EB  085C               	movf	?___fltol+3,w
  2555  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2556  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2557  03EE  00BC               	movwf	(sprintf@val+3)^(0+128)
  2558  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2559  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2560  03F1  085B               	movf	?___fltol+2,w
  2561  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2562  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2563  03F4  00BB               	movwf	(sprintf@val+2)^(0+128)
  2564  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2565  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2566  03F7  085A               	movf	?___fltol+1,w
  2567  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2568  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2569  03FA  00BA               	movwf	(sprintf@val+1)^(0+128)
  2570  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2571  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2572  03FD  0859               	movf	?___fltol,w
  2573  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2574  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  2575  0400  00B9               	movwf	sprintf@val^(0+128)
  2576  0401                     l3082:
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2579  0401  083C               	movf	(sprintf@val+3)^(0+128),w
  2580  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2581  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2582  0404  00AF               	movwf	___xxtofl@val+3
  2583  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2584  0406  1303               	bcf	3,6	;RP1=0, select bank1
  2585  0407  083B               	movf	(sprintf@val+2)^(0+128),w
  2586  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2587  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2588  040A  00AE               	movwf	___xxtofl@val+2
  2589  040B  1683               	bsf	3,5	;RP0=1, select bank1
  2590  040C  1303               	bcf	3,6	;RP1=0, select bank1
  2591  040D  083A               	movf	(sprintf@val+1)^(0+128),w
  2592  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2593  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2594  0410  00AD               	movwf	___xxtofl@val+1
  2595  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2596  0412  1303               	bcf	3,6	;RP1=0, select bank1
  2597  0413  0839               	movf	sprintf@val^(0+128),w
  2598  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0415  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0416  00AC               	movwf	___xxtofl@val
  2601  0417  3000               	movlw	0
  2602  0418  160A  118A  2134  120A  118A  	fcall	___xxtofl
  2603  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2604  041E  1303               	bcf	3,6	;RP1=0, select bank0
  2605  041F  082F               	movf	?___xxtofl+3,w
  2606  0420  1683               	bsf	3,5	;RP0=1, select bank1
  2607  0421  1303               	bcf	3,6	;RP1=0, select bank1
  2608  0422  00A3               	movwf	(___flsub@a+3)^(0+128)
  2609  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0425  082E               	movf	?___xxtofl+2,w
  2612  0426  1683               	bsf	3,5	;RP0=1, select bank1
  2613  0427  1303               	bcf	3,6	;RP1=0, select bank1
  2614  0428  00A2               	movwf	(___flsub@a+2)^(0+128)
  2615  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2616  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2617  042B  082D               	movf	?___xxtofl+1,w
  2618  042C  1683               	bsf	3,5	;RP0=1, select bank1
  2619  042D  1303               	bcf	3,6	;RP1=0, select bank1
  2620  042E  00A1               	movwf	(___flsub@a+1)^(0+128)
  2621  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0431  082C               	movf	?___xxtofl,w
  2624  0432  1683               	bsf	3,5	;RP0=1, select bank1
  2625  0433  1303               	bcf	3,6	;RP1=0, select bank1
  2626  0434  00A0               	movwf	___flsub@a^(0+128)
  2627  0435  0849               	movf	(sprintf@fval+3)^(0+128),w
  2628  0436  00A7               	movwf	(___flsub@b+3)^(0+128)
  2629  0437  0848               	movf	(sprintf@fval+2)^(0+128),w
  2630  0438  00A6               	movwf	(___flsub@b+2)^(0+128)
  2631  0439  0847               	movf	(sprintf@fval+1)^(0+128),w
  2632  043A  00A5               	movwf	(___flsub@b+1)^(0+128)
  2633  043B  0846               	movf	sprintf@fval^(0+128),w
  2634  043C  00A4               	movwf	___flsub@b^(0+128)
  2635  043D  160A  158A  261C  120A  118A  	fcall	___flsub
  2636  0442  1683               	bsf	3,5	;RP0=1, select bank1
  2637  0443  1303               	bcf	3,6	;RP1=0, select bank1
  2638  0444  0823               	movf	(?___flsub+3)^(0+128),w
  2639  0445  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2640  0446  0822               	movf	(?___flsub+2)^(0+128),w
  2641  0447  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2642  0448  0821               	movf	(?___flsub+1)^(0+128),w
  2643  0449  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2644  044A  0820               	movf	?___flsub^(0+128),w
  2645  044B  00C6               	movwf	sprintf@fval^(0+128)
  2646  044C                     l3084:
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2649  044C  01BD               	clrf	sprintf@eexp^(0+128)
  2650  044D  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2651  044E                     l3086:
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2654  044E  01CA               	clrf	sprintf@c^(0+128)
  2655  044F  0ACA               	incf	sprintf@c^(0+128),f
  2656  0450                     l3092:
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2659  0450  084A               	movf	sprintf@c^(0+128),w
  2660  0451  00AD               	movwf	??_sprintf^(0+128)
  2661  0452  3001               	movlw	1
  2662  0453                     u5145:
  2663  0453  1003               	clrc
  2664  0454  0DAD               	rlf	??_sprintf^(0+128),f
  2665  0455  3EFF               	addlw	-1
  2666  0456  1D03               	skipz
  2667  0457  2C53               	goto	u5145
  2668  0458  1003               	clrc
  2669  0459  0D2D               	rlf	??_sprintf^(0+128),w
  2670  045A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2671  045B  0084               	movwf	4
  2672  045C  120A  158A  200A  120A  118A  	fcall	stringdir
  2673  0461  00AE               	movwf	(??_sprintf+1)^(0+128)
  2674  0462  120A  158A  200A  120A  118A  	fcall	stringdir
  2675  0467  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
  2676  0468  120A  158A  200A  120A  118A  	fcall	stringdir
  2677  046D  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
  2678  046E  120A  158A  200A  120A  118A  	fcall	stringdir
  2679  0473  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
  2680  0474  0831               	movf	(??_sprintf+4)^(0+128),w
  2681  0475  023C               	subwf	(sprintf@val+3)^(0+128),w
  2682  0476  1D03               	skipz
  2683  0477  2C82               	goto	u5155
  2684  0478  0830               	movf	(??_sprintf+3)^(0+128),w
  2685  0479  023B               	subwf	(sprintf@val+2)^(0+128),w
  2686  047A  1D03               	skipz
  2687  047B  2C82               	goto	u5155
  2688  047C  082F               	movf	(??_sprintf+2)^(0+128),w
  2689  047D  023A               	subwf	(sprintf@val+1)^(0+128),w
  2690  047E  1D03               	skipz
  2691  047F  2C82               	goto	u5155
  2692  0480  082E               	movf	(??_sprintf+1)^(0+128),w
  2693  0481  0239               	subwf	sprintf@val^(0+128),w
  2694  0482                     u5155:
  2695  0482  1803               	skipnc
  2696  0483  2C85               	goto	u5151
  2697  0484  2C86               	goto	u5150
  2698  0485                     u5151:
  2699  0485  2C87               	goto	l3096
  2700  0486                     u5150:
  2701  0486  2C91               	goto	l3098
  2702  0487                     l3096:
  2703  0487  3001               	movlw	1
  2704  0488  00AD               	movwf	??_sprintf^(0+128)
  2705  0489  082D               	movf	??_sprintf^(0+128),w
  2706  048A  07CA               	addwf	sprintf@c^(0+128),f
  2707  048B  300A               	movlw	10
  2708  048C  064A               	xorwf	sprintf@c^(0+128),w
  2709  048D  1D03               	btfss	3,2
  2710  048E  2C90               	goto	u5161
  2711  048F  2C91               	goto	u5160
  2712  0490                     u5161:
  2713  0490  2C50               	goto	l3092
  2714  0491                     u5160:
  2715  0491                     l3098:
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2718  0491  3003               	movlw	3
  2719  0492  0537               	andwf	sprintf@flag^(0+128),w
  2720  0493  00AD               	movwf	??_sprintf^(0+128)
  2721  0494  3000               	movlw	0
  2722  0495  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2723  0496  00AE               	movwf	(??_sprintf+1)^(0+128)
  2724  0497  082D               	movf	??_sprintf^(0+128),w
  2725  0498  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2726  0499  1903               	btfsc	3,2
  2727  049A  2C9C               	goto	u5171
  2728  049B  2C9D               	goto	u5170
  2729  049C                     u5171:
  2730  049C  2D4F               	goto	l284
  2731  049D                     u5170:
  2732  049D                     l3100:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2735  049D  302D               	movlw	45
  2736  049E  00AD               	movwf	??_sprintf^(0+128)
  2737  049F  0843               	movf	sprintf@sp^(0+128),w
  2738  04A0  0084               	movwf	4
  2739  04A1  082D               	movf	??_sprintf^(0+128),w
  2740  04A2  1383               	bcf	3,7	;select IRP bank0
  2741  04A3  0080               	movwf	0
  2742  04A4                     l3102:
  2743  04A4  3001               	movlw	1
  2744  04A5  00AD               	movwf	??_sprintf^(0+128)
  2745  04A6  082D               	movf	??_sprintf^(0+128),w
  2746  04A7  07C3               	addwf	sprintf@sp^(0+128),f
  2747  04A8  2D4F               	goto	l284
  2748  04A9                     l3104:
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2751  04A9  084A               	movf	sprintf@c^(0+128),w
  2752  04AA  00AD               	movwf	??_sprintf^(0+128)
  2753  04AB  3001               	movlw	1
  2754  04AC                     u5185:
  2755  04AC  1003               	clrc
  2756  04AD  0DAD               	rlf	??_sprintf^(0+128),f
  2757  04AE  3EFF               	addlw	-1
  2758  04AF  1D03               	skipz
  2759  04B0  2CAC               	goto	u5185
  2760  04B1  1003               	clrc
  2761  04B2  0D2D               	rlf	??_sprintf^(0+128),w
  2762  04B3  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2763  04B4  0084               	movwf	4
  2764  04B5  120A  158A  200A  120A  118A  	fcall	stringdir
  2765  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2766  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2767  04BC  00A0               	movwf	___lldiv@divisor
  2768  04BD  120A  158A  200A  120A  118A  	fcall	stringdir
  2769  04C2  00A1               	movwf	___lldiv@divisor+1
  2770  04C3  120A  158A  200A  120A  118A  	fcall	stringdir
  2771  04C8  00A2               	movwf	___lldiv@divisor+2
  2772  04C9  120A  158A  200A  120A  118A  	fcall	stringdir
  2773  04CE  00A3               	movwf	___lldiv@divisor+3
  2774  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  2775  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  2776  04D1  083C               	movf	(sprintf@val+3)^(0+128),w
  2777  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2778  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2779  04D4  00A7               	movwf	___lldiv@dividend+3
  2780  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2781  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2782  04D7  083B               	movf	(sprintf@val+2)^(0+128),w
  2783  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2784  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2785  04DA  00A6               	movwf	___lldiv@dividend+2
  2786  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  2787  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  2788  04DD  083A               	movf	(sprintf@val+1)^(0+128),w
  2789  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2790  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2791  04E0  00A5               	movwf	___lldiv@dividend+1
  2792  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  2793  04E2  1303               	bcf	3,6	;RP1=0, select bank1
  2794  04E3  0839               	movf	sprintf@val^(0+128),w
  2795  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2796  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2797  04E6  00A4               	movwf	___lldiv@dividend
  2798  04E7  160A  158A  271C  120A  118A  	fcall	___lldiv
  2799  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2800  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2801  04EE  0823               	movf	?___lldiv+3,w
  2802  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2803  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  2804  04F1  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2805  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2806  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2807  04F4  0822               	movf	?___lldiv+2,w
  2808  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  2809  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  2810  04F7  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2811  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2812  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2813  04FA  0821               	movf	?___lldiv+1,w
  2814  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  2815  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  2816  04FD  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2817  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2818  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2819  0500  0820               	movf	?___lldiv,w
  2820  0501  1683               	bsf	3,5	;RP0=1, select bank1
  2821  0502  1303               	bcf	3,6	;RP1=0, select bank1
  2822  0503  00BF               	movwf	sprintf@tmpval^(0+128)
  2823  0504                     l3106:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2826  0504  3000               	movlw	0
  2827  0505  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0506  1303               	bcf	3,6	;RP1=0, select bank0
  2829  0507  00A3               	movwf	___llmod@divisor+3
  2830  0508  3000               	movlw	0
  2831  0509  00A2               	movwf	___llmod@divisor+2
  2832  050A  3000               	movlw	0
  2833  050B  00A1               	movwf	___llmod@divisor+1
  2834  050C  300A               	movlw	10
  2835  050D  00A0               	movwf	___llmod@divisor
  2836  050E  1683               	bsf	3,5	;RP0=1, select bank1
  2837  050F  1303               	bcf	3,6	;RP1=0, select bank1
  2838  0510  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2839  0511  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0512  1303               	bcf	3,6	;RP1=0, select bank0
  2841  0513  00A7               	movwf	___llmod@dividend+3
  2842  0514  1683               	bsf	3,5	;RP0=1, select bank1
  2843  0515  1303               	bcf	3,6	;RP1=0, select bank1
  2844  0516  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2845  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0519  00A6               	movwf	___llmod@dividend+2
  2848  051A  1683               	bsf	3,5	;RP0=1, select bank1
  2849  051B  1303               	bcf	3,6	;RP1=0, select bank1
  2850  051C  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2851  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2852  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2853  051F  00A5               	movwf	___llmod@dividend+1
  2854  0520  1683               	bsf	3,5	;RP0=1, select bank1
  2855  0521  1303               	bcf	3,6	;RP1=0, select bank1
  2856  0522  083F               	movf	sprintf@tmpval^(0+128),w
  2857  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2858  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2859  0525  00A4               	movwf	___llmod@dividend
  2860  0526  160A  158A  266C  120A  118A  	fcall	___llmod
  2861  052B  1283               	bcf	3,5	;RP0=0, select bank0
  2862  052C  1303               	bcf	3,6	;RP1=0, select bank0
  2863  052D  0823               	movf	?___llmod+3,w
  2864  052E  1683               	bsf	3,5	;RP0=1, select bank1
  2865  052F  1303               	bcf	3,6	;RP1=0, select bank1
  2866  0530  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2867  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0533  0822               	movf	?___llmod+2,w
  2870  0534  1683               	bsf	3,5	;RP0=1, select bank1
  2871  0535  1303               	bcf	3,6	;RP1=0, select bank1
  2872  0536  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2873  0537  1283               	bcf	3,5	;RP0=0, select bank0
  2874  0538  1303               	bcf	3,6	;RP1=0, select bank0
  2875  0539  0821               	movf	?___llmod+1,w
  2876  053A  1683               	bsf	3,5	;RP0=1, select bank1
  2877  053B  1303               	bcf	3,6	;RP1=0, select bank1
  2878  053C  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2879  053D  1283               	bcf	3,5	;RP0=0, select bank0
  2880  053E  1303               	bcf	3,6	;RP1=0, select bank0
  2881  053F  0820               	movf	?___llmod,w
  2882  0540  1683               	bsf	3,5	;RP0=1, select bank1
  2883  0541  1303               	bcf	3,6	;RP1=0, select bank1
  2884  0542  00BF               	movwf	sprintf@tmpval^(0+128)
  2885  0543                     l3108:
  2886                           
  2887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2888  0543  083F               	movf	sprintf@tmpval^(0+128),w
  2889  0544  3E30               	addlw	48
  2890  0545  00AD               	movwf	??_sprintf^(0+128)
  2891  0546  0843               	movf	sprintf@sp^(0+128),w
  2892  0547  0084               	movwf	4
  2893  0548  082D               	movf	??_sprintf^(0+128),w
  2894  0549  1383               	bcf	3,7	;select IRP bank0
  2895  054A  0080               	movwf	0
  2896  054B  3001               	movlw	1
  2897  054C  00AD               	movwf	??_sprintf^(0+128)
  2898  054D  082D               	movf	??_sprintf^(0+128),w
  2899  054E  07C3               	addwf	sprintf@sp^(0+128),f
  2900  054F                     l284:	
  2901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  2902                           
  2903                           
  2904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2905  054F  3001               	movlw	1
  2906  0550  02CA               	subwf	sprintf@c^(0+128),f
  2907  0551  0A4A               	incf	sprintf@c^(0+128),w
  2908  0552  1D03               	btfss	3,2
  2909  0553  2D55               	goto	u5191
  2910  0554  2D56               	goto	u5190
  2911  0555                     u5191:
  2912  0555  2CA9               	goto	l3104
  2913  0556                     u5190:
  2914  0556  2D6A               	goto	l3116
  2915  0557                     l3110:
  2916                           
  2917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2918  0557  3030               	movlw	48
  2919  0558  1683               	bsf	3,5	;RP0=1, select bank1
  2920  0559  1303               	bcf	3,6	;RP1=0, select bank1
  2921  055A  00AD               	movwf	??_sprintf^(0+128)
  2922  055B  0843               	movf	sprintf@sp^(0+128),w
  2923  055C  0084               	movwf	4
  2924  055D  082D               	movf	??_sprintf^(0+128),w
  2925  055E  1383               	bcf	3,7	;select IRP bank0
  2926  055F  0080               	movwf	0
  2927  0560                     l3112:
  2928  0560  3001               	movlw	1
  2929  0561  00AD               	movwf	??_sprintf^(0+128)
  2930  0562  082D               	movf	??_sprintf^(0+128),w
  2931  0563  07C3               	addwf	sprintf@sp^(0+128),f
  2932  0564                     l3114:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2935  0564  30FF               	movlw	255
  2936  0565  07BD               	addwf	sprintf@eexp^(0+128),f
  2937  0566  1803               	skipnc
  2938  0567  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2939  0568  30FF               	movlw	255
  2940  0569  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2941  056A                     l3116:
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2944  056A  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2945  056B  3A80               	xorlw	128
  2946  056C  00FF               	movwf	btemp+1
  2947  056D  3080               	movlw	128
  2948  056E  027F               	subwf	btemp+1,w
  2949  056F  1D03               	skipz
  2950  0570  2D73               	goto	u5205
  2951  0571  3001               	movlw	1
  2952  0572  023D               	subwf	sprintf@eexp^(0+128),w
  2953  0573                     u5205:
  2954  0573  1803               	skipnc
  2955  0574  2D76               	goto	u5201
  2956  0575  2D77               	goto	u5200
  2957  0576                     u5201:
  2958  0576  2D57               	goto	l3110
  2959  0577                     u5200:
  2960  0577                     l3118:
  2961                           
  2962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2963  0577  1683               	bsf	3,5	;RP0=1, select bank1
  2964  0578  1303               	bcf	3,6	;RP1=0, select bank1
  2965  0579  0845               	movf	(sprintf@prec+1)^(0+128),w
  2966  057A  3A80               	xorlw	128
  2967  057B  00FF               	movwf	btemp+1
  2968  057C  3080               	movlw	128
  2969  057D  027F               	subwf	btemp+1,w
  2970  057E  1D03               	skipz
  2971  057F  2D82               	goto	u5215
  2972  0580  3009               	movlw	9
  2973  0581  0244               	subwf	sprintf@prec^(0+128),w
  2974  0582                     u5215:
  2975  0582  1C03               	skipc
  2976  0583  2D85               	goto	u5211
  2977  0584  2D86               	goto	u5210
  2978  0585                     u5211:
  2979  0585  2D8D               	goto	l3122
  2980  0586                     u5210:
  2981  0586                     l3120:
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2984  0586  3008               	movlw	8
  2985  0587  1683               	bsf	3,5	;RP0=1, select bank1
  2986  0588  1303               	bcf	3,6	;RP1=0, select bank1
  2987  0589  00AD               	movwf	??_sprintf^(0+128)
  2988  058A  082D               	movf	??_sprintf^(0+128),w
  2989  058B  00CA               	movwf	sprintf@c^(0+128)
  2990  058C  2D93               	goto	l291
  2991  058D                     l3122:
  2992                           
  2993                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2994  058D  1683               	bsf	3,5	;RP0=1, select bank1
  2995  058E  1303               	bcf	3,6	;RP1=0, select bank1
  2996  058F  0844               	movf	sprintf@prec^(0+128),w
  2997  0590  00AD               	movwf	??_sprintf^(0+128)
  2998  0591  082D               	movf	??_sprintf^(0+128),w
  2999  0592  00CA               	movwf	sprintf@c^(0+128)
  3000  0593                     l291:
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3003  0593  084A               	movf	sprintf@c^(0+128),w
  3004  0594  00AD               	movwf	??_sprintf^(0+128)
  3005  0595  01AE               	clrf	(??_sprintf^(0+128)+1)
  3006  0596  082D               	movf	??_sprintf^(0+128),w
  3007  0597  02C4               	subwf	sprintf@prec^(0+128),f
  3008  0598  082E               	movf	(??_sprintf+1)^(0+128),w
  3009  0599  1C03               	skipc
  3010  059A  03C5               	decf	(sprintf@prec+1)^(0+128),f
  3011  059B  02C5               	subwf	(sprintf@prec+1)^(0+128),f
  3012  059C                     l3124:
  3013                           
  3014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3015  059C  084A               	movf	sprintf@c^(0+128),w
  3016  059D  1903               	btfsc	3,2
  3017  059E  2DA0               	goto	u5221
  3018  059F  2DA1               	goto	u5220
  3019  05A0                     u5221:
  3020  05A0  2DAC               	goto	l3130
  3021  05A1                     u5220:
  3022  05A1                     l3126:
  3023                           
  3024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3025  05A1  302E               	movlw	46
  3026  05A2  00AD               	movwf	??_sprintf^(0+128)
  3027  05A3  0843               	movf	sprintf@sp^(0+128),w
  3028  05A4  0084               	movwf	4
  3029  05A5  082D               	movf	??_sprintf^(0+128),w
  3030  05A6  1383               	bcf	3,7	;select IRP bank0
  3031  05A7  0080               	movwf	0
  3032  05A8                     l3128:
  3033  05A8  3001               	movlw	1
  3034  05A9  00AD               	movwf	??_sprintf^(0+128)
  3035  05AA  082D               	movf	??_sprintf^(0+128),w
  3036  05AB  07C3               	addwf	sprintf@sp^(0+128),f
  3037  05AC                     l3130:
  3038                           
  3039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3040  05AC  084A               	movf	sprintf@c^(0+128),w
  3041  05AD  120A  158A  249D  120A  118A  	fcall	_scale
  3042  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  3043  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  3044  05B4  0849               	movf	?_scale+3,w
  3045  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  3046  05B6  1303               	bcf	3,6	;RP1=0, select bank1
  3047  05B7  00B5               	movwf	(_sprintf$1165+3)^(0+128)
  3048  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3049  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3050  05BA  0848               	movf	?_scale+2,w
  3051  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  3052  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  3053  05BD  00B4               	movwf	(_sprintf$1165+2)^(0+128)
  3054  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  3055  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  3056  05C0  0847               	movf	?_scale+1,w
  3057  05C1  1683               	bsf	3,5	;RP0=1, select bank1
  3058  05C2  1303               	bcf	3,6	;RP1=0, select bank1
  3059  05C3  00B3               	movwf	(_sprintf$1165+1)^(0+128)
  3060  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3061  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  3062  05C6  0846               	movf	?_scale,w
  3063  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  3064  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  3065  05C9  00B2               	movwf	_sprintf$1165^(0+128)
  3066  05CA                     l3132:
  3067                           
  3068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3069  05CA  0835               	movf	(_sprintf$1165+3)^(0+128),w
  3070  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  3071  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  3072  05CD  00B3               	movwf	___flmul@a+3
  3073  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  3074  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  3075  05D0  0834               	movf	(_sprintf$1165+2)^(0+128),w
  3076  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3077  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3078  05D3  00B2               	movwf	___flmul@a+2
  3079  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3080  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  3081  05D6  0833               	movf	(_sprintf$1165+1)^(0+128),w
  3082  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  3083  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  3084  05D9  00B1               	movwf	___flmul@a+1
  3085  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3086  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  3087  05DC  0832               	movf	_sprintf$1165^(0+128),w
  3088  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3089  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3090  05DF  00B0               	movwf	___flmul@a
  3091  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  3092  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  3093  05E2  0849               	movf	(sprintf@fval+3)^(0+128),w
  3094  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3095  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3096  05E5  00AF               	movwf	___flmul@b+3
  3097  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  3098  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  3099  05E8  0848               	movf	(sprintf@fval+2)^(0+128),w
  3100  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  3101  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  3102  05EB  00AE               	movwf	___flmul@b+2
  3103  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  3104  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  3105  05EE  0847               	movf	(sprintf@fval+1)^(0+128),w
  3106  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3107  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3108  05F1  00AD               	movwf	___flmul@b+1
  3109  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  3110  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  3111  05F4  0846               	movf	sprintf@fval^(0+128),w
  3112  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3113  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  3114  05F7  00AC               	movwf	___flmul@b
  3115  05F8  120A  158A  213C  120A  118A  	fcall	___flmul
  3116  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3117  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  3118  05FF  082F               	movf	?___flmul+3,w
  3119  0600  00DC               	movwf	___fltol@f1+3
  3120  0601  082E               	movf	?___flmul+2,w
  3121  0602  00DB               	movwf	___fltol@f1+2
  3122  0603  082D               	movf	?___flmul+1,w
  3123  0604  00DA               	movwf	___fltol@f1+1
  3124  0605  082C               	movf	?___flmul,w
  3125  0606  00D9               	movwf	___fltol@f1
  3126  0607  160A  158A  2784  120A  118A  	fcall	___fltol
  3127  060C  1283               	bcf	3,5	;RP0=0, select bank0
  3128  060D  1303               	bcf	3,6	;RP1=0, select bank0
  3129  060E  085C               	movf	?___fltol+3,w
  3130  060F  1683               	bsf	3,5	;RP0=1, select bank1
  3131  0610  1303               	bcf	3,6	;RP1=0, select bank1
  3132  0611  00BC               	movwf	(sprintf@val+3)^(0+128)
  3133  0612  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0613  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0614  085B               	movf	?___fltol+2,w
  3136  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3137  0616  1303               	bcf	3,6	;RP1=0, select bank1
  3138  0617  00BB               	movwf	(sprintf@val+2)^(0+128)
  3139  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3141  061A  085A               	movf	?___fltol+1,w
  3142  061B  1683               	bsf	3,5	;RP0=1, select bank1
  3143  061C  1303               	bcf	3,6	;RP1=0, select bank1
  3144  061D  00BA               	movwf	(sprintf@val+1)^(0+128)
  3145  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3146  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3147  0620  0859               	movf	?___fltol,w
  3148  0621  1683               	bsf	3,5	;RP0=1, select bank1
  3149  0622  1303               	bcf	3,6	;RP1=0, select bank1
  3150  0623  00B9               	movwf	sprintf@val^(0+128)
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3153  0624  2F26               	goto	l3142
  3154  0625                     l3134:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3157  0625  084A               	movf	sprintf@c^(0+128),w
  3158  0626  00AD               	movwf	??_sprintf^(0+128)
  3159  0627  3001               	movlw	1
  3160  0628                     u5235:
  3161  0628  1003               	clrc
  3162  0629  0DAD               	rlf	??_sprintf^(0+128),f
  3163  062A  3EFF               	addlw	-1
  3164  062B  1D03               	skipz
  3165  062C  2E28               	goto	u5235
  3166  062D  1003               	clrc
  3167  062E  0D2D               	rlf	??_sprintf^(0+128),w
  3168  062F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3169  0630  0084               	movwf	4
  3170  0631  120A  158A  200A  120A  118A  	fcall	stringdir
  3171  0636  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0637  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0638  00A0               	movwf	___lldiv@divisor
  3174  0639  120A  158A  200A  120A  118A  	fcall	stringdir
  3175  063E  00A1               	movwf	___lldiv@divisor+1
  3176  063F  120A  158A  200A  120A  118A  	fcall	stringdir
  3177  0644  00A2               	movwf	___lldiv@divisor+2
  3178  0645  120A  158A  200A  120A  118A  	fcall	stringdir
  3179  064A  00A3               	movwf	___lldiv@divisor+3
  3180  064B  1683               	bsf	3,5	;RP0=1, select bank1
  3181  064C  1303               	bcf	3,6	;RP1=0, select bank1
  3182  064D  083C               	movf	(sprintf@val+3)^(0+128),w
  3183  064E  1283               	bcf	3,5	;RP0=0, select bank0
  3184  064F  1303               	bcf	3,6	;RP1=0, select bank0
  3185  0650  00A7               	movwf	___lldiv@dividend+3
  3186  0651  1683               	bsf	3,5	;RP0=1, select bank1
  3187  0652  1303               	bcf	3,6	;RP1=0, select bank1
  3188  0653  083B               	movf	(sprintf@val+2)^(0+128),w
  3189  0654  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0655  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0656  00A6               	movwf	___lldiv@dividend+2
  3192  0657  1683               	bsf	3,5	;RP0=1, select bank1
  3193  0658  1303               	bcf	3,6	;RP1=0, select bank1
  3194  0659  083A               	movf	(sprintf@val+1)^(0+128),w
  3195  065A  1283               	bcf	3,5	;RP0=0, select bank0
  3196  065B  1303               	bcf	3,6	;RP1=0, select bank0
  3197  065C  00A5               	movwf	___lldiv@dividend+1
  3198  065D  1683               	bsf	3,5	;RP0=1, select bank1
  3199  065E  1303               	bcf	3,6	;RP1=0, select bank1
  3200  065F  0839               	movf	sprintf@val^(0+128),w
  3201  0660  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0661  1303               	bcf	3,6	;RP1=0, select bank0
  3203  0662  00A4               	movwf	___lldiv@dividend
  3204  0663  160A  158A  271C  120A  118A  	fcall	___lldiv
  3205  0668  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0669  1303               	bcf	3,6	;RP1=0, select bank0
  3207  066A  0823               	movf	?___lldiv+3,w
  3208  066B  1683               	bsf	3,5	;RP0=1, select bank1
  3209  066C  1303               	bcf	3,6	;RP1=0, select bank1
  3210  066D  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3211  066E  1283               	bcf	3,5	;RP0=0, select bank0
  3212  066F  1303               	bcf	3,6	;RP1=0, select bank0
  3213  0670  0822               	movf	?___lldiv+2,w
  3214  0671  1683               	bsf	3,5	;RP0=1, select bank1
  3215  0672  1303               	bcf	3,6	;RP1=0, select bank1
  3216  0673  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3217  0674  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0675  1303               	bcf	3,6	;RP1=0, select bank0
  3219  0676  0821               	movf	?___lldiv+1,w
  3220  0677  1683               	bsf	3,5	;RP0=1, select bank1
  3221  0678  1303               	bcf	3,6	;RP1=0, select bank1
  3222  0679  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3223  067A  1283               	bcf	3,5	;RP0=0, select bank0
  3224  067B  1303               	bcf	3,6	;RP1=0, select bank0
  3225  067C  0820               	movf	?___lldiv,w
  3226  067D  1683               	bsf	3,5	;RP0=1, select bank1
  3227  067E  1303               	bcf	3,6	;RP1=0, select bank1
  3228  067F  00BF               	movwf	sprintf@tmpval^(0+128)
  3229  0680                     l3136:
  3230                           
  3231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3232  0680  3000               	movlw	0
  3233  0681  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0682  1303               	bcf	3,6	;RP1=0, select bank0
  3235  0683  00A3               	movwf	___llmod@divisor+3
  3236  0684  3000               	movlw	0
  3237  0685  00A2               	movwf	___llmod@divisor+2
  3238  0686  3000               	movlw	0
  3239  0687  00A1               	movwf	___llmod@divisor+1
  3240  0688  300A               	movlw	10
  3241  0689  00A0               	movwf	___llmod@divisor
  3242  068A  1683               	bsf	3,5	;RP0=1, select bank1
  3243  068B  1303               	bcf	3,6	;RP1=0, select bank1
  3244  068C  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  3245  068D  1283               	bcf	3,5	;RP0=0, select bank0
  3246  068E  1303               	bcf	3,6	;RP1=0, select bank0
  3247  068F  00A7               	movwf	___llmod@dividend+3
  3248  0690  1683               	bsf	3,5	;RP0=1, select bank1
  3249  0691  1303               	bcf	3,6	;RP1=0, select bank1
  3250  0692  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  3251  0693  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0694  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0695  00A6               	movwf	___llmod@dividend+2
  3254  0696  1683               	bsf	3,5	;RP0=1, select bank1
  3255  0697  1303               	bcf	3,6	;RP1=0, select bank1
  3256  0698  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  3257  0699  1283               	bcf	3,5	;RP0=0, select bank0
  3258  069A  1303               	bcf	3,6	;RP1=0, select bank0
  3259  069B  00A5               	movwf	___llmod@dividend+1
  3260  069C  1683               	bsf	3,5	;RP0=1, select bank1
  3261  069D  1303               	bcf	3,6	;RP1=0, select bank1
  3262  069E  083F               	movf	sprintf@tmpval^(0+128),w
  3263  069F  1283               	bcf	3,5	;RP0=0, select bank0
  3264  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3265  06A1  00A4               	movwf	___llmod@dividend
  3266  06A2  160A  158A  266C  120A  118A  	fcall	___llmod
  3267  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3268  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3269  06A9  0823               	movf	?___llmod+3,w
  3270  06AA  1683               	bsf	3,5	;RP0=1, select bank1
  3271  06AB  1303               	bcf	3,6	;RP1=0, select bank1
  3272  06AC  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3273  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3274  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3275  06AF  0822               	movf	?___llmod+2,w
  3276  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  3277  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  3278  06B2  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3279  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  3280  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  3281  06B5  0821               	movf	?___llmod+1,w
  3282  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  3283  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  3284  06B8  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3285  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3286  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3287  06BB  0820               	movf	?___llmod,w
  3288  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  3289  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  3290  06BE  00BF               	movwf	sprintf@tmpval^(0+128)
  3291  06BF                     l3138:
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3294  06BF  083F               	movf	sprintf@tmpval^(0+128),w
  3295  06C0  3E30               	addlw	48
  3296  06C1  00AD               	movwf	??_sprintf^(0+128)
  3297  06C2  0843               	movf	sprintf@sp^(0+128),w
  3298  06C3  0084               	movwf	4
  3299  06C4  082D               	movf	??_sprintf^(0+128),w
  3300  06C5  1383               	bcf	3,7	;select IRP bank0
  3301  06C6  0080               	movwf	0
  3302  06C7  3001               	movlw	1
  3303  06C8  00AD               	movwf	??_sprintf^(0+128)
  3304  06C9  082D               	movf	??_sprintf^(0+128),w
  3305  06CA  07C3               	addwf	sprintf@sp^(0+128),f
  3306  06CB                     l3140:
  3307                           
  3308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3309  06CB  084A               	movf	sprintf@c^(0+128),w
  3310  06CC  00AD               	movwf	??_sprintf^(0+128)
  3311  06CD  3001               	movlw	1
  3312  06CE                     u5245:
  3313  06CE  1003               	clrc
  3314  06CF  0DAD               	rlf	??_sprintf^(0+128),f
  3315  06D0  3EFF               	addlw	-1
  3316  06D1  1D03               	skipz
  3317  06D2  2ECE               	goto	u5245
  3318  06D3  1003               	clrc
  3319  06D4  0D2D               	rlf	??_sprintf^(0+128),w
  3320  06D5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3321  06D6  0084               	movwf	4
  3322  06D7  120A  158A  200A  120A  118A  	fcall	stringdir
  3323  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  3324  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  3325  06DE  00A0               	movwf	___llmod@divisor
  3326  06DF  120A  158A  200A  120A  118A  	fcall	stringdir
  3327  06E4  00A1               	movwf	___llmod@divisor+1
  3328  06E5  120A  158A  200A  120A  118A  	fcall	stringdir
  3329  06EA  00A2               	movwf	___llmod@divisor+2
  3330  06EB  120A  158A  200A  120A  118A  	fcall	stringdir
  3331  06F0  00A3               	movwf	___llmod@divisor+3
  3332  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  3333  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  3334  06F3  083C               	movf	(sprintf@val+3)^(0+128),w
  3335  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  3336  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  3337  06F6  00A7               	movwf	___llmod@dividend+3
  3338  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  3339  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  3340  06F9  083B               	movf	(sprintf@val+2)^(0+128),w
  3341  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  3342  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  3343  06FC  00A6               	movwf	___llmod@dividend+2
  3344  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  3345  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  3346  06FF  083A               	movf	(sprintf@val+1)^(0+128),w
  3347  0700  1283               	bcf	3,5	;RP0=0, select bank0
  3348  0701  1303               	bcf	3,6	;RP1=0, select bank0
  3349  0702  00A5               	movwf	___llmod@dividend+1
  3350  0703  1683               	bsf	3,5	;RP0=1, select bank1
  3351  0704  1303               	bcf	3,6	;RP1=0, select bank1
  3352  0705  0839               	movf	sprintf@val^(0+128),w
  3353  0706  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0707  1303               	bcf	3,6	;RP1=0, select bank0
  3355  0708  00A4               	movwf	___llmod@dividend
  3356  0709  160A  158A  266C  120A  118A  	fcall	___llmod
  3357  070E  1283               	bcf	3,5	;RP0=0, select bank0
  3358  070F  1303               	bcf	3,6	;RP1=0, select bank0
  3359  0710  0823               	movf	?___llmod+3,w
  3360  0711  1683               	bsf	3,5	;RP0=1, select bank1
  3361  0712  1303               	bcf	3,6	;RP1=0, select bank1
  3362  0713  00BC               	movwf	(sprintf@val+3)^(0+128)
  3363  0714  1283               	bcf	3,5	;RP0=0, select bank0
  3364  0715  1303               	bcf	3,6	;RP1=0, select bank0
  3365  0716  0822               	movf	?___llmod+2,w
  3366  0717  1683               	bsf	3,5	;RP0=1, select bank1
  3367  0718  1303               	bcf	3,6	;RP1=0, select bank1
  3368  0719  00BB               	movwf	(sprintf@val+2)^(0+128)
  3369  071A  1283               	bcf	3,5	;RP0=0, select bank0
  3370  071B  1303               	bcf	3,6	;RP1=0, select bank0
  3371  071C  0821               	movf	?___llmod+1,w
  3372  071D  1683               	bsf	3,5	;RP0=1, select bank1
  3373  071E  1303               	bcf	3,6	;RP1=0, select bank1
  3374  071F  00BA               	movwf	(sprintf@val+1)^(0+128)
  3375  0720  1283               	bcf	3,5	;RP0=0, select bank0
  3376  0721  1303               	bcf	3,6	;RP1=0, select bank0
  3377  0722  0820               	movf	?___llmod,w
  3378  0723  1683               	bsf	3,5	;RP0=1, select bank1
  3379  0724  1303               	bcf	3,6	;RP1=0, select bank1
  3380  0725  00B9               	movwf	sprintf@val^(0+128)
  3381  0726                     l3142:
  3382                           
  3383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3384  0726  3001               	movlw	1
  3385  0727  02CA               	subwf	sprintf@c^(0+128),f
  3386  0728  0A4A               	incf	sprintf@c^(0+128),w
  3387  0729  1D03               	btfss	3,2
  3388  072A  2F2C               	goto	u5251
  3389  072B  2F2D               	goto	u5250
  3390  072C                     u5251:
  3391  072C  2E25               	goto	l3134
  3392  072D                     u5250:
  3393  072D  2F3F               	goto	l3150
  3394  072E                     l3144:
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3397  072E  3030               	movlw	48
  3398  072F  00AD               	movwf	??_sprintf^(0+128)
  3399  0730  0843               	movf	sprintf@sp^(0+128),w
  3400  0731  0084               	movwf	4
  3401  0732  082D               	movf	??_sprintf^(0+128),w
  3402  0733  1383               	bcf	3,7	;select IRP bank0
  3403  0734  0080               	movwf	0
  3404  0735                     l3146:
  3405  0735  3001               	movlw	1
  3406  0736  00AD               	movwf	??_sprintf^(0+128)
  3407  0737  082D               	movf	??_sprintf^(0+128),w
  3408  0738  07C3               	addwf	sprintf@sp^(0+128),f
  3409  0739                     l3148:
  3410                           
  3411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3412  0739  30FF               	movlw	255
  3413  073A  07C4               	addwf	sprintf@prec^(0+128),f
  3414  073B  1803               	skipnc
  3415  073C  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  3416  073D  30FF               	movlw	255
  3417  073E  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  3418  073F                     l3150:
  3419                           
  3420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3421  073F  0844               	movf	sprintf@prec^(0+128),w
  3422  0740  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3423  0741  1D03               	btfss	3,2
  3424  0742  2F44               	goto	u5261
  3425  0743  2F45               	goto	u5260
  3426  0744                     u5261:
  3427  0744  2F2E               	goto	l3144
  3428  0745                     u5260:
  3429  0745  2F8B               	goto	l3170
  3430  0746                     l3152:
  3431                           
  3432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3433  0746  0844               	movf	sprintf@prec^(0+128),w
  3434  0747  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3435  0748  1D03               	btfss	3,2
  3436  0749  2F4B               	goto	u5271
  3437  074A  2F4C               	goto	u5270
  3438  074B                     u5271:
  3439  074B  2F5A               	goto	l299
  3440  074C                     u5270:
  3441  074C                     l3154:
  3442  074C  083C               	movf	(sprintf@val+3)^(0+128),w
  3443  074D  043B               	iorwf	(sprintf@val+2)^(0+128),w
  3444  074E  043A               	iorwf	(sprintf@val+1)^(0+128),w
  3445  074F  0439               	iorwf	sprintf@val^(0+128),w
  3446  0750  1D03               	skipz
  3447  0751  2F53               	goto	u5281
  3448  0752  2F54               	goto	u5280
  3449  0753                     u5281:
  3450  0753  2F5A               	goto	l299
  3451  0754                     u5280:
  3452  0754                     l3156:
  3453                           
  3454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3455  0754  3001               	movlw	1
  3456  0755  07C4               	addwf	sprintf@prec^(0+128),f
  3457  0756  1803               	skipnc
  3458  0757  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  3459  0758  3000               	movlw	0
  3460  0759  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  3461  075A                     l299:
  3462                           
  3463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3464  075A  0845               	movf	(sprintf@prec+1)^(0+128),w
  3465  075B  3A80               	xorlw	128
  3466  075C  3C80               	sublw	128
  3467  075D  1D03               	skipz
  3468  075E  2F61               	goto	u5295
  3469  075F  0844               	movf	sprintf@prec^(0+128),w
  3470  0760  024A               	subwf	sprintf@c^(0+128),w
  3471  0761                     u5295:
  3472  0761  1803               	skipnc
  3473  0762  2F64               	goto	u5291
  3474  0763  2F65               	goto	u5290
  3475  0764                     u5291:
  3476  0764  2F66               	goto	l3160
  3477  0765                     u5290:
  3478  0765                     l3158:
  3479  0765  2F75               	goto	l3164
  3480  0766                     l3160:
  3481  0766  1683               	bsf	3,5	;RP0=1, select bank1
  3482  0767  1303               	bcf	3,6	;RP1=0, select bank1
  3483  0768  0845               	movf	(sprintf@prec+1)^(0+128),w
  3484  0769  3A80               	xorlw	128
  3485  076A  00AD               	movwf	??_sprintf^(0+128)
  3486  076B  3080               	movlw	128
  3487  076C  022D               	subwf	??_sprintf^(0+128),w
  3488  076D  1D03               	skipz
  3489  076E  2F71               	goto	u5305
  3490  076F  084A               	movf	sprintf@c^(0+128),w
  3491  0770  0244               	subwf	sprintf@prec^(0+128),w
  3492  0771                     u5305:
  3493  0771  1803               	skipnc
  3494  0772  2F74               	goto	u5301
  3495  0773  2F75               	goto	u5300
  3496  0774                     u5301:
  3497  0774  2F75               	goto	l3164
  3498  0775                     u5300:
  3499  0775                     l3162:
  3500  0775                     l3164:
  3501                           
  3502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3503  0775  3003               	movlw	3
  3504  0776  1683               	bsf	3,5	;RP0=1, select bank1
  3505  0777  1303               	bcf	3,6	;RP1=0, select bank1
  3506  0778  0537               	andwf	sprintf@flag^(0+128),w
  3507  0779  00AD               	movwf	??_sprintf^(0+128)
  3508  077A  3000               	movlw	0
  3509  077B  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3510  077C  00AE               	movwf	(??_sprintf+1)^(0+128)
  3511  077D  082D               	movf	??_sprintf^(0+128),w
  3512  077E  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3513  077F  1903               	btfsc	3,2
  3514  0780  2F82               	goto	u5311
  3515  0781  2F83               	goto	u5310
  3516  0782                     u5311:
  3517  0782  2F8B               	goto	l3170
  3518  0783                     u5310:
  3519  0783                     l3166:
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3522  0783  302D               	movlw	45
  3523  0784  00AD               	movwf	??_sprintf^(0+128)
  3524  0785  0843               	movf	sprintf@sp^(0+128),w
  3525  0786  0084               	movwf	4
  3526  0787  082D               	movf	??_sprintf^(0+128),w
  3527  0788  1383               	bcf	3,7	;select IRP bank0
  3528  0789  0080               	movwf	0
  3529  078A  2831               	goto	l2982
  3530  078B                     l3170:
  3531                           
  3532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3533  078B  3001               	movlw	1
  3534  078C  07A8               	addwf	sprintf@f^(0+128),f
  3535  078D  30FF               	movlw	-1
  3536  078E  0728               	addwf	sprintf@f^(0+128),w
  3537  078F  0084               	movwf	4
  3538  0790  120A  158A  200A  120A  118A  	fcall	stringdir
  3539  0795  00AD               	movwf	??_sprintf^(0+128)
  3540  0796  082D               	movf	??_sprintf^(0+128),w
  3541  0797  00CA               	movwf	sprintf@c^(0+128)
  3542  0798  084A               	movf	sprintf@c^(0+128),w
  3543  0799  1D03               	btfss	3,2
  3544  079A  2F9C               	goto	u5321
  3545  079B  2F9D               	goto	u5320
  3546  079C                     u5321:
  3547  079C  2824               	goto	l2978
  3548  079D                     u5320:
  3549  079D                     l3172:
  3550                           
  3551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3552  079D  0843               	movf	sprintf@sp^(0+128),w
  3553  079E  0084               	movwf	4
  3554  079F  1383               	bcf	3,7	;select IRP bank0
  3555  07A0  0180               	clrf	0
  3556  07A1                     l305:
  3557  07A1  0008               	return
  3558  07A2                     __end_of_sprintf:
  3559                           
  3560                           	psect	text3
  3561  0C9D                     __ptext3:	
  3562 ;; *************** function _scale *****************
  3563 ;; Defined at:
  3564 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  scl             1    wreg     char 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  scl             1   56[BANK0 ] char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  4   38[BANK0 ] char 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3578 ;;      Params:         0       4       0       0       0
  3579 ;;      Locals:         0       5       0       0       0
  3580 ;;      Temps:          0      10       0       0       0
  3581 ;;      Totals:         0      19       0       0       0
  3582 ;;Total ram usage:       19 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    4
  3585 ;; This function calls:
  3586 ;;		___awdiv
  3587 ;;		___awmod
  3588 ;;		___flmul
  3589 ;; This function is called by:
  3590 ;;		_sprintf
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           
  3595                           ;psect for function _scale
  3596  0C9D                     _scale:
  3597                           
  3598                           ;incstack = 0
  3599                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3600                           ;scale@scl stored from wreg
  3601  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3602  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3603  0C9F  00D8               	movwf	scale@scl
  3604  0CA0                     l2616:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3607  0CA0  1FD8               	btfss	scale@scl,7
  3608  0CA1  2CA3               	goto	u3961
  3609  0CA2  2CA4               	goto	u3960
  3610  0CA3                     u3961:
  3611  0CA3  2E53               	goto	l2638
  3612  0CA4                     u3960:
  3613  0CA4                     l2618:
  3614                           
  3615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3616  0CA4  09D8               	comf	scale@scl,f
  3617  0CA5  0AD8               	incf	scale@scl,f
  3618  0CA6                     l2620:
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3621  0CA6  0858               	movf	scale@scl,w
  3622  0CA7  3A80               	xorlw	128
  3623  0CA8  3E12               	addlw	-238
  3624  0CA9  1C03               	skipc
  3625  0CAA  2CAC               	goto	u3971
  3626  0CAB  2CAD               	goto	u3970
  3627  0CAC                     u3971:
  3628  0CAC  2D97               	goto	l2628
  3629  0CAD                     u3970:
  3630  0CAD                     l2622:
  3631                           
  3632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3633  0CAD  300A               	movlw	10
  3634  0CAE  00A3               	movwf	___awdiv@divisor
  3635  0CAF  3000               	movlw	0
  3636  0CB0  00A4               	movwf	___awdiv@divisor+1
  3637  0CB1  0858               	movf	scale@scl,w
  3638  0CB2  00F7               	movwf	___awmod@dividend
  3639  0CB3  01F8               	clrf	___awmod@dividend+1
  3640  0CB4  1BF7               	btfsc	___awmod@dividend,7
  3641  0CB5  03F8               	decf	___awmod@dividend+1,f
  3642  0CB6  3064               	movlw	100
  3643  0CB7  00F5               	movwf	___awmod@divisor
  3644  0CB8  3000               	movlw	0
  3645  0CB9  00F6               	movwf	___awmod@divisor+1
  3646  0CBA  120A  118A  27A2  120A  158A  	fcall	___awmod
  3647  0CBF  0876               	movf	?___awmod+1,w
  3648  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3650  0CC2  00A6               	movwf	___awdiv@dividend+1
  3651  0CC3  0875               	movf	?___awmod,w
  3652  0CC4  00A5               	movwf	___awdiv@dividend
  3653  0CC5  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3654  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3656  0CCC  0823               	movf	?___awdiv,w
  3657  0CCD  00CA               	movwf	??_scale
  3658  0CCE  3001               	movlw	1
  3659  0CCF                     u3985:
  3660  0CCF  1003               	clrc
  3661  0CD0  0DCA               	rlf	??_scale,f
  3662  0CD1  3EFF               	addlw	-1
  3663  0CD2  1D03               	skipz
  3664  0CD3  2CCF               	goto	u3985
  3665  0CD4  1003               	clrc
  3666  0CD5  0D4A               	rlf	??_scale,w
  3667  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3668  0CD7  0084               	movwf	4
  3669  0CD8  120A  158A  200A  120A  158A  	fcall	stringdir
  3670  0CDD  00CB               	movwf	??_scale+1
  3671  0CDE  120A  158A  200A  120A  158A  	fcall	stringdir
  3672  0CE3  00CC               	movwf	??_scale+2
  3673  0CE4  120A  158A  200A  120A  158A  	fcall	stringdir
  3674  0CE9  00CD               	movwf	??_scale+3
  3675  0CEA  120A  158A  200A  120A  158A  	fcall	stringdir
  3676  0CEF  00CE               	movwf	??_scale+4
  3677  0CF0  084E               	movf	??_scale+4,w
  3678  0CF1  00AF               	movwf	___flmul@b+3
  3679  0CF2  084D               	movf	??_scale+3,w
  3680  0CF3  00AE               	movwf	___flmul@b+2
  3681  0CF4  084C               	movf	??_scale+2,w
  3682  0CF5  00AD               	movwf	___flmul@b+1
  3683  0CF6  084B               	movf	??_scale+1,w
  3684  0CF7  00AC               	movwf	___flmul@b
  3685  0CF8  3064               	movlw	100
  3686  0CF9  00A3               	movwf	___awdiv@divisor
  3687  0CFA  3000               	movlw	0
  3688  0CFB  00A4               	movwf	___awdiv@divisor+1
  3689  0CFC  0858               	movf	scale@scl,w
  3690  0CFD  00A5               	movwf	___awdiv@dividend
  3691  0CFE  01A6               	clrf	___awdiv@dividend+1
  3692  0CFF  1BA5               	btfsc	___awdiv@dividend,7
  3693  0D00  03A6               	decf	___awdiv@dividend+1,f
  3694  0D01  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3695  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3696  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3697  0D08  0823               	movf	?___awdiv,w
  3698  0D09  00CF               	movwf	??_scale+5
  3699  0D0A  3001               	movlw	1
  3700  0D0B                     u3995:
  3701  0D0B  1003               	clrc
  3702  0D0C  0DCF               	rlf	??_scale+5,f
  3703  0D0D  3EFF               	addlw	-1
  3704  0D0E  1D03               	skipz
  3705  0D0F  2D0B               	goto	u3995
  3706  0D10  1003               	clrc
  3707  0D11  0D4F               	rlf	??_scale+5,w
  3708  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3709  0D13  0084               	movwf	4
  3710  0D14  120A  158A  200A  120A  158A  	fcall	stringdir
  3711  0D19  00D0               	movwf	??_scale+6
  3712  0D1A  120A  158A  200A  120A  158A  	fcall	stringdir
  3713  0D1F  00D1               	movwf	??_scale+7
  3714  0D20  120A  158A  200A  120A  158A  	fcall	stringdir
  3715  0D25  00D2               	movwf	??_scale+8
  3716  0D26  120A  158A  200A  120A  158A  	fcall	stringdir
  3717  0D2B  00D3               	movwf	??_scale+9
  3718  0D2C  0853               	movf	??_scale+9,w
  3719  0D2D  00B3               	movwf	___flmul@a+3
  3720  0D2E  0852               	movf	??_scale+8,w
  3721  0D2F  00B2               	movwf	___flmul@a+2
  3722  0D30  0851               	movf	??_scale+7,w
  3723  0D31  00B1               	movwf	___flmul@a+1
  3724  0D32  0850               	movf	??_scale+6,w
  3725  0D33  00B0               	movwf	___flmul@a
  3726  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3727  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3728  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3729  0D3B  082F               	movf	?___flmul+3,w
  3730  0D3C  00D7               	movwf	_scale$1164+3
  3731  0D3D  082E               	movf	?___flmul+2,w
  3732  0D3E  00D6               	movwf	_scale$1164+2
  3733  0D3F  082D               	movf	?___flmul+1,w
  3734  0D40  00D5               	movwf	_scale$1164+1
  3735  0D41  082C               	movf	?___flmul,w
  3736  0D42  00D4               	movwf	_scale$1164
  3737                           
  3738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3739  0D43  300A               	movlw	10
  3740  0D44  00F5               	movwf	___awmod@divisor
  3741  0D45  3000               	movlw	0
  3742  0D46  00F6               	movwf	___awmod@divisor+1
  3743  0D47  0858               	movf	scale@scl,w
  3744  0D48  00F7               	movwf	___awmod@dividend
  3745  0D49  01F8               	clrf	___awmod@dividend+1
  3746  0D4A  1BF7               	btfsc	___awmod@dividend,7
  3747  0D4B  03F8               	decf	___awmod@dividend+1,f
  3748  0D4C  120A  118A  27A2  120A  158A  	fcall	___awmod
  3749  0D51  0875               	movf	?___awmod,w
  3750  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3752  0D54  00CA               	movwf	??_scale
  3753  0D55  3001               	movlw	1
  3754  0D56                     u4005:
  3755  0D56  1003               	clrc
  3756  0D57  0DCA               	rlf	??_scale,f
  3757  0D58  3EFF               	addlw	-1
  3758  0D59  1D03               	skipz
  3759  0D5A  2D56               	goto	u4005
  3760  0D5B  1003               	clrc
  3761  0D5C  0D4A               	rlf	??_scale,w
  3762  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3763  0D5E  0084               	movwf	4
  3764  0D5F  120A  158A  200A  120A  158A  	fcall	stringdir
  3765  0D64  00CB               	movwf	??_scale+1
  3766  0D65  120A  158A  200A  120A  158A  	fcall	stringdir
  3767  0D6A  00CC               	movwf	??_scale+2
  3768  0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  3769  0D70  00CD               	movwf	??_scale+3
  3770  0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  3771  0D76  00CE               	movwf	??_scale+4
  3772  0D77  084E               	movf	??_scale+4,w
  3773  0D78  00AF               	movwf	___flmul@b+3
  3774  0D79  084D               	movf	??_scale+3,w
  3775  0D7A  00AE               	movwf	___flmul@b+2
  3776  0D7B  084C               	movf	??_scale+2,w
  3777  0D7C  00AD               	movwf	___flmul@b+1
  3778  0D7D  084B               	movf	??_scale+1,w
  3779  0D7E  00AC               	movwf	___flmul@b
  3780  0D7F  0857               	movf	_scale$1164+3,w
  3781  0D80  00B3               	movwf	___flmul@a+3
  3782  0D81  0856               	movf	_scale$1164+2,w
  3783  0D82  00B2               	movwf	___flmul@a+2
  3784  0D83  0855               	movf	_scale$1164+1,w
  3785  0D84  00B1               	movwf	___flmul@a+1
  3786  0D85  0854               	movf	_scale$1164,w
  3787  0D86  00B0               	movwf	___flmul@a
  3788  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3789  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3790  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3791  0D8E  082F               	movf	?___flmul+3,w
  3792  0D8F  00C9               	movwf	?_scale+3
  3793  0D90  082E               	movf	?___flmul+2,w
  3794  0D91  00C8               	movwf	?_scale+2
  3795  0D92  082D               	movf	?___flmul+1,w
  3796  0D93  00C7               	movwf	?_scale+1
  3797  0D94  082C               	movf	?___flmul,w
  3798  0D95  00C6               	movwf	?_scale
  3799  0D96  2FFF               	goto	l239
  3800  0D97                     l2628:
  3801  0D97  0858               	movf	scale@scl,w
  3802  0D98  3A80               	xorlw	128
  3803  0D99  3E75               	addlw	-139
  3804  0D9A  1C03               	skipc
  3805  0D9B  2D9D               	goto	u4011
  3806  0D9C  2D9E               	goto	u4010
  3807  0D9D                     u4011:
  3808  0D9D  2E26               	goto	l2634
  3809  0D9E                     u4010:
  3810  0D9E                     l2630:
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3813  0D9E  300A               	movlw	10
  3814  0D9F  00F5               	movwf	___awmod@divisor
  3815  0DA0  3000               	movlw	0
  3816  0DA1  00F6               	movwf	___awmod@divisor+1
  3817  0DA2  0858               	movf	scale@scl,w
  3818  0DA3  00F7               	movwf	___awmod@dividend
  3819  0DA4  01F8               	clrf	___awmod@dividend+1
  3820  0DA5  1BF7               	btfsc	___awmod@dividend,7
  3821  0DA6  03F8               	decf	___awmod@dividend+1,f
  3822  0DA7  120A  118A  27A2  120A  158A  	fcall	___awmod
  3823  0DAC  0875               	movf	?___awmod,w
  3824  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3825  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3826  0DAF  00CA               	movwf	??_scale
  3827  0DB0  3001               	movlw	1
  3828  0DB1                     u4025:
  3829  0DB1  1003               	clrc
  3830  0DB2  0DCA               	rlf	??_scale,f
  3831  0DB3  3EFF               	addlw	-1
  3832  0DB4  1D03               	skipz
  3833  0DB5  2DB1               	goto	u4025
  3834  0DB6  1003               	clrc
  3835  0DB7  0D4A               	rlf	??_scale,w
  3836  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3837  0DB9  0084               	movwf	4
  3838  0DBA  120A  158A  200A  120A  158A  	fcall	stringdir
  3839  0DBF  00CB               	movwf	??_scale+1
  3840  0DC0  120A  158A  200A  120A  158A  	fcall	stringdir
  3841  0DC5  00CC               	movwf	??_scale+2
  3842  0DC6  120A  158A  200A  120A  158A  	fcall	stringdir
  3843  0DCB  00CD               	movwf	??_scale+3
  3844  0DCC  120A  158A  200A  120A  158A  	fcall	stringdir
  3845  0DD1  00CE               	movwf	??_scale+4
  3846  0DD2  084E               	movf	??_scale+4,w
  3847  0DD3  00AF               	movwf	___flmul@b+3
  3848  0DD4  084D               	movf	??_scale+3,w
  3849  0DD5  00AE               	movwf	___flmul@b+2
  3850  0DD6  084C               	movf	??_scale+2,w
  3851  0DD7  00AD               	movwf	___flmul@b+1
  3852  0DD8  084B               	movf	??_scale+1,w
  3853  0DD9  00AC               	movwf	___flmul@b
  3854  0DDA  300A               	movlw	10
  3855  0DDB  00A3               	movwf	___awdiv@divisor
  3856  0DDC  3000               	movlw	0
  3857  0DDD  00A4               	movwf	___awdiv@divisor+1
  3858  0DDE  0858               	movf	scale@scl,w
  3859  0DDF  00A5               	movwf	___awdiv@dividend
  3860  0DE0  01A6               	clrf	___awdiv@dividend+1
  3861  0DE1  1BA5               	btfsc	___awdiv@dividend,7
  3862  0DE2  03A6               	decf	___awdiv@dividend+1,f
  3863  0DE3  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3864  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3865  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3866  0DEA  0823               	movf	?___awdiv,w
  3867  0DEB  00CF               	movwf	??_scale+5
  3868  0DEC  3001               	movlw	1
  3869  0DED                     u4035:
  3870  0DED  1003               	clrc
  3871  0DEE  0DCF               	rlf	??_scale+5,f
  3872  0DEF  3EFF               	addlw	-1
  3873  0DF0  1D03               	skipz
  3874  0DF1  2DED               	goto	u4035
  3875  0DF2  1003               	clrc
  3876  0DF3  0D4F               	rlf	??_scale+5,w
  3877  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3878  0DF5  0084               	movwf	4
  3879  0DF6  120A  158A  200A  120A  158A  	fcall	stringdir
  3880  0DFB  00D0               	movwf	??_scale+6
  3881  0DFC  120A  158A  200A  120A  158A  	fcall	stringdir
  3882  0E01  00D1               	movwf	??_scale+7
  3883  0E02  120A  158A  200A  120A  158A  	fcall	stringdir
  3884  0E07  00D2               	movwf	??_scale+8
  3885  0E08  120A  158A  200A  120A  158A  	fcall	stringdir
  3886  0E0D  00D3               	movwf	??_scale+9
  3887  0E0E  0853               	movf	??_scale+9,w
  3888  0E0F  00B3               	movwf	___flmul@a+3
  3889  0E10  0852               	movf	??_scale+8,w
  3890  0E11  00B2               	movwf	___flmul@a+2
  3891  0E12  0851               	movf	??_scale+7,w
  3892  0E13  00B1               	movwf	___flmul@a+1
  3893  0E14  0850               	movf	??_scale+6,w
  3894  0E15  00B0               	movwf	___flmul@a
  3895  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3896  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3897  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3898  0E1D  082F               	movf	?___flmul+3,w
  3899  0E1E  00C9               	movwf	?_scale+3
  3900  0E1F  082E               	movf	?___flmul+2,w
  3901  0E20  00C8               	movwf	?_scale+2
  3902  0E21  082D               	movf	?___flmul+1,w
  3903  0E22  00C7               	movwf	?_scale+1
  3904  0E23  082C               	movf	?___flmul,w
  3905  0E24  00C6               	movwf	?_scale
  3906  0E25  2FFF               	goto	l239
  3907  0E26                     l2634:
  3908                           
  3909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3910  0E26  0858               	movf	scale@scl,w
  3911  0E27  00CA               	movwf	??_scale
  3912  0E28  3001               	movlw	1
  3913  0E29                     u4045:
  3914  0E29  1003               	clrc
  3915  0E2A  0DCA               	rlf	??_scale,f
  3916  0E2B  3EFF               	addlw	-1
  3917  0E2C  1D03               	skipz
  3918  0E2D  2E29               	goto	u4045
  3919  0E2E  1003               	clrc
  3920  0E2F  0D4A               	rlf	??_scale,w
  3921  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3922  0E31  0084               	movwf	4
  3923  0E32  120A  158A  200A  120A  158A  	fcall	stringdir
  3924  0E37  00CB               	movwf	??_scale+1
  3925  0E38  120A  158A  200A  120A  158A  	fcall	stringdir
  3926  0E3D  00CC               	movwf	??_scale+2
  3927  0E3E  120A  158A  200A  120A  158A  	fcall	stringdir
  3928  0E43  00CD               	movwf	??_scale+3
  3929  0E44  120A  158A  200A  120A  158A  	fcall	stringdir
  3930  0E49  00CE               	movwf	??_scale+4
  3931  0E4A  084E               	movf	??_scale+4,w
  3932  0E4B  00C9               	movwf	?_scale+3
  3933  0E4C  084D               	movf	??_scale+3,w
  3934  0E4D  00C8               	movwf	?_scale+2
  3935  0E4E  084C               	movf	??_scale+2,w
  3936  0E4F  00C7               	movwf	?_scale+1
  3937  0E50  084B               	movf	??_scale+1,w
  3938  0E51  00C6               	movwf	?_scale
  3939  0E52  2FFF               	goto	l239
  3940  0E53                     l2638:
  3941                           
  3942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3943  0E53  0858               	movf	scale@scl,w
  3944  0E54  3A80               	xorlw	128
  3945  0E55  3E12               	addlw	-238
  3946  0E56  1C03               	skipc
  3947  0E57  2E59               	goto	u4051
  3948  0E58  2E5A               	goto	u4050
  3949  0E59                     u4051:
  3950  0E59  2F44               	goto	l2646
  3951  0E5A                     u4050:
  3952  0E5A                     l2640:
  3953                           
  3954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3955  0E5A  300A               	movlw	10
  3956  0E5B  00A3               	movwf	___awdiv@divisor
  3957  0E5C  3000               	movlw	0
  3958  0E5D  00A4               	movwf	___awdiv@divisor+1
  3959  0E5E  0858               	movf	scale@scl,w
  3960  0E5F  00F7               	movwf	___awmod@dividend
  3961  0E60  01F8               	clrf	___awmod@dividend+1
  3962  0E61  1BF7               	btfsc	___awmod@dividend,7
  3963  0E62  03F8               	decf	___awmod@dividend+1,f
  3964  0E63  3064               	movlw	100
  3965  0E64  00F5               	movwf	___awmod@divisor
  3966  0E65  3000               	movlw	0
  3967  0E66  00F6               	movwf	___awmod@divisor+1
  3968  0E67  120A  118A  27A2  120A  158A  	fcall	___awmod
  3969  0E6C  0876               	movf	?___awmod+1,w
  3970  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3971  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3972  0E6F  00A6               	movwf	___awdiv@dividend+1
  3973  0E70  0875               	movf	?___awmod,w
  3974  0E71  00A5               	movwf	___awdiv@dividend
  3975  0E72  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3976  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3977  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3978  0E79  0823               	movf	?___awdiv,w
  3979  0E7A  00CA               	movwf	??_scale
  3980  0E7B  3001               	movlw	1
  3981  0E7C                     u4065:
  3982  0E7C  1003               	clrc
  3983  0E7D  0DCA               	rlf	??_scale,f
  3984  0E7E  3EFF               	addlw	-1
  3985  0E7F  1D03               	skipz
  3986  0E80  2E7C               	goto	u4065
  3987  0E81  1003               	clrc
  3988  0E82  0D4A               	rlf	??_scale,w
  3989  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3990  0E84  0084               	movwf	4
  3991  0E85  120A  158A  200A  120A  158A  	fcall	stringdir
  3992  0E8A  00CB               	movwf	??_scale+1
  3993  0E8B  120A  158A  200A  120A  158A  	fcall	stringdir
  3994  0E90  00CC               	movwf	??_scale+2
  3995  0E91  120A  158A  200A  120A  158A  	fcall	stringdir
  3996  0E96  00CD               	movwf	??_scale+3
  3997  0E97  120A  158A  200A  120A  158A  	fcall	stringdir
  3998  0E9C  00CE               	movwf	??_scale+4
  3999  0E9D  084E               	movf	??_scale+4,w
  4000  0E9E  00AF               	movwf	___flmul@b+3
  4001  0E9F  084D               	movf	??_scale+3,w
  4002  0EA0  00AE               	movwf	___flmul@b+2
  4003  0EA1  084C               	movf	??_scale+2,w
  4004  0EA2  00AD               	movwf	___flmul@b+1
  4005  0EA3  084B               	movf	??_scale+1,w
  4006  0EA4  00AC               	movwf	___flmul@b
  4007  0EA5  3064               	movlw	100
  4008  0EA6  00A3               	movwf	___awdiv@divisor
  4009  0EA7  3000               	movlw	0
  4010  0EA8  00A4               	movwf	___awdiv@divisor+1
  4011  0EA9  0858               	movf	scale@scl,w
  4012  0EAA  00A5               	movwf	___awdiv@dividend
  4013  0EAB  01A6               	clrf	___awdiv@dividend+1
  4014  0EAC  1BA5               	btfsc	___awdiv@dividend,7
  4015  0EAD  03A6               	decf	___awdiv@dividend+1,f
  4016  0EAE  120A  158A  20D3  120A  158A  	fcall	___awdiv
  4017  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4018  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4019  0EB5  0823               	movf	?___awdiv,w
  4020  0EB6  00CF               	movwf	??_scale+5
  4021  0EB7  3001               	movlw	1
  4022  0EB8                     u4075:
  4023  0EB8  1003               	clrc
  4024  0EB9  0DCF               	rlf	??_scale+5,f
  4025  0EBA  3EFF               	addlw	-1
  4026  0EBB  1D03               	skipz
  4027  0EBC  2EB8               	goto	u4075
  4028  0EBD  1003               	clrc
  4029  0EBE  0D4F               	rlf	??_scale+5,w
  4030  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4031  0EC0  0084               	movwf	4
  4032  0EC1  120A  158A  200A  120A  158A  	fcall	stringdir
  4033  0EC6  00D0               	movwf	??_scale+6
  4034  0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  4035  0ECC  00D1               	movwf	??_scale+7
  4036  0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  4037  0ED2  00D2               	movwf	??_scale+8
  4038  0ED3  120A  158A  200A  120A  158A  	fcall	stringdir
  4039  0ED8  00D3               	movwf	??_scale+9
  4040  0ED9  0853               	movf	??_scale+9,w
  4041  0EDA  00B3               	movwf	___flmul@a+3
  4042  0EDB  0852               	movf	??_scale+8,w
  4043  0EDC  00B2               	movwf	___flmul@a+2
  4044  0EDD  0851               	movf	??_scale+7,w
  4045  0EDE  00B1               	movwf	___flmul@a+1
  4046  0EDF  0850               	movf	??_scale+6,w
  4047  0EE0  00B0               	movwf	___flmul@a
  4048  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4049  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4050  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4051  0EE8  082F               	movf	?___flmul+3,w
  4052  0EE9  00D7               	movwf	_scale$1164+3
  4053  0EEA  082E               	movf	?___flmul+2,w
  4054  0EEB  00D6               	movwf	_scale$1164+2
  4055  0EEC  082D               	movf	?___flmul+1,w
  4056  0EED  00D5               	movwf	_scale$1164+1
  4057  0EEE  082C               	movf	?___flmul,w
  4058  0EEF  00D4               	movwf	_scale$1164
  4059                           
  4060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4061  0EF0  300A               	movlw	10
  4062  0EF1  00F5               	movwf	___awmod@divisor
  4063  0EF2  3000               	movlw	0
  4064  0EF3  00F6               	movwf	___awmod@divisor+1
  4065  0EF4  0858               	movf	scale@scl,w
  4066  0EF5  00F7               	movwf	___awmod@dividend
  4067  0EF6  01F8               	clrf	___awmod@dividend+1
  4068  0EF7  1BF7               	btfsc	___awmod@dividend,7
  4069  0EF8  03F8               	decf	___awmod@dividend+1,f
  4070  0EF9  120A  118A  27A2  120A  158A  	fcall	___awmod
  4071  0EFE  0875               	movf	?___awmod,w
  4072  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4073  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4074  0F01  00CA               	movwf	??_scale
  4075  0F02  3001               	movlw	1
  4076  0F03                     u4085:
  4077  0F03  1003               	clrc
  4078  0F04  0DCA               	rlf	??_scale,f
  4079  0F05  3EFF               	addlw	-1
  4080  0F06  1D03               	skipz
  4081  0F07  2F03               	goto	u4085
  4082  0F08  1003               	clrc
  4083  0F09  0D4A               	rlf	??_scale,w
  4084  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4085  0F0B  0084               	movwf	4
  4086  0F0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4087  0F11  00CB               	movwf	??_scale+1
  4088  0F12  120A  158A  200A  120A  158A  	fcall	stringdir
  4089  0F17  00CC               	movwf	??_scale+2
  4090  0F18  120A  158A  200A  120A  158A  	fcall	stringdir
  4091  0F1D  00CD               	movwf	??_scale+3
  4092  0F1E  120A  158A  200A  120A  158A  	fcall	stringdir
  4093  0F23  00CE               	movwf	??_scale+4
  4094  0F24  084E               	movf	??_scale+4,w
  4095  0F25  00AF               	movwf	___flmul@b+3
  4096  0F26  084D               	movf	??_scale+3,w
  4097  0F27  00AE               	movwf	___flmul@b+2
  4098  0F28  084C               	movf	??_scale+2,w
  4099  0F29  00AD               	movwf	___flmul@b+1
  4100  0F2A  084B               	movf	??_scale+1,w
  4101  0F2B  00AC               	movwf	___flmul@b
  4102  0F2C  0857               	movf	_scale$1164+3,w
  4103  0F2D  00B3               	movwf	___flmul@a+3
  4104  0F2E  0856               	movf	_scale$1164+2,w
  4105  0F2F  00B2               	movwf	___flmul@a+2
  4106  0F30  0855               	movf	_scale$1164+1,w
  4107  0F31  00B1               	movwf	___flmul@a+1
  4108  0F32  0854               	movf	_scale$1164,w
  4109  0F33  00B0               	movwf	___flmul@a
  4110  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4111  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4112  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4113  0F3B  082F               	movf	?___flmul+3,w
  4114  0F3C  00C9               	movwf	?_scale+3
  4115  0F3D  082E               	movf	?___flmul+2,w
  4116  0F3E  00C8               	movwf	?_scale+2
  4117  0F3F  082D               	movf	?___flmul+1,w
  4118  0F40  00C7               	movwf	?_scale+1
  4119  0F41  082C               	movf	?___flmul,w
  4120  0F42  00C6               	movwf	?_scale
  4121  0F43  2FFF               	goto	l239
  4122  0F44                     l2646:
  4123  0F44  0858               	movf	scale@scl,w
  4124  0F45  3A80               	xorlw	128
  4125  0F46  3E75               	addlw	-139
  4126  0F47  1C03               	skipc
  4127  0F48  2F4A               	goto	u4091
  4128  0F49  2F4B               	goto	u4090
  4129  0F4A                     u4091:
  4130  0F4A  2FD3               	goto	l2652
  4131  0F4B                     u4090:
  4132  0F4B                     l2648:
  4133                           
  4134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4135  0F4B  300A               	movlw	10
  4136  0F4C  00F5               	movwf	___awmod@divisor
  4137  0F4D  3000               	movlw	0
  4138  0F4E  00F6               	movwf	___awmod@divisor+1
  4139  0F4F  0858               	movf	scale@scl,w
  4140  0F50  00F7               	movwf	___awmod@dividend
  4141  0F51  01F8               	clrf	___awmod@dividend+1
  4142  0F52  1BF7               	btfsc	___awmod@dividend,7
  4143  0F53  03F8               	decf	___awmod@dividend+1,f
  4144  0F54  120A  118A  27A2  120A  158A  	fcall	___awmod
  4145  0F59  0875               	movf	?___awmod,w
  4146  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4147  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4148  0F5C  00CA               	movwf	??_scale
  4149  0F5D  3001               	movlw	1
  4150  0F5E                     u4105:
  4151  0F5E  1003               	clrc
  4152  0F5F  0DCA               	rlf	??_scale,f
  4153  0F60  3EFF               	addlw	-1
  4154  0F61  1D03               	skipz
  4155  0F62  2F5E               	goto	u4105
  4156  0F63  1003               	clrc
  4157  0F64  0D4A               	rlf	??_scale,w
  4158  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4159  0F66  0084               	movwf	4
  4160  0F67  120A  158A  200A  120A  158A  	fcall	stringdir
  4161  0F6C  00CB               	movwf	??_scale+1
  4162  0F6D  120A  158A  200A  120A  158A  	fcall	stringdir
  4163  0F72  00CC               	movwf	??_scale+2
  4164  0F73  120A  158A  200A  120A  158A  	fcall	stringdir
  4165  0F78  00CD               	movwf	??_scale+3
  4166  0F79  120A  158A  200A  120A  158A  	fcall	stringdir
  4167  0F7E  00CE               	movwf	??_scale+4
  4168  0F7F  084E               	movf	??_scale+4,w
  4169  0F80  00AF               	movwf	___flmul@b+3
  4170  0F81  084D               	movf	??_scale+3,w
  4171  0F82  00AE               	movwf	___flmul@b+2
  4172  0F83  084C               	movf	??_scale+2,w
  4173  0F84  00AD               	movwf	___flmul@b+1
  4174  0F85  084B               	movf	??_scale+1,w
  4175  0F86  00AC               	movwf	___flmul@b
  4176  0F87  300A               	movlw	10
  4177  0F88  00A3               	movwf	___awdiv@divisor
  4178  0F89  3000               	movlw	0
  4179  0F8A  00A4               	movwf	___awdiv@divisor+1
  4180  0F8B  0858               	movf	scale@scl,w
  4181  0F8C  00A5               	movwf	___awdiv@dividend
  4182  0F8D  01A6               	clrf	___awdiv@dividend+1
  4183  0F8E  1BA5               	btfsc	___awdiv@dividend,7
  4184  0F8F  03A6               	decf	___awdiv@dividend+1,f
  4185  0F90  120A  158A  20D3  120A  158A  	fcall	___awdiv
  4186  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4187  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4188  0F97  0823               	movf	?___awdiv,w
  4189  0F98  00CF               	movwf	??_scale+5
  4190  0F99  3001               	movlw	1
  4191  0F9A                     u4115:
  4192  0F9A  1003               	clrc
  4193  0F9B  0DCF               	rlf	??_scale+5,f
  4194  0F9C  3EFF               	addlw	-1
  4195  0F9D  1D03               	skipz
  4196  0F9E  2F9A               	goto	u4115
  4197  0F9F  1003               	clrc
  4198  0FA0  0D4F               	rlf	??_scale+5,w
  4199  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4200  0FA2  0084               	movwf	4
  4201  0FA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4202  0FA8  00D0               	movwf	??_scale+6
  4203  0FA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4204  0FAE  00D1               	movwf	??_scale+7
  4205  0FAF  120A  158A  200A  120A  158A  	fcall	stringdir
  4206  0FB4  00D2               	movwf	??_scale+8
  4207  0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  4208  0FBA  00D3               	movwf	??_scale+9
  4209  0FBB  0853               	movf	??_scale+9,w
  4210  0FBC  00B3               	movwf	___flmul@a+3
  4211  0FBD  0852               	movf	??_scale+8,w
  4212  0FBE  00B2               	movwf	___flmul@a+2
  4213  0FBF  0851               	movf	??_scale+7,w
  4214  0FC0  00B1               	movwf	___flmul@a+1
  4215  0FC1  0850               	movf	??_scale+6,w
  4216  0FC2  00B0               	movwf	___flmul@a
  4217  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4218  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4219  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4220  0FCA  082F               	movf	?___flmul+3,w
  4221  0FCB  00C9               	movwf	?_scale+3
  4222  0FCC  082E               	movf	?___flmul+2,w
  4223  0FCD  00C8               	movwf	?_scale+2
  4224  0FCE  082D               	movf	?___flmul+1,w
  4225  0FCF  00C7               	movwf	?_scale+1
  4226  0FD0  082C               	movf	?___flmul,w
  4227  0FD1  00C6               	movwf	?_scale
  4228  0FD2  2FFF               	goto	l239
  4229  0FD3                     l2652:
  4230                           
  4231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4232  0FD3  0858               	movf	scale@scl,w
  4233  0FD4  00CA               	movwf	??_scale
  4234  0FD5  3001               	movlw	1
  4235  0FD6                     u4125:
  4236  0FD6  1003               	clrc
  4237  0FD7  0DCA               	rlf	??_scale,f
  4238  0FD8  3EFF               	addlw	-1
  4239  0FD9  1D03               	skipz
  4240  0FDA  2FD6               	goto	u4125
  4241  0FDB  1003               	clrc
  4242  0FDC  0D4A               	rlf	??_scale,w
  4243  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4244  0FDE  0084               	movwf	4
  4245  0FDF  120A  158A  200A  120A  158A  	fcall	stringdir
  4246  0FE4  00CB               	movwf	??_scale+1
  4247  0FE5  120A  158A  200A  120A  158A  	fcall	stringdir
  4248  0FEA  00CC               	movwf	??_scale+2
  4249  0FEB  120A  158A  200A  120A  158A  	fcall	stringdir
  4250  0FF0  00CD               	movwf	??_scale+3
  4251  0FF1  120A  158A  200A  120A  158A  	fcall	stringdir
  4252  0FF6  00CE               	movwf	??_scale+4
  4253  0FF7  084E               	movf	??_scale+4,w
  4254  0FF8  00C9               	movwf	?_scale+3
  4255  0FF9  084D               	movf	??_scale+3,w
  4256  0FFA  00C8               	movwf	?_scale+2
  4257  0FFB  084C               	movf	??_scale+2,w
  4258  0FFC  00C7               	movwf	?_scale+1
  4259  0FFD  084B               	movf	??_scale+1,w
  4260  0FFE  00C6               	movwf	?_scale
  4261  0FFF                     l239:
  4262  0FFF  0008               	return
  4263  1000                     __end_of_scale:
  4264                           
  4265                           	psect	text4
  4266  07A2                     __ptext4:	
  4267 ;; *************** function ___awmod *****************
  4268 ;; Defined at:
  4269 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  divisor         2    5[COMMON] int 
  4272 ;;  dividend        2    7[COMMON] int 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  sign            1    2[BANK0 ] unsigned char 
  4275 ;;  counter         1    1[BANK0 ] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  2    5[COMMON] int 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4285 ;;      Params:         4       0       0       0       0
  4286 ;;      Locals:         0       2       0       0       0
  4287 ;;      Temps:          0       1       0       0       0
  4288 ;;      Totals:         4       3       0       0       0
  4289 ;;Total ram usage:        7 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    2
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_scale
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           
  4300                           ;psect for function ___awmod
  4301  07A2                     ___awmod:
  4302  07A2                     l2162:	
  4303                           ;incstack = 0
  4304                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4305                           
  4306  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  4307  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  4308  07A4  01A2               	clrf	___awmod@sign
  4309  07A5                     l2164:
  4310  07A5  1FF8               	btfss	___awmod@dividend+1,7
  4311  07A6  2FA8               	goto	u2831
  4312  07A7  2FA9               	goto	u2830
  4313  07A8                     u2831:
  4314  07A8  2FB0               	goto	l2170
  4315  07A9                     u2830:
  4316  07A9                     l2166:
  4317  07A9  09F7               	comf	___awmod@dividend,f
  4318  07AA  09F8               	comf	___awmod@dividend+1,f
  4319  07AB  0AF7               	incf	___awmod@dividend,f
  4320  07AC  1903               	skipnz
  4321  07AD  0AF8               	incf	___awmod@dividend+1,f
  4322  07AE                     l2168:
  4323  07AE  01A2               	clrf	___awmod@sign
  4324  07AF  0AA2               	incf	___awmod@sign,f
  4325  07B0                     l2170:
  4326  07B0  1FF6               	btfss	___awmod@divisor+1,7
  4327  07B1  2FB3               	goto	u2841
  4328  07B2  2FB4               	goto	u2840
  4329  07B3                     u2841:
  4330  07B3  2FB9               	goto	l2174
  4331  07B4                     u2840:
  4332  07B4                     l2172:
  4333  07B4  09F5               	comf	___awmod@divisor,f
  4334  07B5  09F6               	comf	___awmod@divisor+1,f
  4335  07B6  0AF5               	incf	___awmod@divisor,f
  4336  07B7  1903               	skipnz
  4337  07B8  0AF6               	incf	___awmod@divisor+1,f
  4338  07B9                     l2174:
  4339  07B9  0875               	movf	___awmod@divisor,w
  4340  07BA  0476               	iorwf	___awmod@divisor+1,w
  4341  07BB  1903               	btfsc	3,2
  4342  07BC  2FBE               	goto	u2851
  4343  07BD  2FBF               	goto	u2850
  4344  07BE                     u2851:
  4345  07BE  2FEE               	goto	l2192
  4346  07BF                     u2850:
  4347  07BF                     l2176:
  4348  07BF  01A1               	clrf	___awmod@counter
  4349  07C0  0AA1               	incf	___awmod@counter,f
  4350  07C1  2FCD               	goto	l2182
  4351  07C2                     l2178:
  4352  07C2  3001               	movlw	1
  4353  07C3                     u2865:
  4354  07C3  1003               	clrc
  4355  07C4  0DF5               	rlf	___awmod@divisor,f
  4356  07C5  0DF6               	rlf	___awmod@divisor+1,f
  4357  07C6  3EFF               	addlw	-1
  4358  07C7  1D03               	skipz
  4359  07C8  2FC3               	goto	u2865
  4360  07C9                     l2180:
  4361  07C9  3001               	movlw	1
  4362  07CA  00A0               	movwf	??___awmod
  4363  07CB  0820               	movf	??___awmod,w
  4364  07CC  07A1               	addwf	___awmod@counter,f
  4365  07CD                     l2182:
  4366  07CD  1FF6               	btfss	___awmod@divisor+1,7
  4367  07CE  2FD0               	goto	u2871
  4368  07CF  2FD1               	goto	u2870
  4369  07D0                     u2871:
  4370  07D0  2FC2               	goto	l2178
  4371  07D1                     u2870:
  4372  07D1                     l2184:
  4373  07D1  0876               	movf	___awmod@divisor+1,w
  4374  07D2  0278               	subwf	___awmod@dividend+1,w
  4375  07D3  1D03               	skipz
  4376  07D4  2FD7               	goto	u2885
  4377  07D5  0875               	movf	___awmod@divisor,w
  4378  07D6  0277               	subwf	___awmod@dividend,w
  4379  07D7                     u2885:
  4380  07D7  1C03               	skipc
  4381  07D8  2FDA               	goto	u2881
  4382  07D9  2FDB               	goto	u2880
  4383  07DA                     u2881:
  4384  07DA  2FE1               	goto	l2188
  4385  07DB                     u2880:
  4386  07DB                     l2186:
  4387  07DB  0875               	movf	___awmod@divisor,w
  4388  07DC  02F7               	subwf	___awmod@dividend,f
  4389  07DD  0876               	movf	___awmod@divisor+1,w
  4390  07DE  1C03               	skipc
  4391  07DF  03F8               	decf	___awmod@dividend+1,f
  4392  07E0  02F8               	subwf	___awmod@dividend+1,f
  4393  07E1                     l2188:
  4394  07E1  3001               	movlw	1
  4395  07E2                     u2895:
  4396  07E2  1003               	clrc
  4397  07E3  0CF6               	rrf	___awmod@divisor+1,f
  4398  07E4  0CF5               	rrf	___awmod@divisor,f
  4399  07E5  3EFF               	addlw	-1
  4400  07E6  1D03               	skipz
  4401  07E7  2FE2               	goto	u2895
  4402  07E8                     l2190:
  4403  07E8  3001               	movlw	1
  4404  07E9  02A1               	subwf	___awmod@counter,f
  4405  07EA  1D03               	btfss	3,2
  4406  07EB  2FED               	goto	u2901
  4407  07EC  2FEE               	goto	u2900
  4408  07ED                     u2901:
  4409  07ED  2FD1               	goto	l2184
  4410  07EE                     u2900:
  4411  07EE                     l2192:
  4412  07EE  0822               	movf	___awmod@sign,w
  4413  07EF  1903               	btfsc	3,2
  4414  07F0  2FF2               	goto	u2911
  4415  07F1  2FF3               	goto	u2910
  4416  07F2                     u2911:
  4417  07F2  2FF8               	goto	l2196
  4418  07F3                     u2910:
  4419  07F3                     l2194:
  4420  07F3  09F7               	comf	___awmod@dividend,f
  4421  07F4  09F8               	comf	___awmod@dividend+1,f
  4422  07F5  0AF7               	incf	___awmod@dividend,f
  4423  07F6  1903               	skipnz
  4424  07F7  0AF8               	incf	___awmod@dividend+1,f
  4425  07F8                     l2196:
  4426  07F8  0878               	movf	___awmod@dividend+1,w
  4427  07F9  00F6               	movwf	?___awmod+1
  4428  07FA  0877               	movf	___awmod@dividend,w
  4429  07FB  00F5               	movwf	?___awmod
  4430  07FC                     l475:
  4431  07FC  0008               	return
  4432  07FD                     __end_of___awmod:
  4433                           
  4434                           	psect	text5
  4435  08D3                     __ptext5:	
  4436 ;; *************** function ___awdiv *****************
  4437 ;; Defined at:
  4438 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  divisor         2    3[BANK0 ] int 
  4441 ;;  dividend        2    5[BANK0 ] int 
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;  quotient        2   10[BANK0 ] int 
  4444 ;;  sign            1    9[BANK0 ] unsigned char 
  4445 ;;  counter         1    8[BANK0 ] unsigned char 
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  2    3[BANK0 ] int 
  4448 ;; Registers used:
  4449 ;;		wreg, status,2, status,0
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4455 ;;      Params:         0       4       0       0       0
  4456 ;;      Locals:         0       4       0       0       0
  4457 ;;      Temps:          0       1       0       0       0
  4458 ;;      Totals:         0       9       0       0       0
  4459 ;;Total ram usage:        9 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    2
  4462 ;; This function calls:
  4463 ;;		Nothing
  4464 ;; This function is called by:
  4465 ;;		_conversion
  4466 ;;		_scale
  4467 ;;		_sprintf
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           
  4472                           ;psect for function ___awdiv
  4473  08D3                     ___awdiv:
  4474  08D3                     l2118:	
  4475                           ;incstack = 0
  4476                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4477                           
  4478  08D3  1283               	bcf	3,5	;RP0=0, select bank0
  4479  08D4  1303               	bcf	3,6	;RP1=0, select bank0
  4480  08D5  01A9               	clrf	___awdiv@sign
  4481  08D6                     l2120:
  4482  08D6  1FA4               	btfss	___awdiv@divisor+1,7
  4483  08D7  28D9               	goto	u2731
  4484  08D8  28DA               	goto	u2730
  4485  08D9                     u2731:
  4486  08D9  28E1               	goto	l2126
  4487  08DA                     u2730:
  4488  08DA                     l2122:
  4489  08DA  09A3               	comf	___awdiv@divisor,f
  4490  08DB  09A4               	comf	___awdiv@divisor+1,f
  4491  08DC  0AA3               	incf	___awdiv@divisor,f
  4492  08DD  1903               	skipnz
  4493  08DE  0AA4               	incf	___awdiv@divisor+1,f
  4494  08DF                     l2124:
  4495  08DF  01A9               	clrf	___awdiv@sign
  4496  08E0  0AA9               	incf	___awdiv@sign,f
  4497  08E1                     l2126:
  4498  08E1  1FA6               	btfss	___awdiv@dividend+1,7
  4499  08E2  28E4               	goto	u2741
  4500  08E3  28E5               	goto	u2740
  4501  08E4                     u2741:
  4502  08E4  28EE               	goto	l2132
  4503  08E5                     u2740:
  4504  08E5                     l2128:
  4505  08E5  09A5               	comf	___awdiv@dividend,f
  4506  08E6  09A6               	comf	___awdiv@dividend+1,f
  4507  08E7  0AA5               	incf	___awdiv@dividend,f
  4508  08E8  1903               	skipnz
  4509  08E9  0AA6               	incf	___awdiv@dividend+1,f
  4510  08EA                     l2130:
  4511  08EA  3001               	movlw	1
  4512  08EB  00A7               	movwf	??___awdiv
  4513  08EC  0827               	movf	??___awdiv,w
  4514  08ED  06A9               	xorwf	___awdiv@sign,f
  4515  08EE                     l2132:
  4516  08EE  01AA               	clrf	___awdiv@quotient
  4517  08EF  01AB               	clrf	___awdiv@quotient+1
  4518  08F0                     l2134:
  4519  08F0  0823               	movf	___awdiv@divisor,w
  4520  08F1  0424               	iorwf	___awdiv@divisor+1,w
  4521  08F2  1903               	btfsc	3,2
  4522  08F3  28F5               	goto	u2751
  4523  08F4  28F6               	goto	u2750
  4524  08F5                     u2751:
  4525  08F5  292D               	goto	l2154
  4526  08F6                     u2750:
  4527  08F6                     l2136:
  4528  08F6  01A8               	clrf	___awdiv@counter
  4529  08F7  0AA8               	incf	___awdiv@counter,f
  4530  08F8  2904               	goto	l2142
  4531  08F9                     l2138:
  4532  08F9  3001               	movlw	1
  4533  08FA                     u2765:
  4534  08FA  1003               	clrc
  4535  08FB  0DA3               	rlf	___awdiv@divisor,f
  4536  08FC  0DA4               	rlf	___awdiv@divisor+1,f
  4537  08FD  3EFF               	addlw	-1
  4538  08FE  1D03               	skipz
  4539  08FF  28FA               	goto	u2765
  4540  0900                     l2140:
  4541  0900  3001               	movlw	1
  4542  0901  00A7               	movwf	??___awdiv
  4543  0902  0827               	movf	??___awdiv,w
  4544  0903  07A8               	addwf	___awdiv@counter,f
  4545  0904                     l2142:
  4546  0904  1FA4               	btfss	___awdiv@divisor+1,7
  4547  0905  2907               	goto	u2771
  4548  0906  2908               	goto	u2770
  4549  0907                     u2771:
  4550  0907  28F9               	goto	l2138
  4551  0908                     u2770:
  4552  0908                     l2144:
  4553  0908  3001               	movlw	1
  4554  0909                     u2785:
  4555  0909  1003               	clrc
  4556  090A  0DAA               	rlf	___awdiv@quotient,f
  4557  090B  0DAB               	rlf	___awdiv@quotient+1,f
  4558  090C  3EFF               	addlw	-1
  4559  090D  1D03               	skipz
  4560  090E  2909               	goto	u2785
  4561  090F  0824               	movf	___awdiv@divisor+1,w
  4562  0910  0226               	subwf	___awdiv@dividend+1,w
  4563  0911  1D03               	skipz
  4564  0912  2915               	goto	u2795
  4565  0913  0823               	movf	___awdiv@divisor,w
  4566  0914  0225               	subwf	___awdiv@dividend,w
  4567  0915                     u2795:
  4568  0915  1C03               	skipc
  4569  0916  2918               	goto	u2791
  4570  0917  2919               	goto	u2790
  4571  0918                     u2791:
  4572  0918  2920               	goto	l2150
  4573  0919                     u2790:
  4574  0919                     l2146:
  4575  0919  0823               	movf	___awdiv@divisor,w
  4576  091A  02A5               	subwf	___awdiv@dividend,f
  4577  091B  0824               	movf	___awdiv@divisor+1,w
  4578  091C  1C03               	skipc
  4579  091D  03A6               	decf	___awdiv@dividend+1,f
  4580  091E  02A6               	subwf	___awdiv@dividend+1,f
  4581  091F                     l2148:
  4582  091F  142A               	bsf	___awdiv@quotient,0
  4583  0920                     l2150:
  4584  0920  3001               	movlw	1
  4585  0921                     u2805:
  4586  0921  1003               	clrc
  4587  0922  0CA4               	rrf	___awdiv@divisor+1,f
  4588  0923  0CA3               	rrf	___awdiv@divisor,f
  4589  0924  3EFF               	addlw	-1
  4590  0925  1D03               	skipz
  4591  0926  2921               	goto	u2805
  4592  0927                     l2152:
  4593  0927  3001               	movlw	1
  4594  0928  02A8               	subwf	___awdiv@counter,f
  4595  0929  1D03               	btfss	3,2
  4596  092A  292C               	goto	u2811
  4597  092B  292D               	goto	u2810
  4598  092C                     u2811:
  4599  092C  2908               	goto	l2144
  4600  092D                     u2810:
  4601  092D                     l2154:
  4602  092D  0829               	movf	___awdiv@sign,w
  4603  092E  1903               	btfsc	3,2
  4604  092F  2931               	goto	u2821
  4605  0930  2932               	goto	u2820
  4606  0931                     u2821:
  4607  0931  2937               	goto	l2158
  4608  0932                     u2820:
  4609  0932                     l2156:
  4610  0932  09AA               	comf	___awdiv@quotient,f
  4611  0933  09AB               	comf	___awdiv@quotient+1,f
  4612  0934  0AAA               	incf	___awdiv@quotient,f
  4613  0935  1903               	skipnz
  4614  0936  0AAB               	incf	___awdiv@quotient+1,f
  4615  0937                     l2158:
  4616  0937  082B               	movf	___awdiv@quotient+1,w
  4617  0938  00A4               	movwf	?___awdiv+1
  4618  0939  082A               	movf	___awdiv@quotient,w
  4619  093A  00A3               	movwf	?___awdiv
  4620  093B                     l462:
  4621  093B  0008               	return
  4622  093C                     __end_of___awdiv:
  4623                           
  4624                           	psect	text6
  4625  1BC7                     __ptext6:	
  4626 ;; *************** function _isdigit *****************
  4627 ;; Defined at:
  4628 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  c               1    wreg     unsigned char 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  c               1    6[COMMON] unsigned char 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;		None               void
  4635 ;; Registers used:
  4636 ;;		wreg, status,2, status,0
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4642 ;;      Params:         0       0       0       0       0
  4643 ;;      Locals:         2       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0
  4645 ;;      Totals:         2       0       0       0       0
  4646 ;;Total ram usage:        2 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    2
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_sprintf
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           
  4657                           ;psect for function _isdigit
  4658  1BC7                     _isdigit:
  4659                           
  4660                           ;incstack = 0
  4661                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4662                           ;isdigit@c stored from wreg
  4663  1BC7  00F6               	movwf	isdigit@c
  4664  1BC8                     l2656:
  4665  1BC8  01F5               	clrf	_isdigit$973
  4666  1BC9                     l2658:
  4667  1BC9  303A               	movlw	58
  4668  1BCA  0276               	subwf	isdigit@c,w
  4669  1BCB  1803               	skipnc
  4670  1BCC  2BCE               	goto	u4131
  4671  1BCD  2BCF               	goto	u4130
  4672  1BCE                     u4131:
  4673  1BCE  2BD7               	goto	l2664
  4674  1BCF                     u4130:
  4675  1BCF                     l2660:
  4676  1BCF  3030               	movlw	48
  4677  1BD0  0276               	subwf	isdigit@c,w
  4678  1BD1  1C03               	skipc
  4679  1BD2  2BD4               	goto	u4141
  4680  1BD3  2BD5               	goto	u4140
  4681  1BD4                     u4141:
  4682  1BD4  2BD7               	goto	l2664
  4683  1BD5                     u4140:
  4684  1BD5                     l2662:
  4685  1BD5  01F5               	clrf	_isdigit$973
  4686  1BD6  0AF5               	incf	_isdigit$973,f
  4687  1BD7                     l2664:
  4688  1BD7  0C75               	rrf	_isdigit$973,w
  4689  1BD8                     l796:
  4690  1BD8  0008               	return
  4691  1BD9                     __end_of_isdigit:
  4692                           
  4693                           	psect	text7
  4694  136B                     __ptext7:	
  4695 ;; *************** function _fround *****************
  4696 ;; Defined at:
  4697 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;  prec            1    wreg     unsigned char 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  prec            1   57[BANK0 ] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  4   38[BANK0 ] unsigned char 
  4704 ;; Registers used:
  4705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4711 ;;      Params:         0       4       0       0       0
  4712 ;;      Locals:         0       9       0       0       0
  4713 ;;      Temps:          0       7       0       0       0
  4714 ;;      Totals:         0      20       0       0       0
  4715 ;;Total ram usage:       20 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    4
  4718 ;; This function calls:
  4719 ;;		___flmul
  4720 ;;		___lwdiv
  4721 ;;		___lwmod
  4722 ;; This function is called by:
  4723 ;;		_sprintf
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           
  4728                           ;psect for function _fround
  4729  136B                     _fround:
  4730                           
  4731                           ;incstack = 0
  4732                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4733                           ;fround@prec stored from wreg
  4734  136B  1283               	bcf	3,5	;RP0=0, select bank0
  4735  136C  1303               	bcf	3,6	;RP1=0, select bank0
  4736  136D  00D9               	movwf	fround@prec
  4737  136E                     l2598:
  4738                           
  4739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4740  136E  306E               	movlw	110
  4741  136F  0259               	subwf	fround@prec,w
  4742  1370  1C03               	skipc
  4743  1371  2B73               	goto	u3881
  4744  1372  2B74               	goto	u3880
  4745  1373                     u3881:
  4746  1373  2C83               	goto	l2606
  4747  1374                     u3880:
  4748  1374                     l2600:
  4749                           
  4750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4751  1374  303F               	movlw	63
  4752  1375  00AF               	movwf	___flmul@b+3
  4753  1376  3000               	movlw	0
  4754  1377  00AE               	movwf	___flmul@b+2
  4755  1378  3000               	movlw	0
  4756  1379  00AD               	movwf	___flmul@b+1
  4757  137A  3000               	movlw	0
  4758  137B  00AC               	movwf	___flmul@b
  4759  137C  3064               	movlw	100
  4760  137D  00A2               	movwf	___lwdiv@divisor
  4761  137E  3000               	movlw	0
  4762  137F  00A3               	movwf	___lwdiv@divisor+1
  4763  1380  0859               	movf	fround@prec,w
  4764  1381  00CA               	movwf	??_fround
  4765  1382  01CB               	clrf	??_fround+1
  4766  1383  084A               	movf	??_fround,w
  4767  1384  00A4               	movwf	___lwdiv@dividend
  4768  1385  084B               	movf	??_fround+1,w
  4769  1386  00A5               	movwf	___lwdiv@dividend+1
  4770  1387  160A  158A  2586  160A  118A  	fcall	___lwdiv
  4771  138C  1283               	bcf	3,5	;RP0=0, select bank0
  4772  138D  1303               	bcf	3,6	;RP1=0, select bank0
  4773  138E  0822               	movf	?___lwdiv,w
  4774  138F  00CC               	movwf	??_fround+2
  4775  1390  3001               	movlw	1
  4776  1391                     u3895:
  4777  1391  1003               	clrc
  4778  1392  0DCC               	rlf	??_fround+2,f
  4779  1393  3EFF               	addlw	-1
  4780  1394  1D03               	skipz
  4781  1395  2B91               	goto	u3895
  4782  1396  1003               	clrc
  4783  1397  0D4C               	rlf	??_fround+2,w
  4784  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4785  1399  0084               	movwf	4
  4786  139A  120A  158A  200A  160A  118A  	fcall	stringdir
  4787  139F  00CD               	movwf	??_fround+3
  4788  13A0  120A  158A  200A  160A  118A  	fcall	stringdir
  4789  13A5  00CE               	movwf	??_fround+4
  4790  13A6  120A  158A  200A  160A  118A  	fcall	stringdir
  4791  13AB  00CF               	movwf	??_fround+5
  4792  13AC  120A  158A  200A  160A  118A  	fcall	stringdir
  4793  13B1  00D0               	movwf	??_fround+6
  4794  13B2  0850               	movf	??_fround+6,w
  4795  13B3  00B3               	movwf	___flmul@a+3
  4796  13B4  084F               	movf	??_fround+5,w
  4797  13B5  00B2               	movwf	___flmul@a+2
  4798  13B6  084E               	movf	??_fround+4,w
  4799  13B7  00B1               	movwf	___flmul@a+1
  4800  13B8  084D               	movf	??_fround+3,w
  4801  13B9  00B0               	movwf	___flmul@a
  4802  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  4803  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4804  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4805  13C1  082F               	movf	?___flmul+3,w
  4806  13C2  00D8               	movwf	_fround$1162+3
  4807  13C3  082E               	movf	?___flmul+2,w
  4808  13C4  00D7               	movwf	_fround$1162+2
  4809  13C5  082D               	movf	?___flmul+1,w
  4810  13C6  00D6               	movwf	_fround$1162+1
  4811  13C7  082C               	movf	?___flmul,w
  4812  13C8  00D5               	movwf	_fround$1162
  4813                           
  4814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4815  13C9  300A               	movlw	10
  4816  13CA  00A2               	movwf	___lwdiv@divisor
  4817  13CB  3000               	movlw	0
  4818  13CC  00A3               	movwf	___lwdiv@divisor+1
  4819  13CD  0859               	movf	fround@prec,w
  4820  13CE  00CA               	movwf	??_fround
  4821  13CF  01CB               	clrf	??_fround+1
  4822  13D0  084A               	movf	??_fround,w
  4823  13D1  00F7               	movwf	___lwmod@dividend
  4824  13D2  084B               	movf	??_fround+1,w
  4825  13D3  00F8               	movwf	___lwmod@dividend+1
  4826  13D4  3064               	movlw	100
  4827  13D5  00F5               	movwf	___lwmod@divisor
  4828  13D6  3000               	movlw	0
  4829  13D7  00F6               	movwf	___lwmod@divisor+1
  4830  13D8  160A  158A  2504  160A  118A  	fcall	___lwmod
  4831  13DD  0876               	movf	?___lwmod+1,w
  4832  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  4833  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  4834  13E0  00A5               	movwf	___lwdiv@dividend+1
  4835  13E1  0875               	movf	?___lwmod,w
  4836  13E2  00A4               	movwf	___lwdiv@dividend
  4837  13E3  160A  158A  2586  160A  118A  	fcall	___lwdiv
  4838  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  4839  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  4840  13EA  0822               	movf	?___lwdiv,w
  4841  13EB  00CC               	movwf	??_fround+2
  4842  13EC  3001               	movlw	1
  4843  13ED                     u3905:
  4844  13ED  1003               	clrc
  4845  13EE  0DCC               	rlf	??_fround+2,f
  4846  13EF  3EFF               	addlw	-1
  4847  13F0  1D03               	skipz
  4848  13F1  2BED               	goto	u3905
  4849  13F2  1003               	clrc
  4850  13F3  0D4C               	rlf	??_fround+2,w
  4851  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4852  13F5  0084               	movwf	4
  4853  13F6  120A  158A  200A  160A  118A  	fcall	stringdir
  4854  13FB  00CD               	movwf	??_fround+3
  4855  13FC  120A  158A  200A  160A  118A  	fcall	stringdir
  4856  1401  00CE               	movwf	??_fround+4
  4857  1402  120A  158A  200A  160A  118A  	fcall	stringdir
  4858  1407  00CF               	movwf	??_fround+5
  4859  1408  120A  158A  200A  160A  118A  	fcall	stringdir
  4860  140D  00D0               	movwf	??_fround+6
  4861  140E  0850               	movf	??_fround+6,w
  4862  140F  00AF               	movwf	___flmul@b+3
  4863  1410  084F               	movf	??_fround+5,w
  4864  1411  00AE               	movwf	___flmul@b+2
  4865  1412  084E               	movf	??_fround+4,w
  4866  1413  00AD               	movwf	___flmul@b+1
  4867  1414  084D               	movf	??_fround+3,w
  4868  1415  00AC               	movwf	___flmul@b
  4869  1416  0858               	movf	_fround$1162+3,w
  4870  1417  00B3               	movwf	___flmul@a+3
  4871  1418  0857               	movf	_fround$1162+2,w
  4872  1419  00B2               	movwf	___flmul@a+2
  4873  141A  0856               	movf	_fround$1162+1,w
  4874  141B  00B1               	movwf	___flmul@a+1
  4875  141C  0855               	movf	_fround$1162,w
  4876  141D  00B0               	movwf	___flmul@a
  4877  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  4878  1423  1283               	bcf	3,5	;RP0=0, select bank0
  4879  1424  1303               	bcf	3,6	;RP1=0, select bank0
  4880  1425  082F               	movf	?___flmul+3,w
  4881  1426  00D4               	movwf	_fround$1163+3
  4882  1427  082E               	movf	?___flmul+2,w
  4883  1428  00D3               	movwf	_fround$1163+2
  4884  1429  082D               	movf	?___flmul+1,w
  4885  142A  00D2               	movwf	_fround$1163+1
  4886  142B  082C               	movf	?___flmul,w
  4887  142C  00D1               	movwf	_fround$1163
  4888                           
  4889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4890  142D  300A               	movlw	10
  4891  142E  00F5               	movwf	___lwmod@divisor
  4892  142F  3000               	movlw	0
  4893  1430  00F6               	movwf	___lwmod@divisor+1
  4894  1431  0859               	movf	fround@prec,w
  4895  1432  00CA               	movwf	??_fround
  4896  1433  01CB               	clrf	??_fround+1
  4897  1434  084A               	movf	??_fround,w
  4898  1435  00F7               	movwf	___lwmod@dividend
  4899  1436  084B               	movf	??_fround+1,w
  4900  1437  00F8               	movwf	___lwmod@dividend+1
  4901  1438  160A  158A  2504  160A  118A  	fcall	___lwmod
  4902  143D  0875               	movf	?___lwmod,w
  4903  143E  1283               	bcf	3,5	;RP0=0, select bank0
  4904  143F  1303               	bcf	3,6	;RP1=0, select bank0
  4905  1440  00CC               	movwf	??_fround+2
  4906  1441  3001               	movlw	1
  4907  1442                     u3915:
  4908  1442  1003               	clrc
  4909  1443  0DCC               	rlf	??_fround+2,f
  4910  1444  3EFF               	addlw	-1
  4911  1445  1D03               	skipz
  4912  1446  2C42               	goto	u3915
  4913  1447  1003               	clrc
  4914  1448  0D4C               	rlf	??_fround+2,w
  4915  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4916  144A  0084               	movwf	4
  4917  144B  120A  158A  200A  160A  118A  	fcall	stringdir
  4918  1450  00CD               	movwf	??_fround+3
  4919  1451  120A  158A  200A  160A  118A  	fcall	stringdir
  4920  1456  00CE               	movwf	??_fround+4
  4921  1457  120A  158A  200A  160A  118A  	fcall	stringdir
  4922  145C  00CF               	movwf	??_fround+5
  4923  145D  120A  158A  200A  160A  118A  	fcall	stringdir
  4924  1462  00D0               	movwf	??_fround+6
  4925  1463  0850               	movf	??_fround+6,w
  4926  1464  00AF               	movwf	___flmul@b+3
  4927  1465  084F               	movf	??_fround+5,w
  4928  1466  00AE               	movwf	___flmul@b+2
  4929  1467  084E               	movf	??_fround+4,w
  4930  1468  00AD               	movwf	___flmul@b+1
  4931  1469  084D               	movf	??_fround+3,w
  4932  146A  00AC               	movwf	___flmul@b
  4933  146B  0854               	movf	_fround$1163+3,w
  4934  146C  00B3               	movwf	___flmul@a+3
  4935  146D  0853               	movf	_fround$1163+2,w
  4936  146E  00B2               	movwf	___flmul@a+2
  4937  146F  0852               	movf	_fround$1163+1,w
  4938  1470  00B1               	movwf	___flmul@a+1
  4939  1471  0851               	movf	_fround$1163,w
  4940  1472  00B0               	movwf	___flmul@a
  4941  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  4942  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4943  1479  1303               	bcf	3,6	;RP1=0, select bank0
  4944  147A  082F               	movf	?___flmul+3,w
  4945  147B  00C9               	movwf	?_fround+3
  4946  147C  082E               	movf	?___flmul+2,w
  4947  147D  00C8               	movwf	?_fround+2
  4948  147E  082D               	movf	?___flmul+1,w
  4949  147F  00C7               	movwf	?_fround+1
  4950  1480  082C               	movf	?___flmul,w
  4951  1481  00C6               	movwf	?_fround
  4952  1482  2D77               	goto	l232
  4953  1483                     l2606:
  4954  1483  300B               	movlw	11
  4955  1484  0259               	subwf	fround@prec,w
  4956  1485  1C03               	skipc
  4957  1486  2C88               	goto	u3921
  4958  1487  2C89               	goto	u3920
  4959  1488                     u3921:
  4960  1488  2D34               	goto	l2612
  4961  1489                     u3920:
  4962  1489                     l2608:
  4963                           
  4964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4965  1489  303F               	movlw	63
  4966  148A  00AF               	movwf	___flmul@b+3
  4967  148B  3000               	movlw	0
  4968  148C  00AE               	movwf	___flmul@b+2
  4969  148D  3000               	movlw	0
  4970  148E  00AD               	movwf	___flmul@b+1
  4971  148F  3000               	movlw	0
  4972  1490  00AC               	movwf	___flmul@b
  4973  1491  300A               	movlw	10
  4974  1492  00A2               	movwf	___lwdiv@divisor
  4975  1493  3000               	movlw	0
  4976  1494  00A3               	movwf	___lwdiv@divisor+1
  4977  1495  0859               	movf	fround@prec,w
  4978  1496  00CA               	movwf	??_fround
  4979  1497  01CB               	clrf	??_fround+1
  4980  1498  084A               	movf	??_fround,w
  4981  1499  00A4               	movwf	___lwdiv@dividend
  4982  149A  084B               	movf	??_fround+1,w
  4983  149B  00A5               	movwf	___lwdiv@dividend+1
  4984  149C  160A  158A  2586  160A  118A  	fcall	___lwdiv
  4985  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  4986  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  4987  14A3  0822               	movf	?___lwdiv,w
  4988  14A4  00CC               	movwf	??_fround+2
  4989  14A5  3001               	movlw	1
  4990  14A6                     u3935:
  4991  14A6  1003               	clrc
  4992  14A7  0DCC               	rlf	??_fround+2,f
  4993  14A8  3EFF               	addlw	-1
  4994  14A9  1D03               	skipz
  4995  14AA  2CA6               	goto	u3935
  4996  14AB  1003               	clrc
  4997  14AC  0D4C               	rlf	??_fround+2,w
  4998  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4999  14AE  0084               	movwf	4
  5000  14AF  120A  158A  200A  160A  118A  	fcall	stringdir
  5001  14B4  00CD               	movwf	??_fround+3
  5002  14B5  120A  158A  200A  160A  118A  	fcall	stringdir
  5003  14BA  00CE               	movwf	??_fround+4
  5004  14BB  120A  158A  200A  160A  118A  	fcall	stringdir
  5005  14C0  00CF               	movwf	??_fround+5
  5006  14C1  120A  158A  200A  160A  118A  	fcall	stringdir
  5007  14C6  00D0               	movwf	??_fround+6
  5008  14C7  0850               	movf	??_fround+6,w
  5009  14C8  00B3               	movwf	___flmul@a+3
  5010  14C9  084F               	movf	??_fround+5,w
  5011  14CA  00B2               	movwf	___flmul@a+2
  5012  14CB  084E               	movf	??_fround+4,w
  5013  14CC  00B1               	movwf	___flmul@a+1
  5014  14CD  084D               	movf	??_fround+3,w
  5015  14CE  00B0               	movwf	___flmul@a
  5016  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  5017  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5018  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5019  14D6  082F               	movf	?___flmul+3,w
  5020  14D7  00D8               	movwf	_fround$1162+3
  5021  14D8  082E               	movf	?___flmul+2,w
  5022  14D9  00D7               	movwf	_fround$1162+2
  5023  14DA  082D               	movf	?___flmul+1,w
  5024  14DB  00D6               	movwf	_fround$1162+1
  5025  14DC  082C               	movf	?___flmul,w
  5026  14DD  00D5               	movwf	_fround$1162
  5027                           
  5028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5029  14DE  300A               	movlw	10
  5030  14DF  00F5               	movwf	___lwmod@divisor
  5031  14E0  3000               	movlw	0
  5032  14E1  00F6               	movwf	___lwmod@divisor+1
  5033  14E2  0859               	movf	fround@prec,w
  5034  14E3  00CA               	movwf	??_fround
  5035  14E4  01CB               	clrf	??_fround+1
  5036  14E5  084A               	movf	??_fround,w
  5037  14E6  00F7               	movwf	___lwmod@dividend
  5038  14E7  084B               	movf	??_fround+1,w
  5039  14E8  00F8               	movwf	___lwmod@dividend+1
  5040  14E9  160A  158A  2504  160A  118A  	fcall	___lwmod
  5041  14EE  0875               	movf	?___lwmod,w
  5042  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5043  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5044  14F1  00CC               	movwf	??_fround+2
  5045  14F2  3001               	movlw	1
  5046  14F3                     u3945:
  5047  14F3  1003               	clrc
  5048  14F4  0DCC               	rlf	??_fround+2,f
  5049  14F5  3EFF               	addlw	-1
  5050  14F6  1D03               	skipz
  5051  14F7  2CF3               	goto	u3945
  5052  14F8  1003               	clrc
  5053  14F9  0D4C               	rlf	??_fround+2,w
  5054  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5055  14FB  0084               	movwf	4
  5056  14FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5057  1501  00CD               	movwf	??_fround+3
  5058  1502  120A  158A  200A  160A  118A  	fcall	stringdir
  5059  1507  00CE               	movwf	??_fround+4
  5060  1508  120A  158A  200A  160A  118A  	fcall	stringdir
  5061  150D  00CF               	movwf	??_fround+5
  5062  150E  120A  158A  200A  160A  118A  	fcall	stringdir
  5063  1513  00D0               	movwf	??_fround+6
  5064  1514  0850               	movf	??_fround+6,w
  5065  1515  00AF               	movwf	___flmul@b+3
  5066  1516  084F               	movf	??_fround+5,w
  5067  1517  00AE               	movwf	___flmul@b+2
  5068  1518  084E               	movf	??_fround+4,w
  5069  1519  00AD               	movwf	___flmul@b+1
  5070  151A  084D               	movf	??_fround+3,w
  5071  151B  00AC               	movwf	___flmul@b
  5072  151C  0858               	movf	_fround$1162+3,w
  5073  151D  00B3               	movwf	___flmul@a+3
  5074  151E  0857               	movf	_fround$1162+2,w
  5075  151F  00B2               	movwf	___flmul@a+2
  5076  1520  0856               	movf	_fround$1162+1,w
  5077  1521  00B1               	movwf	___flmul@a+1
  5078  1522  0855               	movf	_fround$1162,w
  5079  1523  00B0               	movwf	___flmul@a
  5080  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  5081  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5082  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5083  152B  082F               	movf	?___flmul+3,w
  5084  152C  00C9               	movwf	?_fround+3
  5085  152D  082E               	movf	?___flmul+2,w
  5086  152E  00C8               	movwf	?_fround+2
  5087  152F  082D               	movf	?___flmul+1,w
  5088  1530  00C7               	movwf	?_fround+1
  5089  1531  082C               	movf	?___flmul,w
  5090  1532  00C6               	movwf	?_fround
  5091  1533  2D77               	goto	l232
  5092  1534                     l2612:
  5093                           
  5094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5095  1534  303F               	movlw	63
  5096  1535  00AF               	movwf	___flmul@b+3
  5097  1536  3000               	movlw	0
  5098  1537  00AE               	movwf	___flmul@b+2
  5099  1538  3000               	movlw	0
  5100  1539  00AD               	movwf	___flmul@b+1
  5101  153A  3000               	movlw	0
  5102  153B  00AC               	movwf	___flmul@b
  5103  153C  0859               	movf	fround@prec,w
  5104  153D  00CA               	movwf	??_fround
  5105  153E  3001               	movlw	1
  5106  153F                     u3955:
  5107  153F  1003               	clrc
  5108  1540  0DCA               	rlf	??_fround,f
  5109  1541  3EFF               	addlw	-1
  5110  1542  1D03               	skipz
  5111  1543  2D3F               	goto	u3955
  5112  1544  1003               	clrc
  5113  1545  0D4A               	rlf	??_fround,w
  5114  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5115  1547  0084               	movwf	4
  5116  1548  120A  158A  200A  160A  118A  	fcall	stringdir
  5117  154D  00CB               	movwf	??_fround+1
  5118  154E  120A  158A  200A  160A  118A  	fcall	stringdir
  5119  1553  00CC               	movwf	??_fround+2
  5120  1554  120A  158A  200A  160A  118A  	fcall	stringdir
  5121  1559  00CD               	movwf	??_fround+3
  5122  155A  120A  158A  200A  160A  118A  	fcall	stringdir
  5123  155F  00CE               	movwf	??_fround+4
  5124  1560  084E               	movf	??_fround+4,w
  5125  1561  00B3               	movwf	___flmul@a+3
  5126  1562  084D               	movf	??_fround+3,w
  5127  1563  00B2               	movwf	___flmul@a+2
  5128  1564  084C               	movf	??_fround+2,w
  5129  1565  00B1               	movwf	___flmul@a+1
  5130  1566  084B               	movf	??_fround+1,w
  5131  1567  00B0               	movwf	___flmul@a
  5132  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  5133  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5134  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5135  156F  082F               	movf	?___flmul+3,w
  5136  1570  00C9               	movwf	?_fround+3
  5137  1571  082E               	movf	?___flmul+2,w
  5138  1572  00C8               	movwf	?_fround+2
  5139  1573  082D               	movf	?___flmul+1,w
  5140  1574  00C7               	movwf	?_fround+1
  5141  1575  082C               	movf	?___flmul,w
  5142  1576  00C6               	movwf	?_fround
  5143  1577                     l232:
  5144  1577  0008               	return
  5145  1578                     __end_of_fround:
  5146                           
  5147                           	psect	text8
  5148  1D04                     __ptext8:	
  5149 ;; *************** function ___lwmod *****************
  5150 ;; Defined at:
  5151 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  divisor         2    5[COMMON] unsigned int 
  5154 ;;  dividend        2    7[COMMON] unsigned int 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  counter         1    1[BANK0 ] unsigned char 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  2    5[COMMON] unsigned int 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, status,0
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5166 ;;      Params:         4       0       0       0       0
  5167 ;;      Locals:         0       1       0       0       0
  5168 ;;      Temps:          0       1       0       0       0
  5169 ;;      Totals:         4       2       0       0       0
  5170 ;;Total ram usage:        6 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    2
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_fround
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           
  5181                           ;psect for function ___lwmod
  5182  1D04                     ___lwmod:
  5183  1D04                     l2226:	
  5184                           ;incstack = 0
  5185                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5186                           
  5187  1D04  0875               	movf	___lwmod@divisor,w
  5188  1D05  0476               	iorwf	___lwmod@divisor+1,w
  5189  1D06  1903               	btfsc	3,2
  5190  1D07  2D09               	goto	u2991
  5191  1D08  2D0A               	goto	u2990
  5192  1D09                     u2991:
  5193  1D09  2D3B               	goto	l2244
  5194  1D0A                     u2990:
  5195  1D0A                     l2228:
  5196  1D0A  1283               	bcf	3,5	;RP0=0, select bank0
  5197  1D0B  1303               	bcf	3,6	;RP1=0, select bank0
  5198  1D0C  01A1               	clrf	___lwmod@counter
  5199  1D0D  0AA1               	incf	___lwmod@counter,f
  5200  1D0E  2D1A               	goto	l2234
  5201  1D0F                     l2230:
  5202  1D0F  3001               	movlw	1
  5203  1D10                     u3005:
  5204  1D10  1003               	clrc
  5205  1D11  0DF5               	rlf	___lwmod@divisor,f
  5206  1D12  0DF6               	rlf	___lwmod@divisor+1,f
  5207  1D13  3EFF               	addlw	-1
  5208  1D14  1D03               	skipz
  5209  1D15  2D10               	goto	u3005
  5210  1D16                     l2232:
  5211  1D16  3001               	movlw	1
  5212  1D17  00A0               	movwf	??___lwmod
  5213  1D18  0820               	movf	??___lwmod,w
  5214  1D19  07A1               	addwf	___lwmod@counter,f
  5215  1D1A                     l2234:
  5216  1D1A  1FF6               	btfss	___lwmod@divisor+1,7
  5217  1D1B  2D1D               	goto	u3011
  5218  1D1C  2D1E               	goto	u3010
  5219  1D1D                     u3011:
  5220  1D1D  2D0F               	goto	l2230
  5221  1D1E                     u3010:
  5222  1D1E                     l2236:
  5223  1D1E  0876               	movf	___lwmod@divisor+1,w
  5224  1D1F  0278               	subwf	___lwmod@dividend+1,w
  5225  1D20  1D03               	skipz
  5226  1D21  2D24               	goto	u3025
  5227  1D22  0875               	movf	___lwmod@divisor,w
  5228  1D23  0277               	subwf	___lwmod@dividend,w
  5229  1D24                     u3025:
  5230  1D24  1C03               	skipc
  5231  1D25  2D27               	goto	u3021
  5232  1D26  2D28               	goto	u3020
  5233  1D27                     u3021:
  5234  1D27  2D2E               	goto	l2240
  5235  1D28                     u3020:
  5236  1D28                     l2238:
  5237  1D28  0875               	movf	___lwmod@divisor,w
  5238  1D29  02F7               	subwf	___lwmod@dividend,f
  5239  1D2A  0876               	movf	___lwmod@divisor+1,w
  5240  1D2B  1C03               	skipc
  5241  1D2C  03F8               	decf	___lwmod@dividend+1,f
  5242  1D2D  02F8               	subwf	___lwmod@dividend+1,f
  5243  1D2E                     l2240:
  5244  1D2E  3001               	movlw	1
  5245  1D2F                     u3035:
  5246  1D2F  1003               	clrc
  5247  1D30  0CF6               	rrf	___lwmod@divisor+1,f
  5248  1D31  0CF5               	rrf	___lwmod@divisor,f
  5249  1D32  3EFF               	addlw	-1
  5250  1D33  1D03               	skipz
  5251  1D34  2D2F               	goto	u3035
  5252  1D35                     l2242:
  5253  1D35  3001               	movlw	1
  5254  1D36  02A1               	subwf	___lwmod@counter,f
  5255  1D37  1D03               	btfss	3,2
  5256  1D38  2D3A               	goto	u3041
  5257  1D39  2D3B               	goto	u3040
  5258  1D3A                     u3041:
  5259  1D3A  2D1E               	goto	l2236
  5260  1D3B                     u3040:
  5261  1D3B                     l2244:
  5262  1D3B  0878               	movf	___lwmod@dividend+1,w
  5263  1D3C  00F6               	movwf	?___lwmod+1
  5264  1D3D  0877               	movf	___lwmod@dividend,w
  5265  1D3E  00F5               	movwf	?___lwmod
  5266  1D3F                     l625:
  5267  1D3F  0008               	return
  5268  1D40                     __end_of___lwmod:
  5269                           
  5270                           	psect	text9
  5271  1D86                     __ptext9:	
  5272 ;; *************** function ___lwdiv *****************
  5273 ;; Defined at:
  5274 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  divisor         2    2[BANK0 ] unsigned int 
  5277 ;;  dividend        2    4[BANK0 ] unsigned int 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;  quotient        2    7[BANK0 ] unsigned int 
  5280 ;;  counter         1    9[BANK0 ] unsigned char 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  2    2[BANK0 ] unsigned int 
  5283 ;; Registers used:
  5284 ;;		wreg, status,2, status,0
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5290 ;;      Params:         0       4       0       0       0
  5291 ;;      Locals:         0       3       0       0       0
  5292 ;;      Temps:          0       1       0       0       0
  5293 ;;      Totals:         0       8       0       0       0
  5294 ;;Total ram usage:        8 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:    2
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_fround
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           
  5305                           ;psect for function ___lwdiv
  5306  1D86                     ___lwdiv:
  5307  1D86                     l2200:	
  5308                           ;incstack = 0
  5309                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5310                           
  5311  1D86  1283               	bcf	3,5	;RP0=0, select bank0
  5312  1D87  1303               	bcf	3,6	;RP1=0, select bank0
  5313  1D88  01A7               	clrf	___lwdiv@quotient
  5314  1D89  01A8               	clrf	___lwdiv@quotient+1
  5315  1D8A                     l2202:
  5316  1D8A  0822               	movf	___lwdiv@divisor,w
  5317  1D8B  0423               	iorwf	___lwdiv@divisor+1,w
  5318  1D8C  1903               	btfsc	3,2
  5319  1D8D  2D8F               	goto	u2921
  5320  1D8E  2D90               	goto	u2920
  5321  1D8F                     u2921:
  5322  1D8F  2DC7               	goto	l2222
  5323  1D90                     u2920:
  5324  1D90                     l2204:
  5325  1D90  01A9               	clrf	___lwdiv@counter
  5326  1D91  0AA9               	incf	___lwdiv@counter,f
  5327  1D92  2D9E               	goto	l2210
  5328  1D93                     l2206:
  5329  1D93  3001               	movlw	1
  5330  1D94                     u2935:
  5331  1D94  1003               	clrc
  5332  1D95  0DA2               	rlf	___lwdiv@divisor,f
  5333  1D96  0DA3               	rlf	___lwdiv@divisor+1,f
  5334  1D97  3EFF               	addlw	-1
  5335  1D98  1D03               	skipz
  5336  1D99  2D94               	goto	u2935
  5337  1D9A                     l2208:
  5338  1D9A  3001               	movlw	1
  5339  1D9B  00A6               	movwf	??___lwdiv
  5340  1D9C  0826               	movf	??___lwdiv,w
  5341  1D9D  07A9               	addwf	___lwdiv@counter,f
  5342  1D9E                     l2210:
  5343  1D9E  1FA3               	btfss	___lwdiv@divisor+1,7
  5344  1D9F  2DA1               	goto	u2941
  5345  1DA0  2DA2               	goto	u2940
  5346  1DA1                     u2941:
  5347  1DA1  2D93               	goto	l2206
  5348  1DA2                     u2940:
  5349  1DA2                     l2212:
  5350  1DA2  3001               	movlw	1
  5351  1DA3                     u2955:
  5352  1DA3  1003               	clrc
  5353  1DA4  0DA7               	rlf	___lwdiv@quotient,f
  5354  1DA5  0DA8               	rlf	___lwdiv@quotient+1,f
  5355  1DA6  3EFF               	addlw	-1
  5356  1DA7  1D03               	skipz
  5357  1DA8  2DA3               	goto	u2955
  5358  1DA9  0823               	movf	___lwdiv@divisor+1,w
  5359  1DAA  0225               	subwf	___lwdiv@dividend+1,w
  5360  1DAB  1D03               	skipz
  5361  1DAC  2DAF               	goto	u2965
  5362  1DAD  0822               	movf	___lwdiv@divisor,w
  5363  1DAE  0224               	subwf	___lwdiv@dividend,w
  5364  1DAF                     u2965:
  5365  1DAF  1C03               	skipc
  5366  1DB0  2DB2               	goto	u2961
  5367  1DB1  2DB3               	goto	u2960
  5368  1DB2                     u2961:
  5369  1DB2  2DBA               	goto	l2218
  5370  1DB3                     u2960:
  5371  1DB3                     l2214:
  5372  1DB3  0822               	movf	___lwdiv@divisor,w
  5373  1DB4  02A4               	subwf	___lwdiv@dividend,f
  5374  1DB5  0823               	movf	___lwdiv@divisor+1,w
  5375  1DB6  1C03               	skipc
  5376  1DB7  03A5               	decf	___lwdiv@dividend+1,f
  5377  1DB8  02A5               	subwf	___lwdiv@dividend+1,f
  5378  1DB9                     l2216:
  5379  1DB9  1427               	bsf	___lwdiv@quotient,0
  5380  1DBA                     l2218:
  5381  1DBA  3001               	movlw	1
  5382  1DBB                     u2975:
  5383  1DBB  1003               	clrc
  5384  1DBC  0CA3               	rrf	___lwdiv@divisor+1,f
  5385  1DBD  0CA2               	rrf	___lwdiv@divisor,f
  5386  1DBE  3EFF               	addlw	-1
  5387  1DBF  1D03               	skipz
  5388  1DC0  2DBB               	goto	u2975
  5389  1DC1                     l2220:
  5390  1DC1  3001               	movlw	1
  5391  1DC2  02A9               	subwf	___lwdiv@counter,f
  5392  1DC3  1D03               	btfss	3,2
  5393  1DC4  2DC6               	goto	u2981
  5394  1DC5  2DC7               	goto	u2980
  5395  1DC6                     u2981:
  5396  1DC6  2DA2               	goto	l2212
  5397  1DC7                     u2980:
  5398  1DC7                     l2222:
  5399  1DC7  0828               	movf	___lwdiv@quotient+1,w
  5400  1DC8  00A3               	movwf	?___lwdiv+1
  5401  1DC9  0827               	movf	___lwdiv@quotient,w
  5402  1DCA  00A2               	movwf	?___lwdiv
  5403  1DCB                     l615:
  5404  1DCB  0008               	return
  5405  1DCC                     __end_of___lwdiv:
  5406                           
  5407                           	psect	text10
  5408  093C                     __ptext10:	
  5409 ;; *************** function ___flmul *****************
  5410 ;; Defined at:
  5411 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  b               4   12[BANK0 ] unsigned int 
  5414 ;;  a               4   16[BANK0 ] unsigned int 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  prod            4   32[BANK0 ] struct .
  5417 ;;  grs             4   26[BANK0 ] unsigned long 
  5418 ;;  temp            2   36[BANK0 ] struct .
  5419 ;;  bexp            1   31[BANK0 ] unsigned char 
  5420 ;;  aexp            1   30[BANK0 ] unsigned char 
  5421 ;;  sign            1   25[BANK0 ] unsigned char 
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  4   12[BANK0 ] unsigned char 
  5424 ;; Registers used:
  5425 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5431 ;;      Params:         0       8       0       0       0
  5432 ;;      Locals:         0      13       0       0       0
  5433 ;;      Temps:          0       5       0       0       0
  5434 ;;      Totals:         0      26       0       0       0
  5435 ;;Total ram usage:       26 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    3
  5438 ;; This function calls:
  5439 ;;		__Umul8_16
  5440 ;; This function is called by:
  5441 ;;		_fround
  5442 ;;		_scale
  5443 ;;		_sprintf
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           
  5448                           ;psect for function ___flmul
  5449  093C                     ___flmul:
  5450  093C                     l2442:	
  5451                           ;incstack = 0
  5452                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5453                           
  5454  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5455  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5456  093E  082F               	movf	___flmul@b+3,w
  5457  093F  3980               	andlw	128
  5458  0940  00B4               	movwf	??___flmul
  5459  0941  0834               	movf	??___flmul,w
  5460  0942  00B9               	movwf	___flmul@sign
  5461  0943                     l2444:
  5462  0943  082F               	movf	___flmul@b+3,w
  5463  0944  00B4               	movwf	??___flmul
  5464  0945  0734               	addwf	??___flmul,w
  5465  0946  00B5               	movwf	??___flmul+1
  5466  0947  0835               	movf	??___flmul+1,w
  5467  0948  00BF               	movwf	___flmul@bexp
  5468  0949                     l2446:
  5469  0949  1FAE               	btfss	___flmul@b+2,7
  5470  094A  294C               	goto	u3511
  5471  094B  294D               	goto	u3510
  5472  094C                     u3511:
  5473  094C  294E               	goto	l2450
  5474  094D                     u3510:
  5475  094D                     l2448:
  5476  094D  143F               	bsf	___flmul@bexp,0
  5477  094E                     l2450:
  5478  094E  083F               	movf	___flmul@bexp,w
  5479  094F  1903               	btfsc	3,2
  5480  0950  2952               	goto	u3521
  5481  0951  2953               	goto	u3520
  5482  0952                     u3521:
  5483  0952  2962               	goto	l2458
  5484  0953                     u3520:
  5485  0953                     l2452:
  5486  0953  0A3F               	incf	___flmul@bexp,w
  5487  0954  1D03               	btfss	3,2
  5488  0955  2957               	goto	u3531
  5489  0956  2958               	goto	u3530
  5490  0957                     u3531:
  5491  0957  2960               	goto	l2456
  5492  0958                     u3530:
  5493  0958                     l2454:
  5494  0958  3000               	movlw	0
  5495  0959  00AF               	movwf	___flmul@b+3
  5496  095A  3000               	movlw	0
  5497  095B  00AE               	movwf	___flmul@b+2
  5498  095C  3000               	movlw	0
  5499  095D  00AD               	movwf	___flmul@b+1
  5500  095E  3000               	movlw	0
  5501  095F  00AC               	movwf	___flmul@b
  5502  0960                     l2456:
  5503  0960  17AE               	bsf	___flmul@b+2,7
  5504  0961  296A               	goto	l2460
  5505  0962                     l2458:
  5506  0962  3000               	movlw	0
  5507  0963  00AF               	movwf	___flmul@b+3
  5508  0964  3000               	movlw	0
  5509  0965  00AE               	movwf	___flmul@b+2
  5510  0966  3000               	movlw	0
  5511  0967  00AD               	movwf	___flmul@b+1
  5512  0968  3000               	movlw	0
  5513  0969  00AC               	movwf	___flmul@b
  5514  096A                     l2460:
  5515  096A  0833               	movf	___flmul@a+3,w
  5516  096B  3980               	andlw	128
  5517  096C  00B4               	movwf	??___flmul
  5518  096D  0834               	movf	??___flmul,w
  5519  096E  06B9               	xorwf	___flmul@sign,f
  5520  096F                     l2462:
  5521  096F  0833               	movf	___flmul@a+3,w
  5522  0970  00B4               	movwf	??___flmul
  5523  0971  0734               	addwf	??___flmul,w
  5524  0972  00B5               	movwf	??___flmul+1
  5525  0973  0835               	movf	??___flmul+1,w
  5526  0974  00BE               	movwf	___flmul@aexp
  5527  0975                     l2464:
  5528  0975  1FB2               	btfss	___flmul@a+2,7
  5529  0976  2978               	goto	u3541
  5530  0977  2979               	goto	u3540
  5531  0978                     u3541:
  5532  0978  297A               	goto	l2468
  5533  0979                     u3540:
  5534  0979                     l2466:
  5535  0979  143E               	bsf	___flmul@aexp,0
  5536  097A                     l2468:
  5537  097A  083E               	movf	___flmul@aexp,w
  5538  097B  1903               	btfsc	3,2
  5539  097C  297E               	goto	u3551
  5540  097D  297F               	goto	u3550
  5541  097E                     u3551:
  5542  097E  298E               	goto	l2476
  5543  097F                     u3550:
  5544  097F                     l2470:
  5545  097F  0A3E               	incf	___flmul@aexp,w
  5546  0980  1D03               	btfss	3,2
  5547  0981  2983               	goto	u3561
  5548  0982  2984               	goto	u3560
  5549  0983                     u3561:
  5550  0983  298C               	goto	l2474
  5551  0984                     u3560:
  5552  0984                     l2472:
  5553  0984  3000               	movlw	0
  5554  0985  00B3               	movwf	___flmul@a+3
  5555  0986  3000               	movlw	0
  5556  0987  00B2               	movwf	___flmul@a+2
  5557  0988  3000               	movlw	0
  5558  0989  00B1               	movwf	___flmul@a+1
  5559  098A  3000               	movlw	0
  5560  098B  00B0               	movwf	___flmul@a
  5561  098C                     l2474:
  5562  098C  17B2               	bsf	___flmul@a+2,7
  5563  098D  2996               	goto	l2478
  5564  098E                     l2476:
  5565  098E  3000               	movlw	0
  5566  098F  00B3               	movwf	___flmul@a+3
  5567  0990  3000               	movlw	0
  5568  0991  00B2               	movwf	___flmul@a+2
  5569  0992  3000               	movlw	0
  5570  0993  00B1               	movwf	___flmul@a+1
  5571  0994  3000               	movlw	0
  5572  0995  00B0               	movwf	___flmul@a
  5573  0996                     l2478:
  5574  0996  083E               	movf	___flmul@aexp,w
  5575  0997  1903               	btfsc	3,2
  5576  0998  299A               	goto	u3571
  5577  0999  299B               	goto	u3570
  5578  099A                     u3571:
  5579  099A  29A0               	goto	l2482
  5580  099B                     u3570:
  5581  099B                     l2480:
  5582  099B  083F               	movf	___flmul@bexp,w
  5583  099C  1D03               	btfss	3,2
  5584  099D  299F               	goto	u3581
  5585  099E  29A0               	goto	u3580
  5586  099F                     u3581:
  5587  099F  29A9               	goto	l2486
  5588  09A0                     u3580:
  5589  09A0                     l2482:
  5590  09A0  3000               	movlw	0
  5591  09A1  00AF               	movwf	?___flmul+3
  5592  09A2  3000               	movlw	0
  5593  09A3  00AE               	movwf	?___flmul+2
  5594  09A4  3000               	movlw	0
  5595  09A5  00AD               	movwf	?___flmul+1
  5596  09A6  3000               	movlw	0
  5597  09A7  00AC               	movwf	?___flmul
  5598  09A8  2C9C               	goto	l732
  5599  09A9                     l2486:
  5600  09A9  082C               	movf	___flmul@b,w
  5601  09AA  00B4               	movwf	??___flmul
  5602  09AB  0834               	movf	??___flmul,w
  5603  09AC  00F5               	movwf	__Umul8_16@multiplicand
  5604  09AD  0832               	movf	___flmul@a+2,w
  5605  09AE  160A  158A  2478  120A  158A  	fcall	__Umul8_16
  5606  09B3  0876               	movf	?__Umul8_16+1,w
  5607  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  5608  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  5609  09B6  00C5               	movwf	___flmul@temp+1
  5610  09B7  0875               	movf	?__Umul8_16,w
  5611  09B8  00C4               	movwf	___flmul@temp
  5612  09B9                     l2488:
  5613  09B9  0844               	movf	___flmul@temp,w
  5614  09BA  00B4               	movwf	??___flmul
  5615  09BB  01B5               	clrf	??___flmul+1
  5616  09BC  01B6               	clrf	??___flmul+2
  5617  09BD  01B7               	clrf	??___flmul+3
  5618  09BE  0837               	movf	??___flmul+3,w
  5619  09BF  00BD               	movwf	___flmul@grs+3
  5620  09C0  0836               	movf	??___flmul+2,w
  5621  09C1  00BC               	movwf	___flmul@grs+2
  5622  09C2  0835               	movf	??___flmul+1,w
  5623  09C3  00BB               	movwf	___flmul@grs+1
  5624  09C4  0834               	movf	??___flmul,w
  5625  09C5  00BA               	movwf	___flmul@grs
  5626  09C6                     l2490:
  5627  09C6  0845               	movf	___flmul@temp+1,w
  5628  09C7  00B4               	movwf	??___flmul
  5629  09C8  01B5               	clrf	??___flmul+1
  5630  09C9  01B6               	clrf	??___flmul+2
  5631  09CA  01B7               	clrf	??___flmul+3
  5632  09CB  0837               	movf	??___flmul+3,w
  5633  09CC  00C3               	movwf	___flmul@prod+3
  5634  09CD  0836               	movf	??___flmul+2,w
  5635  09CE  00C2               	movwf	___flmul@prod+2
  5636  09CF  0835               	movf	??___flmul+1,w
  5637  09D0  00C1               	movwf	___flmul@prod+1
  5638  09D1  0834               	movf	??___flmul,w
  5639  09D2  00C0               	movwf	___flmul@prod
  5640  09D3  082D               	movf	___flmul@b+1,w
  5641  09D4  00B4               	movwf	??___flmul
  5642  09D5  0834               	movf	??___flmul,w
  5643  09D6  00F5               	movwf	__Umul8_16@multiplicand
  5644  09D7  0831               	movf	___flmul@a+1,w
  5645  09D8  160A  158A  2478  120A  158A  	fcall	__Umul8_16
  5646  09DD  0876               	movf	?__Umul8_16+1,w
  5647  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  5648  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  5649  09E0  00C5               	movwf	___flmul@temp+1
  5650  09E1  0875               	movf	?__Umul8_16,w
  5651  09E2  00C4               	movwf	___flmul@temp
  5652  09E3                     l2492:
  5653  09E3  0844               	movf	___flmul@temp,w
  5654  09E4  00B4               	movwf	??___flmul
  5655  09E5  01B5               	clrf	??___flmul+1
  5656  09E6  01B6               	clrf	??___flmul+2
  5657  09E7  01B7               	clrf	??___flmul+3
  5658  09E8  0834               	movf	??___flmul,w
  5659  09E9  07BA               	addwf	___flmul@grs,f
  5660  09EA  0835               	movf	??___flmul+1,w
  5661  09EB  1103               	clrz
  5662  09EC  1803               	skipnc
  5663  09ED  3E01               	addlw	1
  5664  09EE  1903               	skipnz
  5665  09EF  29F1               	goto	u3591
  5666  09F0  07BB               	addwf	___flmul@grs+1,f
  5667  09F1                     u3591:
  5668  09F1  0836               	movf	??___flmul+2,w
  5669  09F2  1103               	clrz
  5670  09F3  1803               	skipnc
  5671  09F4  3E01               	addlw	1
  5672  09F5  1903               	skipnz
  5673  09F6  29F8               	goto	u3592
  5674  09F7  07BC               	addwf	___flmul@grs+2,f
  5675  09F8                     u3592:
  5676  09F8  0837               	movf	??___flmul+3,w
  5677  09F9  1103               	clrz
  5678  09FA  1803               	skipnc
  5679  09FB  3E01               	addlw	1
  5680  09FC  1903               	skipnz
  5681  09FD  29FF               	goto	u3593
  5682  09FE  07BD               	addwf	___flmul@grs+3,f
  5683  09FF                     u3593:
  5684  09FF                     l2494:
  5685  09FF  0845               	movf	___flmul@temp+1,w
  5686  0A00  00B4               	movwf	??___flmul
  5687  0A01  01B5               	clrf	??___flmul+1
  5688  0A02  01B6               	clrf	??___flmul+2
  5689  0A03  01B7               	clrf	??___flmul+3
  5690  0A04  0834               	movf	??___flmul,w
  5691  0A05  07C0               	addwf	___flmul@prod,f
  5692  0A06  0835               	movf	??___flmul+1,w
  5693  0A07  1103               	clrz
  5694  0A08  1803               	skipnc
  5695  0A09  3E01               	addlw	1
  5696  0A0A  1903               	skipnz
  5697  0A0B  2A0D               	goto	u3601
  5698  0A0C  07C1               	addwf	___flmul@prod+1,f
  5699  0A0D                     u3601:
  5700  0A0D  0836               	movf	??___flmul+2,w
  5701  0A0E  1103               	clrz
  5702  0A0F  1803               	skipnc
  5703  0A10  3E01               	addlw	1
  5704  0A11  1903               	skipnz
  5705  0A12  2A14               	goto	u3602
  5706  0A13  07C2               	addwf	___flmul@prod+2,f
  5707  0A14                     u3602:
  5708  0A14  0837               	movf	??___flmul+3,w
  5709  0A15  1103               	clrz
  5710  0A16  1803               	skipnc
  5711  0A17  3E01               	addlw	1
  5712  0A18  1903               	skipnz
  5713  0A19  2A1B               	goto	u3603
  5714  0A1A  07C3               	addwf	___flmul@prod+3,f
  5715  0A1B                     u3603:
  5716  0A1B  082E               	movf	___flmul@b+2,w
  5717  0A1C  00B4               	movwf	??___flmul
  5718  0A1D  0834               	movf	??___flmul,w
  5719  0A1E  00F5               	movwf	__Umul8_16@multiplicand
  5720  0A1F  0830               	movf	___flmul@a,w
  5721  0A20  160A  158A  2478  120A  158A  	fcall	__Umul8_16
  5722  0A25  0876               	movf	?__Umul8_16+1,w
  5723  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  5724  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  5725  0A28  00C5               	movwf	___flmul@temp+1
  5726  0A29  0875               	movf	?__Umul8_16,w
  5727  0A2A  00C4               	movwf	___flmul@temp
  5728  0A2B                     l2496:
  5729  0A2B  0844               	movf	___flmul@temp,w
  5730  0A2C  00B4               	movwf	??___flmul
  5731  0A2D  01B5               	clrf	??___flmul+1
  5732  0A2E  01B6               	clrf	??___flmul+2
  5733  0A2F  01B7               	clrf	??___flmul+3
  5734  0A30  0834               	movf	??___flmul,w
  5735  0A31  07BA               	addwf	___flmul@grs,f
  5736  0A32  0835               	movf	??___flmul+1,w
  5737  0A33  1103               	clrz
  5738  0A34  1803               	skipnc
  5739  0A35  3E01               	addlw	1
  5740  0A36  1903               	skipnz
  5741  0A37  2A39               	goto	u3611
  5742  0A38  07BB               	addwf	___flmul@grs+1,f
  5743  0A39                     u3611:
  5744  0A39  0836               	movf	??___flmul+2,w
  5745  0A3A  1103               	clrz
  5746  0A3B  1803               	skipnc
  5747  0A3C  3E01               	addlw	1
  5748  0A3D  1903               	skipnz
  5749  0A3E  2A40               	goto	u3612
  5750  0A3F  07BC               	addwf	___flmul@grs+2,f
  5751  0A40                     u3612:
  5752  0A40  0837               	movf	??___flmul+3,w
  5753  0A41  1103               	clrz
  5754  0A42  1803               	skipnc
  5755  0A43  3E01               	addlw	1
  5756  0A44  1903               	skipnz
  5757  0A45  2A47               	goto	u3613
  5758  0A46  07BD               	addwf	___flmul@grs+3,f
  5759  0A47                     u3613:
  5760  0A47                     l2498:
  5761  0A47  0845               	movf	___flmul@temp+1,w
  5762  0A48  00B4               	movwf	??___flmul
  5763  0A49  01B5               	clrf	??___flmul+1
  5764  0A4A  01B6               	clrf	??___flmul+2
  5765  0A4B  01B7               	clrf	??___flmul+3
  5766  0A4C  0834               	movf	??___flmul,w
  5767  0A4D  07C0               	addwf	___flmul@prod,f
  5768  0A4E  0835               	movf	??___flmul+1,w
  5769  0A4F  1103               	clrz
  5770  0A50  1803               	skipnc
  5771  0A51  3E01               	addlw	1
  5772  0A52  1903               	skipnz
  5773  0A53  2A55               	goto	u3621
  5774  0A54  07C1               	addwf	___flmul@prod+1,f
  5775  0A55                     u3621:
  5776  0A55  0836               	movf	??___flmul+2,w
  5777  0A56  1103               	clrz
  5778  0A57  1803               	skipnc
  5779  0A58  3E01               	addlw	1
  5780  0A59  1903               	skipnz
  5781  0A5A  2A5C               	goto	u3622
  5782  0A5B  07C2               	addwf	___flmul@prod+2,f
  5783  0A5C                     u3622:
  5784  0A5C  0837               	movf	??___flmul+3,w
  5785  0A5D  1103               	clrz
  5786  0A5E  1803               	skipnc
  5787  0A5F  3E01               	addlw	1
  5788  0A60  1903               	skipnz
  5789  0A61  2A63               	goto	u3623
  5790  0A62  07C3               	addwf	___flmul@prod+3,f
  5791  0A63                     u3623:
  5792  0A63                     l2500:
  5793  0A63  3008               	movlw	8
  5794  0A64  00B4               	movwf	??___flmul
  5795  0A65                     u3635:
  5796  0A65  1003               	clrc
  5797  0A66  0DBA               	rlf	___flmul@grs,f
  5798  0A67  0DBB               	rlf	___flmul@grs+1,f
  5799  0A68  0DBC               	rlf	___flmul@grs+2,f
  5800  0A69  0DBD               	rlf	___flmul@grs+3,f
  5801  0A6A  0BB4               	decfsz	??___flmul,f
  5802  0A6B  2A65               	goto	u3635
  5803  0A6C                     l2502:
  5804  0A6C  082D               	movf	___flmul@b+1,w
  5805  0A6D  00B4               	movwf	??___flmul
  5806  0A6E  0834               	movf	??___flmul,w
  5807  0A6F  00F5               	movwf	__Umul8_16@multiplicand
  5808  0A70  0830               	movf	___flmul@a,w
  5809  0A71  160A  158A  2478  120A  158A  	fcall	__Umul8_16
  5810  0A76  0876               	movf	?__Umul8_16+1,w
  5811  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  5812  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  5813  0A79  00C5               	movwf	___flmul@temp+1
  5814  0A7A  0875               	movf	?__Umul8_16,w
  5815  0A7B  00C4               	movwf	___flmul@temp
  5816  0A7C                     l2504:
  5817  0A7C  0844               	movf	___flmul@temp,w
  5818  0A7D  00B4               	movwf	??___flmul
  5819  0A7E  0845               	movf	___flmul@temp+1,w
  5820  0A7F  00B5               	movwf	??___flmul+1
  5821  0A80  01B6               	clrf	??___flmul+2
  5822  0A81  01B7               	clrf	??___flmul+3
  5823  0A82  0834               	movf	??___flmul,w
  5824  0A83  07BA               	addwf	___flmul@grs,f
  5825  0A84  0835               	movf	??___flmul+1,w
  5826  0A85  1103               	clrz
  5827  0A86  1803               	skipnc
  5828  0A87  3E01               	addlw	1
  5829  0A88  1903               	skipnz
  5830  0A89  2A8B               	goto	u3641
  5831  0A8A  07BB               	addwf	___flmul@grs+1,f
  5832  0A8B                     u3641:
  5833  0A8B  0836               	movf	??___flmul+2,w
  5834  0A8C  1103               	clrz
  5835  0A8D  1803               	skipnc
  5836  0A8E  3E01               	addlw	1
  5837  0A8F  1903               	skipnz
  5838  0A90  2A92               	goto	u3642
  5839  0A91  07BC               	addwf	___flmul@grs+2,f
  5840  0A92                     u3642:
  5841  0A92  0837               	movf	??___flmul+3,w
  5842  0A93  1103               	clrz
  5843  0A94  1803               	skipnc
  5844  0A95  3E01               	addlw	1
  5845  0A96  1903               	skipnz
  5846  0A97  2A99               	goto	u3643
  5847  0A98  07BD               	addwf	___flmul@grs+3,f
  5848  0A99                     u3643:
  5849  0A99                     l2506:
  5850  0A99  082C               	movf	___flmul@b,w
  5851  0A9A  00B4               	movwf	??___flmul
  5852  0A9B  0834               	movf	??___flmul,w
  5853  0A9C  00F5               	movwf	__Umul8_16@multiplicand
  5854  0A9D  0831               	movf	___flmul@a+1,w
  5855  0A9E  160A  158A  2478  120A  158A  	fcall	__Umul8_16
  5856  0AA3  0876               	movf	?__Umul8_16+1,w
  5857  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  5858  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  5859  0AA6  00C5               	movwf	___flmul@temp+1
  5860  0AA7  0875               	movf	?__Umul8_16,w
  5861  0AA8  00C4               	movwf	___flmul@temp
  5862  0AA9                     l2508:
  5863  0AA9  0844               	movf	___flmul@temp,w
  5864  0AAA  00B4               	movwf	??___flmul
  5865  0AAB  0845               	movf	___flmul@temp+1,w
  5866  0AAC  00B5               	movwf	??___flmul+1
  5867  0AAD  01B6               	clrf	??___flmul+2
  5868  0AAE  01B7               	clrf	??___flmul+3
  5869  0AAF  0834               	movf	??___flmul,w
  5870  0AB0  07BA               	addwf	___flmul@grs,f
  5871  0AB1  0835               	movf	??___flmul+1,w
  5872  0AB2  1103               	clrz
  5873  0AB3  1803               	skipnc
  5874  0AB4  3E01               	addlw	1
  5875  0AB5  1903               	skipnz
  5876  0AB6  2AB8               	goto	u3651
  5877  0AB7  07BB               	addwf	___flmul@grs+1,f
  5878  0AB8                     u3651:
  5879  0AB8  0836               	movf	??___flmul+2,w
  5880  0AB9  1103               	clrz
  5881  0ABA  1803               	skipnc
  5882  0ABB  3E01               	addlw	1
  5883  0ABC  1903               	skipnz
  5884  0ABD  2ABF               	goto	u3652
  5885  0ABE  07BC               	addwf	___flmul@grs+2,f
  5886  0ABF                     u3652:
  5887  0ABF  0837               	movf	??___flmul+3,w
  5888  0AC0  1103               	clrz
  5889  0AC1  1803               	skipnc
  5890  0AC2  3E01               	addlw	1
  5891  0AC3  1903               	skipnz
  5892  0AC4  2AC6               	goto	u3653
  5893  0AC5  07BD               	addwf	___flmul@grs+3,f
  5894  0AC6                     u3653:
  5895  0AC6                     l2510:
  5896  0AC6  3008               	movlw	8
  5897  0AC7  00B4               	movwf	??___flmul
  5898  0AC8                     u3665:
  5899  0AC8  1003               	clrc
  5900  0AC9  0DBA               	rlf	___flmul@grs,f
  5901  0ACA  0DBB               	rlf	___flmul@grs+1,f
  5902  0ACB  0DBC               	rlf	___flmul@grs+2,f
  5903  0ACC  0DBD               	rlf	___flmul@grs+3,f
  5904  0ACD  0BB4               	decfsz	??___flmul,f
  5905  0ACE  2AC8               	goto	u3665
  5906  0ACF  082C               	movf	___flmul@b,w
  5907  0AD0  00B4               	movwf	??___flmul
  5908  0AD1  0834               	movf	??___flmul,w
  5909  0AD2  00F5               	movwf	__Umul8_16@multiplicand
  5910  0AD3  0830               	movf	___flmul@a,w
  5911  0AD4  160A  158A  2478  120A  158A  	fcall	__Umul8_16
  5912  0AD9  0876               	movf	?__Umul8_16+1,w
  5913  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  5914  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  5915  0ADC  00C5               	movwf	___flmul@temp+1
  5916  0ADD  0875               	movf	?__Umul8_16,w
  5917  0ADE  00C4               	movwf	___flmul@temp
  5918  0ADF                     l2512:
  5919  0ADF  0844               	movf	___flmul@temp,w
  5920  0AE0  00B4               	movwf	??___flmul
  5921  0AE1  0845               	movf	___flmul@temp+1,w
  5922  0AE2  00B5               	movwf	??___flmul+1
  5923  0AE3  01B6               	clrf	??___flmul+2
  5924  0AE4  01B7               	clrf	??___flmul+3
  5925  0AE5  0834               	movf	??___flmul,w
  5926  0AE6  07BA               	addwf	___flmul@grs,f
  5927  0AE7  0835               	movf	??___flmul+1,w
  5928  0AE8  1103               	clrz
  5929  0AE9  1803               	skipnc
  5930  0AEA  3E01               	addlw	1
  5931  0AEB  1903               	skipnz
  5932  0AEC  2AEE               	goto	u3671
  5933  0AED  07BB               	addwf	___flmul@grs+1,f
  5934  0AEE                     u3671:
  5935  0AEE  0836               	movf	??___flmul+2,w
  5936  0AEF  1103               	clrz
  5937  0AF0  1803               	skipnc
  5938  0AF1  3E01               	addlw	1
  5939  0AF2  1903               	skipnz
  5940  0AF3  2AF5               	goto	u3672
  5941  0AF4  07BC               	addwf	___flmul@grs+2,f
  5942  0AF5                     u3672:
  5943  0AF5  0837               	movf	??___flmul+3,w
  5944  0AF6  1103               	clrz
  5945  0AF7  1803               	skipnc
  5946  0AF8  3E01               	addlw	1
  5947  0AF9  1903               	skipnz
  5948  0AFA  2AFC               	goto	u3673
  5949  0AFB  07BD               	addwf	___flmul@grs+3,f
  5950  0AFC                     u3673:
  5951  0AFC                     l2514:
  5952  0AFC  082D               	movf	___flmul@b+1,w
  5953  0AFD  00B4               	movwf	??___flmul
  5954  0AFE  0834               	movf	??___flmul,w
  5955  0AFF  00F5               	movwf	__Umul8_16@multiplicand
  5956  0B00  0832               	movf	___flmul@a+2,w
  5957  0B01  160A  158A  2478  120A  158A  	fcall	__Umul8_16
  5958  0B06  0876               	movf	?__Umul8_16+1,w
  5959  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5960  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5961  0B09  00C5               	movwf	___flmul@temp+1
  5962  0B0A  0875               	movf	?__Umul8_16,w
  5963  0B0B  00C4               	movwf	___flmul@temp
  5964  0B0C  0844               	movf	___flmul@temp,w
  5965  0B0D  00B4               	movwf	??___flmul
  5966  0B0E  0845               	movf	___flmul@temp+1,w
  5967  0B0F  00B5               	movwf	??___flmul+1
  5968  0B10  01B6               	clrf	??___flmul+2
  5969  0B11  01B7               	clrf	??___flmul+3
  5970  0B12  0834               	movf	??___flmul,w
  5971  0B13  07C0               	addwf	___flmul@prod,f
  5972  0B14  0835               	movf	??___flmul+1,w
  5973  0B15  1103               	clrz
  5974  0B16  1803               	skipnc
  5975  0B17  3E01               	addlw	1
  5976  0B18  1903               	skipnz
  5977  0B19  2B1B               	goto	u3681
  5978  0B1A  07C1               	addwf	___flmul@prod+1,f
  5979  0B1B                     u3681:
  5980  0B1B  0836               	movf	??___flmul+2,w
  5981  0B1C  1103               	clrz
  5982  0B1D  1803               	skipnc
  5983  0B1E  3E01               	addlw	1
  5984  0B1F  1903               	skipnz
  5985  0B20  2B22               	goto	u3682
  5986  0B21  07C2               	addwf	___flmul@prod+2,f
  5987  0B22                     u3682:
  5988  0B22  0837               	movf	??___flmul+3,w
  5989  0B23  1103               	clrz
  5990  0B24  1803               	skipnc
  5991  0B25  3E01               	addlw	1
  5992  0B26  1903               	skipnz
  5993  0B27  2B29               	goto	u3683
  5994  0B28  07C3               	addwf	___flmul@prod+3,f
  5995  0B29                     u3683:
  5996  0B29                     l2516:
  5997  0B29  082E               	movf	___flmul@b+2,w
  5998  0B2A  00B4               	movwf	??___flmul
  5999  0B2B  0834               	movf	??___flmul,w
  6000  0B2C  00F5               	movwf	__Umul8_16@multiplicand
  6001  0B2D  0831               	movf	___flmul@a+1,w
  6002  0B2E  160A  158A  2478  120A  158A  	fcall	__Umul8_16
  6003  0B33  0876               	movf	?__Umul8_16+1,w
  6004  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  6005  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  6006  0B36  00C5               	movwf	___flmul@temp+1
  6007  0B37  0875               	movf	?__Umul8_16,w
  6008  0B38  00C4               	movwf	___flmul@temp
  6009  0B39                     l2518:
  6010  0B39  0844               	movf	___flmul@temp,w
  6011  0B3A  00B4               	movwf	??___flmul
  6012  0B3B  0845               	movf	___flmul@temp+1,w
  6013  0B3C  00B5               	movwf	??___flmul+1
  6014  0B3D  01B6               	clrf	??___flmul+2
  6015  0B3E  01B7               	clrf	??___flmul+3
  6016  0B3F  0834               	movf	??___flmul,w
  6017  0B40  07C0               	addwf	___flmul@prod,f
  6018  0B41  0835               	movf	??___flmul+1,w
  6019  0B42  1103               	clrz
  6020  0B43  1803               	skipnc
  6021  0B44  3E01               	addlw	1
  6022  0B45  1903               	skipnz
  6023  0B46  2B48               	goto	u3691
  6024  0B47  07C1               	addwf	___flmul@prod+1,f
  6025  0B48                     u3691:
  6026  0B48  0836               	movf	??___flmul+2,w
  6027  0B49  1103               	clrz
  6028  0B4A  1803               	skipnc
  6029  0B4B  3E01               	addlw	1
  6030  0B4C  1903               	skipnz
  6031  0B4D  2B4F               	goto	u3692
  6032  0B4E  07C2               	addwf	___flmul@prod+2,f
  6033  0B4F                     u3692:
  6034  0B4F  0837               	movf	??___flmul+3,w
  6035  0B50  1103               	clrz
  6036  0B51  1803               	skipnc
  6037  0B52  3E01               	addlw	1
  6038  0B53  1903               	skipnz
  6039  0B54  2B56               	goto	u3693
  6040  0B55  07C3               	addwf	___flmul@prod+3,f
  6041  0B56                     u3693:
  6042  0B56  082E               	movf	___flmul@b+2,w
  6043  0B57  00B4               	movwf	??___flmul
  6044  0B58  0834               	movf	??___flmul,w
  6045  0B59  00F5               	movwf	__Umul8_16@multiplicand
  6046  0B5A  0832               	movf	___flmul@a+2,w
  6047  0B5B  160A  158A  2478  120A  158A  	fcall	__Umul8_16
  6048  0B60  0876               	movf	?__Umul8_16+1,w
  6049  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6050  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6051  0B63  00C5               	movwf	___flmul@temp+1
  6052  0B64  0875               	movf	?__Umul8_16,w
  6053  0B65  00C4               	movwf	___flmul@temp
  6054  0B66                     l2520:
  6055  0B66  0844               	movf	___flmul@temp,w
  6056  0B67  00B4               	movwf	??___flmul
  6057  0B68  0845               	movf	___flmul@temp+1,w
  6058  0B69  00B5               	movwf	??___flmul+1
  6059  0B6A  01B6               	clrf	??___flmul+2
  6060  0B6B  01B7               	clrf	??___flmul+3
  6061  0B6C  3008               	movlw	8
  6062  0B6D                     u3705:
  6063  0B6D  1003               	clrc
  6064  0B6E  0DB4               	rlf	??___flmul,f
  6065  0B6F  0DB5               	rlf	??___flmul+1,f
  6066  0B70  0DB6               	rlf	??___flmul+2,f
  6067  0B71  0DB7               	rlf	??___flmul+3,f
  6068  0B72                     u3700:
  6069  0B72  3EFF               	addlw	-1
  6070  0B73  1D03               	skipz
  6071  0B74  2B6D               	goto	u3705
  6072  0B75  0834               	movf	??___flmul,w
  6073  0B76  07C0               	addwf	___flmul@prod,f
  6074  0B77  0835               	movf	??___flmul+1,w
  6075  0B78  1103               	clrz
  6076  0B79  1803               	skipnc
  6077  0B7A  3E01               	addlw	1
  6078  0B7B  1903               	skipnz
  6079  0B7C  2B7E               	goto	u3711
  6080  0B7D  07C1               	addwf	___flmul@prod+1,f
  6081  0B7E                     u3711:
  6082  0B7E  0836               	movf	??___flmul+2,w
  6083  0B7F  1103               	clrz
  6084  0B80  1803               	skipnc
  6085  0B81  3E01               	addlw	1
  6086  0B82  1903               	skipnz
  6087  0B83  2B85               	goto	u3712
  6088  0B84  07C2               	addwf	___flmul@prod+2,f
  6089  0B85                     u3712:
  6090  0B85  0837               	movf	??___flmul+3,w
  6091  0B86  1103               	clrz
  6092  0B87  1803               	skipnc
  6093  0B88  3E01               	addlw	1
  6094  0B89  1903               	skipnz
  6095  0B8A  2B8C               	goto	u3713
  6096  0B8B  07C3               	addwf	___flmul@prod+3,f
  6097  0B8C                     u3713:
  6098  0B8C                     l2522:
  6099  0B8C  083A               	movf	___flmul@grs,w
  6100  0B8D  00B4               	movwf	??___flmul
  6101  0B8E  083B               	movf	___flmul@grs+1,w
  6102  0B8F  00B5               	movwf	??___flmul+1
  6103  0B90  083C               	movf	___flmul@grs+2,w
  6104  0B91  00B6               	movwf	??___flmul+2
  6105  0B92  083D               	movf	___flmul@grs+3,w
  6106  0B93  00B7               	movwf	??___flmul+3
  6107  0B94  3018               	movlw	24
  6108  0B95                     u3725:
  6109  0B95  1003               	clrc
  6110  0B96  0CB7               	rrf	??___flmul+3,f
  6111  0B97  0CB6               	rrf	??___flmul+2,f
  6112  0B98  0CB5               	rrf	??___flmul+1,f
  6113  0B99  0CB4               	rrf	??___flmul,f
  6114  0B9A                     u3720:
  6115  0B9A  3EFF               	addlw	-1
  6116  0B9B  1D03               	skipz
  6117  0B9C  2B95               	goto	u3725
  6118  0B9D  0834               	movf	??___flmul,w
  6119  0B9E  07C0               	addwf	___flmul@prod,f
  6120  0B9F  0835               	movf	??___flmul+1,w
  6121  0BA0  1103               	clrz
  6122  0BA1  1803               	skipnc
  6123  0BA2  3E01               	addlw	1
  6124  0BA3  1903               	skipnz
  6125  0BA4  2BA6               	goto	u3731
  6126  0BA5  07C1               	addwf	___flmul@prod+1,f
  6127  0BA6                     u3731:
  6128  0BA6  0836               	movf	??___flmul+2,w
  6129  0BA7  1103               	clrz
  6130  0BA8  1803               	skipnc
  6131  0BA9  3E01               	addlw	1
  6132  0BAA  1903               	skipnz
  6133  0BAB  2BAD               	goto	u3732
  6134  0BAC  07C2               	addwf	___flmul@prod+2,f
  6135  0BAD                     u3732:
  6136  0BAD  0837               	movf	??___flmul+3,w
  6137  0BAE  1103               	clrz
  6138  0BAF  1803               	skipnc
  6139  0BB0  3E01               	addlw	1
  6140  0BB1  1903               	skipnz
  6141  0BB2  2BB4               	goto	u3733
  6142  0BB3  07C3               	addwf	___flmul@prod+3,f
  6143  0BB4                     u3733:
  6144  0BB4                     l2524:
  6145  0BB4  3008               	movlw	8
  6146  0BB5  00B4               	movwf	??___flmul
  6147  0BB6                     u3745:
  6148  0BB6  1003               	clrc
  6149  0BB7  0DBA               	rlf	___flmul@grs,f
  6150  0BB8  0DBB               	rlf	___flmul@grs+1,f
  6151  0BB9  0DBC               	rlf	___flmul@grs+2,f
  6152  0BBA  0DBD               	rlf	___flmul@grs+3,f
  6153  0BBB  0BB4               	decfsz	??___flmul,f
  6154  0BBC  2BB6               	goto	u3745
  6155  0BBD                     l2526:
  6156  0BBD  083F               	movf	___flmul@bexp,w
  6157  0BBE  073E               	addwf	___flmul@aexp,w
  6158  0BBF  00B4               	movwf	??___flmul
  6159  0BC0  01B5               	clrf	??___flmul+1
  6160  0BC1  0DB5               	rlf	??___flmul+1,f
  6161  0BC2  0834               	movf	??___flmul,w
  6162  0BC3  3E82               	addlw	130
  6163  0BC4  00C4               	movwf	___flmul@temp
  6164  0BC5  0835               	movf	??___flmul+1,w
  6165  0BC6  1803               	skipnc
  6166  0BC7  3E01               	addlw	1
  6167  0BC8  3EFF               	addlw	255
  6168  0BC9  00C5               	movwf	___flmul@temp+1
  6169  0BCA  2BE8               	goto	l2538
  6170  0BCB                     l2528:
  6171  0BCB  3001               	movlw	1
  6172  0BCC  00B4               	movwf	??___flmul
  6173  0BCD                     u3755:
  6174  0BCD  1003               	clrc
  6175  0BCE  0DC0               	rlf	___flmul@prod,f
  6176  0BCF  0DC1               	rlf	___flmul@prod+1,f
  6177  0BD0  0DC2               	rlf	___flmul@prod+2,f
  6178  0BD1  0DC3               	rlf	___flmul@prod+3,f
  6179  0BD2  0BB4               	decfsz	??___flmul,f
  6180  0BD3  2BCD               	goto	u3755
  6181  0BD4                     l2530:
  6182  0BD4  1FBD               	btfss	___flmul@grs+3,7
  6183  0BD5  2BD7               	goto	u3761
  6184  0BD6  2BD8               	goto	u3760
  6185  0BD7                     u3761:
  6186  0BD7  2BD9               	goto	l2534
  6187  0BD8                     u3760:
  6188  0BD8                     l2532:
  6189  0BD8  1440               	bsf	___flmul@prod,0
  6190  0BD9                     l2534:
  6191  0BD9  3001               	movlw	1
  6192  0BDA  00B4               	movwf	??___flmul
  6193  0BDB                     u3775:
  6194  0BDB  1003               	clrc
  6195  0BDC  0DBA               	rlf	___flmul@grs,f
  6196  0BDD  0DBB               	rlf	___flmul@grs+1,f
  6197  0BDE  0DBC               	rlf	___flmul@grs+2,f
  6198  0BDF  0DBD               	rlf	___flmul@grs+3,f
  6199  0BE0  0BB4               	decfsz	??___flmul,f
  6200  0BE1  2BDB               	goto	u3775
  6201  0BE2                     l2536:
  6202  0BE2  30FF               	movlw	255
  6203  0BE3  07C4               	addwf	___flmul@temp,f
  6204  0BE4  1803               	skipnc
  6205  0BE5  0AC5               	incf	___flmul@temp+1,f
  6206  0BE6  30FF               	movlw	255
  6207  0BE7  07C5               	addwf	___flmul@temp+1,f
  6208  0BE8                     l2538:
  6209  0BE8  1FC2               	btfss	___flmul@prod+2,7
  6210  0BE9  2BEB               	goto	u3781
  6211  0BEA  2BEC               	goto	u3780
  6212  0BEB                     u3781:
  6213  0BEB  2BCB               	goto	l2528
  6214  0BEC                     u3780:
  6215  0BEC                     l2540:
  6216  0BEC  01BE               	clrf	___flmul@aexp
  6217  0BED                     l2542:
  6218  0BED  1FBD               	btfss	___flmul@grs+3,7
  6219  0BEE  2BF0               	goto	u3791
  6220  0BEF  2BF1               	goto	u3790
  6221  0BF0                     u3791:
  6222  0BF0  2C0D               	goto	l2550
  6223  0BF1                     u3790:
  6224  0BF1                     l2544:
  6225  0BF1  30FF               	movlw	255
  6226  0BF2  053A               	andwf	___flmul@grs,w
  6227  0BF3  00B4               	movwf	??___flmul
  6228  0BF4  30FF               	movlw	255
  6229  0BF5  053B               	andwf	___flmul@grs+1,w
  6230  0BF6  00B5               	movwf	??___flmul+1
  6231  0BF7  30FF               	movlw	255
  6232  0BF8  053C               	andwf	___flmul@grs+2,w
  6233  0BF9  00B6               	movwf	??___flmul+2
  6234  0BFA  307F               	movlw	127
  6235  0BFB  053D               	andwf	___flmul@grs+3,w
  6236  0BFC  00B7               	movwf	??___flmul+3
  6237  0BFD  0837               	movf	??___flmul+3,w
  6238  0BFE  0436               	iorwf	??___flmul+2,w
  6239  0BFF  0435               	iorwf	??___flmul+1,w
  6240  0C00  0434               	iorwf	??___flmul,w
  6241  0C01  1903               	skipnz
  6242  0C02  2C04               	goto	u3801
  6243  0C03  2C05               	goto	u3800
  6244  0C04                     u3801:
  6245  0C04  2C08               	goto	l738
  6246  0C05                     u3800:
  6247  0C05                     l2546:
  6248  0C05  01BE               	clrf	___flmul@aexp
  6249  0C06  0ABE               	incf	___flmul@aexp,f
  6250  0C07  2C0D               	goto	l2550
  6251  0C08                     l738:
  6252  0C08  1C40               	btfss	___flmul@prod,0
  6253  0C09  2C0B               	goto	u3811
  6254  0C0A  2C0C               	goto	u3810
  6255  0C0B                     u3811:
  6256  0C0B  2C0D               	goto	l2550
  6257  0C0C                     u3810:
  6258  0C0C  2C05               	goto	l2546
  6259  0C0D                     l2550:
  6260  0C0D  083E               	movf	___flmul@aexp,w
  6261  0C0E  1903               	btfsc	3,2
  6262  0C0F  2C11               	goto	u3821
  6263  0C10  2C12               	goto	u3820
  6264  0C11                     u3821:
  6265  0C11  2C43               	goto	l2560
  6266  0C12                     u3820:
  6267  0C12                     l2552:
  6268  0C12  3001               	movlw	1
  6269  0C13  07C0               	addwf	___flmul@prod,f
  6270  0C14  3000               	movlw	0
  6271  0C15  1803               	skipnc
  6272  0C16  3001               	movlw	1
  6273  0C17  07C1               	addwf	___flmul@prod+1,f
  6274  0C18  3000               	movlw	0
  6275  0C19  1803               	skipnc
  6276  0C1A  3001               	movlw	1
  6277  0C1B  07C2               	addwf	___flmul@prod+2,f
  6278  0C1C  3000               	movlw	0
  6279  0C1D  1803               	skipnc
  6280  0C1E  3001               	movlw	1
  6281  0C1F  07C3               	addwf	___flmul@prod+3,f
  6282  0C20                     l2554:
  6283  0C20  1C43               	btfss	___flmul@prod+3,0
  6284  0C21  2C23               	goto	u3831
  6285  0C22  2C24               	goto	u3830
  6286  0C23                     u3831:
  6287  0C23  2C43               	goto	l2560
  6288  0C24                     u3830:
  6289  0C24                     l2556:
  6290  0C24  0840               	movf	___flmul@prod,w
  6291  0C25  00B4               	movwf	??___flmul
  6292  0C26  0841               	movf	___flmul@prod+1,w
  6293  0C27  00B5               	movwf	??___flmul+1
  6294  0C28  0842               	movf	___flmul@prod+2,w
  6295  0C29  00B6               	movwf	??___flmul+2
  6296  0C2A  0843               	movf	___flmul@prod+3,w
  6297  0C2B  00B7               	movwf	??___flmul+3
  6298  0C2C  3001               	movlw	1
  6299  0C2D  00B8               	movwf	??___flmul+4
  6300  0C2E                     u3845:
  6301  0C2E  0D37               	rlf	??___flmul+3,w
  6302  0C2F  0CB7               	rrf	??___flmul+3,f
  6303  0C30  0CB6               	rrf	??___flmul+2,f
  6304  0C31  0CB5               	rrf	??___flmul+1,f
  6305  0C32  0CB4               	rrf	??___flmul,f
  6306  0C33                     u3840:
  6307  0C33  0BB8               	decfsz	??___flmul+4,f
  6308  0C34  2C2E               	goto	u3845
  6309  0C35  0837               	movf	??___flmul+3,w
  6310  0C36  00C3               	movwf	___flmul@prod+3
  6311  0C37  0836               	movf	??___flmul+2,w
  6312  0C38  00C2               	movwf	___flmul@prod+2
  6313  0C39  0835               	movf	??___flmul+1,w
  6314  0C3A  00C1               	movwf	___flmul@prod+1
  6315  0C3B  0834               	movf	??___flmul,w
  6316  0C3C  00C0               	movwf	___flmul@prod
  6317  0C3D                     l2558:
  6318  0C3D  3001               	movlw	1
  6319  0C3E  07C4               	addwf	___flmul@temp,f
  6320  0C3F  1803               	skipnc
  6321  0C40  0AC5               	incf	___flmul@temp+1,f
  6322  0C41  3000               	movlw	0
  6323  0C42  07C5               	addwf	___flmul@temp+1,f
  6324  0C43                     l2560:
  6325  0C43  0845               	movf	___flmul@temp+1,w
  6326  0C44  3A80               	xorlw	128
  6327  0C45  00FF               	movwf	btemp+1
  6328  0C46  3080               	movlw	128
  6329  0C47  027F               	subwf	btemp+1,w
  6330  0C48  1D03               	skipz
  6331  0C49  2C4C               	goto	u3855
  6332  0C4A  30FF               	movlw	255
  6333  0C4B  0244               	subwf	___flmul@temp,w
  6334  0C4C                     u3855:
  6335  0C4C  1C03               	skipc
  6336  0C4D  2C4F               	goto	u3851
  6337  0C4E  2C50               	goto	u3850
  6338  0C4F                     u3851:
  6339  0C4F  2C5B               	goto	l2564
  6340  0C50                     u3850:
  6341  0C50                     l2562:
  6342  0C50  307F               	movlw	127
  6343  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6344  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6345  0C53  00C3               	movwf	___flmul@prod+3
  6346  0C54  3080               	movlw	128
  6347  0C55  00C2               	movwf	___flmul@prod+2
  6348  0C56  3000               	movlw	0
  6349  0C57  00C1               	movwf	___flmul@prod+1
  6350  0C58  3000               	movlw	0
  6351  0C59  00C0               	movwf	___flmul@prod
  6352  0C5A  2C90               	goto	l744
  6353  0C5B                     l2564:
  6354  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6355  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6356  0C5D  0845               	movf	___flmul@temp+1,w
  6357  0C5E  3A80               	xorlw	128
  6358  0C5F  00FF               	movwf	btemp+1
  6359  0C60  3080               	movlw	128
  6360  0C61  027F               	subwf	btemp+1,w
  6361  0C62  1D03               	skipz
  6362  0C63  2C66               	goto	u3865
  6363  0C64  3001               	movlw	1
  6364  0C65  0244               	subwf	___flmul@temp,w
  6365  0C66                     u3865:
  6366  0C66  1803               	skipnc
  6367  0C67  2C69               	goto	u3861
  6368  0C68  2C6A               	goto	u3860
  6369  0C69                     u3861:
  6370  0C69  2C76               	goto	l2570
  6371  0C6A                     u3860:
  6372  0C6A                     l2566:
  6373  0C6A  3000               	movlw	0
  6374  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6375  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6376  0C6D  00C3               	movwf	___flmul@prod+3
  6377  0C6E  3000               	movlw	0
  6378  0C6F  00C2               	movwf	___flmul@prod+2
  6379  0C70  3000               	movlw	0
  6380  0C71  00C1               	movwf	___flmul@prod+1
  6381  0C72  3000               	movlw	0
  6382  0C73  00C0               	movwf	___flmul@prod
  6383  0C74                     l2568:
  6384  0C74  01B9               	clrf	___flmul@sign
  6385  0C75  2C90               	goto	l744
  6386  0C76                     l2570:
  6387  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6388  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6389  0C78  0844               	movf	___flmul@temp,w
  6390  0C79  00B4               	movwf	??___flmul
  6391  0C7A  0834               	movf	??___flmul,w
  6392  0C7B  00BF               	movwf	___flmul@bexp
  6393  0C7C  30FF               	movlw	255
  6394  0C7D  05C0               	andwf	___flmul@prod,f
  6395  0C7E  30FF               	movlw	255
  6396  0C7F  05C1               	andwf	___flmul@prod+1,f
  6397  0C80  307F               	movlw	127
  6398  0C81  05C2               	andwf	___flmul@prod+2,f
  6399  0C82  3000               	movlw	0
  6400  0C83  05C3               	andwf	___flmul@prod+3,f
  6401  0C84                     l2572:
  6402  0C84  1C3F               	btfss	___flmul@bexp,0
  6403  0C85  2C87               	goto	u3871
  6404  0C86  2C88               	goto	u3870
  6405  0C87                     u3871:
  6406  0C87  2C89               	goto	l2576
  6407  0C88                     u3870:
  6408  0C88                     l2574:
  6409  0C88  17C2               	bsf	___flmul@prod+2,7
  6410  0C89                     l2576:
  6411  0C89  083F               	movf	___flmul@bexp,w
  6412  0C8A  00B4               	movwf	??___flmul
  6413  0C8B  1003               	clrc
  6414  0C8C  0C34               	rrf	??___flmul,w
  6415  0C8D  00B5               	movwf	??___flmul+1
  6416  0C8E  0835               	movf	??___flmul+1,w
  6417  0C8F  00C3               	movwf	___flmul@prod+3
  6418  0C90                     l744:
  6419  0C90  0839               	movf	___flmul@sign,w
  6420  0C91  00B4               	movwf	??___flmul
  6421  0C92  0834               	movf	??___flmul,w
  6422  0C93  04C3               	iorwf	___flmul@prod+3,f
  6423  0C94                     l2578:
  6424  0C94  0843               	movf	___flmul@prod+3,w
  6425  0C95  00AF               	movwf	?___flmul+3
  6426  0C96  0842               	movf	___flmul@prod+2,w
  6427  0C97  00AE               	movwf	?___flmul+2
  6428  0C98  0841               	movf	___flmul@prod+1,w
  6429  0C99  00AD               	movwf	?___flmul+1
  6430  0C9A  0840               	movf	___flmul@prod,w
  6431  0C9B  00AC               	movwf	?___flmul
  6432  0C9C                     l732:
  6433  0C9C  0008               	return
  6434  0C9D                     __end_of___flmul:
  6435                           
  6436                           	psect	text11
  6437  1C78                     __ptext11:	
  6438 ;; *************** function __Umul8_16 *****************
  6439 ;; Defined at:
  6440 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  multiplier      1    wreg     unsigned char 
  6443 ;;  multiplicand    1    5[COMMON] unsigned char 
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6446 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6447 ;;  product         2    0[BANK0 ] unsigned int 
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  2    5[COMMON] unsigned int 
  6450 ;; Registers used:
  6451 ;;		wreg, status,2, status,0
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6457 ;;      Params:         2       0       0       0       0
  6458 ;;      Locals:         0       5       0       0       0
  6459 ;;      Temps:          2       0       0       0       0
  6460 ;;      Totals:         4       5       0       0       0
  6461 ;;Total ram usage:        9 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:    2
  6464 ;; This function calls:
  6465 ;;		Nothing
  6466 ;; This function is called by:
  6467 ;;		___flmul
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           
  6472                           ;psect for function __Umul8_16
  6473  1C78                     __Umul8_16:
  6474                           
  6475                           ;incstack = 0
  6476                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6477                           ;__Umul8_16@multiplier stored from wreg
  6478  1C78  1283               	bcf	3,5	;RP0=0, select bank0
  6479  1C79  1303               	bcf	3,6	;RP1=0, select bank0
  6480  1C7A  00A4               	movwf	__Umul8_16@multiplier
  6481  1C7B                     l2104:
  6482  1C7B  01A0               	clrf	__Umul8_16@product
  6483  1C7C  01A1               	clrf	__Umul8_16@product+1
  6484  1C7D                     l2106:
  6485  1C7D  0875               	movf	__Umul8_16@multiplicand,w
  6486  1C7E  00F7               	movwf	??__Umul8_16
  6487  1C7F  01F8               	clrf	??__Umul8_16+1
  6488  1C80  0877               	movf	??__Umul8_16,w
  6489  1C81  00A2               	movwf	__Umul8_16@word_mpld
  6490  1C82  0878               	movf	??__Umul8_16+1,w
  6491  1C83  00A3               	movwf	__Umul8_16@word_mpld+1
  6492  1C84                     l2108:
  6493  1C84  1C24               	btfss	__Umul8_16@multiplier,0
  6494  1C85  2C87               	goto	u2701
  6495  1C86  2C88               	goto	u2700
  6496  1C87                     u2701:
  6497  1C87  2C8E               	goto	l751
  6498  1C88                     u2700:
  6499  1C88                     l2110:
  6500  1C88  0822               	movf	__Umul8_16@word_mpld,w
  6501  1C89  07A0               	addwf	__Umul8_16@product,f
  6502  1C8A  1803               	skipnc
  6503  1C8B  0AA1               	incf	__Umul8_16@product+1,f
  6504  1C8C  0823               	movf	__Umul8_16@word_mpld+1,w
  6505  1C8D  07A1               	addwf	__Umul8_16@product+1,f
  6506  1C8E                     l751:
  6507  1C8E  3001               	movlw	1
  6508  1C8F                     u2715:
  6509  1C8F  1003               	clrc
  6510  1C90  0DA2               	rlf	__Umul8_16@word_mpld,f
  6511  1C91  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6512  1C92  3EFF               	addlw	-1
  6513  1C93  1D03               	skipz
  6514  1C94  2C8F               	goto	u2715
  6515  1C95  1003               	clrc
  6516  1C96  0CA4               	rrf	__Umul8_16@multiplier,f
  6517  1C97                     l2112:
  6518  1C97  0824               	movf	__Umul8_16@multiplier,w
  6519  1C98  1D03               	btfss	3,2
  6520  1C99  2C9B               	goto	u2721
  6521  1C9A  2C9C               	goto	u2720
  6522  1C9B                     u2721:
  6523  1C9B  2C84               	goto	l2108
  6524  1C9C                     u2720:
  6525  1C9C                     l2114:
  6526  1C9C  0821               	movf	__Umul8_16@product+1,w
  6527  1C9D  00F6               	movwf	?__Umul8_16+1
  6528  1C9E  0820               	movf	__Umul8_16@product,w
  6529  1C9F  00F5               	movwf	?__Umul8_16
  6530  1CA0                     l753:
  6531  1CA0  0008               	return
  6532  1CA1                     __end_of__Umul8_16:
  6533                           
  6534                           	psect	text12
  6535  11F0                     __ptext12:	
  6536 ;; *************** function __tdiv_to_l_ *****************
  6537 ;; Defined at:
  6538 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;  f1              4    0[BANK0 ] float 
  6541 ;;  f2              4    4[BANK0 ] float 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  quot            4    8[BANK0 ] unsigned long 
  6544 ;;  exp1            1   13[BANK0 ] unsigned char 
  6545 ;;  cntr            1   12[BANK0 ] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  4    0[BANK0 ] unsigned long 
  6548 ;; Registers used:
  6549 ;;		wreg, status,2, status,0
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6555 ;;      Params:         0       8       0       0       0
  6556 ;;      Locals:         0       6       0       0       0
  6557 ;;      Temps:          4       0       0       0       0
  6558 ;;      Totals:         4      14       0       0       0
  6559 ;;Total ram usage:       18 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:    2
  6562 ;; This function calls:
  6563 ;;		Nothing
  6564 ;; This function is called by:
  6565 ;;		_sprintf
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           
  6570                           ;psect for function __tdiv_to_l_
  6571  11F0                     __tdiv_to_l_:
  6572  11F0                     l2668:	
  6573                           ;incstack = 0
  6574                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6575                           
  6576  11F0  1283               	bcf	3,5	;RP0=0, select bank0
  6577  11F1  1303               	bcf	3,6	;RP1=0, select bank0
  6578  11F2  0820               	movf	__tdiv_to_l_@f1,w
  6579  11F3  00F5               	movwf	??__tdiv_to_l_
  6580  11F4  0821               	movf	__tdiv_to_l_@f1+1,w
  6581  11F5  00F6               	movwf	??__tdiv_to_l_+1
  6582  11F6  0822               	movf	__tdiv_to_l_@f1+2,w
  6583  11F7  00F7               	movwf	??__tdiv_to_l_+2
  6584  11F8  1003               	clrc
  6585  11F9  0D76               	rlf	??__tdiv_to_l_+1,w
  6586  11FA  0D77               	rlf	??__tdiv_to_l_+2,w
  6587  11FB  00F8               	movwf	??__tdiv_to_l_+3
  6588  11FC  0878               	movf	??__tdiv_to_l_+3,w
  6589  11FD  00AD               	movwf	__tdiv_to_l_@exp1
  6590  11FE  082D               	movf	__tdiv_to_l_@exp1,w
  6591  11FF  1D03               	btfss	3,2
  6592  1200  2A02               	goto	u4151
  6593  1201  2A03               	goto	u4150
  6594  1202                     u4151:
  6595  1202  2A0C               	goto	l2674
  6596  1203                     u4150:
  6597  1203                     l2670:
  6598  1203  3000               	movlw	0
  6599  1204  00A3               	movwf	?__tdiv_to_l_+3
  6600  1205  3000               	movlw	0
  6601  1206  00A2               	movwf	?__tdiv_to_l_+2
  6602  1207  3000               	movlw	0
  6603  1208  00A1               	movwf	?__tdiv_to_l_+1
  6604  1209  3000               	movlw	0
  6605  120A  00A0               	movwf	?__tdiv_to_l_
  6606  120B  2AAC               	goto	l526
  6607  120C                     l2674:
  6608  120C  0824               	movf	__tdiv_to_l_@f2,w
  6609  120D  00F5               	movwf	??__tdiv_to_l_
  6610  120E  0825               	movf	__tdiv_to_l_@f2+1,w
  6611  120F  00F6               	movwf	??__tdiv_to_l_+1
  6612  1210  0826               	movf	__tdiv_to_l_@f2+2,w
  6613  1211  00F7               	movwf	??__tdiv_to_l_+2
  6614  1212  1003               	clrc
  6615  1213  0D76               	rlf	??__tdiv_to_l_+1,w
  6616  1214  0D77               	rlf	??__tdiv_to_l_+2,w
  6617  1215  00F8               	movwf	??__tdiv_to_l_+3
  6618  1216  0878               	movf	??__tdiv_to_l_+3,w
  6619  1217  00AC               	movwf	__tdiv_to_l_@cntr
  6620  1218  082C               	movf	__tdiv_to_l_@cntr,w
  6621  1219  1D03               	btfss	3,2
  6622  121A  2A1C               	goto	u4161
  6623  121B  2A1D               	goto	u4160
  6624  121C                     u4161:
  6625  121C  2A1E               	goto	l527
  6626  121D                     u4160:
  6627  121D  2A03               	goto	l2670
  6628  121E                     l527:
  6629  121E  17A1               	bsf	__tdiv_to_l_@f1+1,7
  6630  121F                     l2680:
  6631  121F  30FF               	movlw	255
  6632  1220  05A0               	andwf	__tdiv_to_l_@f1,f
  6633  1221  30FF               	movlw	255
  6634  1222  05A1               	andwf	__tdiv_to_l_@f1+1,f
  6635  1223  3000               	movlw	0
  6636  1224  05A2               	andwf	__tdiv_to_l_@f1+2,f
  6637  1225                     l2682:
  6638  1225  17A5               	bsf	__tdiv_to_l_@f2+1,7
  6639  1226  30FF               	movlw	255
  6640  1227  05A4               	andwf	__tdiv_to_l_@f2,f
  6641  1228  30FF               	movlw	255
  6642  1229  05A5               	andwf	__tdiv_to_l_@f2+1,f
  6643  122A  3000               	movlw	0
  6644  122B  05A6               	andwf	__tdiv_to_l_@f2+2,f
  6645  122C  3000               	movlw	0
  6646  122D  00AB               	movwf	__tdiv_to_l_@quot+3
  6647  122E  3000               	movlw	0
  6648  122F  00AA               	movwf	__tdiv_to_l_@quot+2
  6649  1230  3000               	movlw	0
  6650  1231  00A9               	movwf	__tdiv_to_l_@quot+1
  6651  1232  3000               	movlw	0
  6652  1233  00A8               	movwf	__tdiv_to_l_@quot
  6653  1234                     l2684:
  6654  1234  307F               	movlw	127
  6655  1235  02AD               	subwf	__tdiv_to_l_@exp1,f
  6656  1236                     l2686:
  6657  1236  3098               	movlw	152
  6658  1237  072C               	addwf	__tdiv_to_l_@cntr,w
  6659  1238  00F5               	movwf	??__tdiv_to_l_
  6660  1239  0875               	movf	??__tdiv_to_l_,w
  6661  123A  02AD               	subwf	__tdiv_to_l_@exp1,f
  6662  123B  3018               	movlw	24
  6663  123C  00F5               	movwf	??__tdiv_to_l_
  6664  123D  0875               	movf	??__tdiv_to_l_,w
  6665  123E  00AC               	movwf	__tdiv_to_l_@cntr
  6666  123F                     l2688:
  6667  123F  3001               	movlw	1
  6668  1240  00F5               	movwf	??__tdiv_to_l_
  6669  1241                     u4175:
  6670  1241  1003               	clrc
  6671  1242  0DA8               	rlf	__tdiv_to_l_@quot,f
  6672  1243  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6673  1244  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6674  1245  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6675  1246  0BF5               	decfsz	??__tdiv_to_l_,f
  6676  1247  2A41               	goto	u4175
  6677  1248                     l2690:
  6678  1248  0826               	movf	__tdiv_to_l_@f2+2,w
  6679  1249  0222               	subwf	__tdiv_to_l_@f1+2,w
  6680  124A  1D03               	skipz
  6681  124B  2A52               	goto	u4185
  6682  124C  0825               	movf	__tdiv_to_l_@f2+1,w
  6683  124D  0221               	subwf	__tdiv_to_l_@f1+1,w
  6684  124E  1D03               	skipz
  6685  124F  2A52               	goto	u4185
  6686  1250  0824               	movf	__tdiv_to_l_@f2,w
  6687  1251  0220               	subwf	__tdiv_to_l_@f1,w
  6688  1252                     u4185:
  6689  1252  1C03               	skipc
  6690  1253  2A55               	goto	u4181
  6691  1254  2A56               	goto	u4180
  6692  1255                     u4181:
  6693  1255  2A61               	goto	l2696
  6694  1256                     u4180:
  6695  1256                     l2692:
  6696  1256  0824               	movf	__tdiv_to_l_@f2,w
  6697  1257  02A0               	subwf	__tdiv_to_l_@f1,f
  6698  1258  0825               	movf	__tdiv_to_l_@f2+1,w
  6699  1259  1C03               	skipc
  6700  125A  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  6701  125B  02A1               	subwf	__tdiv_to_l_@f1+1,f
  6702  125C  0826               	movf	__tdiv_to_l_@f2+2,w
  6703  125D  1C03               	skipc
  6704  125E  0A26               	incf	__tdiv_to_l_@f2+2,w
  6705  125F  02A2               	subwf	__tdiv_to_l_@f1+2,f
  6706  1260                     l2694:
  6707  1260  1428               	bsf	__tdiv_to_l_@quot,0
  6708  1261                     l2696:
  6709  1261  3001               	movlw	1
  6710  1262                     u4195:
  6711  1262  1003               	clrc
  6712  1263  0DA0               	rlf	__tdiv_to_l_@f1,f
  6713  1264  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  6714  1265  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  6715  1266  3EFF               	addlw	-1
  6716  1267  1D03               	skipz
  6717  1268  2A62               	goto	u4195
  6718  1269                     l2698:
  6719  1269  3001               	movlw	1
  6720  126A  02AC               	subwf	__tdiv_to_l_@cntr,f
  6721  126B  1D03               	btfss	3,2
  6722  126C  2A6E               	goto	u4201
  6723  126D  2A6F               	goto	u4200
  6724  126E                     u4201:
  6725  126E  2A3F               	goto	l2688
  6726  126F                     u4200:
  6727  126F                     l530:
  6728  126F  1FAD               	btfss	__tdiv_to_l_@exp1,7
  6729  1270  2A72               	goto	u4211
  6730  1271  2A73               	goto	u4210
  6731  1272                     u4211:
  6732  1272  2A8D               	goto	l2708
  6733  1273                     u4210:
  6734  1273                     l2700:
  6735  1273  082D               	movf	__tdiv_to_l_@exp1,w
  6736  1274  3A80               	xorlw	128
  6737  1275  3E97               	addlw	151
  6738  1276  1803               	skipnc
  6739  1277  2A79               	goto	u4221
  6740  1278  2A7A               	goto	u4220
  6741  1279                     u4221:
  6742  1279  2A7B               	goto	l2706
  6743  127A                     u4220:
  6744  127A  2A03               	goto	l2670
  6745  127B                     l2706:
  6746  127B  3001               	movlw	1
  6747  127C                     u4235:
  6748  127C  1003               	clrc
  6749  127D  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  6750  127E  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  6751  127F  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  6752  1280  0CA8               	rrf	__tdiv_to_l_@quot,f
  6753  1281  3EFF               	addlw	-1
  6754  1282  1D03               	skipz
  6755  1283  2A7C               	goto	u4235
  6756  1284  3001               	movlw	1
  6757  1285  00F5               	movwf	??__tdiv_to_l_
  6758  1286  0875               	movf	??__tdiv_to_l_,w
  6759  1287  07AD               	addwf	__tdiv_to_l_@exp1,f
  6760  1288  1D03               	btfss	3,2
  6761  1289  2A8B               	goto	u4241
  6762  128A  2A8C               	goto	u4240
  6763  128B                     u4241:
  6764  128B  2A7B               	goto	l2706
  6765  128C                     u4240:
  6766  128C  2AA4               	goto	l2716
  6767  128D                     l2708:
  6768  128D  3018               	movlw	24
  6769  128E  022D               	subwf	__tdiv_to_l_@exp1,w
  6770  128F  1C03               	skipc
  6771  1290  2A92               	goto	u4251
  6772  1291  2A93               	goto	u4250
  6773  1292                     u4251:
  6774  1292  2A9F               	goto	l537
  6775  1293                     u4250:
  6776  1293  2A03               	goto	l2670
  6777  1294                     l2714:
  6778  1294  3001               	movlw	1
  6779  1295  00F5               	movwf	??__tdiv_to_l_
  6780  1296                     u4265:
  6781  1296  1003               	clrc
  6782  1297  0DA8               	rlf	__tdiv_to_l_@quot,f
  6783  1298  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6784  1299  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6785  129A  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6786  129B  0BF5               	decfsz	??__tdiv_to_l_,f
  6787  129C  2A96               	goto	u4265
  6788  129D  3001               	movlw	1
  6789  129E  02AD               	subwf	__tdiv_to_l_@exp1,f
  6790  129F                     l537:
  6791  129F  082D               	movf	__tdiv_to_l_@exp1,w
  6792  12A0  1D03               	btfss	3,2
  6793  12A1  2AA3               	goto	u4271
  6794  12A2  2AA4               	goto	u4270
  6795  12A3                     u4271:
  6796  12A3  2A94               	goto	l2714
  6797  12A4                     u4270:
  6798  12A4                     l2716:
  6799  12A4  082B               	movf	__tdiv_to_l_@quot+3,w
  6800  12A5  00A3               	movwf	?__tdiv_to_l_+3
  6801  12A6  082A               	movf	__tdiv_to_l_@quot+2,w
  6802  12A7  00A2               	movwf	?__tdiv_to_l_+2
  6803  12A8  0829               	movf	__tdiv_to_l_@quot+1,w
  6804  12A9  00A1               	movwf	?__tdiv_to_l_+1
  6805  12AA  0828               	movf	__tdiv_to_l_@quot,w
  6806  12AB  00A0               	movwf	?__tdiv_to_l_
  6807  12AC                     l526:
  6808  12AC  0008               	return
  6809  12AD                     __end_of__tdiv_to_l_:
  6810                           
  6811                           	psect	text13
  6812  12AD                     __ptext13:	
  6813 ;; *************** function __div_to_l_ *****************
  6814 ;; Defined at:
  6815 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;  f1              4    0[BANK0 ] unsigned long 
  6818 ;;  f2              4    4[BANK0 ] unsigned long 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  quot            4    8[BANK0 ] unsigned long 
  6821 ;;  exp1            1   13[BANK0 ] unsigned char 
  6822 ;;  cntr            1   12[BANK0 ] unsigned char 
  6823 ;; Return value:  Size  Location     Type
  6824 ;;                  4    0[BANK0 ] unsigned long 
  6825 ;; Registers used:
  6826 ;;		wreg, status,2, status,0
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6832 ;;      Params:         0       8       0       0       0
  6833 ;;      Locals:         0       6       0       0       0
  6834 ;;      Temps:          1       0       0       0       0
  6835 ;;      Totals:         1      14       0       0       0
  6836 ;;Total ram usage:       15 bytes
  6837 ;; Hardware stack levels used:    1
  6838 ;; Hardware stack levels required when called:    2
  6839 ;; This function calls:
  6840 ;;		Nothing
  6841 ;; This function is called by:
  6842 ;;		_sprintf
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           
  6847                           ;psect for function __div_to_l_
  6848  12AD                     __div_to_l_:
  6849  12AD                     l2720:	
  6850                           ;incstack = 0
  6851                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6852                           
  6853  12AD  1003               	clrc
  6854  12AE  1283               	bcf	3,5	;RP0=0, select bank0
  6855  12AF  1303               	bcf	3,6	;RP1=0, select bank0
  6856  12B0  0D22               	rlf	__div_to_l_@f1+2,w
  6857  12B1  0D23               	rlf	__div_to_l_@f1+3,w
  6858  12B2  00F5               	movwf	??__div_to_l_
  6859  12B3  0875               	movf	??__div_to_l_,w
  6860  12B4  00AD               	movwf	__div_to_l_@exp1
  6861  12B5  082D               	movf	__div_to_l_@exp1,w
  6862  12B6  1D03               	btfss	3,2
  6863  12B7  2AB9               	goto	u4281
  6864  12B8  2ABA               	goto	u4280
  6865  12B9                     u4281:
  6866  12B9  2AC3               	goto	l2726
  6867  12BA                     u4280:
  6868  12BA                     l2722:
  6869  12BA  3000               	movlw	0
  6870  12BB  00A3               	movwf	?__div_to_l_+3
  6871  12BC  3000               	movlw	0
  6872  12BD  00A2               	movwf	?__div_to_l_+2
  6873  12BE  3000               	movlw	0
  6874  12BF  00A1               	movwf	?__div_to_l_+1
  6875  12C0  3000               	movlw	0
  6876  12C1  00A0               	movwf	?__div_to_l_
  6877  12C2  2B6A               	goto	l479
  6878  12C3                     l2726:
  6879  12C3  1003               	clrc
  6880  12C4  0D26               	rlf	__div_to_l_@f2+2,w
  6881  12C5  0D27               	rlf	__div_to_l_@f2+3,w
  6882  12C6  00F5               	movwf	??__div_to_l_
  6883  12C7  0875               	movf	??__div_to_l_,w
  6884  12C8  00AC               	movwf	__div_to_l_@cntr
  6885  12C9  082C               	movf	__div_to_l_@cntr,w
  6886  12CA  1D03               	btfss	3,2
  6887  12CB  2ACD               	goto	u4291
  6888  12CC  2ACE               	goto	u4290
  6889  12CD                     u4291:
  6890  12CD  2ACF               	goto	l480
  6891  12CE                     u4290:
  6892  12CE  2ABA               	goto	l2722
  6893  12CF                     l480:
  6894  12CF  17A2               	bsf	__div_to_l_@f1+2,7
  6895  12D0                     l2732:
  6896  12D0  30FF               	movlw	255
  6897  12D1  05A0               	andwf	__div_to_l_@f1,f
  6898  12D2  30FF               	movlw	255
  6899  12D3  05A1               	andwf	__div_to_l_@f1+1,f
  6900  12D4  30FF               	movlw	255
  6901  12D5  05A2               	andwf	__div_to_l_@f1+2,f
  6902  12D6  3000               	movlw	0
  6903  12D7  05A3               	andwf	__div_to_l_@f1+3,f
  6904  12D8                     l2734:
  6905  12D8  17A6               	bsf	__div_to_l_@f2+2,7
  6906  12D9  30FF               	movlw	255
  6907  12DA  05A4               	andwf	__div_to_l_@f2,f
  6908  12DB  30FF               	movlw	255
  6909  12DC  05A5               	andwf	__div_to_l_@f2+1,f
  6910  12DD  30FF               	movlw	255
  6911  12DE  05A6               	andwf	__div_to_l_@f2+2,f
  6912  12DF  3000               	movlw	0
  6913  12E0  05A7               	andwf	__div_to_l_@f2+3,f
  6914  12E1  3000               	movlw	0
  6915  12E2  00AB               	movwf	__div_to_l_@quot+3
  6916  12E3  3000               	movlw	0
  6917  12E4  00AA               	movwf	__div_to_l_@quot+2
  6918  12E5  3000               	movlw	0
  6919  12E6  00A9               	movwf	__div_to_l_@quot+1
  6920  12E7  3000               	movlw	0
  6921  12E8  00A8               	movwf	__div_to_l_@quot
  6922  12E9                     l2736:
  6923  12E9  307F               	movlw	127
  6924  12EA  02AD               	subwf	__div_to_l_@exp1,f
  6925  12EB                     l2738:
  6926  12EB  30A0               	movlw	160
  6927  12EC  072C               	addwf	__div_to_l_@cntr,w
  6928  12ED  00F5               	movwf	??__div_to_l_
  6929  12EE  0875               	movf	??__div_to_l_,w
  6930  12EF  02AD               	subwf	__div_to_l_@exp1,f
  6931  12F0  3020               	movlw	32
  6932  12F1  00F5               	movwf	??__div_to_l_
  6933  12F2  0875               	movf	??__div_to_l_,w
  6934  12F3  00AC               	movwf	__div_to_l_@cntr
  6935  12F4                     l2740:
  6936  12F4  3001               	movlw	1
  6937  12F5  00F5               	movwf	??__div_to_l_
  6938  12F6                     u4305:
  6939  12F6  1003               	clrc
  6940  12F7  0DA8               	rlf	__div_to_l_@quot,f
  6941  12F8  0DA9               	rlf	__div_to_l_@quot+1,f
  6942  12F9  0DAA               	rlf	__div_to_l_@quot+2,f
  6943  12FA  0DAB               	rlf	__div_to_l_@quot+3,f
  6944  12FB  0BF5               	decfsz	??__div_to_l_,f
  6945  12FC  2AF6               	goto	u4305
  6946  12FD                     l2742:
  6947  12FD  0827               	movf	__div_to_l_@f2+3,w
  6948  12FE  0223               	subwf	__div_to_l_@f1+3,w
  6949  12FF  1D03               	skipz
  6950  1300  2B0B               	goto	u4315
  6951  1301  0826               	movf	__div_to_l_@f2+2,w
  6952  1302  0222               	subwf	__div_to_l_@f1+2,w
  6953  1303  1D03               	skipz
  6954  1304  2B0B               	goto	u4315
  6955  1305  0825               	movf	__div_to_l_@f2+1,w
  6956  1306  0221               	subwf	__div_to_l_@f1+1,w
  6957  1307  1D03               	skipz
  6958  1308  2B0B               	goto	u4315
  6959  1309  0824               	movf	__div_to_l_@f2,w
  6960  130A  0220               	subwf	__div_to_l_@f1,w
  6961  130B                     u4315:
  6962  130B  1C03               	skipc
  6963  130C  2B0E               	goto	u4311
  6964  130D  2B0F               	goto	u4310
  6965  130E                     u4311:
  6966  130E  2B1E               	goto	l2748
  6967  130F                     u4310:
  6968  130F                     l2744:
  6969  130F  0824               	movf	__div_to_l_@f2,w
  6970  1310  02A0               	subwf	__div_to_l_@f1,f
  6971  1311  0825               	movf	__div_to_l_@f2+1,w
  6972  1312  1C03               	skipc
  6973  1313  0F25               	incfsz	__div_to_l_@f2+1,w
  6974  1314  02A1               	subwf	__div_to_l_@f1+1,f
  6975  1315  0826               	movf	__div_to_l_@f2+2,w
  6976  1316  1C03               	skipc
  6977  1317  0F26               	incfsz	__div_to_l_@f2+2,w
  6978  1318  02A2               	subwf	__div_to_l_@f1+2,f
  6979  1319  0827               	movf	__div_to_l_@f2+3,w
  6980  131A  1C03               	skipc
  6981  131B  0F27               	incfsz	__div_to_l_@f2+3,w
  6982  131C  02A3               	subwf	__div_to_l_@f1+3,f
  6983  131D                     l2746:
  6984  131D  1428               	bsf	__div_to_l_@quot,0
  6985  131E                     l2748:
  6986  131E  3001               	movlw	1
  6987  131F  00F5               	movwf	??__div_to_l_
  6988  1320                     u4325:
  6989  1320  1003               	clrc
  6990  1321  0DA0               	rlf	__div_to_l_@f1,f
  6991  1322  0DA1               	rlf	__div_to_l_@f1+1,f
  6992  1323  0DA2               	rlf	__div_to_l_@f1+2,f
  6993  1324  0DA3               	rlf	__div_to_l_@f1+3,f
  6994  1325  0BF5               	decfsz	??__div_to_l_,f
  6995  1326  2B20               	goto	u4325
  6996  1327                     l2750:
  6997  1327  3001               	movlw	1
  6998  1328  02AC               	subwf	__div_to_l_@cntr,f
  6999  1329  1D03               	btfss	3,2
  7000  132A  2B2C               	goto	u4331
  7001  132B  2B2D               	goto	u4330
  7002  132C                     u4331:
  7003  132C  2AF4               	goto	l2740
  7004  132D                     u4330:
  7005  132D                     l483:
  7006  132D  1FAD               	btfss	__div_to_l_@exp1,7
  7007  132E  2B30               	goto	u4341
  7008  132F  2B31               	goto	u4340
  7009  1330                     u4341:
  7010  1330  2B4B               	goto	l2760
  7011  1331                     u4340:
  7012  1331                     l2752:
  7013  1331  082D               	movf	__div_to_l_@exp1,w
  7014  1332  3A80               	xorlw	128
  7015  1333  3E9F               	addlw	159
  7016  1334  1803               	skipnc
  7017  1335  2B37               	goto	u4351
  7018  1336  2B38               	goto	u4350
  7019  1337                     u4351:
  7020  1337  2B39               	goto	l2758
  7021  1338                     u4350:
  7022  1338  2ABA               	goto	l2722
  7023  1339                     l2758:
  7024  1339  3001               	movlw	1
  7025  133A                     u4365:
  7026  133A  1003               	clrc
  7027  133B  0CAB               	rrf	__div_to_l_@quot+3,f
  7028  133C  0CAA               	rrf	__div_to_l_@quot+2,f
  7029  133D  0CA9               	rrf	__div_to_l_@quot+1,f
  7030  133E  0CA8               	rrf	__div_to_l_@quot,f
  7031  133F  3EFF               	addlw	-1
  7032  1340  1D03               	skipz
  7033  1341  2B3A               	goto	u4365
  7034  1342  3001               	movlw	1
  7035  1343  00F5               	movwf	??__div_to_l_
  7036  1344  0875               	movf	??__div_to_l_,w
  7037  1345  07AD               	addwf	__div_to_l_@exp1,f
  7038  1346  1D03               	btfss	3,2
  7039  1347  2B49               	goto	u4371
  7040  1348  2B4A               	goto	u4370
  7041  1349                     u4371:
  7042  1349  2B39               	goto	l2758
  7043  134A                     u4370:
  7044  134A  2B62               	goto	l2768
  7045  134B                     l2760:
  7046  134B  3020               	movlw	32
  7047  134C  022D               	subwf	__div_to_l_@exp1,w
  7048  134D  1C03               	skipc
  7049  134E  2B50               	goto	u4381
  7050  134F  2B51               	goto	u4380
  7051  1350                     u4381:
  7052  1350  2B5D               	goto	l490
  7053  1351                     u4380:
  7054  1351  2ABA               	goto	l2722
  7055  1352                     l2766:
  7056  1352  3001               	movlw	1
  7057  1353  00F5               	movwf	??__div_to_l_
  7058  1354                     u4395:
  7059  1354  1003               	clrc
  7060  1355  0DA8               	rlf	__div_to_l_@quot,f
  7061  1356  0DA9               	rlf	__div_to_l_@quot+1,f
  7062  1357  0DAA               	rlf	__div_to_l_@quot+2,f
  7063  1358  0DAB               	rlf	__div_to_l_@quot+3,f
  7064  1359  0BF5               	decfsz	??__div_to_l_,f
  7065  135A  2B54               	goto	u4395
  7066  135B  3001               	movlw	1
  7067  135C  02AD               	subwf	__div_to_l_@exp1,f
  7068  135D                     l490:
  7069  135D  082D               	movf	__div_to_l_@exp1,w
  7070  135E  1D03               	btfss	3,2
  7071  135F  2B61               	goto	u4401
  7072  1360  2B62               	goto	u4400
  7073  1361                     u4401:
  7074  1361  2B52               	goto	l2766
  7075  1362                     u4400:
  7076  1362                     l2768:
  7077  1362  082B               	movf	__div_to_l_@quot+3,w
  7078  1363  00A3               	movwf	?__div_to_l_+3
  7079  1364  082A               	movf	__div_to_l_@quot+2,w
  7080  1365  00A2               	movwf	?__div_to_l_+2
  7081  1366  0829               	movf	__div_to_l_@quot+1,w
  7082  1367  00A1               	movwf	?__div_to_l_+1
  7083  1368  0828               	movf	__div_to_l_@quot,w
  7084  1369  00A0               	movwf	?__div_to_l_
  7085  136A                     l479:
  7086  136A  0008               	return
  7087  136B                     __end_of__div_to_l_:
  7088                           
  7089                           	psect	text14
  7090  1134                     __ptext14:	
  7091 ;; *************** function ___xxtofl *****************
  7092 ;; Defined at:
  7093 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  sign            1    wreg     unsigned char 
  7096 ;;  val             4   12[BANK0 ] long 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;  sign            1   20[BANK0 ] unsigned char 
  7099 ;;  arg             4   22[BANK0 ] unsigned long 
  7100 ;;  exp             1   21[BANK0 ] unsigned char 
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  4   12[BANK0 ] unsigned char 
  7103 ;; Registers used:
  7104 ;;		wreg, status,2, status,0
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7110 ;;      Params:         0       4       0       0       0
  7111 ;;      Locals:         0       6       0       0       0
  7112 ;;      Temps:          0       4       0       0       0
  7113 ;;      Totals:         0      14       0       0       0
  7114 ;;Total ram usage:       14 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; Hardware stack levels required when called:    2
  7117 ;; This function calls:
  7118 ;;		Nothing
  7119 ;; This function is called by:
  7120 ;;		_conversion
  7121 ;;		_sprintf
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           
  7126                           ;psect for function ___xxtofl
  7127  1134                     ___xxtofl:
  7128                           
  7129                           ;incstack = 0
  7130                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7131                           ;___xxtofl@sign stored from wreg
  7132  1134  1283               	bcf	3,5	;RP0=0, select bank0
  7133  1135  1303               	bcf	3,6	;RP1=0, select bank0
  7134  1136  00B4               	movwf	___xxtofl@sign
  7135  1137                     l2912:
  7136  1137  0834               	movf	___xxtofl@sign,w
  7137  1138  1903               	btfsc	3,2
  7138  1139  293B               	goto	u4791
  7139  113A  293C               	goto	u4790
  7140  113B                     u4791:
  7141  113B  2950               	goto	l2918
  7142  113C                     u4790:
  7143  113C                     l2914:
  7144  113C  1FAF               	btfss	___xxtofl@val+3,7
  7145  113D  293F               	goto	u4801
  7146  113E  2940               	goto	u4800
  7147  113F                     u4801:
  7148  113F  2950               	goto	l2918
  7149  1140                     u4800:
  7150  1140                     l2916:
  7151  1140  092C               	comf	___xxtofl@val,w
  7152  1141  00B6               	movwf	___xxtofl@arg
  7153  1142  092D               	comf	___xxtofl@val+1,w
  7154  1143  00B7               	movwf	___xxtofl@arg+1
  7155  1144  092E               	comf	___xxtofl@val+2,w
  7156  1145  00B8               	movwf	___xxtofl@arg+2
  7157  1146  092F               	comf	___xxtofl@val+3,w
  7158  1147  00B9               	movwf	___xxtofl@arg+3
  7159  1148  0AB6               	incf	___xxtofl@arg,f
  7160  1149  1903               	skipnz
  7161  114A  0AB7               	incf	___xxtofl@arg+1,f
  7162  114B  1903               	skipnz
  7163  114C  0AB8               	incf	___xxtofl@arg+2,f
  7164  114D  1903               	skipnz
  7165  114E  0AB9               	incf	___xxtofl@arg+3,f
  7166  114F  2958               	goto	l776
  7167  1150                     l2918:
  7168  1150  082F               	movf	___xxtofl@val+3,w
  7169  1151  00B9               	movwf	___xxtofl@arg+3
  7170  1152  082E               	movf	___xxtofl@val+2,w
  7171  1153  00B8               	movwf	___xxtofl@arg+2
  7172  1154  082D               	movf	___xxtofl@val+1,w
  7173  1155  00B7               	movwf	___xxtofl@arg+1
  7174  1156  082C               	movf	___xxtofl@val,w
  7175  1157  00B6               	movwf	___xxtofl@arg
  7176  1158                     l776:
  7177  1158  082F               	movf	___xxtofl@val+3,w
  7178  1159  042E               	iorwf	___xxtofl@val+2,w
  7179  115A  042D               	iorwf	___xxtofl@val+1,w
  7180  115B  042C               	iorwf	___xxtofl@val,w
  7181  115C  1D03               	skipz
  7182  115D  295F               	goto	u4811
  7183  115E  2960               	goto	u4810
  7184  115F                     u4811:
  7185  115F  2969               	goto	l2924
  7186  1160                     u4810:
  7187  1160                     l2920:
  7188  1160  3000               	movlw	0
  7189  1161  00AF               	movwf	?___xxtofl+3
  7190  1162  3000               	movlw	0
  7191  1163  00AE               	movwf	?___xxtofl+2
  7192  1164  3000               	movlw	0
  7193  1165  00AD               	movwf	?___xxtofl+1
  7194  1166  3000               	movlw	0
  7195  1167  00AC               	movwf	?___xxtofl
  7196  1168  29EF               	goto	l778
  7197  1169                     l2924:
  7198  1169  3096               	movlw	150
  7199  116A  00B0               	movwf	??___xxtofl
  7200  116B  0830               	movf	??___xxtofl,w
  7201  116C  00B5               	movwf	___xxtofl@exp
  7202  116D  297B               	goto	l2928
  7203  116E                     l2926:
  7204  116E  3001               	movlw	1
  7205  116F  00B0               	movwf	??___xxtofl
  7206  1170  0830               	movf	??___xxtofl,w
  7207  1171  07B5               	addwf	___xxtofl@exp,f
  7208  1172  3001               	movlw	1
  7209  1173                     u4825:
  7210  1173  1003               	clrc
  7211  1174  0CB9               	rrf	___xxtofl@arg+3,f
  7212  1175  0CB8               	rrf	___xxtofl@arg+2,f
  7213  1176  0CB7               	rrf	___xxtofl@arg+1,f
  7214  1177  0CB6               	rrf	___xxtofl@arg,f
  7215  1178  3EFF               	addlw	-1
  7216  1179  1D03               	skipz
  7217  117A  2973               	goto	u4825
  7218  117B                     l2928:
  7219  117B  30FE               	movlw	254
  7220  117C  0539               	andwf	___xxtofl@arg+3,w
  7221  117D  1D03               	btfss	3,2
  7222  117E  2980               	goto	u4831
  7223  117F  2981               	goto	u4830
  7224  1180                     u4831:
  7225  1180  296E               	goto	l2926
  7226  1181                     u4830:
  7227  1181  299D               	goto	l782
  7228  1182                     l2930:
  7229  1182  3001               	movlw	1
  7230  1183  00B0               	movwf	??___xxtofl
  7231  1184  0830               	movf	??___xxtofl,w
  7232  1185  07B5               	addwf	___xxtofl@exp,f
  7233  1186                     l2932:
  7234  1186  3001               	movlw	1
  7235  1187  07B6               	addwf	___xxtofl@arg,f
  7236  1188  3000               	movlw	0
  7237  1189  1803               	skipnc
  7238  118A  3001               	movlw	1
  7239  118B  07B7               	addwf	___xxtofl@arg+1,f
  7240  118C  3000               	movlw	0
  7241  118D  1803               	skipnc
  7242  118E  3001               	movlw	1
  7243  118F  07B8               	addwf	___xxtofl@arg+2,f
  7244  1190  3000               	movlw	0
  7245  1191  1803               	skipnc
  7246  1192  3001               	movlw	1
  7247  1193  07B9               	addwf	___xxtofl@arg+3,f
  7248  1194                     l2934:
  7249  1194  3001               	movlw	1
  7250  1195                     u4845:
  7251  1195  1003               	clrc
  7252  1196  0CB9               	rrf	___xxtofl@arg+3,f
  7253  1197  0CB8               	rrf	___xxtofl@arg+2,f
  7254  1198  0CB7               	rrf	___xxtofl@arg+1,f
  7255  1199  0CB6               	rrf	___xxtofl@arg,f
  7256  119A  3EFF               	addlw	-1
  7257  119B  1D03               	skipz
  7258  119C  2995               	goto	u4845
  7259  119D                     l782:
  7260  119D  30FF               	movlw	255
  7261  119E  0539               	andwf	___xxtofl@arg+3,w
  7262  119F  1D03               	btfss	3,2
  7263  11A0  29A2               	goto	u4851
  7264  11A1  29A3               	goto	u4850
  7265  11A2                     u4851:
  7266  11A2  2982               	goto	l2930
  7267  11A3                     u4850:
  7268  11A3  29AF               	goto	l2938
  7269  11A4                     l2936:
  7270  11A4  3001               	movlw	1
  7271  11A5  02B5               	subwf	___xxtofl@exp,f
  7272  11A6  3001               	movlw	1
  7273  11A7  00B0               	movwf	??___xxtofl
  7274  11A8                     u4865:
  7275  11A8  1003               	clrc
  7276  11A9  0DB6               	rlf	___xxtofl@arg,f
  7277  11AA  0DB7               	rlf	___xxtofl@arg+1,f
  7278  11AB  0DB8               	rlf	___xxtofl@arg+2,f
  7279  11AC  0DB9               	rlf	___xxtofl@arg+3,f
  7280  11AD  0BB0               	decfsz	??___xxtofl,f
  7281  11AE  29A8               	goto	u4865
  7282  11AF                     l2938:
  7283  11AF  1BB8               	btfsc	___xxtofl@arg+2,7
  7284  11B0  29B2               	goto	u4871
  7285  11B1  29B3               	goto	u4870
  7286  11B2                     u4871:
  7287  11B2  29B9               	goto	l789
  7288  11B3                     u4870:
  7289  11B3                     l2940:
  7290  11B3  3002               	movlw	2
  7291  11B4  0235               	subwf	___xxtofl@exp,w
  7292  11B5  1803               	skipnc
  7293  11B6  29B8               	goto	u4881
  7294  11B7  29B9               	goto	u4880
  7295  11B8                     u4881:
  7296  11B8  29A4               	goto	l2936
  7297  11B9                     u4880:
  7298  11B9                     l789:
  7299  11B9  1835               	btfsc	___xxtofl@exp,0
  7300  11BA  29BC               	goto	u4891
  7301  11BB  29BD               	goto	u4890
  7302  11BC                     u4891:
  7303  11BC  29C5               	goto	l790
  7304  11BD                     u4890:
  7305  11BD                     l2942:
  7306  11BD  30FF               	movlw	255
  7307  11BE  05B6               	andwf	___xxtofl@arg,f
  7308  11BF  30FF               	movlw	255
  7309  11C0  05B7               	andwf	___xxtofl@arg+1,f
  7310  11C1  307F               	movlw	127
  7311  11C2  05B8               	andwf	___xxtofl@arg+2,f
  7312  11C3  30FF               	movlw	255
  7313  11C4  05B9               	andwf	___xxtofl@arg+3,f
  7314  11C5                     l790:
  7315  11C5  1003               	clrc
  7316  11C6  0CB5               	rrf	___xxtofl@exp,f
  7317  11C7                     l2944:
  7318  11C7  0835               	movf	___xxtofl@exp,w
  7319  11C8  00B0               	movwf	??___xxtofl
  7320  11C9  01B1               	clrf	??___xxtofl+1
  7321  11CA  01B2               	clrf	??___xxtofl+2
  7322  11CB  01B3               	clrf	??___xxtofl+3
  7323  11CC  3018               	movlw	24
  7324  11CD                     u4905:
  7325  11CD  1003               	clrc
  7326  11CE  0DB0               	rlf	??___xxtofl,f
  7327  11CF  0DB1               	rlf	??___xxtofl+1,f
  7328  11D0  0DB2               	rlf	??___xxtofl+2,f
  7329  11D1  0DB3               	rlf	??___xxtofl+3,f
  7330  11D2                     u4900:
  7331  11D2  3EFF               	addlw	-1
  7332  11D3  1D03               	skipz
  7333  11D4  29CD               	goto	u4905
  7334  11D5  0830               	movf	??___xxtofl,w
  7335  11D6  04B6               	iorwf	___xxtofl@arg,f
  7336  11D7  0831               	movf	??___xxtofl+1,w
  7337  11D8  04B7               	iorwf	___xxtofl@arg+1,f
  7338  11D9  0832               	movf	??___xxtofl+2,w
  7339  11DA  04B8               	iorwf	___xxtofl@arg+2,f
  7340  11DB  0833               	movf	??___xxtofl+3,w
  7341  11DC  04B9               	iorwf	___xxtofl@arg+3,f
  7342  11DD                     l2946:
  7343  11DD  0834               	movf	___xxtofl@sign,w
  7344  11DE  1903               	btfsc	3,2
  7345  11DF  29E1               	goto	u4911
  7346  11E0  29E2               	goto	u4910
  7347  11E1                     u4911:
  7348  11E1  29E7               	goto	l2952
  7349  11E2                     u4910:
  7350  11E2                     l2948:
  7351  11E2  1FAF               	btfss	___xxtofl@val+3,7
  7352  11E3  29E5               	goto	u4921
  7353  11E4  29E6               	goto	u4920
  7354  11E5                     u4921:
  7355  11E5  29E7               	goto	l2952
  7356  11E6                     u4920:
  7357  11E6                     l2950:
  7358  11E6  17B9               	bsf	___xxtofl@arg+3,7
  7359  11E7                     l2952:
  7360  11E7  0839               	movf	___xxtofl@arg+3,w
  7361  11E8  00AF               	movwf	?___xxtofl+3
  7362  11E9  0838               	movf	___xxtofl@arg+2,w
  7363  11EA  00AE               	movwf	?___xxtofl+2
  7364  11EB  0837               	movf	___xxtofl@arg+1,w
  7365  11EC  00AD               	movwf	?___xxtofl+1
  7366  11ED  0836               	movf	___xxtofl@arg,w
  7367  11EE  00AC               	movwf	?___xxtofl
  7368  11EF                     l778:
  7369  11EF  0008               	return
  7370  11F0                     __end_of___xxtofl:
  7371                           
  7372                           	psect	text15
  7373  1CA1                     __ptext15:	
  7374 ;; *************** function ___wmul *****************
  7375 ;; Defined at:
  7376 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  multiplier      2    5[COMMON] unsigned int 
  7379 ;;  multiplicand    2    7[COMMON] unsigned int 
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;  product         2    0[BANK0 ] unsigned int 
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  2    5[COMMON] unsigned int 
  7384 ;; Registers used:
  7385 ;;		wreg, status,2, status,0
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7391 ;;      Params:         4       0       0       0       0
  7392 ;;      Locals:         0       2       0       0       0
  7393 ;;      Temps:          0       0       0       0       0
  7394 ;;      Totals:         4       2       0       0       0
  7395 ;;Total ram usage:        6 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; Hardware stack levels required when called:    2
  7398 ;; This function calls:
  7399 ;;		Nothing
  7400 ;; This function is called by:
  7401 ;;		_conversion
  7402 ;;		_sprintf
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           
  7407                           ;psect for function ___wmul
  7408  1CA1                     ___wmul:
  7409  1CA1                     l2772:	
  7410                           ;incstack = 0
  7411                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7412                           
  7413  1CA1  1283               	bcf	3,5	;RP0=0, select bank0
  7414  1CA2  1303               	bcf	3,6	;RP1=0, select bank0
  7415  1CA3  01A0               	clrf	___wmul@product
  7416  1CA4  01A1               	clrf	___wmul@product+1
  7417  1CA5                     l2774:
  7418  1CA5  1C75               	btfss	___wmul@multiplier,0
  7419  1CA6  2CA8               	goto	u4411
  7420  1CA7  2CA9               	goto	u4410
  7421  1CA8                     u4411:
  7422  1CA8  2CB1               	goto	l309
  7423  1CA9                     u4410:
  7424  1CA9                     l2776:
  7425  1CA9  0877               	movf	___wmul@multiplicand,w
  7426  1CAA  1283               	bcf	3,5	;RP0=0, select bank0
  7427  1CAB  1303               	bcf	3,6	;RP1=0, select bank0
  7428  1CAC  07A0               	addwf	___wmul@product,f
  7429  1CAD  1803               	skipnc
  7430  1CAE  0AA1               	incf	___wmul@product+1,f
  7431  1CAF  0878               	movf	___wmul@multiplicand+1,w
  7432  1CB0  07A1               	addwf	___wmul@product+1,f
  7433  1CB1                     l309:
  7434  1CB1  3001               	movlw	1
  7435  1CB2                     u4425:
  7436  1CB2  1003               	clrc
  7437  1CB3  0DF7               	rlf	___wmul@multiplicand,f
  7438  1CB4  0DF8               	rlf	___wmul@multiplicand+1,f
  7439  1CB5  3EFF               	addlw	-1
  7440  1CB6  1D03               	skipz
  7441  1CB7  2CB2               	goto	u4425
  7442  1CB8                     l2778:
  7443  1CB8  3001               	movlw	1
  7444  1CB9                     u4435:
  7445  1CB9  1003               	clrc
  7446  1CBA  0CF6               	rrf	___wmul@multiplier+1,f
  7447  1CBB  0CF5               	rrf	___wmul@multiplier,f
  7448  1CBC  3EFF               	addlw	-1
  7449  1CBD  1D03               	skipz
  7450  1CBE  2CB9               	goto	u4435
  7451  1CBF                     l2780:
  7452  1CBF  0875               	movf	___wmul@multiplier,w
  7453  1CC0  0476               	iorwf	___wmul@multiplier+1,w
  7454  1CC1  1D03               	btfss	3,2
  7455  1CC2  2CC4               	goto	u4441
  7456  1CC3  2CC5               	goto	u4440
  7457  1CC4                     u4441:
  7458  1CC4  2CA5               	goto	l2774
  7459  1CC5                     u4440:
  7460  1CC5                     l2782:
  7461  1CC5  1283               	bcf	3,5	;RP0=0, select bank0
  7462  1CC6  1303               	bcf	3,6	;RP1=0, select bank0
  7463  1CC7  0821               	movf	___wmul@product+1,w
  7464  1CC8  00F6               	movwf	?___wmul+1
  7465  1CC9  0820               	movf	___wmul@product,w
  7466  1CCA  00F5               	movwf	?___wmul
  7467  1CCB                     l311:
  7468  1CCB  0008               	return
  7469  1CCC                     __end_of___wmul:
  7470                           
  7471                           	psect	text16
  7472  1E6C                     __ptext16:	
  7473 ;; *************** function ___llmod *****************
  7474 ;; Defined at:
  7475 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7476 ;; Parameters:    Size  Location     Type
  7477 ;;  divisor         4    0[BANK0 ] unsigned long 
  7478 ;;  dividend        4    4[BANK0 ] unsigned long 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;  counter         1    6[COMMON] unsigned char 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  4    0[BANK0 ] unsigned long 
  7483 ;; Registers used:
  7484 ;;		wreg, status,2, status,0
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7490 ;;      Params:         0       8       0       0       0
  7491 ;;      Locals:         1       0       0       0       0
  7492 ;;      Temps:          1       0       0       0       0
  7493 ;;      Totals:         2       8       0       0       0
  7494 ;;Total ram usage:       10 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    2
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_sprintf
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504                           
  7505                           ;psect for function ___llmod
  7506  1E6C                     ___llmod:
  7507  1E6C                     l2886:	
  7508                           ;incstack = 0
  7509                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7510                           
  7511  1E6C  1283               	bcf	3,5	;RP0=0, select bank0
  7512  1E6D  1303               	bcf	3,6	;RP1=0, select bank0
  7513  1E6E  0823               	movf	___llmod@divisor+3,w
  7514  1E6F  0422               	iorwf	___llmod@divisor+2,w
  7515  1E70  0421               	iorwf	___llmod@divisor+1,w
  7516  1E71  0420               	iorwf	___llmod@divisor,w
  7517  1E72  1903               	skipnz
  7518  1E73  2E75               	goto	u4731
  7519  1E74  2E76               	goto	u4730
  7520  1E75                     u4731:
  7521  1E75  2EB9               	goto	l2902
  7522  1E76                     u4730:
  7523  1E76                     l2888:
  7524  1E76  01F6               	clrf	___llmod@counter
  7525  1E77  0AF6               	incf	___llmod@counter,f
  7526  1E78  2E86               	goto	l2892
  7527  1E79                     l2890:
  7528  1E79  3001               	movlw	1
  7529  1E7A  00F5               	movwf	??___llmod
  7530  1E7B                     u4745:
  7531  1E7B  1003               	clrc
  7532  1E7C  0DA0               	rlf	___llmod@divisor,f
  7533  1E7D  0DA1               	rlf	___llmod@divisor+1,f
  7534  1E7E  0DA2               	rlf	___llmod@divisor+2,f
  7535  1E7F  0DA3               	rlf	___llmod@divisor+3,f
  7536  1E80  0BF5               	decfsz	??___llmod,f
  7537  1E81  2E7B               	goto	u4745
  7538  1E82  3001               	movlw	1
  7539  1E83  00F5               	movwf	??___llmod
  7540  1E84  0875               	movf	??___llmod,w
  7541  1E85  07F6               	addwf	___llmod@counter,f
  7542  1E86                     l2892:
  7543  1E86  1FA3               	btfss	___llmod@divisor+3,7
  7544  1E87  2E89               	goto	u4751
  7545  1E88  2E8A               	goto	u4750
  7546  1E89                     u4751:
  7547  1E89  2E79               	goto	l2890
  7548  1E8A                     u4750:
  7549  1E8A                     l2894:
  7550  1E8A  0823               	movf	___llmod@divisor+3,w
  7551  1E8B  0227               	subwf	___llmod@dividend+3,w
  7552  1E8C  1D03               	skipz
  7553  1E8D  2E98               	goto	u4765
  7554  1E8E  0822               	movf	___llmod@divisor+2,w
  7555  1E8F  0226               	subwf	___llmod@dividend+2,w
  7556  1E90  1D03               	skipz
  7557  1E91  2E98               	goto	u4765
  7558  1E92  0821               	movf	___llmod@divisor+1,w
  7559  1E93  0225               	subwf	___llmod@dividend+1,w
  7560  1E94  1D03               	skipz
  7561  1E95  2E98               	goto	u4765
  7562  1E96  0820               	movf	___llmod@divisor,w
  7563  1E97  0224               	subwf	___llmod@dividend,w
  7564  1E98                     u4765:
  7565  1E98  1C03               	skipc
  7566  1E99  2E9B               	goto	u4761
  7567  1E9A  2E9C               	goto	u4760
  7568  1E9B                     u4761:
  7569  1E9B  2EAA               	goto	l2898
  7570  1E9C                     u4760:
  7571  1E9C                     l2896:
  7572  1E9C  0820               	movf	___llmod@divisor,w
  7573  1E9D  02A4               	subwf	___llmod@dividend,f
  7574  1E9E  0821               	movf	___llmod@divisor+1,w
  7575  1E9F  1C03               	skipc
  7576  1EA0  0F21               	incfsz	___llmod@divisor+1,w
  7577  1EA1  02A5               	subwf	___llmod@dividend+1,f
  7578  1EA2  0822               	movf	___llmod@divisor+2,w
  7579  1EA3  1C03               	skipc
  7580  1EA4  0F22               	incfsz	___llmod@divisor+2,w
  7581  1EA5  02A6               	subwf	___llmod@dividend+2,f
  7582  1EA6  0823               	movf	___llmod@divisor+3,w
  7583  1EA7  1C03               	skipc
  7584  1EA8  0F23               	incfsz	___llmod@divisor+3,w
  7585  1EA9  02A7               	subwf	___llmod@dividend+3,f
  7586  1EAA                     l2898:
  7587  1EAA  3001               	movlw	1
  7588  1EAB                     u4775:
  7589  1EAB  1003               	clrc
  7590  1EAC  0CA3               	rrf	___llmod@divisor+3,f
  7591  1EAD  0CA2               	rrf	___llmod@divisor+2,f
  7592  1EAE  0CA1               	rrf	___llmod@divisor+1,f
  7593  1EAF  0CA0               	rrf	___llmod@divisor,f
  7594  1EB0  3EFF               	addlw	-1
  7595  1EB1  1D03               	skipz
  7596  1EB2  2EAB               	goto	u4775
  7597  1EB3                     l2900:
  7598  1EB3  3001               	movlw	1
  7599  1EB4  02F6               	subwf	___llmod@counter,f
  7600  1EB5  1D03               	btfss	3,2
  7601  1EB6  2EB8               	goto	u4781
  7602  1EB7  2EB9               	goto	u4780
  7603  1EB8                     u4781:
  7604  1EB8  2E8A               	goto	l2894
  7605  1EB9                     u4780:
  7606  1EB9                     l2902:
  7607  1EB9  0827               	movf	___llmod@dividend+3,w
  7608  1EBA  00A3               	movwf	?___llmod+3
  7609  1EBB  0826               	movf	___llmod@dividend+2,w
  7610  1EBC  00A2               	movwf	?___llmod+2
  7611  1EBD  0825               	movf	___llmod@dividend+1,w
  7612  1EBE  00A1               	movwf	?___llmod+1
  7613  1EBF  0824               	movf	___llmod@dividend,w
  7614  1EC0  00A0               	movwf	?___llmod
  7615  1EC1                     l565:
  7616  1EC1  0008               	return
  7617  1EC2                     __end_of___llmod:
  7618                           
  7619                           	psect	text17
  7620  1F1C                     __ptext17:	
  7621 ;; *************** function ___lldiv *****************
  7622 ;; Defined at:
  7623 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  divisor         4    0[BANK0 ] unsigned long 
  7626 ;;  dividend        4    4[BANK0 ] unsigned long 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;  quotient        4    8[BANK0 ] unsigned long 
  7629 ;;  counter         1   12[BANK0 ] unsigned char 
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  4    0[BANK0 ] unsigned long 
  7632 ;; Registers used:
  7633 ;;		wreg, status,2, status,0
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7639 ;;      Params:         0       8       0       0       0
  7640 ;;      Locals:         0       5       0       0       0
  7641 ;;      Temps:          1       0       0       0       0
  7642 ;;      Totals:         1      13       0       0       0
  7643 ;;Total ram usage:       14 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; Hardware stack levels required when called:    2
  7646 ;; This function calls:
  7647 ;;		Nothing
  7648 ;; This function is called by:
  7649 ;;		_sprintf
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           
  7654                           ;psect for function ___lldiv
  7655  1F1C                     ___lldiv:
  7656  1F1C                     l2786:	
  7657                           ;incstack = 0
  7658                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7659                           
  7660  1F1C  3000               	movlw	0
  7661  1F1D  1283               	bcf	3,5	;RP0=0, select bank0
  7662  1F1E  1303               	bcf	3,6	;RP1=0, select bank0
  7663  1F1F  00AB               	movwf	___lldiv@quotient+3
  7664  1F20  3000               	movlw	0
  7665  1F21  00AA               	movwf	___lldiv@quotient+2
  7666  1F22  3000               	movlw	0
  7667  1F23  00A9               	movwf	___lldiv@quotient+1
  7668  1F24  3000               	movlw	0
  7669  1F25  00A8               	movwf	___lldiv@quotient
  7670  1F26  0823               	movf	___lldiv@divisor+3,w
  7671  1F27  0422               	iorwf	___lldiv@divisor+2,w
  7672  1F28  0421               	iorwf	___lldiv@divisor+1,w
  7673  1F29  0420               	iorwf	___lldiv@divisor,w
  7674  1F2A  1903               	skipnz
  7675  1F2B  2F2D               	goto	u4451
  7676  1F2C  2F2E               	goto	u4450
  7677  1F2D                     u4451:
  7678  1F2D  2F7B               	goto	l2806
  7679  1F2E                     u4450:
  7680  1F2E                     l2788:
  7681  1F2E  01AC               	clrf	___lldiv@counter
  7682  1F2F  0AAC               	incf	___lldiv@counter,f
  7683  1F30  2F3E               	goto	l2792
  7684  1F31                     l2790:
  7685  1F31  3001               	movlw	1
  7686  1F32  00F5               	movwf	??___lldiv
  7687  1F33                     u4465:
  7688  1F33  1003               	clrc
  7689  1F34  0DA0               	rlf	___lldiv@divisor,f
  7690  1F35  0DA1               	rlf	___lldiv@divisor+1,f
  7691  1F36  0DA2               	rlf	___lldiv@divisor+2,f
  7692  1F37  0DA3               	rlf	___lldiv@divisor+3,f
  7693  1F38  0BF5               	decfsz	??___lldiv,f
  7694  1F39  2F33               	goto	u4465
  7695  1F3A  3001               	movlw	1
  7696  1F3B  00F5               	movwf	??___lldiv
  7697  1F3C  0875               	movf	??___lldiv,w
  7698  1F3D  07AC               	addwf	___lldiv@counter,f
  7699  1F3E                     l2792:
  7700  1F3E  1FA3               	btfss	___lldiv@divisor+3,7
  7701  1F3F  2F41               	goto	u4471
  7702  1F40  2F42               	goto	u4470
  7703  1F41                     u4471:
  7704  1F41  2F31               	goto	l2790
  7705  1F42                     u4470:
  7706  1F42                     l2794:
  7707  1F42  3001               	movlw	1
  7708  1F43  00F5               	movwf	??___lldiv
  7709  1F44                     u4485:
  7710  1F44  1003               	clrc
  7711  1F45  0DA8               	rlf	___lldiv@quotient,f
  7712  1F46  0DA9               	rlf	___lldiv@quotient+1,f
  7713  1F47  0DAA               	rlf	___lldiv@quotient+2,f
  7714  1F48  0DAB               	rlf	___lldiv@quotient+3,f
  7715  1F49  0BF5               	decfsz	??___lldiv,f
  7716  1F4A  2F44               	goto	u4485
  7717  1F4B                     l2796:
  7718  1F4B  0823               	movf	___lldiv@divisor+3,w
  7719  1F4C  0227               	subwf	___lldiv@dividend+3,w
  7720  1F4D  1D03               	skipz
  7721  1F4E  2F59               	goto	u4495
  7722  1F4F  0822               	movf	___lldiv@divisor+2,w
  7723  1F50  0226               	subwf	___lldiv@dividend+2,w
  7724  1F51  1D03               	skipz
  7725  1F52  2F59               	goto	u4495
  7726  1F53  0821               	movf	___lldiv@divisor+1,w
  7727  1F54  0225               	subwf	___lldiv@dividend+1,w
  7728  1F55  1D03               	skipz
  7729  1F56  2F59               	goto	u4495
  7730  1F57  0820               	movf	___lldiv@divisor,w
  7731  1F58  0224               	subwf	___lldiv@dividend,w
  7732  1F59                     u4495:
  7733  1F59  1C03               	skipc
  7734  1F5A  2F5C               	goto	u4491
  7735  1F5B  2F5D               	goto	u4490
  7736  1F5C                     u4491:
  7737  1F5C  2F6C               	goto	l2802
  7738  1F5D                     u4490:
  7739  1F5D                     l2798:
  7740  1F5D  0820               	movf	___lldiv@divisor,w
  7741  1F5E  02A4               	subwf	___lldiv@dividend,f
  7742  1F5F  0821               	movf	___lldiv@divisor+1,w
  7743  1F60  1C03               	skipc
  7744  1F61  0F21               	incfsz	___lldiv@divisor+1,w
  7745  1F62  02A5               	subwf	___lldiv@dividend+1,f
  7746  1F63  0822               	movf	___lldiv@divisor+2,w
  7747  1F64  1C03               	skipc
  7748  1F65  0F22               	incfsz	___lldiv@divisor+2,w
  7749  1F66  02A6               	subwf	___lldiv@dividend+2,f
  7750  1F67  0823               	movf	___lldiv@divisor+3,w
  7751  1F68  1C03               	skipc
  7752  1F69  0F23               	incfsz	___lldiv@divisor+3,w
  7753  1F6A  02A7               	subwf	___lldiv@dividend+3,f
  7754  1F6B                     l2800:
  7755  1F6B  1428               	bsf	___lldiv@quotient,0
  7756  1F6C                     l2802:
  7757  1F6C  3001               	movlw	1
  7758  1F6D                     u4505:
  7759  1F6D  1003               	clrc
  7760  1F6E  0CA3               	rrf	___lldiv@divisor+3,f
  7761  1F6F  0CA2               	rrf	___lldiv@divisor+2,f
  7762  1F70  0CA1               	rrf	___lldiv@divisor+1,f
  7763  1F71  0CA0               	rrf	___lldiv@divisor,f
  7764  1F72  3EFF               	addlw	-1
  7765  1F73  1D03               	skipz
  7766  1F74  2F6D               	goto	u4505
  7767  1F75                     l2804:
  7768  1F75  3001               	movlw	1
  7769  1F76  02AC               	subwf	___lldiv@counter,f
  7770  1F77  1D03               	btfss	3,2
  7771  1F78  2F7A               	goto	u4511
  7772  1F79  2F7B               	goto	u4510
  7773  1F7A                     u4511:
  7774  1F7A  2F42               	goto	l2794
  7775  1F7B                     u4510:
  7776  1F7B                     l2806:
  7777  1F7B  082B               	movf	___lldiv@quotient+3,w
  7778  1F7C  00A3               	movwf	?___lldiv+3
  7779  1F7D  082A               	movf	___lldiv@quotient+2,w
  7780  1F7E  00A2               	movwf	?___lldiv+2
  7781  1F7F  0829               	movf	___lldiv@quotient+1,w
  7782  1F80  00A1               	movwf	?___lldiv+1
  7783  1F81  0828               	movf	___lldiv@quotient,w
  7784  1F82  00A0               	movwf	?___lldiv
  7785  1F83                     l345:
  7786  1F83  0008               	return
  7787  1F84                     __end_of___lldiv:
  7788                           
  7789                           	psect	text18
  7790  1F84                     __ptext18:	
  7791 ;; *************** function ___fltol *****************
  7792 ;; Defined at:
  7793 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  f1              4   57[BANK0 ] unsigned long 
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;  exp1            1   67[BANK0 ] unsigned char 
  7798 ;;  sign1           1   66[BANK0 ] unsigned char 
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  4   57[BANK0 ] long 
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7808 ;;      Params:         0       4       0       0       0
  7809 ;;      Locals:         0       2       0       0       0
  7810 ;;      Temps:          0       5       0       0       0
  7811 ;;      Totals:         0      11       0       0       0
  7812 ;;Total ram usage:       11 bytes
  7813 ;; Hardware stack levels used:    1
  7814 ;; Hardware stack levels required when called:    2
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_sprintf
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           
  7823                           ;psect for function ___fltol
  7824  1F84                     ___fltol:
  7825  1F84                     l2850:	
  7826                           ;incstack = 0
  7827                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7828                           
  7829  1F84  1003               	clrc
  7830  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  7831  1F86  1303               	bcf	3,6	;RP1=0, select bank0
  7832  1F87  0D5B               	rlf	___fltol@f1+2,w
  7833  1F88  0D5C               	rlf	___fltol@f1+3,w
  7834  1F89  00DD               	movwf	??___fltol
  7835  1F8A  085D               	movf	??___fltol,w
  7836  1F8B  00E3               	movwf	___fltol@exp1
  7837  1F8C  0863               	movf	___fltol@exp1,w
  7838  1F8D  1D03               	btfss	3,2
  7839  1F8E  2F90               	goto	u4631
  7840  1F8F  2F91               	goto	u4630
  7841  1F90                     u4631:
  7842  1F90  2F9A               	goto	l2856
  7843  1F91                     u4630:
  7844  1F91                     l2852:
  7845  1F91  3000               	movlw	0
  7846  1F92  00DC               	movwf	?___fltol+3
  7847  1F93  3000               	movlw	0
  7848  1F94  00DB               	movwf	?___fltol+2
  7849  1F95  3000               	movlw	0
  7850  1F96  00DA               	movwf	?___fltol+1
  7851  1F97  3000               	movlw	0
  7852  1F98  00D9               	movwf	?___fltol
  7853  1F99  2FFF               	goto	l512
  7854  1F9A                     l2856:
  7855  1F9A  0859               	movf	___fltol@f1,w
  7856  1F9B  00DD               	movwf	??___fltol
  7857  1F9C  085A               	movf	___fltol@f1+1,w
  7858  1F9D  00DE               	movwf	??___fltol+1
  7859  1F9E  085B               	movf	___fltol@f1+2,w
  7860  1F9F  00DF               	movwf	??___fltol+2
  7861  1FA0  085C               	movf	___fltol@f1+3,w
  7862  1FA1  00E0               	movwf	??___fltol+3
  7863  1FA2  301F               	movlw	31
  7864  1FA3                     u4645:
  7865  1FA3  1003               	clrc
  7866  1FA4  0CE0               	rrf	??___fltol+3,f
  7867  1FA5  0CDF               	rrf	??___fltol+2,f
  7868  1FA6  0CDE               	rrf	??___fltol+1,f
  7869  1FA7  0CDD               	rrf	??___fltol,f
  7870  1FA8                     u4640:
  7871  1FA8  3EFF               	addlw	-1
  7872  1FA9  1D03               	skipz
  7873  1FAA  2FA3               	goto	u4645
  7874  1FAB  085D               	movf	??___fltol,w
  7875  1FAC  00E1               	movwf	??___fltol+4
  7876  1FAD  0861               	movf	??___fltol+4,w
  7877  1FAE  00E2               	movwf	___fltol@sign1
  7878  1FAF                     l2858:
  7879  1FAF  17DB               	bsf	___fltol@f1+2,7
  7880  1FB0                     l2860:
  7881  1FB0  30FF               	movlw	255
  7882  1FB1  05D9               	andwf	___fltol@f1,f
  7883  1FB2  30FF               	movlw	255
  7884  1FB3  05DA               	andwf	___fltol@f1+1,f
  7885  1FB4  30FF               	movlw	255
  7886  1FB5  05DB               	andwf	___fltol@f1+2,f
  7887  1FB6  3000               	movlw	0
  7888  1FB7  05DC               	andwf	___fltol@f1+3,f
  7889  1FB8                     l2862:
  7890  1FB8  3096               	movlw	150
  7891  1FB9  02E3               	subwf	___fltol@exp1,f
  7892  1FBA                     l2864:
  7893  1FBA  1FE3               	btfss	___fltol@exp1,7
  7894  1FBB  2FBD               	goto	u4651
  7895  1FBC  2FBE               	goto	u4650
  7896  1FBD                     u4651:
  7897  1FBD  2FD8               	goto	l2874
  7898  1FBE                     u4650:
  7899  1FBE                     l2866:
  7900  1FBE  0863               	movf	___fltol@exp1,w
  7901  1FBF  3A80               	xorlw	128
  7902  1FC0  3E97               	addlw	151
  7903  1FC1  1803               	skipnc
  7904  1FC2  2FC4               	goto	u4661
  7905  1FC3  2FC5               	goto	u4660
  7906  1FC4                     u4661:
  7907  1FC4  2FC6               	goto	l2872
  7908  1FC5                     u4660:
  7909  1FC5  2F91               	goto	l2852
  7910  1FC6                     l2872:
  7911  1FC6  3001               	movlw	1
  7912  1FC7                     u4675:
  7913  1FC7  1003               	clrc
  7914  1FC8  0CDC               	rrf	___fltol@f1+3,f
  7915  1FC9  0CDB               	rrf	___fltol@f1+2,f
  7916  1FCA  0CDA               	rrf	___fltol@f1+1,f
  7917  1FCB  0CD9               	rrf	___fltol@f1,f
  7918  1FCC  3EFF               	addlw	-1
  7919  1FCD  1D03               	skipz
  7920  1FCE  2FC7               	goto	u4675
  7921  1FCF  3001               	movlw	1
  7922  1FD0  00DD               	movwf	??___fltol
  7923  1FD1  085D               	movf	??___fltol,w
  7924  1FD2  07E3               	addwf	___fltol@exp1,f
  7925  1FD3  1D03               	btfss	3,2
  7926  1FD4  2FD6               	goto	u4681
  7927  1FD5  2FD7               	goto	u4680
  7928  1FD6                     u4681:
  7929  1FD6  2FC6               	goto	l2872
  7930  1FD7                     u4680:
  7931  1FD7  2FEF               	goto	l2882
  7932  1FD8                     l2874:
  7933  1FD8  3020               	movlw	32
  7934  1FD9  0263               	subwf	___fltol@exp1,w
  7935  1FDA  1C03               	skipc
  7936  1FDB  2FDD               	goto	u4691
  7937  1FDC  2FDE               	goto	u4690
  7938  1FDD                     u4691:
  7939  1FDD  2FEA               	goto	l519
  7940  1FDE                     u4690:
  7941  1FDE  2F91               	goto	l2852
  7942  1FDF                     l2880:
  7943  1FDF  3001               	movlw	1
  7944  1FE0  00DD               	movwf	??___fltol
  7945  1FE1                     u4705:
  7946  1FE1  1003               	clrc
  7947  1FE2  0DD9               	rlf	___fltol@f1,f
  7948  1FE3  0DDA               	rlf	___fltol@f1+1,f
  7949  1FE4  0DDB               	rlf	___fltol@f1+2,f
  7950  1FE5  0DDC               	rlf	___fltol@f1+3,f
  7951  1FE6  0BDD               	decfsz	??___fltol,f
  7952  1FE7  2FE1               	goto	u4705
  7953  1FE8  3001               	movlw	1
  7954  1FE9  02E3               	subwf	___fltol@exp1,f
  7955  1FEA                     l519:
  7956  1FEA  0863               	movf	___fltol@exp1,w
  7957  1FEB  1D03               	btfss	3,2
  7958  1FEC  2FEE               	goto	u4711
  7959  1FED  2FEF               	goto	u4710
  7960  1FEE                     u4711:
  7961  1FEE  2FDF               	goto	l2880
  7962  1FEF                     u4710:
  7963  1FEF                     l2882:
  7964  1FEF  0862               	movf	___fltol@sign1,w
  7965  1FF0  1903               	btfsc	3,2
  7966  1FF1  2FF3               	goto	u4721
  7967  1FF2  2FF4               	goto	u4720
  7968  1FF3                     u4721:
  7969  1FF3  2FFF               	goto	l522
  7970  1FF4                     u4720:
  7971  1FF4                     l2884:
  7972  1FF4  09D9               	comf	___fltol@f1,f
  7973  1FF5  09DA               	comf	___fltol@f1+1,f
  7974  1FF6  09DB               	comf	___fltol@f1+2,f
  7975  1FF7  09DC               	comf	___fltol@f1+3,f
  7976  1FF8  0AD9               	incf	___fltol@f1,f
  7977  1FF9  1903               	skipnz
  7978  1FFA  0ADA               	incf	___fltol@f1+1,f
  7979  1FFB  1903               	skipnz
  7980  1FFC  0ADB               	incf	___fltol@f1+2,f
  7981  1FFD  1903               	skipnz
  7982  1FFE  0ADC               	incf	___fltol@f1+3,f
  7983  1FFF                     l522:
  7984  1FFF                     l512:
  7985  1FFF  0008               	return
  7986  2000                     __end_of___fltol:
  7987                           
  7988                           	psect	text19
  7989  1E1C                     __ptext19:	
  7990 ;; *************** function ___flsub *****************
  7991 ;; Defined at:
  7992 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  a               4    0[BANK1 ] long 
  7995 ;;  b               4    4[BANK1 ] long 
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;		None
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  4    0[BANK1 ] long 
  8000 ;; Registers used:
  8001 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8007 ;;      Params:         0       0       8       0       0
  8008 ;;      Locals:         0       0       0       0       0
  8009 ;;      Temps:          0       0       0       0       0
  8010 ;;      Totals:         0       0       8       0       0
  8011 ;;Total ram usage:        8 bytes
  8012 ;; Hardware stack levels used:    1
  8013 ;; Hardware stack levels required when called:    3
  8014 ;; This function calls:
  8015 ;;		___fladd
  8016 ;; This function is called by:
  8017 ;;		_sprintf
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           
  8022                           ;psect for function ___flsub
  8023  1E1C                     ___flsub:
  8024  1E1C                     l2906:	
  8025                           ;incstack = 0
  8026                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8027                           
  8028  1E1C  3080               	movlw	128
  8029  1E1D  1683               	bsf	3,5	;RP0=1, select bank1
  8030  1E1E  1303               	bcf	3,6	;RP1=0, select bank1
  8031  1E1F  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8032  1E20                     l2908:
  8033  1E20  0827               	movf	(___flsub@b+3)^(0+128),w
  8034  1E21  1283               	bcf	3,5	;RP0=0, select bank0
  8035  1E22  1303               	bcf	3,6	;RP1=0, select bank0
  8036  1E23  00DD               	movwf	___fladd@b+3
  8037  1E24  1683               	bsf	3,5	;RP0=1, select bank1
  8038  1E25  1303               	bcf	3,6	;RP1=0, select bank1
  8039  1E26  0826               	movf	(___flsub@b+2)^(0+128),w
  8040  1E27  1283               	bcf	3,5	;RP0=0, select bank0
  8041  1E28  1303               	bcf	3,6	;RP1=0, select bank0
  8042  1E29  00DC               	movwf	___fladd@b+2
  8043  1E2A  1683               	bsf	3,5	;RP0=1, select bank1
  8044  1E2B  1303               	bcf	3,6	;RP1=0, select bank1
  8045  1E2C  0825               	movf	(___flsub@b+1)^(0+128),w
  8046  1E2D  1283               	bcf	3,5	;RP0=0, select bank0
  8047  1E2E  1303               	bcf	3,6	;RP1=0, select bank0
  8048  1E2F  00DB               	movwf	___fladd@b+1
  8049  1E30  1683               	bsf	3,5	;RP0=1, select bank1
  8050  1E31  1303               	bcf	3,6	;RP1=0, select bank1
  8051  1E32  0824               	movf	___flsub@b^(0+128),w
  8052  1E33  1283               	bcf	3,5	;RP0=0, select bank0
  8053  1E34  1303               	bcf	3,6	;RP1=0, select bank0
  8054  1E35  00DA               	movwf	___fladd@b
  8055  1E36  1683               	bsf	3,5	;RP0=1, select bank1
  8056  1E37  1303               	bcf	3,6	;RP1=0, select bank1
  8057  1E38  0823               	movf	(___flsub@a+3)^(0+128),w
  8058  1E39  1283               	bcf	3,5	;RP0=0, select bank0
  8059  1E3A  1303               	bcf	3,6	;RP1=0, select bank0
  8060  1E3B  00E1               	movwf	___fladd@a+3
  8061  1E3C  1683               	bsf	3,5	;RP0=1, select bank1
  8062  1E3D  1303               	bcf	3,6	;RP1=0, select bank1
  8063  1E3E  0822               	movf	(___flsub@a+2)^(0+128),w
  8064  1E3F  1283               	bcf	3,5	;RP0=0, select bank0
  8065  1E40  1303               	bcf	3,6	;RP1=0, select bank0
  8066  1E41  00E0               	movwf	___fladd@a+2
  8067  1E42  1683               	bsf	3,5	;RP0=1, select bank1
  8068  1E43  1303               	bcf	3,6	;RP1=0, select bank1
  8069  1E44  0821               	movf	(___flsub@a+1)^(0+128),w
  8070  1E45  1283               	bcf	3,5	;RP0=0, select bank0
  8071  1E46  1303               	bcf	3,6	;RP1=0, select bank0
  8072  1E47  00DF               	movwf	___fladd@a+1
  8073  1E48  1683               	bsf	3,5	;RP0=1, select bank1
  8074  1E49  1303               	bcf	3,6	;RP1=0, select bank1
  8075  1E4A  0820               	movf	___flsub@a^(0+128),w
  8076  1E4B  1283               	bcf	3,5	;RP0=0, select bank0
  8077  1E4C  1303               	bcf	3,6	;RP1=0, select bank0
  8078  1E4D  00DE               	movwf	___fladd@a
  8079  1E4E  160A  118A  2578  160A  158A  	fcall	___fladd
  8080  1E53  1283               	bcf	3,5	;RP0=0, select bank0
  8081  1E54  1303               	bcf	3,6	;RP1=0, select bank0
  8082  1E55  085D               	movf	?___fladd+3,w
  8083  1E56  1683               	bsf	3,5	;RP0=1, select bank1
  8084  1E57  1303               	bcf	3,6	;RP1=0, select bank1
  8085  1E58  00A3               	movwf	(?___flsub+3)^(0+128)
  8086  1E59  1283               	bcf	3,5	;RP0=0, select bank0
  8087  1E5A  1303               	bcf	3,6	;RP1=0, select bank0
  8088  1E5B  085C               	movf	?___fladd+2,w
  8089  1E5C  1683               	bsf	3,5	;RP0=1, select bank1
  8090  1E5D  1303               	bcf	3,6	;RP1=0, select bank1
  8091  1E5E  00A2               	movwf	(?___flsub+2)^(0+128)
  8092  1E5F  1283               	bcf	3,5	;RP0=0, select bank0
  8093  1E60  1303               	bcf	3,6	;RP1=0, select bank0
  8094  1E61  085B               	movf	?___fladd+1,w
  8095  1E62  1683               	bsf	3,5	;RP0=1, select bank1
  8096  1E63  1303               	bcf	3,6	;RP1=0, select bank1
  8097  1E64  00A1               	movwf	(?___flsub+1)^(0+128)
  8098  1E65  1283               	bcf	3,5	;RP0=0, select bank0
  8099  1E66  1303               	bcf	3,6	;RP1=0, select bank0
  8100  1E67  085A               	movf	?___fladd,w
  8101  1E68  1683               	bsf	3,5	;RP0=1, select bank1
  8102  1E69  1303               	bcf	3,6	;RP1=0, select bank1
  8103  1E6A  00A0               	movwf	?___flsub^(0+128)
  8104  1E6B                     l682:
  8105  1E6B  0008               	return
  8106  1E6C                     __end_of___flsub:
  8107                           
  8108                           	psect	text20
  8109  1578                     __ptext20:	
  8110 ;; *************** function ___fladd *****************
  8111 ;; Defined at:
  8112 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;  b               4   58[BANK0 ] long 
  8115 ;;  a               4   62[BANK0 ] long 
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;  grs             1   77[BANK0 ] unsigned char 
  8118 ;;  bexp            1   76[BANK0 ] unsigned char 
  8119 ;;  aexp            1   75[BANK0 ] unsigned char 
  8120 ;;  signs           1   74[BANK0 ] unsigned char 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  4   58[BANK0 ] unsigned char 
  8123 ;; Registers used:
  8124 ;;		wreg, status,2, status,0, btemp+1
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8130 ;;      Params:         0       8       0       0       0
  8131 ;;      Locals:         0       4       0       0       0
  8132 ;;      Temps:          0       8       0       0       0
  8133 ;;      Totals:         0      20       0       0       0
  8134 ;;Total ram usage:       20 bytes
  8135 ;; Hardware stack levels used:    1
  8136 ;; Hardware stack levels required when called:    2
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		_sprintf
  8141 ;;		___flsub
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145                           
  8146                           ;psect for function ___fladd
  8147  1578                     ___fladd:
  8148  1578                     l2248:	
  8149                           ;incstack = 0
  8150                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8151                           
  8152  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8153  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8154  157A  085D               	movf	___fladd@b+3,w
  8155  157B  3980               	andlw	128
  8156  157C  00E2               	movwf	??___fladd
  8157  157D  0862               	movf	??___fladd,w
  8158  157E  00EA               	movwf	___fladd@signs
  8159  157F                     l2250:
  8160  157F  085D               	movf	___fladd@b+3,w
  8161  1580  00E2               	movwf	??___fladd
  8162  1581  0762               	addwf	??___fladd,w
  8163  1582  00E3               	movwf	??___fladd+1
  8164  1583  0863               	movf	??___fladd+1,w
  8165  1584  00EC               	movwf	___fladd@bexp
  8166  1585                     l2252:
  8167  1585  1FDC               	btfss	___fladd@b+2,7
  8168  1586  2D88               	goto	u3051
  8169  1587  2D89               	goto	u3050
  8170  1588                     u3051:
  8171  1588  2D8A               	goto	l2256
  8172  1589                     u3050:
  8173  1589                     l2254:
  8174  1589  146C               	bsf	___fladd@bexp,0
  8175  158A                     l2256:
  8176  158A  086C               	movf	___fladd@bexp,w
  8177  158B  1903               	btfsc	3,2
  8178  158C  2D8E               	goto	u3061
  8179  158D  2D8F               	goto	u3060
  8180  158E                     u3061:
  8181  158E  2D9F               	goto	l2266
  8182  158F                     u3060:
  8183  158F                     l2258:
  8184  158F  0A6C               	incf	___fladd@bexp,w
  8185  1590  1D03               	btfss	3,2
  8186  1591  2D93               	goto	u3071
  8187  1592  2D94               	goto	u3070
  8188  1593                     u3071:
  8189  1593  2D9C               	goto	l2262
  8190  1594                     u3070:
  8191  1594                     l2260:
  8192  1594  3000               	movlw	0
  8193  1595  00DD               	movwf	___fladd@b+3
  8194  1596  3000               	movlw	0
  8195  1597  00DC               	movwf	___fladd@b+2
  8196  1598  3000               	movlw	0
  8197  1599  00DB               	movwf	___fladd@b+1
  8198  159A  3000               	movlw	0
  8199  159B  00DA               	movwf	___fladd@b
  8200  159C                     l2262:
  8201  159C  17DC               	bsf	___fladd@b+2,7
  8202  159D                     l2264:
  8203  159D  01DD               	clrf	___fladd@b+3
  8204  159E  2DA7               	goto	l2268
  8205  159F                     l2266:
  8206  159F  3000               	movlw	0
  8207  15A0  00DD               	movwf	___fladd@b+3
  8208  15A1  3000               	movlw	0
  8209  15A2  00DC               	movwf	___fladd@b+2
  8210  15A3  3000               	movlw	0
  8211  15A4  00DB               	movwf	___fladd@b+1
  8212  15A5  3000               	movlw	0
  8213  15A6  00DA               	movwf	___fladd@b
  8214  15A7                     l2268:
  8215  15A7  0861               	movf	___fladd@a+3,w
  8216  15A8  3980               	andlw	128
  8217  15A9  00E2               	movwf	??___fladd
  8218  15AA  0862               	movf	??___fladd,w
  8219  15AB  00EB               	movwf	___fladd@aexp
  8220  15AC                     l2270:
  8221  15AC  086B               	movf	___fladd@aexp,w
  8222  15AD  066A               	xorwf	___fladd@signs,w
  8223  15AE  1903               	skipnz
  8224  15AF  2DB1               	goto	u3081
  8225  15B0  2DB2               	goto	u3080
  8226  15B1                     u3081:
  8227  15B1  2DB3               	goto	l2274
  8228  15B2                     u3080:
  8229  15B2                     l2272:
  8230  15B2  176A               	bsf	___fladd@signs,6
  8231  15B3                     l2274:
  8232  15B3  0861               	movf	___fladd@a+3,w
  8233  15B4  00E2               	movwf	??___fladd
  8234  15B5  0762               	addwf	??___fladd,w
  8235  15B6  00E3               	movwf	??___fladd+1
  8236  15B7  0863               	movf	??___fladd+1,w
  8237  15B8  00EB               	movwf	___fladd@aexp
  8238  15B9                     l2276:
  8239  15B9  1FE0               	btfss	___fladd@a+2,7
  8240  15BA  2DBC               	goto	u3091
  8241  15BB  2DBD               	goto	u3090
  8242  15BC                     u3091:
  8243  15BC  2DBE               	goto	l2280
  8244  15BD                     u3090:
  8245  15BD                     l2278:
  8246  15BD  146B               	bsf	___fladd@aexp,0
  8247  15BE                     l2280:
  8248  15BE  086B               	movf	___fladd@aexp,w
  8249  15BF  1903               	btfsc	3,2
  8250  15C0  2DC2               	goto	u3101
  8251  15C1  2DC3               	goto	u3100
  8252  15C2                     u3101:
  8253  15C2  2DD3               	goto	l2290
  8254  15C3                     u3100:
  8255  15C3                     l2282:
  8256  15C3  0A6B               	incf	___fladd@aexp,w
  8257  15C4  1D03               	btfss	3,2
  8258  15C5  2DC7               	goto	u3111
  8259  15C6  2DC8               	goto	u3110
  8260  15C7                     u3111:
  8261  15C7  2DD0               	goto	l2286
  8262  15C8                     u3110:
  8263  15C8                     l2284:
  8264  15C8  3000               	movlw	0
  8265  15C9  00E1               	movwf	___fladd@a+3
  8266  15CA  3000               	movlw	0
  8267  15CB  00E0               	movwf	___fladd@a+2
  8268  15CC  3000               	movlw	0
  8269  15CD  00DF               	movwf	___fladd@a+1
  8270  15CE  3000               	movlw	0
  8271  15CF  00DE               	movwf	___fladd@a
  8272  15D0                     l2286:
  8273  15D0  17E0               	bsf	___fladd@a+2,7
  8274  15D1                     l2288:
  8275  15D1  01E1               	clrf	___fladd@a+3
  8276  15D2  2DDB               	goto	l636
  8277  15D3                     l2290:
  8278  15D3  3000               	movlw	0
  8279  15D4  00E1               	movwf	___fladd@a+3
  8280  15D5  3000               	movlw	0
  8281  15D6  00E0               	movwf	___fladd@a+2
  8282  15D7  3000               	movlw	0
  8283  15D8  00DF               	movwf	___fladd@a+1
  8284  15D9  3000               	movlw	0
  8285  15DA  00DE               	movwf	___fladd@a
  8286  15DB                     l636:
  8287  15DB  086C               	movf	___fladd@bexp,w
  8288  15DC  026B               	subwf	___fladd@aexp,w
  8289  15DD  1803               	skipnc
  8290  15DE  2DE0               	goto	u3121
  8291  15DF  2DE1               	goto	u3120
  8292  15E0                     u3121:
  8293  15E0  2E25               	goto	l2326
  8294  15E1                     u3120:
  8295  15E1                     l2292:
  8296  15E1  1F6A               	btfss	___fladd@signs,6
  8297  15E2  2DE4               	goto	u3131
  8298  15E3  2DE5               	goto	u3130
  8299  15E4                     u3131:
  8300  15E4  2DE9               	goto	l2296
  8301  15E5                     u3130:
  8302  15E5                     l2294:
  8303  15E5  3080               	movlw	128
  8304  15E6  00E2               	movwf	??___fladd
  8305  15E7  0862               	movf	??___fladd,w
  8306  15E8  06EA               	xorwf	___fladd@signs,f
  8307  15E9                     l2296:
  8308  15E9  086C               	movf	___fladd@bexp,w
  8309  15EA  00E2               	movwf	??___fladd
  8310  15EB  0862               	movf	??___fladd,w
  8311  15EC  00ED               	movwf	___fladd@grs
  8312  15ED                     l2298:
  8313  15ED  086B               	movf	___fladd@aexp,w
  8314  15EE  00E2               	movwf	??___fladd
  8315  15EF  0862               	movf	??___fladd,w
  8316  15F0  00EC               	movwf	___fladd@bexp
  8317  15F1                     l2300:
  8318  15F1  086D               	movf	___fladd@grs,w
  8319  15F2  00E2               	movwf	??___fladd
  8320  15F3  0862               	movf	??___fladd,w
  8321  15F4  00EB               	movwf	___fladd@aexp
  8322  15F5                     l2302:
  8323  15F5  085A               	movf	___fladd@b,w
  8324  15F6  00E2               	movwf	??___fladd
  8325  15F7  0862               	movf	??___fladd,w
  8326  15F8  00ED               	movwf	___fladd@grs
  8327  15F9                     l2304:
  8328  15F9  085E               	movf	___fladd@a,w
  8329  15FA  00E2               	movwf	??___fladd
  8330  15FB  0862               	movf	??___fladd,w
  8331  15FC  00DA               	movwf	___fladd@b
  8332  15FD                     l2306:
  8333  15FD  086D               	movf	___fladd@grs,w
  8334  15FE  00E2               	movwf	??___fladd
  8335  15FF  0862               	movf	??___fladd,w
  8336  1600  00DE               	movwf	___fladd@a
  8337  1601                     l2308:
  8338  1601  085B               	movf	___fladd@b+1,w
  8339  1602  00E2               	movwf	??___fladd
  8340  1603  0862               	movf	??___fladd,w
  8341  1604  00ED               	movwf	___fladd@grs
  8342  1605                     l2310:
  8343  1605  085F               	movf	___fladd@a+1,w
  8344  1606  00E2               	movwf	??___fladd
  8345  1607  0862               	movf	??___fladd,w
  8346  1608  00DB               	movwf	___fladd@b+1
  8347  1609                     l2312:
  8348  1609  086D               	movf	___fladd@grs,w
  8349  160A  00E2               	movwf	??___fladd
  8350  160B  0862               	movf	??___fladd,w
  8351  160C  00DF               	movwf	___fladd@a+1
  8352  160D                     l2314:
  8353  160D  085C               	movf	___fladd@b+2,w
  8354  160E  00E2               	movwf	??___fladd
  8355  160F  0862               	movf	??___fladd,w
  8356  1610  00ED               	movwf	___fladd@grs
  8357  1611                     l2316:
  8358  1611  0860               	movf	___fladd@a+2,w
  8359  1612  00E2               	movwf	??___fladd
  8360  1613  0862               	movf	??___fladd,w
  8361  1614  00DC               	movwf	___fladd@b+2
  8362  1615                     l2318:
  8363  1615  086D               	movf	___fladd@grs,w
  8364  1616  00E2               	movwf	??___fladd
  8365  1617  0862               	movf	??___fladd,w
  8366  1618  00E0               	movwf	___fladd@a+2
  8367  1619                     l2320:
  8368  1619  085D               	movf	___fladd@b+3,w
  8369  161A  00E2               	movwf	??___fladd
  8370  161B  0862               	movf	??___fladd,w
  8371  161C  00ED               	movwf	___fladd@grs
  8372  161D                     l2322:
  8373  161D  0861               	movf	___fladd@a+3,w
  8374  161E  00E2               	movwf	??___fladd
  8375  161F  0862               	movf	??___fladd,w
  8376  1620  00DD               	movwf	___fladd@b+3
  8377  1621                     l2324:
  8378  1621  086D               	movf	___fladd@grs,w
  8379  1622  00E2               	movwf	??___fladd
  8380  1623  0862               	movf	??___fladd,w
  8381  1624  00E1               	movwf	___fladd@a+3
  8382  1625                     l2326:
  8383  1625  01ED               	clrf	___fladd@grs
  8384  1626                     l2328:
  8385  1626  086B               	movf	___fladd@aexp,w
  8386  1627  00E2               	movwf	??___fladd
  8387  1628  01E3               	clrf	??___fladd+1
  8388  1629  0863               	movf	??___fladd+1,w
  8389  162A  00E5               	movwf	??___fladd+3
  8390  162B  086C               	movf	___fladd@bexp,w
  8391  162C  0262               	subwf	??___fladd,w
  8392  162D  00E4               	movwf	??___fladd+2
  8393  162E  1C03               	skipc
  8394  162F  03E5               	decf	??___fladd+3,f
  8395  1630  0865               	movf	??___fladd+3,w
  8396  1631  3A80               	xorlw	128
  8397  1632  00FF               	movwf	btemp+1
  8398  1633  3080               	movlw	128
  8399  1634  027F               	subwf	btemp+1,w
  8400  1635  1D03               	skipz
  8401  1636  2E39               	goto	u3145
  8402  1637  301A               	movlw	26
  8403  1638  0264               	subwf	??___fladd+2,w
  8404  1639                     u3145:
  8405  1639  1C03               	skipc
  8406  163A  2E3C               	goto	u3141
  8407  163B  2E3D               	goto	u3140
  8408  163C                     u3141:
  8409  163C  2E7A               	goto	l2344
  8410  163D                     u3140:
  8411  163D                     l2330:
  8412  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8413  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8414  163F  085D               	movf	___fladd@b+3,w
  8415  1640  045C               	iorwf	___fladd@b+2,w
  8416  1641  045B               	iorwf	___fladd@b+1,w
  8417  1642  045A               	iorwf	___fladd@b,w
  8418  1643  1D03               	skipz
  8419  1644  2E46               	goto	u3151
  8420  1645  2E48               	goto	u3150
  8421  1646                     u3151:
  8422  1646  3001               	movlw	1
  8423  1647  2E49               	goto	u3160
  8424  1648                     u3150:
  8425  1648  3000               	movlw	0
  8426  1649                     u3160:
  8427  1649  00E2               	movwf	??___fladd
  8428  164A  0862               	movf	??___fladd,w
  8429  164B  00ED               	movwf	___fladd@grs
  8430  164C  3000               	movlw	0
  8431  164D  00DD               	movwf	___fladd@b+3
  8432  164E  3000               	movlw	0
  8433  164F  00DC               	movwf	___fladd@b+2
  8434  1650  3000               	movlw	0
  8435  1651  00DB               	movwf	___fladd@b+1
  8436  1652  3000               	movlw	0
  8437  1653  00DA               	movwf	___fladd@b
  8438  1654  086B               	movf	___fladd@aexp,w
  8439  1655  00E2               	movwf	??___fladd
  8440  1656  0862               	movf	??___fladd,w
  8441  1657  00EC               	movwf	___fladd@bexp
  8442  1658  2E82               	goto	l640
  8443  1659                     l642:
  8444  1659  1C6D               	btfss	___fladd@grs,0
  8445  165A  2E5C               	goto	u3171
  8446  165B  2E5D               	goto	u3170
  8447  165C                     u3171:
  8448  165C  2E66               	goto	l2334
  8449  165D                     u3170:
  8450  165D                     l2332:
  8451  165D  086D               	movf	___fladd@grs,w
  8452  165E  00E2               	movwf	??___fladd
  8453  165F  1003               	clrc
  8454  1660  0C62               	rrf	??___fladd,w
  8455  1661  3801               	iorlw	1
  8456  1662  00E3               	movwf	??___fladd+1
  8457  1663  0863               	movf	??___fladd+1,w
  8458  1664  00ED               	movwf	___fladd@grs
  8459  1665  2E68               	goto	l2336
  8460  1666                     l2334:
  8461  1666  1003               	clrc
  8462  1667  0CED               	rrf	___fladd@grs,f
  8463  1668                     l2336:
  8464  1668  1C5A               	btfss	___fladd@b,0
  8465  1669  2E6B               	goto	u3181
  8466  166A  2E6C               	goto	u3180
  8467  166B                     u3181:
  8468  166B  2E6D               	goto	l2340
  8469  166C                     u3180:
  8470  166C                     l2338:
  8471  166C  17ED               	bsf	___fladd@grs,7
  8472  166D                     l2340:
  8473  166D  3001               	movlw	1
  8474  166E  00E2               	movwf	??___fladd
  8475  166F                     u3195:
  8476  166F  0D5D               	rlf	___fladd@b+3,w
  8477  1670  0CDD               	rrf	___fladd@b+3,f
  8478  1671  0CDC               	rrf	___fladd@b+2,f
  8479  1672  0CDB               	rrf	___fladd@b+1,f
  8480  1673  0CDA               	rrf	___fladd@b,f
  8481  1674  0BE2               	decfsz	??___fladd& (0+127),f
  8482  1675  2E6F               	goto	u3195
  8483  1676                     l2342:
  8484  1676  3001               	movlw	1
  8485  1677  00E2               	movwf	??___fladd
  8486  1678  0862               	movf	??___fladd,w
  8487  1679  07EC               	addwf	___fladd@bexp,f
  8488  167A                     l2344:
  8489  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8490  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8491  167C  086B               	movf	___fladd@aexp,w
  8492  167D  026C               	subwf	___fladd@bexp,w
  8493  167E  1C03               	skipc
  8494  167F  2E81               	goto	u3201
  8495  1680  2E82               	goto	u3200
  8496  1681                     u3201:
  8497  1681  2E59               	goto	l642
  8498  1682                     u3200:
  8499  1682                     l640:
  8500  1682  1B6A               	btfsc	___fladd@signs,6
  8501  1683  2E85               	goto	u3211
  8502  1684  2E86               	goto	u3210
  8503  1685                     u3211:
  8504  1685  2ED1               	goto	l2370
  8505  1686                     u3210:
  8506  1686                     l2346:
  8507  1686  086C               	movf	___fladd@bexp,w
  8508  1687  1D03               	btfss	3,2
  8509  1688  2E8A               	goto	u3221
  8510  1689  2E8B               	goto	u3220
  8511  168A                     u3221:
  8512  168A  2E94               	goto	l2352
  8513  168B                     u3220:
  8514  168B                     l2348:
  8515  168B  3000               	movlw	0
  8516  168C  00DD               	movwf	?___fladd+3
  8517  168D  3000               	movlw	0
  8518  168E  00DC               	movwf	?___fladd+2
  8519  168F  3000               	movlw	0
  8520  1690  00DB               	movwf	?___fladd+1
  8521  1691  3000               	movlw	0
  8522  1692  00DA               	movwf	?___fladd
  8523  1693  2FFF               	goto	l649
  8524  1694                     l2352:
  8525  1694  085E               	movf	___fladd@a,w
  8526  1695  07DA               	addwf	___fladd@b,f
  8527  1696  085F               	movf	___fladd@a+1,w
  8528  1697  1103               	clrz
  8529  1698  1803               	skipnc
  8530  1699  3E01               	addlw	1
  8531  169A  1903               	skipnz
  8532  169B  2E9D               	goto	u3231
  8533  169C  07DB               	addwf	___fladd@b+1,f
  8534  169D                     u3231:
  8535  169D  0860               	movf	___fladd@a+2,w
  8536  169E  1103               	clrz
  8537  169F  1803               	skipnc
  8538  16A0  3E01               	addlw	1
  8539  16A1  1903               	skipnz
  8540  16A2  2EA4               	goto	u3232
  8541  16A3  07DC               	addwf	___fladd@b+2,f
  8542  16A4                     u3232:
  8543  16A4  0861               	movf	___fladd@a+3,w
  8544  16A5  1103               	clrz
  8545  16A6  1803               	skipnc
  8546  16A7  3E01               	addlw	1
  8547  16A8  1903               	skipnz
  8548  16A9  2EAB               	goto	u3233
  8549  16AA  07DD               	addwf	___fladd@b+3,f
  8550  16AB                     u3233:
  8551  16AB                     l2354:
  8552  16AB  1C5D               	btfss	___fladd@b+3,0
  8553  16AC  2EAE               	goto	u3241
  8554  16AD  2EAF               	goto	u3240
  8555  16AE                     u3241:
  8556  16AE  2F85               	goto	l2404
  8557  16AF                     u3240:
  8558  16AF                     l2356:
  8559  16AF  1C6D               	btfss	___fladd@grs,0
  8560  16B0  2EB2               	goto	u3251
  8561  16B1  2EB3               	goto	u3250
  8562  16B2                     u3251:
  8563  16B2  2EBC               	goto	l2360
  8564  16B3                     u3250:
  8565  16B3                     l2358:
  8566  16B3  086D               	movf	___fladd@grs,w
  8567  16B4  00E2               	movwf	??___fladd
  8568  16B5  1003               	clrc
  8569  16B6  0C62               	rrf	??___fladd,w
  8570  16B7  3801               	iorlw	1
  8571  16B8  00E3               	movwf	??___fladd+1
  8572  16B9  0863               	movf	??___fladd+1,w
  8573  16BA  00ED               	movwf	___fladd@grs
  8574  16BB  2EBE               	goto	l2362
  8575  16BC                     l2360:
  8576  16BC  1003               	clrc
  8577  16BD  0CED               	rrf	___fladd@grs,f
  8578  16BE                     l2362:
  8579  16BE  1C5A               	btfss	___fladd@b,0
  8580  16BF  2EC1               	goto	u3261
  8581  16C0  2EC2               	goto	u3260
  8582  16C1                     u3261:
  8583  16C1  2EC3               	goto	l2366
  8584  16C2                     u3260:
  8585  16C2                     l2364:
  8586  16C2  17ED               	bsf	___fladd@grs,7
  8587  16C3                     l2366:
  8588  16C3  3001               	movlw	1
  8589  16C4  00E2               	movwf	??___fladd
  8590  16C5                     u3275:
  8591  16C5  0D5D               	rlf	___fladd@b+3,w
  8592  16C6  0CDD               	rrf	___fladd@b+3,f
  8593  16C7  0CDC               	rrf	___fladd@b+2,f
  8594  16C8  0CDB               	rrf	___fladd@b+1,f
  8595  16C9  0CDA               	rrf	___fladd@b,f
  8596  16CA  0BE2               	decfsz	??___fladd& (0+127),f
  8597  16CB  2EC5               	goto	u3275
  8598  16CC                     l2368:
  8599  16CC  3001               	movlw	1
  8600  16CD  00E2               	movwf	??___fladd
  8601  16CE  0862               	movf	??___fladd,w
  8602  16CF  07EC               	addwf	___fladd@bexp,f
  8603  16D0  2F85               	goto	l2404
  8604  16D1                     l2370:
  8605  16D1  085D               	movf	___fladd@b+3,w
  8606  16D2  3A80               	xorlw	128
  8607  16D3  00FF               	movwf	btemp+1
  8608  16D4  0861               	movf	___fladd@a+3,w
  8609  16D5  3A80               	xorlw	128
  8610  16D6  027F               	subwf	btemp+1,w
  8611  16D7  1D03               	skipz
  8612  16D8  2EE3               	goto	u3283
  8613  16D9  0860               	movf	___fladd@a+2,w
  8614  16DA  025C               	subwf	___fladd@b+2,w
  8615  16DB  1D03               	skipz
  8616  16DC  2EE3               	goto	u3283
  8617  16DD  085F               	movf	___fladd@a+1,w
  8618  16DE  025B               	subwf	___fladd@b+1,w
  8619  16DF  1D03               	skipz
  8620  16E0  2EE3               	goto	u3283
  8621  16E1  085E               	movf	___fladd@a,w
  8622  16E2  025A               	subwf	___fladd@b,w
  8623  16E3                     u3283:
  8624  16E3  1803               	skipnc
  8625  16E4  2EE6               	goto	u3281
  8626  16E5  2EE7               	goto	u3280
  8627  16E6                     u3281:
  8628  16E6  2F3F               	goto	l2380
  8629  16E7                     u3280:
  8630  16E7                     l2372:
  8631  16E7  30FF               	movlw	255
  8632  16E8  00E2               	movwf	??___fladd
  8633  16E9  30FF               	movlw	255
  8634  16EA  00E3               	movwf	??___fladd+1
  8635  16EB  30FF               	movlw	255
  8636  16EC  00E4               	movwf	??___fladd+2
  8637  16ED  30FF               	movlw	255
  8638  16EE  00E5               	movwf	??___fladd+3
  8639  16EF  085E               	movf	___fladd@a,w
  8640  16F0  00E6               	movwf	??___fladd+4
  8641  16F1  085F               	movf	___fladd@a+1,w
  8642  16F2  00E7               	movwf	??___fladd+5
  8643  16F3  0860               	movf	___fladd@a+2,w
  8644  16F4  00E8               	movwf	??___fladd+6
  8645  16F5  0861               	movf	___fladd@a+3,w
  8646  16F6  00E9               	movwf	??___fladd+7
  8647  16F7  085A               	movf	___fladd@b,w
  8648  16F8  02E6               	subwf	??___fladd+4,f
  8649  16F9  085B               	movf	___fladd@b+1,w
  8650  16FA  1C03               	skipc
  8651  16FB  0F5B               	incfsz	___fladd@b+1,w
  8652  16FC  2EFE               	goto	u3291
  8653  16FD  2EFF               	goto	u3292
  8654  16FE                     u3291:
  8655  16FE  02E7               	subwf	??___fladd+5,f
  8656  16FF                     u3292:
  8657  16FF  085C               	movf	___fladd@b+2,w
  8658  1700  1C03               	skipc
  8659  1701  0F5C               	incfsz	___fladd@b+2,w
  8660  1702  2F04               	goto	u3293
  8661  1703  2F05               	goto	u3294
  8662  1704                     u3293:
  8663  1704  02E8               	subwf	??___fladd+6,f
  8664  1705                     u3294:
  8665  1705  085D               	movf	___fladd@b+3,w
  8666  1706  1C03               	skipc
  8667  1707  0F5D               	incfsz	___fladd@b+3,w
  8668  1708  2F0A               	goto	u3295
  8669  1709  2F0B               	goto	u3296
  8670  170A                     u3295:
  8671  170A  02E9               	subwf	??___fladd+7,f
  8672  170B                     u3296:
  8673  170B  0866               	movf	??___fladd+4,w
  8674  170C  07E2               	addwf	??___fladd,f
  8675  170D  0867               	movf	??___fladd+5,w
  8676  170E  1803               	skipnc
  8677  170F  0F67               	incfsz	??___fladd+5,w
  8678  1710  2F12               	goto	u3300
  8679  1711  2F13               	goto	u3301
  8680  1712                     u3300:
  8681  1712  07E3               	addwf	??___fladd+1,f
  8682  1713                     u3301:
  8683  1713  0868               	movf	??___fladd+6,w
  8684  1714  1803               	skipnc
  8685  1715  0F68               	incfsz	??___fladd+6,w
  8686  1716  2F18               	goto	u3302
  8687  1717  2F19               	goto	u3303
  8688  1718                     u3302:
  8689  1718  07E4               	addwf	??___fladd+2,f
  8690  1719                     u3303:
  8691  1719  0869               	movf	??___fladd+7,w
  8692  171A  1803               	skipnc
  8693  171B  0A69               	incf	??___fladd+7,w
  8694  171C  07E5               	addwf	??___fladd+3,f
  8695  171D  0865               	movf	??___fladd+3,w
  8696  171E  00DD               	movwf	___fladd@b+3
  8697  171F  0864               	movf	??___fladd+2,w
  8698  1720  00DC               	movwf	___fladd@b+2
  8699  1721  0863               	movf	??___fladd+1,w
  8700  1722  00DB               	movwf	___fladd@b+1
  8701  1723  0862               	movf	??___fladd,w
  8702  1724  00DA               	movwf	___fladd@b
  8703  1725                     l2374:
  8704  1725  3080               	movlw	128
  8705  1726  00E2               	movwf	??___fladd
  8706  1727  0862               	movf	??___fladd,w
  8707  1728  06EA               	xorwf	___fladd@signs,f
  8708  1729  09ED               	comf	___fladd@grs,f
  8709  172A  0AED               	incf	___fladd@grs,f
  8710  172B                     l2376:
  8711  172B  086D               	movf	___fladd@grs,w
  8712  172C  1D03               	btfss	3,2
  8713  172D  2F2F               	goto	u3311
  8714  172E  2F30               	goto	u3310
  8715  172F                     u3311:
  8716  172F  2F4D               	goto	l657
  8717  1730                     u3310:
  8718  1730                     l2378:
  8719  1730  3001               	movlw	1
  8720  1731  07DA               	addwf	___fladd@b,f
  8721  1732  3000               	movlw	0
  8722  1733  1803               	skipnc
  8723  1734  3001               	movlw	1
  8724  1735  07DB               	addwf	___fladd@b+1,f
  8725  1736  3000               	movlw	0
  8726  1737  1803               	skipnc
  8727  1738  3001               	movlw	1
  8728  1739  07DC               	addwf	___fladd@b+2,f
  8729  173A  3000               	movlw	0
  8730  173B  1803               	skipnc
  8731  173C  3001               	movlw	1
  8732  173D  07DD               	addwf	___fladd@b+3,f
  8733  173E  2F4D               	goto	l657
  8734  173F                     l2380:
  8735  173F  085E               	movf	___fladd@a,w
  8736  1740  02DA               	subwf	___fladd@b,f
  8737  1741  085F               	movf	___fladd@a+1,w
  8738  1742  1C03               	skipc
  8739  1743  0F5F               	incfsz	___fladd@a+1,w
  8740  1744  02DB               	subwf	___fladd@b+1,f
  8741  1745  0860               	movf	___fladd@a+2,w
  8742  1746  1C03               	skipc
  8743  1747  0F60               	incfsz	___fladd@a+2,w
  8744  1748  02DC               	subwf	___fladd@b+2,f
  8745  1749  0861               	movf	___fladd@a+3,w
  8746  174A  1C03               	skipc
  8747  174B  0F61               	incfsz	___fladd@a+3,w
  8748  174C  02DD               	subwf	___fladd@b+3,f
  8749  174D                     l657:
  8750  174D  085D               	movf	___fladd@b+3,w
  8751  174E  045C               	iorwf	___fladd@b+2,w
  8752  174F  045B               	iorwf	___fladd@b+1,w
  8753  1750  045A               	iorwf	___fladd@b,w
  8754  1751  1D03               	skipz
  8755  1752  2F54               	goto	u3321
  8756  1753  2F55               	goto	u3320
  8757  1754                     u3321:
  8758  1754  2F81               	goto	l2402
  8759  1755                     u3320:
  8760  1755                     l2382:
  8761  1755  086D               	movf	___fladd@grs,w
  8762  1756  1D03               	btfss	3,2
  8763  1757  2F59               	goto	u3331
  8764  1758  2F5A               	goto	u3330
  8765  1759                     u3331:
  8766  1759  2F81               	goto	l2402
  8767  175A                     u3330:
  8768  175A                     l2384:
  8769  175A  3000               	movlw	0
  8770  175B  00DD               	movwf	?___fladd+3
  8771  175C  3000               	movlw	0
  8772  175D  00DC               	movwf	?___fladd+2
  8773  175E  3000               	movlw	0
  8774  175F  00DB               	movwf	?___fladd+1
  8775  1760  3000               	movlw	0
  8776  1761  00DA               	movwf	?___fladd
  8777  1762  2FFF               	goto	l649
  8778  1763                     l2388:
  8779  1763  3001               	movlw	1
  8780  1764  00E2               	movwf	??___fladd
  8781  1765                     u3345:
  8782  1765  1003               	clrc
  8783  1766  0DDA               	rlf	___fladd@b,f
  8784  1767  0DDB               	rlf	___fladd@b+1,f
  8785  1768  0DDC               	rlf	___fladd@b+2,f
  8786  1769  0DDD               	rlf	___fladd@b+3,f
  8787  176A  0BE2               	decfsz	??___fladd,f
  8788  176B  2F65               	goto	u3345
  8789  176C                     l2390:
  8790  176C  1FED               	btfss	___fladd@grs,7
  8791  176D  2F6F               	goto	u3351
  8792  176E  2F70               	goto	u3350
  8793  176F                     u3351:
  8794  176F  2F71               	goto	l661
  8795  1770                     u3350:
  8796  1770                     l2392:
  8797  1770  145A               	bsf	___fladd@b,0
  8798  1771                     l661:
  8799  1771  1C6D               	btfss	___fladd@grs,0
  8800  1772  2F74               	goto	u3361
  8801  1773  2F75               	goto	u3360
  8802  1774                     u3361:
  8803  1774  2F78               	goto	l2396
  8804  1775                     u3360:
  8805  1775                     l2394:
  8806  1775  1403               	setc
  8807  1776  0DED               	rlf	___fladd@grs,f
  8808  1777  2F7A               	goto	l2398
  8809  1778                     l2396:
  8810  1778  1003               	clrc
  8811  1779  0DED               	rlf	___fladd@grs,f
  8812  177A                     l2398:
  8813  177A  086C               	movf	___fladd@bexp,w
  8814  177B  1903               	btfsc	3,2
  8815  177C  2F7E               	goto	u3371
  8816  177D  2F7F               	goto	u3370
  8817  177E                     u3371:
  8818  177E  2F81               	goto	l2402
  8819  177F                     u3370:
  8820  177F                     l2400:
  8821  177F  3001               	movlw	1
  8822  1780  02EC               	subwf	___fladd@bexp,f
  8823  1781                     l2402:
  8824  1781  1FDC               	btfss	___fladd@b+2,7
  8825  1782  2F84               	goto	u3381
  8826  1783  2F85               	goto	u3380
  8827  1784                     u3381:
  8828  1784  2F63               	goto	l2388
  8829  1785                     u3380:
  8830  1785                     l2404:
  8831  1785  01EB               	clrf	___fladd@aexp
  8832  1786                     l2406:
  8833  1786  1FED               	btfss	___fladd@grs,7
  8834  1787  2F89               	goto	u3391
  8835  1788  2F8A               	goto	u3390
  8836  1789                     u3391:
  8837  1789  2F98               	goto	l2414
  8838  178A                     u3390:
  8839  178A                     l2408:
  8840  178A  086D               	movf	___fladd@grs,w
  8841  178B  397F               	andlw	127
  8842  178C  1903               	btfsc	3,2
  8843  178D  2F8F               	goto	u3401
  8844  178E  2F90               	goto	u3400
  8845  178F                     u3401:
  8846  178F  2F93               	goto	l667
  8847  1790                     u3400:
  8848  1790                     l2410:
  8849  1790  01EB               	clrf	___fladd@aexp
  8850  1791  0AEB               	incf	___fladd@aexp,f
  8851  1792  2F98               	goto	l2414
  8852  1793                     l667:
  8853  1793  1C5A               	btfss	___fladd@b,0
  8854  1794  2F96               	goto	u3411
  8855  1795  2F97               	goto	u3410
  8856  1796                     u3411:
  8857  1796  2F98               	goto	l2414
  8858  1797                     u3410:
  8859  1797  2F90               	goto	l2410
  8860  1798                     l2414:
  8861  1798  086B               	movf	___fladd@aexp,w
  8862  1799  1903               	btfsc	3,2
  8863  179A  2F9C               	goto	u3421
  8864  179B  2F9D               	goto	u3420
  8865  179C                     u3421:
  8866  179C  2FD1               	goto	l670
  8867  179D                     u3420:
  8868  179D                     l2416:
  8869  179D  3001               	movlw	1
  8870  179E  07DA               	addwf	___fladd@b,f
  8871  179F  3000               	movlw	0
  8872  17A0  1803               	skipnc
  8873  17A1  3001               	movlw	1
  8874  17A2  07DB               	addwf	___fladd@b+1,f
  8875  17A3  3000               	movlw	0
  8876  17A4  1803               	skipnc
  8877  17A5  3001               	movlw	1
  8878  17A6  07DC               	addwf	___fladd@b+2,f
  8879  17A7  3000               	movlw	0
  8880  17A8  1803               	skipnc
  8881  17A9  3001               	movlw	1
  8882  17AA  07DD               	addwf	___fladd@b+3,f
  8883  17AB                     l2418:
  8884  17AB  1C5D               	btfss	___fladd@b+3,0
  8885  17AC  2FAE               	goto	u3431
  8886  17AD  2FAF               	goto	u3430
  8887  17AE                     u3431:
  8888  17AE  2FD1               	goto	l670
  8889  17AF                     u3430:
  8890  17AF                     l2420:
  8891  17AF  085A               	movf	___fladd@b,w
  8892  17B0  00E2               	movwf	??___fladd
  8893  17B1  085B               	movf	___fladd@b+1,w
  8894  17B2  00E3               	movwf	??___fladd+1
  8895  17B3  085C               	movf	___fladd@b+2,w
  8896  17B4  00E4               	movwf	??___fladd+2
  8897  17B5  085D               	movf	___fladd@b+3,w
  8898  17B6  00E5               	movwf	??___fladd+3
  8899  17B7  3001               	movlw	1
  8900  17B8  00E6               	movwf	??___fladd+4
  8901  17B9                     u3445:
  8902  17B9  0D65               	rlf	??___fladd+3,w
  8903  17BA  0CE5               	rrf	??___fladd+3,f
  8904  17BB  0CE4               	rrf	??___fladd+2,f
  8905  17BC  0CE3               	rrf	??___fladd+1,f
  8906  17BD  0CE2               	rrf	??___fladd,f
  8907  17BE                     u3440:
  8908  17BE  0BE6               	decfsz	??___fladd+4,f
  8909  17BF  2FB9               	goto	u3445
  8910  17C0  0865               	movf	??___fladd+3,w
  8911  17C1  00DD               	movwf	___fladd@b+3
  8912  17C2  0864               	movf	??___fladd+2,w
  8913  17C3  00DC               	movwf	___fladd@b+2
  8914  17C4  0863               	movf	??___fladd+1,w
  8915  17C5  00DB               	movwf	___fladd@b+1
  8916  17C6  0862               	movf	??___fladd,w
  8917  17C7  00DA               	movwf	___fladd@b
  8918  17C8  0A6C               	incf	___fladd@bexp,w
  8919  17C9  1903               	btfsc	3,2
  8920  17CA  2FCC               	goto	u3451
  8921  17CB  2FCD               	goto	u3450
  8922  17CC                     u3451:
  8923  17CC  2FD1               	goto	l670
  8924  17CD                     u3450:
  8925  17CD                     l2422:
  8926  17CD  3001               	movlw	1
  8927  17CE  00E2               	movwf	??___fladd
  8928  17CF  0862               	movf	??___fladd,w
  8929  17D0  07EC               	addwf	___fladd@bexp,f
  8930  17D1                     l670:
  8931  17D1  0A6C               	incf	___fladd@bexp,w
  8932  17D2  1903               	btfsc	3,2
  8933  17D3  2FD5               	goto	u3461
  8934  17D4  2FD6               	goto	u3460
  8935  17D5                     u3461:
  8936  17D5  2FDB               	goto	l2426
  8937  17D6                     u3460:
  8938  17D6                     l2424:
  8939  17D6  086C               	movf	___fladd@bexp,w
  8940  17D7  1D03               	btfss	3,2
  8941  17D8  2FDA               	goto	u3471
  8942  17D9  2FDB               	goto	u3470
  8943  17DA                     u3471:
  8944  17DA  2FE9               	goto	l2432
  8945  17DB                     u3470:
  8946  17DB                     l2426:
  8947  17DB  3000               	movlw	0
  8948  17DC  00DD               	movwf	___fladd@b+3
  8949  17DD  3000               	movlw	0
  8950  17DE  00DC               	movwf	___fladd@b+2
  8951  17DF  3000               	movlw	0
  8952  17E0  00DB               	movwf	___fladd@b+1
  8953  17E1  3000               	movlw	0
  8954  17E2  00DA               	movwf	___fladd@b
  8955  17E3                     l2428:
  8956  17E3  086C               	movf	___fladd@bexp,w
  8957  17E4  1D03               	btfss	3,2
  8958  17E5  2FE7               	goto	u3481
  8959  17E6  2FE8               	goto	u3480
  8960  17E7                     u3481:
  8961  17E7  2FE9               	goto	l2432
  8962  17E8                     u3480:
  8963  17E8                     l2430:
  8964  17E8  01EA               	clrf	___fladd@signs
  8965  17E9                     l2432:
  8966  17E9  1C6C               	btfss	___fladd@bexp,0
  8967  17EA  2FEC               	goto	u3491
  8968  17EB  2FED               	goto	u3490
  8969  17EC                     u3491:
  8970  17EC  2FEF               	goto	l2436
  8971  17ED                     u3490:
  8972  17ED                     l2434:
  8973  17ED  17DC               	bsf	___fladd@b+2,7
  8974  17EE  2FF3               	goto	l678
  8975  17EF                     l2436:
  8976  17EF  307F               	movlw	127
  8977  17F0  00E2               	movwf	??___fladd
  8978  17F1  0862               	movf	??___fladd,w
  8979  17F2  05DC               	andwf	___fladd@b+2,f
  8980  17F3                     l678:
  8981  17F3  086C               	movf	___fladd@bexp,w
  8982  17F4  00E2               	movwf	??___fladd
  8983  17F5  1003               	clrc
  8984  17F6  0C62               	rrf	??___fladd,w
  8985  17F7  00E3               	movwf	??___fladd+1
  8986  17F8  0863               	movf	??___fladd+1,w
  8987  17F9  00DD               	movwf	___fladd@b+3
  8988  17FA                     l2438:
  8989  17FA  1FEA               	btfss	___fladd@signs,7
  8990  17FB  2FFD               	goto	u3501
  8991  17FC  2FFE               	goto	u3500
  8992  17FD                     u3501:
  8993  17FD  2FFF               	goto	l679
  8994  17FE                     u3500:
  8995  17FE                     l2440:
  8996  17FE  17DD               	bsf	___fladd@b+3,7
  8997  17FF                     l679:
  8998  17FF                     l649:
  8999  17FF  0008               	return
  9000  1800                     __end_of___fladd:
  9001                           
  9002                           	psect	text21
  9003  1BAC                     __ptext21:	
  9004 ;; *************** function ___flneg *****************
  9005 ;; Defined at:
  9006 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;  f1              4    5[COMMON] unsigned char 
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;		None
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  4    5[COMMON] unsigned char 
  9013 ;; Registers used:
  9014 ;;		wreg
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 0/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9020 ;;      Params:         4       0       0       0       0
  9021 ;;      Locals:         0       0       0       0       0
  9022 ;;      Temps:          0       0       0       0       0
  9023 ;;      Totals:         4       0       0       0       0
  9024 ;;Total ram usage:        4 bytes
  9025 ;; Hardware stack levels used:    1
  9026 ;; Hardware stack levels required when called:    2
  9027 ;; This function calls:
  9028 ;;		Nothing
  9029 ;; This function is called by:
  9030 ;;		_sprintf
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           
  9035                           ;psect for function ___flneg
  9036  1BAC                     ___flneg:
  9037  1BAC                     l2842:	
  9038                           ;incstack = 0
  9039                           ; Regs used in ___flneg: [wreg]
  9040                           
  9041  1BAC  0878               	movf	___flneg@f1+3,w
  9042  1BAD  0477               	iorwf	___flneg@f1+2,w
  9043  1BAE  0476               	iorwf	___flneg@f1+1,w
  9044  1BAF  0475               	iorwf	___flneg@f1,w
  9045  1BB0  1903               	skipnz
  9046  1BB1  2BB3               	goto	u4621
  9047  1BB2  2BB4               	goto	u4620
  9048  1BB3                     u4621:
  9049  1BB3  2BB6               	goto	l2846
  9050  1BB4                     u4620:
  9051  1BB4                     l2844:
  9052  1BB4  3080               	movlw	128
  9053  1BB5  06F8               	xorwf	___flneg@f1+3,f
  9054  1BB6                     l2846:
  9055  1BB6                     l508:
  9056  1BB6  0008               	return
  9057  1BB7                     __end_of___flneg:
  9058                           
  9059                           	psect	text22
  9060  1090                     __ptext22:	
  9061 ;; *************** function ___flge *****************
  9062 ;; Defined at:
  9063 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;  ff1             4    0[BANK0 ] unsigned char 
  9066 ;;  ff2             4    4[BANK0 ] unsigned char 
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;		None
  9069 ;; Return value:  Size  Location     Type
  9070 ;;		None               void
  9071 ;; Registers used:
  9072 ;;		wreg, status,2, status,0
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9078 ;;      Params:         0       8       0       0       0
  9079 ;;      Locals:         0       0       0       0       0
  9080 ;;      Temps:          4       0       0       0       0
  9081 ;;      Totals:         4       8       0       0       0
  9082 ;;Total ram usage:       12 bytes
  9083 ;; Hardware stack levels used:    1
  9084 ;; Hardware stack levels required when called:    2
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_sprintf
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           
  9093                           ;psect for function ___flge
  9094  1090                     ___flge:
  9095  1090                     l2822:	
  9096                           ;incstack = 0
  9097                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9098                           
  9099  1090  3000               	movlw	0
  9100  1091  1283               	bcf	3,5	;RP0=0, select bank0
  9101  1092  1303               	bcf	3,6	;RP1=0, select bank0
  9102  1093  0520               	andwf	___flge@ff1,w
  9103  1094  00F5               	movwf	??___flge
  9104  1095  3000               	movlw	0
  9105  1096  0521               	andwf	___flge@ff1+1,w
  9106  1097  00F6               	movwf	??___flge+1
  9107  1098  3080               	movlw	128
  9108  1099  0522               	andwf	___flge@ff1+2,w
  9109  109A  00F7               	movwf	??___flge+2
  9110  109B  307F               	movlw	127
  9111  109C  0523               	andwf	___flge@ff1+3,w
  9112  109D  00F8               	movwf	??___flge+3
  9113  109E  0878               	movf	??___flge+3,w
  9114  109F  0477               	iorwf	??___flge+2,w
  9115  10A0  0476               	iorwf	??___flge+1,w
  9116  10A1  0475               	iorwf	??___flge,w
  9117  10A2  1D03               	skipz
  9118  10A3  28A5               	goto	u4551
  9119  10A4  28A6               	goto	u4550
  9120  10A5                     u4551:
  9121  10A5  28AE               	goto	l500
  9122  10A6                     u4550:
  9123  10A6                     l2824:
  9124  10A6  3000               	movlw	0
  9125  10A7  00A3               	movwf	___flge@ff1+3
  9126  10A8  3000               	movlw	0
  9127  10A9  00A2               	movwf	___flge@ff1+2
  9128  10AA  3000               	movlw	0
  9129  10AB  00A1               	movwf	___flge@ff1+1
  9130  10AC  3000               	movlw	0
  9131  10AD  00A0               	movwf	___flge@ff1
  9132  10AE                     l500:
  9133  10AE  3000               	movlw	0
  9134  10AF  0524               	andwf	___flge@ff2,w
  9135  10B0  00F5               	movwf	??___flge
  9136  10B1  3000               	movlw	0
  9137  10B2  0525               	andwf	___flge@ff2+1,w
  9138  10B3  00F6               	movwf	??___flge+1
  9139  10B4  3080               	movlw	128
  9140  10B5  0526               	andwf	___flge@ff2+2,w
  9141  10B6  00F7               	movwf	??___flge+2
  9142  10B7  307F               	movlw	127
  9143  10B8  0527               	andwf	___flge@ff2+3,w
  9144  10B9  00F8               	movwf	??___flge+3
  9145  10BA  0878               	movf	??___flge+3,w
  9146  10BB  0477               	iorwf	??___flge+2,w
  9147  10BC  0476               	iorwf	??___flge+1,w
  9148  10BD  0475               	iorwf	??___flge,w
  9149  10BE  1D03               	skipz
  9150  10BF  28C1               	goto	u4561
  9151  10C0  28C2               	goto	u4560
  9152  10C1                     u4561:
  9153  10C1  28CA               	goto	l2828
  9154  10C2                     u4560:
  9155  10C2                     l2826:
  9156  10C2  3000               	movlw	0
  9157  10C3  00A7               	movwf	___flge@ff2+3
  9158  10C4  3000               	movlw	0
  9159  10C5  00A6               	movwf	___flge@ff2+2
  9160  10C6  3000               	movlw	0
  9161  10C7  00A5               	movwf	___flge@ff2+1
  9162  10C8  3000               	movlw	0
  9163  10C9  00A4               	movwf	___flge@ff2
  9164  10CA                     l2828:
  9165  10CA  1FA3               	btfss	___flge@ff1+3,7
  9166  10CB  28CD               	goto	u4571
  9167  10CC  28CE               	goto	u4570
  9168  10CD                     u4571:
  9169  10CD  28F2               	goto	l2832
  9170  10CE                     u4570:
  9171  10CE                     l2830:
  9172  10CE  3000               	movlw	0
  9173  10CF  00F5               	movwf	??___flge
  9174  10D0  3000               	movlw	0
  9175  10D1  00F6               	movwf	??___flge+1
  9176  10D2  3000               	movlw	0
  9177  10D3  00F7               	movwf	??___flge+2
  9178  10D4  3080               	movlw	128
  9179  10D5  00F8               	movwf	??___flge+3
  9180  10D6  0820               	movf	___flge@ff1,w
  9181  10D7  02F5               	subwf	??___flge,f
  9182  10D8  0821               	movf	___flge@ff1+1,w
  9183  10D9  1C03               	skipc
  9184  10DA  0F21               	incfsz	___flge@ff1+1,w
  9185  10DB  28DD               	goto	u4581
  9186  10DC  28DE               	goto	u4582
  9187  10DD                     u4581:
  9188  10DD  02F6               	subwf	??___flge+1,f
  9189  10DE                     u4582:
  9190  10DE  0822               	movf	___flge@ff1+2,w
  9191  10DF  1C03               	skipc
  9192  10E0  0F22               	incfsz	___flge@ff1+2,w
  9193  10E1  28E3               	goto	u4583
  9194  10E2  28E4               	goto	u4584
  9195  10E3                     u4583:
  9196  10E3  02F7               	subwf	??___flge+2,f
  9197  10E4                     u4584:
  9198  10E4  0823               	movf	___flge@ff1+3,w
  9199  10E5  1C03               	skipc
  9200  10E6  0F23               	incfsz	___flge@ff1+3,w
  9201  10E7  28E9               	goto	u4585
  9202  10E8  28EA               	goto	u4586
  9203  10E9                     u4585:
  9204  10E9  02F8               	subwf	??___flge+3,f
  9205  10EA                     u4586:
  9206  10EA  0878               	movf	??___flge+3,w
  9207  10EB  00A3               	movwf	___flge@ff1+3
  9208  10EC  0877               	movf	??___flge+2,w
  9209  10ED  00A2               	movwf	___flge@ff1+2
  9210  10EE  0876               	movf	??___flge+1,w
  9211  10EF  00A1               	movwf	___flge@ff1+1
  9212  10F0  0875               	movf	??___flge,w
  9213  10F1  00A0               	movwf	___flge@ff1
  9214  10F2                     l2832:
  9215  10F2  1FA7               	btfss	___flge@ff2+3,7
  9216  10F3  28F5               	goto	u4591
  9217  10F4  28F6               	goto	u4590
  9218  10F5                     u4591:
  9219  10F5  291A               	goto	l503
  9220  10F6                     u4590:
  9221  10F6                     l2834:
  9222  10F6  3000               	movlw	0
  9223  10F7  00F5               	movwf	??___flge
  9224  10F8  3000               	movlw	0
  9225  10F9  00F6               	movwf	??___flge+1
  9226  10FA  3000               	movlw	0
  9227  10FB  00F7               	movwf	??___flge+2
  9228  10FC  3080               	movlw	128
  9229  10FD  00F8               	movwf	??___flge+3
  9230  10FE  0824               	movf	___flge@ff2,w
  9231  10FF  02F5               	subwf	??___flge,f
  9232  1100  0825               	movf	___flge@ff2+1,w
  9233  1101  1C03               	skipc
  9234  1102  0F25               	incfsz	___flge@ff2+1,w
  9235  1103  2905               	goto	u4601
  9236  1104  2906               	goto	u4602
  9237  1105                     u4601:
  9238  1105  02F6               	subwf	??___flge+1,f
  9239  1106                     u4602:
  9240  1106  0826               	movf	___flge@ff2+2,w
  9241  1107  1C03               	skipc
  9242  1108  0F26               	incfsz	___flge@ff2+2,w
  9243  1109  290B               	goto	u4603
  9244  110A  290C               	goto	u4604
  9245  110B                     u4603:
  9246  110B  02F7               	subwf	??___flge+2,f
  9247  110C                     u4604:
  9248  110C  0827               	movf	___flge@ff2+3,w
  9249  110D  1C03               	skipc
  9250  110E  0F27               	incfsz	___flge@ff2+3,w
  9251  110F  2911               	goto	u4605
  9252  1110  2912               	goto	u4606
  9253  1111                     u4605:
  9254  1111  02F8               	subwf	??___flge+3,f
  9255  1112                     u4606:
  9256  1112  0878               	movf	??___flge+3,w
  9257  1113  00A7               	movwf	___flge@ff2+3
  9258  1114  0877               	movf	??___flge+2,w
  9259  1115  00A6               	movwf	___flge@ff2+2
  9260  1116  0876               	movf	??___flge+1,w
  9261  1117  00A5               	movwf	___flge@ff2+1
  9262  1118  0875               	movf	??___flge,w
  9263  1119  00A4               	movwf	___flge@ff2
  9264  111A                     l503:
  9265  111A  3080               	movlw	128
  9266  111B  06A3               	xorwf	___flge@ff1+3,f
  9267  111C  3080               	movlw	128
  9268  111D  06A7               	xorwf	___flge@ff2+3,f
  9269  111E  0827               	movf	___flge@ff2+3,w
  9270  111F  0223               	subwf	___flge@ff1+3,w
  9271  1120  1D03               	skipz
  9272  1121  292C               	goto	u4615
  9273  1122  0826               	movf	___flge@ff2+2,w
  9274  1123  0222               	subwf	___flge@ff1+2,w
  9275  1124  1D03               	skipz
  9276  1125  292C               	goto	u4615
  9277  1126  0825               	movf	___flge@ff2+1,w
  9278  1127  0221               	subwf	___flge@ff1+1,w
  9279  1128  1D03               	skipz
  9280  1129  292C               	goto	u4615
  9281  112A  0824               	movf	___flge@ff2,w
  9282  112B  0220               	subwf	___flge@ff1,w
  9283  112C                     u4615:
  9284  112C  1803               	skipnc
  9285  112D  292F               	goto	u4611
  9286  112E  2930               	goto	u4610
  9287  112F                     u4611:
  9288  112F  2932               	goto	l2838
  9289  1130                     u4610:
  9290  1130                     l2836:
  9291  1130  1003               	clrc
  9292  1131  2933               	goto	l504
  9293  1132                     l2838:
  9294  1132  1403               	setc
  9295  1133                     l504:
  9296  1133  0008               	return
  9297  1134                     __end_of___flge:
  9298                           
  9299                           	psect	text23
  9300  1DCC                     __ptext23:	
  9301 ;; *************** function ___fleq *****************
  9302 ;; Defined at:
  9303 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;  ff1             4    0[BANK0 ] unsigned char 
  9306 ;;  ff2             4    4[BANK0 ] unsigned char 
  9307 ;; Auto vars:     Size  Location     Type
  9308 ;;		None
  9309 ;; Return value:  Size  Location     Type
  9310 ;;		None               void
  9311 ;; Registers used:
  9312 ;;		wreg, status,2, status,0
  9313 ;; Tracked objects:
  9314 ;;		On entry : 0/0
  9315 ;;		On exit  : 0/0
  9316 ;;		Unchanged: 0/0
  9317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9318 ;;      Params:         0       8       0       0       0
  9319 ;;      Locals:         0       0       0       0       0
  9320 ;;      Temps:          4       0       0       0       0
  9321 ;;      Totals:         4       8       0       0       0
  9322 ;;Total ram usage:       12 bytes
  9323 ;; Hardware stack levels used:    1
  9324 ;; Hardware stack levels required when called:    2
  9325 ;; This function calls:
  9326 ;;		Nothing
  9327 ;; This function is called by:
  9328 ;;		_sprintf
  9329 ;; This function uses a non-reentrant model
  9330 ;;
  9331                           
  9332                           
  9333                           ;psect for function ___fleq
  9334  1DCC                     ___fleq:
  9335  1DCC                     l2810:	
  9336                           ;incstack = 0
  9337                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9338                           
  9339  1DCC  3000               	movlw	0
  9340  1DCD  1283               	bcf	3,5	;RP0=0, select bank0
  9341  1DCE  1303               	bcf	3,6	;RP1=0, select bank0
  9342  1DCF  0520               	andwf	___fleq@ff1,w
  9343  1DD0  00F5               	movwf	??___fleq
  9344  1DD1  3000               	movlw	0
  9345  1DD2  0521               	andwf	___fleq@ff1+1,w
  9346  1DD3  00F6               	movwf	??___fleq+1
  9347  1DD4  3080               	movlw	128
  9348  1DD5  0522               	andwf	___fleq@ff1+2,w
  9349  1DD6  00F7               	movwf	??___fleq+2
  9350  1DD7  307F               	movlw	127
  9351  1DD8  0523               	andwf	___fleq@ff1+3,w
  9352  1DD9  00F8               	movwf	??___fleq+3
  9353  1DDA  0878               	movf	??___fleq+3,w
  9354  1DDB  0477               	iorwf	??___fleq+2,w
  9355  1DDC  0476               	iorwf	??___fleq+1,w
  9356  1DDD  0475               	iorwf	??___fleq,w
  9357  1DDE  1D03               	skipz
  9358  1DDF  2DE1               	goto	u4521
  9359  1DE0  2DE2               	goto	u4520
  9360  1DE1                     u4521:
  9361  1DE1  2DEA               	goto	l495
  9362  1DE2                     u4520:
  9363  1DE2                     l2812:
  9364  1DE2  3000               	movlw	0
  9365  1DE3  00A3               	movwf	___fleq@ff1+3
  9366  1DE4  3000               	movlw	0
  9367  1DE5  00A2               	movwf	___fleq@ff1+2
  9368  1DE6  3000               	movlw	0
  9369  1DE7  00A1               	movwf	___fleq@ff1+1
  9370  1DE8  3000               	movlw	0
  9371  1DE9  00A0               	movwf	___fleq@ff1
  9372  1DEA                     l495:
  9373  1DEA  3000               	movlw	0
  9374  1DEB  0524               	andwf	___fleq@ff2,w
  9375  1DEC  00F5               	movwf	??___fleq
  9376  1DED  3000               	movlw	0
  9377  1DEE  0525               	andwf	___fleq@ff2+1,w
  9378  1DEF  00F6               	movwf	??___fleq+1
  9379  1DF0  3080               	movlw	128
  9380  1DF1  0526               	andwf	___fleq@ff2+2,w
  9381  1DF2  00F7               	movwf	??___fleq+2
  9382  1DF3  307F               	movlw	127
  9383  1DF4  0527               	andwf	___fleq@ff2+3,w
  9384  1DF5  00F8               	movwf	??___fleq+3
  9385  1DF6  0878               	movf	??___fleq+3,w
  9386  1DF7  0477               	iorwf	??___fleq+2,w
  9387  1DF8  0476               	iorwf	??___fleq+1,w
  9388  1DF9  0475               	iorwf	??___fleq,w
  9389  1DFA  1D03               	skipz
  9390  1DFB  2DFD               	goto	u4531
  9391  1DFC  2DFE               	goto	u4530
  9392  1DFD                     u4531:
  9393  1DFD  2E06               	goto	l496
  9394  1DFE                     u4530:
  9395  1DFE                     l2814:
  9396  1DFE  3000               	movlw	0
  9397  1DFF  00A7               	movwf	___fleq@ff2+3
  9398  1E00  3000               	movlw	0
  9399  1E01  00A6               	movwf	___fleq@ff2+2
  9400  1E02  3000               	movlw	0
  9401  1E03  00A5               	movwf	___fleq@ff2+1
  9402  1E04  3000               	movlw	0
  9403  1E05  00A4               	movwf	___fleq@ff2
  9404  1E06                     l496:
  9405  1E06  0827               	movf	___fleq@ff2+3,w
  9406  1E07  0623               	xorwf	___fleq@ff1+3,w
  9407  1E08  1D03               	skipz
  9408  1E09  2E14               	goto	u4545
  9409  1E0A  0826               	movf	___fleq@ff2+2,w
  9410  1E0B  0622               	xorwf	___fleq@ff1+2,w
  9411  1E0C  1D03               	skipz
  9412  1E0D  2E14               	goto	u4545
  9413  1E0E  0825               	movf	___fleq@ff2+1,w
  9414  1E0F  0621               	xorwf	___fleq@ff1+1,w
  9415  1E10  1D03               	skipz
  9416  1E11  2E14               	goto	u4545
  9417  1E12  0824               	movf	___fleq@ff2,w
  9418  1E13  0620               	xorwf	___fleq@ff1,w
  9419  1E14                     u4545:
  9420  1E14  1903               	skipnz
  9421  1E15  2E17               	goto	u4541
  9422  1E16  2E18               	goto	u4540
  9423  1E17                     u4541:
  9424  1E17  2E1A               	goto	l2818
  9425  1E18                     u4540:
  9426  1E18                     l2816:
  9427  1E18  1003               	clrc
  9428  1E19  2E1B               	goto	l497
  9429  1E1A                     l2818:
  9430  1E1A  1403               	setc
  9431  1E1B                     l497:
  9432  1E1B  0008               	return
  9433  1E1C                     __end_of___fleq:
  9434                           
  9435                           	psect	text24
  9436  1D40                     __ptext24:	
  9437 ;; *************** function _Lcd_Write_String *****************
  9438 ;; Defined at:
  9439 ;;		line 62 in file "./LibreriaPrueba.h"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  a               2    7[COMMON] PTR unsigned char 
  9442 ;;		 -> buffer(1), STR_3(6), STR_2(17), STR_1(10), 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;  i               2    3[BANK0 ] int 
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      void 
  9447 ;; Registers used:
  9448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9454 ;;      Params:         2       0       0       0       0
  9455 ;;      Locals:         0       2       0       0       0
  9456 ;;      Temps:          0       3       0       0       0
  9457 ;;      Totals:         2       5       0       0       0
  9458 ;;Total ram usage:        7 bytes
  9459 ;; Hardware stack levels used:    1
  9460 ;; Hardware stack levels required when called:    3
  9461 ;; This function calls:
  9462 ;;		_Lcd_Write_Char
  9463 ;; This function is called by:
  9464 ;;		_main
  9465 ;;		_conversion
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469                           
  9470                           ;psect for function _Lcd_Write_String
  9471  1D40                     _Lcd_Write_String:
  9472  1D40                     l2968:	
  9473                           ;incstack = 0
  9474                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9475                           
  9476                           
  9477                           ;./LibreriaPrueba.h: 62: void Lcd_Write_String(char *a);./LibreriaPrueba.h: 63: {;./Libr
      +                          eriaPrueba.h: 64:  int i;;./LibreriaPrueba.h: 65:  for(i=0;a[i]!='\0';i++)
  9478  1D40  1283               	bcf	3,5	;RP0=0, select bank0
  9479  1D41  1303               	bcf	3,6	;RP1=0, select bank0
  9480  1D42  01A3               	clrf	Lcd_Write_String@i
  9481  1D43  01A4               	clrf	Lcd_Write_String@i+1
  9482  1D44  2D69               	goto	l2974
  9483  1D45                     l2970:
  9484                           
  9485                           ;./LibreriaPrueba.h: 66:      Lcd_Write_Char(a[i]);
  9486  1D45  0823               	movf	Lcd_Write_String@i,w
  9487  1D46  0777               	addwf	Lcd_Write_String@a,w
  9488  1D47  00A1               	movwf	??_Lcd_Write_String+1
  9489  1D48  0878               	movf	Lcd_Write_String@a+1,w
  9490  1D49  00A0               	movwf	??_Lcd_Write_String
  9491  1D4A  1803               	skipnc
  9492  1D4B  0AA0               	incf	??_Lcd_Write_String,f
  9493  1D4C  1FA3               	btfss	Lcd_Write_String@i,7
  9494  1D4D  2D4F               	goto	u4950
  9495  1D4E  03A0               	decf	??_Lcd_Write_String,f
  9496  1D4F                     u4950:
  9497  1D4F  1283               	bcf	3,5	;RP0=0, select bank0
  9498  1D50  1303               	bcf	3,6	;RP1=0, select bank0
  9499  1D51  0820               	movf	??_Lcd_Write_String,w
  9500  1D52  00A2               	movwf	??_Lcd_Write_String+2
  9501  1D53  0822               	movf	??_Lcd_Write_String+2,w
  9502  1D54  00FF               	movwf	btemp+1
  9503  1D55  0821               	movf	??_Lcd_Write_String+1,w
  9504  1D56  0084               	movwf	4
  9505  1D57  120A  158A  2000  160A  158A  	fcall	stringtab
  9506  1D5C  160A  158A  23B7  160A  158A  	fcall	_Lcd_Write_Char
  9507  1D61                     l2972:
  9508  1D61  3001               	movlw	1
  9509  1D62  1283               	bcf	3,5	;RP0=0, select bank0
  9510  1D63  1303               	bcf	3,6	;RP1=0, select bank0
  9511  1D64  07A3               	addwf	Lcd_Write_String@i,f
  9512  1D65  1803               	skipnc
  9513  1D66  0AA4               	incf	Lcd_Write_String@i+1,f
  9514  1D67  3000               	movlw	0
  9515  1D68  07A4               	addwf	Lcd_Write_String@i+1,f
  9516  1D69                     l2974:
  9517  1D69  0823               	movf	Lcd_Write_String@i,w
  9518  1D6A  0777               	addwf	Lcd_Write_String@a,w
  9519  1D6B  00A1               	movwf	??_Lcd_Write_String+1
  9520  1D6C  0878               	movf	Lcd_Write_String@a+1,w
  9521  1D6D  00A0               	movwf	??_Lcd_Write_String
  9522  1D6E  1803               	skipnc
  9523  1D6F  0AA0               	incf	??_Lcd_Write_String,f
  9524  1D70  1FA3               	btfss	Lcd_Write_String@i,7
  9525  1D71  2D73               	goto	u4960
  9526  1D72  03A0               	decf	??_Lcd_Write_String,f
  9527  1D73                     u4960:
  9528  1D73  1283               	bcf	3,5	;RP0=0, select bank0
  9529  1D74  1303               	bcf	3,6	;RP1=0, select bank0
  9530  1D75  0820               	movf	??_Lcd_Write_String,w
  9531  1D76  00A2               	movwf	??_Lcd_Write_String+2
  9532  1D77  0822               	movf	??_Lcd_Write_String+2,w
  9533  1D78  00FF               	movwf	btemp+1
  9534  1D79  0821               	movf	??_Lcd_Write_String+1,w
  9535  1D7A  0084               	movwf	4
  9536  1D7B  120A  158A  2000  160A  158A  	fcall	stringtab
  9537  1D80  3A00               	xorlw	0
  9538  1D81  1D03               	skipz
  9539  1D82  2D84               	goto	u4971
  9540  1D83  2D85               	goto	u4970
  9541  1D84                     u4971:
  9542  1D84  2D45               	goto	l2970
  9543  1D85                     u4970:
  9544  1D85                     l83:
  9545  1D85  0008               	return
  9546  1D86                     __end_of_Lcd_Write_String:
  9547                           
  9548                           	psect	text25
  9549  1BB7                     __ptext25:	
  9550 ;; *************** function _Lcd_Write_Char *****************
  9551 ;; Defined at:
  9552 ;;		line 54 in file "./LibreriaPrueba.h"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;  a               1    wreg     unsigned char 
  9555 ;; Auto vars:     Size  Location     Type
  9556 ;;  a               1    6[COMMON] unsigned char 
  9557 ;; Return value:  Size  Location     Type
  9558 ;;                  1    wreg      void 
  9559 ;; Registers used:
  9560 ;;		wreg
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/0
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9566 ;;      Params:         0       0       0       0       0
  9567 ;;      Locals:         1       0       0       0       0
  9568 ;;      Temps:          1       0       0       0       0
  9569 ;;      Totals:         2       0       0       0       0
  9570 ;;Total ram usage:        2 bytes
  9571 ;; Hardware stack levels used:    1
  9572 ;; Hardware stack levels required when called:    2
  9573 ;; This function calls:
  9574 ;;		Nothing
  9575 ;; This function is called by:
  9576 ;;		_Lcd_Write_String
  9577 ;; This function uses a non-reentrant model
  9578 ;;
  9579                           
  9580                           
  9581                           ;psect for function _Lcd_Write_Char
  9582  1BB7                     _Lcd_Write_Char:
  9583                           
  9584                           ;incstack = 0
  9585                           ; Regs used in _Lcd_Write_Char: [wreg]
  9586                           ;Lcd_Write_Char@a stored from wreg
  9587  1BB7  00F6               	movwf	Lcd_Write_Char@a
  9588  1BB8                     l2590:
  9589                           
  9590                           ;./LibreriaPrueba.h: 55:     PORTDbits.RD2 = 1;
  9591  1BB8  1283               	bcf	3,5	;RP0=0, select bank0
  9592  1BB9  1303               	bcf	3,6	;RP1=0, select bank0
  9593  1BBA  1508               	bsf	8,2	;volatile
  9594  1BBB                     l2592:
  9595                           
  9596                           ;./LibreriaPrueba.h: 56:     PORTB = a;
  9597  1BBB  0876               	movf	Lcd_Write_Char@a,w
  9598  1BBC  0086               	movwf	6	;volatile
  9599  1BBD                     l2594:
  9600                           
  9601                           ;./LibreriaPrueba.h: 57:     PORTDbits.RD3=1;
  9602  1BBD  1588               	bsf	8,3	;volatile
  9603                           
  9604                           ;./LibreriaPrueba.h: 58:     _delay((unsigned long)((40)*(9000000/4000000.0)));
  9605  1BBE  301D               	movlw	29
  9606  1BBF  00F5               	movwf	??_Lcd_Write_Char
  9607  1BC0                     u5397:
  9608  1BC0  0BF5               	decfsz	??_Lcd_Write_Char,f
  9609  1BC1  2BC0               	goto	u5397
  9610  1BC2  2BC3               	nop2
  9611  1BC3                     l2596:
  9612                           
  9613                           ;./LibreriaPrueba.h: 59:     PORTDbits.RD3=0;
  9614  1BC3  1283               	bcf	3,5	;RP0=0, select bank0
  9615  1BC4  1303               	bcf	3,6	;RP1=0, select bank0
  9616  1BC5  1188               	bcf	8,3	;volatile
  9617  1BC6                     l77:
  9618  1BC6  0008               	return
  9619  1BC7                     __end_of_Lcd_Write_Char:
  9620                           
  9621                           	psect	text26
  9622  1C02                     __ptext26:	
  9623 ;; *************** function _Lcd_Set_Cursor *****************
  9624 ;; Defined at:
  9625 ;;		line 33 in file "./LibreriaPrueba.h"
  9626 ;; Parameters:    Size  Location     Type
  9627 ;;  a               1    wreg     unsigned char 
  9628 ;;  b               1    8[COMMON] unsigned char 
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;  a               1    1[BANK0 ] unsigned char 
  9631 ;;  temp            1    2[BANK0 ] unsigned char 
  9632 ;;  y               1    0        unsigned char 
  9633 ;;  z               1    0        unsigned char 
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  1    wreg      void 
  9636 ;; Registers used:
  9637 ;;		wreg, status,2, status,0, pclath, cstack
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9643 ;;      Params:         1       0       0       0       0
  9644 ;;      Locals:         0       2       0       0       0
  9645 ;;      Temps:          0       1       0       0       0
  9646 ;;      Totals:         1       3       0       0       0
  9647 ;;Total ram usage:        4 bytes
  9648 ;; Hardware stack levels used:    1
  9649 ;; Hardware stack levels required when called:    3
  9650 ;; This function calls:
  9651 ;;		_Lcd_Cmd
  9652 ;; This function is called by:
  9653 ;;		_main
  9654 ;;		_conversion
  9655 ;; This function uses a non-reentrant model
  9656 ;;
  9657                           
  9658                           
  9659                           ;psect for function _Lcd_Set_Cursor
  9660  1C02                     _Lcd_Set_Cursor:
  9661                           
  9662                           ;incstack = 0
  9663                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9664                           ;Lcd_Set_Cursor@a stored from wreg
  9665  1C02  1283               	bcf	3,5	;RP0=0, select bank0
  9666  1C03  1303               	bcf	3,6	;RP1=0, select bank0
  9667  1C04  00A1               	movwf	Lcd_Set_Cursor@a
  9668  1C05                     l2956:
  9669                           
  9670                           ;./LibreriaPrueba.h: 33: void Lcd_Set_Cursor(char a, char b);./LibreriaPrueba.h: 34: {;.
      +                          /LibreriaPrueba.h: 35:  char temp,z,y;;./LibreriaPrueba.h: 36:  if(a == 1)
  9671  1C05  0321               	decf	Lcd_Set_Cursor@a,w
  9672  1C06  1D03               	btfss	3,2
  9673  1C07  2C09               	goto	u4931
  9674  1C08  2C0A               	goto	u4930
  9675  1C09                     u4931:
  9676  1C09  2C16               	goto	l2962
  9677  1C0A                     u4930:
  9678  1C0A                     l2958:
  9679                           
  9680                           ;./LibreriaPrueba.h: 37:  {;./LibreriaPrueba.h: 38:    temp = 0x80 + b - 1;
  9681  1C0A  0878               	movf	Lcd_Set_Cursor@b,w
  9682  1C0B  3E7F               	addlw	127
  9683  1C0C  00A0               	movwf	??_Lcd_Set_Cursor
  9684  1C0D  0820               	movf	??_Lcd_Set_Cursor,w
  9685  1C0E  00A2               	movwf	Lcd_Set_Cursor@temp
  9686  1C0F                     l2960:
  9687                           
  9688                           ;./LibreriaPrueba.h: 41:   Lcd_Cmd(temp);
  9689  1C0F  0822               	movf	Lcd_Set_Cursor@temp,w
  9690  1C10  160A  158A  23D9  160A  158A  	fcall	_Lcd_Cmd
  9691                           
  9692                           ;./LibreriaPrueba.h: 43:  }
  9693  1C15  2C27               	goto	l74
  9694  1C16                     l2962:
  9695  1C16  3002               	movlw	2
  9696  1C17  0621               	xorwf	Lcd_Set_Cursor@a,w
  9697  1C18  1D03               	btfss	3,2
  9698  1C19  2C1B               	goto	u4941
  9699  1C1A  2C1C               	goto	u4940
  9700  1C1B                     u4941:
  9701  1C1B  2C27               	goto	l74
  9702  1C1C                     u4940:
  9703  1C1C                     l2964:
  9704                           
  9705                           ;./LibreriaPrueba.h: 45:  {;./LibreriaPrueba.h: 46:   temp = 0xC0 + b - 1;
  9706  1C1C  0878               	movf	Lcd_Set_Cursor@b,w
  9707  1C1D  3EBF               	addlw	191
  9708  1C1E  00A0               	movwf	??_Lcd_Set_Cursor
  9709  1C1F  0820               	movf	??_Lcd_Set_Cursor,w
  9710  1C20  00A2               	movwf	Lcd_Set_Cursor@temp
  9711  1C21                     l2966:
  9712                           
  9713                           ;./LibreriaPrueba.h: 49:   Lcd_Cmd(temp);
  9714  1C21  0822               	movf	Lcd_Set_Cursor@temp,w
  9715  1C22  160A  158A  23D9  160A  158A  	fcall	_Lcd_Cmd
  9716  1C27                     l74:
  9717  1C27  0008               	return
  9718  1C28                     __end_of_Lcd_Set_Cursor:
  9719                           
  9720                           	psect	text27
  9721  1C4F                     __ptext27:	
  9722 ;; *************** function _config *****************
  9723 ;; Defined at:
  9724 ;;		line 87 in file "potenciometro.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;		None
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;		None
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  1    wreg      void 
  9731 ;; Registers used:
  9732 ;;		wreg, status,2, status,0, pclath, cstack
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9738 ;;      Params:         0       0       0       0       0
  9739 ;;      Locals:         0       0       0       0       0
  9740 ;;      Temps:          0       0       0       0       0
  9741 ;;      Totals:         0       0       0       0       0
  9742 ;;Total ram usage:        0 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; Hardware stack levels required when called:    3
  9745 ;; This function calls:
  9746 ;;		_spiInit
  9747 ;; This function is called by:
  9748 ;;		_main
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           
  9753                           ;psect for function _config
  9754  1C4F                     _config:
  9755  1C4F                     l3212:	
  9756                           ;incstack = 0
  9757                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  9758                           
  9759                           
  9760                           ;potenciometro.c: 88:     ANSEL = 0b0000000;
  9761  1C4F  1683               	bsf	3,5	;RP0=1, select bank3
  9762  1C50  1703               	bsf	3,6	;RP1=1, select bank3
  9763  1C51  0188               	clrf	8	;volatile
  9764                           
  9765                           ;potenciometro.c: 89:     ANSELH = 0b0000000;
  9766  1C52  0189               	clrf	9	;volatile
  9767  1C53                     l3214:
  9768                           
  9769                           ;potenciometro.c: 91:     TRISA = 0b00000001;
  9770  1C53  3001               	movlw	1
  9771  1C54  1683               	bsf	3,5	;RP0=1, select bank1
  9772  1C55  1303               	bcf	3,6	;RP1=0, select bank1
  9773  1C56  0085               	movwf	5	;volatile
  9774  1C57                     l3216:
  9775                           
  9776                           ;potenciometro.c: 92:     TRISB = 0b00000000;
  9777  1C57  0186               	clrf	6	;volatile
  9778  1C58                     l3218:
  9779                           
  9780                           ;potenciometro.c: 93:     TRISD = 0b00000000;
  9781  1C58  0188               	clrf	8	;volatile
  9782  1C59                     l3220:
  9783                           
  9784                           ;potenciometro.c: 95:     ANSELbits.ANS0 = 1;
  9785  1C59  1683               	bsf	3,5	;RP0=1, select bank3
  9786  1C5A  1703               	bsf	3,6	;RP1=1, select bank3
  9787  1C5B  1408               	bsf	8,0	;volatile
  9788  1C5C                     l3222:
  9789                           
  9790                           ;potenciometro.c: 96:     ANSELbits.ANS1 = 1;
  9791  1C5C  1488               	bsf	8,1	;volatile
  9792  1C5D                     l3224:
  9793                           
  9794                           ;potenciometro.c: 99:     ADCON0bits.ADON=1;
  9795  1C5D  1283               	bcf	3,5	;RP0=0, select bank0
  9796  1C5E  1303               	bcf	3,6	;RP1=0, select bank0
  9797  1C5F  141F               	bsf	31,0	;volatile
  9798  1C60                     l3226:
  9799                           
  9800                           ;potenciometro.c: 100:     ADCON1bits.ADFM=0;
  9801  1C60  1683               	bsf	3,5	;RP0=1, select bank1
  9802  1C61  1303               	bcf	3,6	;RP1=0, select bank1
  9803  1C62  139F               	bcf	31,7	;volatile
  9804  1C63                     l3228:
  9805                           
  9806                           ;potenciometro.c: 102:     INTCONbits.GIE = 1;
  9807  1C63  178B               	bsf	11,7	;volatile
  9808  1C64                     l3230:
  9809                           
  9810                           ;potenciometro.c: 103:     INTCONbits.PEIE = 1;
  9811  1C64  170B               	bsf	11,6	;volatile
  9812  1C65                     l3232:
  9813                           
  9814                           ;potenciometro.c: 105:     PIE1bits.ADIE = 1;
  9815  1C65  170C               	bsf	12,6	;volatile
  9816  1C66                     l3234:
  9817                           
  9818                           ;potenciometro.c: 106:     PIR1bits.ADIF = 0;
  9819  1C66  1283               	bcf	3,5	;RP0=0, select bank0
  9820  1C67  1303               	bcf	3,6	;RP1=0, select bank0
  9821  1C68  130C               	bcf	12,6	;volatile
  9822  1C69                     l3236:
  9823                           
  9824                           ;potenciometro.c: 107:     PIR1bits.SSPIF = 0;
  9825  1C69  118C               	bcf	12,3	;volatile
  9826  1C6A                     l3238:
  9827                           
  9828                           ;potenciometro.c: 108:     PIE1bits.SSPIE = 1;
  9829  1C6A  1683               	bsf	3,5	;RP0=1, select bank1
  9830  1C6B  1303               	bcf	3,6	;RP1=0, select bank1
  9831  1C6C  158C               	bsf	12,3	;volatile
  9832  1C6D                     l3240:
  9833                           
  9834                           ;potenciometro.c: 109:     TRISAbits.TRISA5 = 1;
  9835  1C6D  1685               	bsf	5,5	;volatile
  9836  1C6E                     l3242:
  9837                           
  9838                           ;potenciometro.c: 111:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_ID
      +                          LE_LOW, SPI_IDLE_2_ACTIVE);
  9839  1C6E  01F5               	clrf	spiInit@sDataSample
  9840  1C6F  01F6               	clrf	spiInit@sClockIdle
  9841  1C70  01F7               	clrf	spiInit@sTransmitEdge
  9842  1C71  3024               	movlw	36
  9843  1C72  160A  158A  23EC  160A  158A  	fcall	_spiInit
  9844  1C77                     l108:
  9845  1C77  0008               	return
  9846  1C78                     __end_of_config:
  9847                           
  9848                           	psect	text28
  9849  1BEC                     __ptext28:	
  9850 ;; *************** function _spiInit *****************
  9851 ;; Defined at:
  9852 ;;		line 115 in file "potenciometro.c"
  9853 ;; Parameters:    Size  Location     Type
  9854 ;;  sType           1    wreg     enum E1293
  9855 ;;  sDataSample     1    5[COMMON] enum E1301
  9856 ;;  sClockIdle      1    6[COMMON] enum E1305
  9857 ;;  sTransmitEdg    1    7[COMMON] enum E1309
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;  sType           1    8[COMMON] enum E1293
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  1    wreg      void 
  9862 ;; Registers used:
  9863 ;;		wreg, status,2, status,0
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/0
  9866 ;;		On exit  : 0/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9869 ;;      Params:         3       0       0       0       0
  9870 ;;      Locals:         1       0       0       0       0
  9871 ;;      Temps:          0       0       0       0       0
  9872 ;;      Totals:         4       0       0       0       0
  9873 ;;Total ram usage:        4 bytes
  9874 ;; Hardware stack levels used:    1
  9875 ;; Hardware stack levels required when called:    2
  9876 ;; This function calls:
  9877 ;;		Nothing
  9878 ;; This function is called by:
  9879 ;;		_config
  9880 ;; This function uses a non-reentrant model
  9881 ;;
  9882                           
  9883                           
  9884                           ;psect for function _spiInit
  9885  1BEC                     _spiInit:
  9886                           
  9887                           ;incstack = 0
  9888                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  9889                           ;spiInit@sType stored from wreg
  9890  1BEC  00F8               	movwf	spiInit@sType
  9891  1BED                     l3182:
  9892                           
  9893                           ;potenciometro.c: 115: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clo
      +                          ck_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);potenciometro.c: 116: {;potenciomet
      +                          ro.c: 117:     TRISC5 = 0;
  9894  1BED  1683               	bsf	3,5	;RP0=1, select bank1
  9895  1BEE  1303               	bcf	3,6	;RP1=0, select bank1
  9896  1BEF  1287               	bcf	7,5	;volatile
  9897                           
  9898                           ;potenciometro.c: 118:     if(sType & 0b00000100)
  9899  1BF0  1D78               	btfss	spiInit@sType,2
  9900  1BF1  2BF3               	goto	u5331
  9901  1BF2  2BF4               	goto	u5330
  9902  1BF3                     u5331:
  9903  1BF3  2BF8               	goto	l3188
  9904  1BF4                     u5330:
  9905  1BF4                     l3184:
  9906                           
  9907                           ;potenciometro.c: 119:     {;potenciometro.c: 120:         SSPSTAT = sTransmitEdge;
  9908  1BF4  0877               	movf	spiInit@sTransmitEdge,w
  9909  1BF5  0094               	movwf	20	;volatile
  9910  1BF6                     l3186:
  9911                           
  9912                           ;potenciometro.c: 121:         TRISC3 = 1;
  9913  1BF6  1587               	bsf	7,3	;volatile
  9914                           
  9915                           ;potenciometro.c: 122:     }
  9916  1BF7  2BFC               	goto	l112
  9917  1BF8                     l3188:
  9918                           
  9919                           ;potenciometro.c: 124:     {;potenciometro.c: 125:         SSPSTAT = sDataSample | sTran
      +                          smitEdge;
  9920  1BF8  0875               	movf	spiInit@sDataSample,w
  9921  1BF9  0477               	iorwf	spiInit@sTransmitEdge,w
  9922  1BFA  0094               	movwf	20	;volatile
  9923  1BFB                     l3190:
  9924                           
  9925                           ;potenciometro.c: 126:         TRISC3 = 0;
  9926  1BFB  1187               	bcf	7,3	;volatile
  9927  1BFC                     l112:	
  9928                           ;potenciometro.c: 127:     }
  9929                           
  9930                           
  9931                           ;potenciometro.c: 129:     SSPCON = sType | sClockIdle;
  9932  1BFC  0878               	movf	spiInit@sType,w
  9933  1BFD  0476               	iorwf	spiInit@sClockIdle,w
  9934  1BFE  1283               	bcf	3,5	;RP0=0, select bank0
  9935  1BFF  1303               	bcf	3,6	;RP1=0, select bank0
  9936  1C00  0094               	movwf	20	;volatile
  9937  1C01                     l113:
  9938  1C01  0008               	return
  9939  1C02                     __end_of_spiInit:
  9940                           
  9941                           	psect	text29
  9942  1CCC                     __ptext29:	
  9943 ;; *************** function _Lcd_Init *****************
  9944 ;; Defined at:
  9945 ;;		line 69 in file "./LibreriaPrueba.h"
  9946 ;; Parameters:    Size  Location     Type
  9947 ;;		None
  9948 ;; Auto vars:     Size  Location     Type
  9949 ;;		None
  9950 ;; Return value:  Size  Location     Type
  9951 ;;                  1    wreg      void 
  9952 ;; Registers used:
  9953 ;;		wreg, status,2, status,0, pclath, cstack
  9954 ;; Tracked objects:
  9955 ;;		On entry : 0/0
  9956 ;;		On exit  : 0/0
  9957 ;;		Unchanged: 0/0
  9958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9959 ;;      Params:         0       0       0       0       0
  9960 ;;      Locals:         0       0       0       0       0
  9961 ;;      Temps:          0       2       0       0       0
  9962 ;;      Totals:         0       2       0       0       0
  9963 ;;Total ram usage:        2 bytes
  9964 ;; Hardware stack levels used:    1
  9965 ;; Hardware stack levels required when called:    3
  9966 ;; This function calls:
  9967 ;;		_Lcd_Cmd
  9968 ;; This function is called by:
  9969 ;;		_main
  9970 ;; This function uses a non-reentrant model
  9971 ;;
  9972                           
  9973                           
  9974                           ;psect for function _Lcd_Init
  9975  1CCC                     _Lcd_Init:
  9976  1CCC                     l3194:	
  9977                           ;incstack = 0
  9978                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9979                           
  9980                           
  9981                           ;./LibreriaPrueba.h: 71:     PORTDbits.RD2 = 0;
  9982  1CCC  1283               	bcf	3,5	;RP0=0, select bank0
  9983  1CCD  1303               	bcf	3,6	;RP1=0, select bank0
  9984  1CCE  1108               	bcf	8,2	;volatile
  9985  1CCF                     l3196:
  9986                           
  9987                           ;./LibreriaPrueba.h: 73:     Lcd_Cmd(0x00);
  9988  1CCF  3000               	movlw	0
  9989  1CD0  160A  158A  23D9  160A  158A  	fcall	_Lcd_Cmd
  9990  1CD5                     l3198:
  9991                           
  9992                           ;./LibreriaPrueba.h: 74:     _delay((unsigned long)((15)*(9000000/4000.0)));
  9993  1CD5  302C               	movlw	44
  9994  1CD6  1283               	bcf	3,5	;RP0=0, select bank0
  9995  1CD7  1303               	bcf	3,6	;RP1=0, select bank0
  9996  1CD8  00A1               	movwf	??_Lcd_Init+1
  9997  1CD9  30D3               	movlw	211
  9998  1CDA  00A0               	movwf	??_Lcd_Init
  9999  1CDB                     u5407:
 10000  1CDB  0BA0               	decfsz	??_Lcd_Init,f
 10001  1CDC  2CDB               	goto	u5407
 10002  1CDD  0BA1               	decfsz	??_Lcd_Init+1,f
 10003  1CDE  2CDB               	goto	u5407
 10004  1CDF                     l3200:
 10005                           
 10006                           ;./LibreriaPrueba.h: 77:     Lcd_Cmd(0x30);
 10007  1CDF  3030               	movlw	48
 10008  1CE0  160A  158A  23D9  160A  158A  	fcall	_Lcd_Cmd
 10009                           
 10010                           ;./LibreriaPrueba.h: 78:     _delay((unsigned long)((160)*(9000000/4000000.0)));
 10011  1CE5  3077               	movlw	119
 10012  1CE6  1283               	bcf	3,5	;RP0=0, select bank0
 10013  1CE7  1303               	bcf	3,6	;RP1=0, select bank0
 10014  1CE8  00A0               	movwf	??_Lcd_Init
 10015  1CE9                     u5417:
 10016  1CE9  0BA0               	decfsz	??_Lcd_Init,f
 10017  1CEA  2CE9               	goto	u5417
 10018  1CEB                     l3202:
 10019                           
 10020                           ;./LibreriaPrueba.h: 80:     Lcd_Cmd(0x38);
 10021  1CEB  3038               	movlw	56
 10022  1CEC  160A  158A  23D9  160A  158A  	fcall	_Lcd_Cmd
 10023  1CF1                     l3204:
 10024                           
 10025                           ;./LibreriaPrueba.h: 81:     Lcd_Cmd(0x01);
 10026  1CF1  3001               	movlw	1
 10027  1CF2  160A  158A  23D9  160A  158A  	fcall	_Lcd_Cmd
 10028  1CF7                     l3206:
 10029                           
 10030                           ;./LibreriaPrueba.h: 82:     Lcd_Cmd(0x06);
 10031  1CF7  3006               	movlw	6
 10032  1CF8  160A  158A  23D9  160A  158A  	fcall	_Lcd_Cmd
 10033  1CFD                     l3208:
 10034                           
 10035                           ;./LibreriaPrueba.h: 83:     Lcd_Cmd(0x0F);
 10036  1CFD  300F               	movlw	15
 10037  1CFE  160A  158A  23D9  160A  158A  	fcall	_Lcd_Cmd
 10038  1D03                     l86:
 10039  1D03  0008               	return
 10040  1D04                     __end_of_Lcd_Init:
 10041                           
 10042                           	psect	text30
 10043  08C6                     __ptext30:	
 10044 ;; *************** function _Lcd_Clear *****************
 10045 ;; Defined at:
 10046 ;;		line 28 in file "./LibreriaPrueba.h"
 10047 ;; Parameters:    Size  Location     Type
 10048 ;;		None
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;		None
 10051 ;; Return value:  Size  Location     Type
 10052 ;;                  2   67[None  ] int 
 10053 ;; Registers used:
 10054 ;;		wreg, status,2, status,0, pclath, cstack
 10055 ;; Tracked objects:
 10056 ;;		On entry : 0/0
 10057 ;;		On exit  : 0/0
 10058 ;;		Unchanged: 0/0
 10059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10060 ;;      Params:         0       0       0       0       0
 10061 ;;      Locals:         0       0       0       0       0
 10062 ;;      Temps:          0       0       0       0       0
 10063 ;;      Totals:         0       0       0       0       0
 10064 ;;Total ram usage:        0 bytes
 10065 ;; Hardware stack levels used:    1
 10066 ;; Hardware stack levels required when called:    3
 10067 ;; This function calls:
 10068 ;;		_Lcd_Cmd
 10069 ;; This function is called by:
 10070 ;;		_main
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           
 10074                           
 10075                           ;psect for function _Lcd_Clear
 10076  08C6                     _Lcd_Clear:
 10077  08C6                     l3192:	
 10078                           ;incstack = 0
 10079                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10080                           
 10081                           
 10082                           ;./LibreriaPrueba.h: 29:  Lcd_Cmd(0);
 10083  08C6  3000               	movlw	0
 10084  08C7  160A  158A  23D9  120A  158A  	fcall	_Lcd_Cmd
 10085                           
 10086                           ;./LibreriaPrueba.h: 30:  Lcd_Cmd(1);
 10087  08CC  3001               	movlw	1
 10088  08CD  160A  158A  23D9  120A  158A  	fcall	_Lcd_Cmd
 10089  08D2                     l68:
 10090  08D2  0008               	return
 10091  08D3                     __end_of_Lcd_Clear:
 10092                           
 10093                           	psect	text31
 10094  1BD9                     __ptext31:	
 10095 ;; *************** function _Lcd_Cmd *****************
 10096 ;; Defined at:
 10097 ;;		line 19 in file "./LibreriaPrueba.h"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;  a               1    wreg     unsigned char 
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;  a               1    7[COMMON] unsigned char 
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  1    wreg      void 
 10104 ;; Registers used:
 10105 ;;		wreg
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10111 ;;      Params:         0       0       0       0       0
 10112 ;;      Locals:         1       0       0       0       0
 10113 ;;      Temps:          2       0       0       0       0
 10114 ;;      Totals:         3       0       0       0       0
 10115 ;;Total ram usage:        3 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; Hardware stack levels required when called:    2
 10118 ;; This function calls:
 10119 ;;		Nothing
 10120 ;; This function is called by:
 10121 ;;		_Lcd_Clear
 10122 ;;		_Lcd_Set_Cursor
 10123 ;;		_Lcd_Init
 10124 ;; This function uses a non-reentrant model
 10125 ;;
 10126                           
 10127                           
 10128                           ;psect for function _Lcd_Cmd
 10129  1BD9                     _Lcd_Cmd:
 10130                           
 10131                           ;incstack = 0
 10132                           ; Regs used in _Lcd_Cmd: [wreg]
 10133                           ;Lcd_Cmd@a stored from wreg
 10134  1BD9  00F7               	movwf	Lcd_Cmd@a
 10135  1BDA                     l2582:
 10136                           
 10137                           ;./LibreriaPrueba.h: 20:  PORTDbits.RD2 =0;
 10138  1BDA  1283               	bcf	3,5	;RP0=0, select bank0
 10139  1BDB  1303               	bcf	3,6	;RP1=0, select bank0
 10140  1BDC  1108               	bcf	8,2	;volatile
 10141  1BDD                     l2584:
 10142                           
 10143                           ;./LibreriaPrueba.h: 21:  PORTB=a;
 10144  1BDD  0877               	movf	Lcd_Cmd@a,w
 10145  1BDE  0086               	movwf	6	;volatile
 10146  1BDF                     l2586:
 10147                           
 10148                           ;./LibreriaPrueba.h: 22:     PORTDbits.RD3=1;
 10149  1BDF  1588               	bsf	8,3	;volatile
 10150                           
 10151                           ;./LibreriaPrueba.h: 23:     _delay((unsigned long)((4)*(9000000/4000.0)));
 10152  1BE0  300C               	movlw	12
 10153  1BE1  00F6               	movwf	??_Lcd_Cmd+1
 10154  1BE2  30AF               	movlw	175
 10155  1BE3  00F5               	movwf	??_Lcd_Cmd
 10156  1BE4                     u5427:
 10157  1BE4  0BF5               	decfsz	??_Lcd_Cmd,f
 10158  1BE5  2BE4               	goto	u5427
 10159  1BE6  0BF6               	decfsz	??_Lcd_Cmd+1,f
 10160  1BE7  2BE4               	goto	u5427
 10161  1BE8                     l2588:
 10162                           
 10163                           ;./LibreriaPrueba.h: 24:     PORTDbits.RD3=0;
 10164  1BE8  1283               	bcf	3,5	;RP0=0, select bank0
 10165  1BE9  1303               	bcf	3,6	;RP1=0, select bank0
 10166  1BEA  1188               	bcf	8,3	;volatile
 10167  1BEB                     l65:
 10168  1BEB  0008               	return
 10169  1BEC                     __end_of_Lcd_Cmd:
 10170                           
 10171                           	psect	text32
 10172  1C28                     __ptext32:	
 10173 ;; *************** function _ISR *****************
 10174 ;; Defined at:
 10175 ;;		line 38 in file "potenciometro.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;		None
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;		None
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  1    wreg      void 
 10182 ;; Registers used:
 10183 ;;		wreg, status,2, status,0, pclath, cstack
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10189 ;;      Params:         0       0       0       0       0
 10190 ;;      Locals:         0       0       0       0       0
 10191 ;;      Temps:          4       0       0       0       0
 10192 ;;      Totals:         4       0       0       0       0
 10193 ;;Total ram usage:        4 bytes
 10194 ;; Hardware stack levels used:    1
 10195 ;; Hardware stack levels required when called:    1
 10196 ;; This function calls:
 10197 ;;		_spiWrite
 10198 ;; This function is called by:
 10199 ;;		Interrupt level 1
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           
 10204                           ;psect for function _ISR
 10205  1C28                     _ISR:
 10206  1C28                     i1l3258:
 10207                           
 10208                           ;potenciometro.c: 40:      if (PIR1bits.ADIF ==1){
 10209  1C28  1283               	bcf	3,5	;RP0=0, select bank0
 10210  1C29  1303               	bcf	3,6	;RP1=0, select bank0
 10211  1C2A  1F0C               	btfss	12,6	;volatile
 10212  1C2B  2C2D               	goto	u536_21
 10213  1C2C  2C2E               	goto	u536_20
 10214  1C2D                     u536_21:
 10215  1C2D  2C38               	goto	i1l3264
 10216  1C2E                     u536_20:
 10217  1C2E                     i1l3260:
 10218                           
 10219                           ;potenciometro.c: 41:         PIR1bits.ADIF = 0;
 10220  1C2E  130C               	bcf	12,6	;volatile
 10221  1C2F                     i1l3262:
 10222                           
 10223                           ;potenciometro.c: 42:         c = ADRESH;
 10224  1C2F  081E               	movf	30,w	;volatile
 10225  1C30  00F1               	movwf	??_ISR
 10226  1C31  01F2               	clrf	??_ISR+1
 10227  1C32  0871               	movf	??_ISR,w
 10228  1C33  1683               	bsf	3,5	;RP0=1, select bank1
 10229  1C34  1303               	bcf	3,6	;RP1=0, select bank1
 10230  1C35  00D2               	movwf	_c^(0+128)
 10231  1C36  0872               	movf	??_ISR+1,w
 10232  1C37  00D3               	movwf	(_c+1)^(0+128)
 10233  1C38                     i1l3264:
 10234                           
 10235                           ;potenciometro.c: 44:       if(SSPIF == 1){
 10236  1C38  1283               	bcf	3,5	;RP0=0, select bank0
 10237  1C39  1D8C               	btfss	12,3	;volatile
 10238  1C3A  2C3C               	goto	u537_21
 10239  1C3B  2C3D               	goto	u537_20
 10240  1C3C                     u537_21:
 10241  1C3C  2C48               	goto	i1l93
 10242  1C3D                     u537_20:
 10243  1C3D                     i1l3266:
 10244                           
 10245                           ;potenciometro.c: 46:         spiWrite(c);
 10246  1C3D  1683               	bsf	3,5	;RP0=1, select bank1
 10247  1C3E  1303               	bcf	3,6	;RP1=0, select bank1
 10248  1C3F  0852               	movf	_c^(0+128),w
 10249  1C40  160A  118A  2003  160A  158A  	fcall	_spiWrite
 10250  1C45                     i1l3268:
 10251                           
 10252                           ;potenciometro.c: 47:         SSPIF = 0;
 10253  1C45  1283               	bcf	3,5	;RP0=0, select bank0
 10254  1C46  1303               	bcf	3,6	;RP1=0, select bank0
 10255  1C47  118C               	bcf	12,3	;volatile
 10256  1C48                     i1l93:
 10257  1C48  0874               	movf	??_ISR+3,w
 10258  1C49  008A               	movwf	10
 10259  1C4A  0E73               	swapf	??_ISR+2,w
 10260  1C4B  0083               	movwf	3
 10261  1C4C  0EFE               	swapf	btemp,f
 10262  1C4D  0E7E               	swapf	btemp,w
 10263  1C4E  0009               	retfie
 10264  1C4F                     __end_of_ISR:
 10265                           
 10266                           	psect	intentry
 10267  0004                     __pintentry:	
 10268                           ;incstack = 0
 10269                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
 10270                           
 10271  0004                     interrupt_function:
 10272  007E                     saved_w	set	btemp
 10273  0004  00FE               	movwf	btemp
 10274  0005  0E03               	swapf	3,w
 10275  0006  00F3               	movwf	??_ISR+2
 10276  0007  080A               	movf	10,w
 10277  0008  00F4               	movwf	??_ISR+3
 10278  0009  160A  158A  2C28   	ljmp	_ISR
 10279                           
 10280                           	psect	text33
 10281  1003                     __ptext33:	
 10282 ;; *************** function _spiWrite *****************
 10283 ;; Defined at:
 10284 ;;		line 137 in file "potenciometro.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;  dat             1    wreg     unsigned char 
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;  dat             1    0[COMMON] unsigned char 
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  1    wreg      void 
 10291 ;; Registers used:
 10292 ;;		wreg
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/0
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10298 ;;      Params:         0       0       0       0       0
 10299 ;;      Locals:         1       0       0       0       0
 10300 ;;      Temps:          0       0       0       0       0
 10301 ;;      Totals:         1       0       0       0       0
 10302 ;;Total ram usage:        1 bytes
 10303 ;; Hardware stack levels used:    1
 10304 ;; This function calls:
 10305 ;;		Nothing
 10306 ;; This function is called by:
 10307 ;;		_ISR
 10308 ;; This function uses a non-reentrant model
 10309 ;;
 10310                           
 10311                           
 10312                           ;psect for function _spiWrite
 10313  1003                     _spiWrite:
 10314                           
 10315                           ;incstack = 0
 10316                           ; Regs used in _spiWrite: [wreg]
 10317                           ;spiWrite@dat stored from wreg
 10318  1003  00F0               	movwf	spiWrite@dat
 10319  1004                     i1l3210:
 10320                           
 10321                           ;potenciometro.c: 137: void spiWrite(char dat);potenciometro.c: 138: {;potenciometro.c: 
      +                          139:     SSPBUF = dat;
 10322  1004  0870               	movf	spiWrite@dat,w
 10323  1005  1283               	bcf	3,5	;RP0=0, select bank0
 10324  1006  1303               	bcf	3,6	;RP1=0, select bank0
 10325  1007  0093               	movwf	19	;volatile
 10326  1008                     i1l122:
 10327  1008  0008               	return
 10328  1009                     __end_of_spiWrite:
 10329  007E                     btemp	set	126	;btemp
 10330  007E                     wtemp0	set	126
 10331                           
 10332                           	psect	config
 10333                           
 10334                           ;Config register CONFIG1 @ 0x2007
 10335                           ;	Oscillator Selection bits
 10336                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 10337                           ;	Watchdog Timer Enable bit
 10338                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10339                           ;	Power-up Timer Enable bit
 10340                           ;	PWRTE = OFF, PWRT disabled
 10341                           ;	RE3/MCLR pin function select bit
 10342                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10343                           ;	Code Protection bit
 10344                           ;	CP = OFF, Program memory code protection is disabled
 10345                           ;	Data Code Protection bit
 10346                           ;	CPD = OFF, Data memory code protection is disabled
 10347                           ;	Brown Out Reset Selection bits
 10348                           ;	BOREN = OFF, BOR disabled
 10349                           ;	Internal External Switchover bit
 10350                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10351                           ;	Fail-Safe Clock Monitor Enabled bit
 10352                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10353                           ;	Low Voltage Programming Enable bit
 10354                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10355                           ;	In-Circuit Debugger Mode bit
 10356                           ;	DEBUG = 0x1, unprogrammed default
 10357  2007                     	org	8199
 10358  2007  20D4               	dw	8404
 10359                           
 10360                           ;Config register CONFIG2 @ 0x2008
 10361                           ;	Brown-out Reset Selection bit
 10362                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10363                           ;	Flash Program Memory Self Write Enable bits
 10364                           ;	WRT = OFF, Write protection off
 10365  2008                     	org	8200
 10366  2008  3FFF               	dw	16383

Data Sizes:
    Strings     38
    Constant    144
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     80      80
    BANK1            80     46      53
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_4(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> buffer(BANK1[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> buffer(BANK1[1]), STR_3(CODE[6]), STR_2(CODE[17]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _conversion->_Lcd_Set_Cursor
    _conversion->_Lcd_Write_String
    _conversion->___wmul
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___flneg
    _sprintf->___wmul
    _sprintf->__tdiv_to_l_
    _scale->___awmod
    ___awdiv->___awmod
    ___awdiv->___wmul
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    ___flmul->___awmod
    ___flmul->___lwmod
    ___xxtofl->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _config->_spiInit
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_conversion
    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___xxtofl->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _conversion->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   35692
                                             43 BANK1      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _config
                         _conversion
 ---------------------------------------------------------------------------------
 (1) _conversion                                           2     2      0   34412
                                             78 BANK0      2     2      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                             ___wmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   30954
                                              8 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7560
                                             38 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              5 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1516
                                              3 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    5871
                                             38 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              5 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              2 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4393
                                             12 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              5 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              5 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              5 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                             12 BANK0     14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              5 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              5 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              5 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             57 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             58 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              5 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              5 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              5 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     416
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      22
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     460
                                              8 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              5 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      22
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              5 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0      22
                                              1 COMMON     4     4      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (7) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _config
     _spiInit
   _conversion
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2E      35       7       66.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 18:08:45 2021

                        _c 00D2                          pc 0002                _SSPSTATbits 0094  
                       l65 1BEB                         l74 1C27                         l83 1D85  
                       l68 08D2                         l77 1BC6                         l86 1D03  
             ___awdiv@sign 0029                         fsr 0004        ___wmul@multiplicand 0077  
      __Umul8_16@word_mpld 0022                        l112 1BFC                        l113 1C01  
                      l105 108F                        l108 1C77                        l311 1CCB  
                      l232 1577                        l305 07A1                        l500 10AE  
                      l309 1CB1                        l503 111A                        l239 0FFF  
                      l504 1133                        l512 1FFF                        l345 1F83  
                      l522 1FFF                        l530 126F                        l258 008D  
                      l291 0593                        l508 1BB6                        l284 054F  
                      l526 12AC                        l462 093B                        l519 1FEA  
                      l527 121E                        l615 1DCB                        l640 1682  
                      l480 12CF                        l537 129F                        l625 1D3F  
                      l642 1659                        l490 135D                        l483 132D  
                      l475 07FC                        l299 075A                        l636 15DB  
                      l732 0C9C                        l661 1771                        l565 1EC1  
                      l670 17D1                        l495 1DEA                        l479 136A  
                      l751 1C8E                        l496 1E06                        l744 0C90  
                      l497 1E1B                        l657 174D                        l649 17FF  
                      l753 1CA0                        l682 1E6B                        l738 0C08  
                      l667 1793                        l678 17F3                        l790 11C5  
                      l782 119D                        l679 17FF                        l776 1158  
                      l778 11EF                        l796 1BD8                        l789 11B9  
                      _ISR 1C28                        fsr0 0004                        indf 0000  
             ___awmod@sign 0022               ___flmul@aexp 003E               ___flmul@bexp 003F  
             ___flmul@sign 0039               ___flmul@temp 0044               ___flmul@prod 0040  
                     ?_ISR 0070               ___fltol@exp1 0063                       l2110 1C88  
                     l2112 1C97                       l2104 1C7B                       l2200 1D86  
                     l2120 08D6                       l3000 0078                       l2114 1C9C  
                     l2106 1C7D                       l2210 1D9E                       l2202 1D8A  
                     l2130 08EA                       l2122 08DA                       l3010 00AB  
                     l3002 0089                       l2300 15F1                       l2108 1C84  
                     l2220 1DC1                       l2212 1DA2                       l2204 1D90  
                     l2140 0900                       l2132 08EE                       l2124 08DF  
                     l3100 049D                       l3020 00D1                       l3012 00B7  
                     l3004 008B                       l2310 1605                       l2302 15F5  
                     l2214 1DB3                       l2206 1D93                       l2222 1DC7  
                     l2230 1D0F                       l2150 0920                       l2142 0904  
                     l2134 08F0                       l2126 08E1                       l2118 08D3  
                     l3110 0557                       l3102 04A4                       l3030 0140  
                     l3022 00F8                       l3014 00BB                       l3200 1CDF  
                     l2400 177F                       l2320 1619                       l2312 1609  
                     l2304 15F9                       l2216 1DB9                       l2208 1D9A  
                     l2240 1D2E                       l2232 1D16                       l2152 0927  
                     l2144 0908                       l2136 08F6                       l2128 08E5  
                     l3120 0586                       l3112 0560                       l3104 04A9  
                     l3040 018B                       l3032 014B                       l3024 0111  
                     l3016 00BF                       l3008 008F                       l3202 1CEB  
                     l2410 1790                       l2402 1781                       l2330 163D  
                     l2322 161D                       l2314 160D                       l2306 15FD  
                     l2250 157F                       l2218 1DBA                       l2242 1D35  
                     l2234 1D1A                       l2226 1D04                       l2146 0919  
                     l2138 08F9                       l2154 092D                       l2170 07B0  
                     l2162 07A2                       l3130 05AC                       l3122 058D  
                     l3114 0564                       l3106 0504                       l3050 022B  
                     l3042 0191                       l3034 0151                       l3026 0115  
                     l3018 00CD                       l3204 1CF1                       l3220 1C59  
                     l3212 1C4F                       l2420 17AF                       l2404 1785  
                     l2340 166D                       l2332 165D                       l2324 1621  
                     l2316 1611                       l2308 1601                       l2260 1594  
                     l2252 1585                       l2500 0A63                       l2236 1D1E  
                     l2228 1D0A                       l2244 1D3B                       l2156 0932  
                     l2148 091F                       l2180 07C9                       l2172 07B4  
                     l2164 07A5                       l3140 06CB                       l3132 05CA  
                     l3124 059C                       l3116 056A                       l3108 0543  
                     l3060 02C1                       l3052 0254                       l3044 01B0  
                     l3036 0164                       l3028 0119                       l3206 1CF7  
                     l3230 1C64                       l3222 1C5C                       l3214 1C53  
                     l2430 17E8                       l2422 17CD                       l2414 1798  
                     l2406 1786                       l2342 1676                       l2334 1666  
                     l2318 1615                       l2326 1625                       l2270 15AC  
                     l2262 159C                       l2254 1589                       l2510 0AC6  
                     l2502 0A6C                       l2238 1D28                       l2158 0937  
                     l2190 07E8                       l2182 07CD                       l2174 07B9  
                     l2166 07A9                       l3150 073F                       l3134 0625  
                     l3142 0726                       l3126 05A1                       l3118 0577  
                     l3070 0352                       l3062 02EA                       l3046 01FB  
                     l3038 0187                       l3054 025C                       l3208 1CFD  
                     l3240 1C6D                       l3232 1C65                       l3224 1C5D  
                     l3216 1C57                       l2440 17FE                       l2432 17E9  
                     l2424 17D6                       l2416 179D                       l2408 178A  
                     l2360 16BC                       l2352 1694                       l2336 1668  
                     l2344 167A                       l2328 1626                       l2280 15BE  
                     l2272 15B2                       l2264 159D                       l2256 158A  
                     l2248 1578                       l2520 0B66                       l2512 0ADF  
                     l2504 0A7C                       l2600 1374                       l2184 07D1  
                     l2176 07BF                       l2192 07EE                       l2168 07AE  
                     l3160 0766                       l3144 072E                       l3136 0680  
                     l3128 05A8                       l3072 035A                       l3064 0311  
                     l3080 03CC                       l3056 026B                       l3048 0222  
                     l3152 0746                       l3242 1C6E                       l3234 1C66  
                     l3226 1C60                       l3218 1C58                       l2434 17ED  
                     l2426 17DB                       l2418 17AB                       l2362 16BE  
                     l2354 16AB                       l2346 1686                       l2370 16D1  
                     l2338 166C                       l2282 15C3                       l2290 15D3  
                     l2274 15B3                       l2258 158F                       l2266 159F  
                     l2530 0BD4                       l2522 0B8C                       l2514 0AFC  
                     l2506 0A99                       l2450 094E                       l2442 093C  
                     l2194 07F3                       l2186 07DB                       l2178 07C2  
                     l3162 0775                       l3154 074C                       l3146 0735  
                     l3138 06BF                       l3082 0401                       l3074 0378  
                     l3066 0320                       l3058 02B2                       l3170 078B  
                     l3250 101E                       l3236 1C69                       l3228 1C63  
                     l2436 17EF                       l2428 17E3                       l2372 16E7  
                     l2380 173F                       l2364 16C2                       l2356 16AF  
                     l2348 168B                       l2292 15E1                       l2284 15C8  
                     l2276 15B9                       l2268 15A7                       l2700 1273  
                     l2540 0BEC                       l2532 0BD8                       l2524 0BB4  
                     l2516 0B29                       l2508 0AA9                       l2460 096A  
                     l2452 0953                       l2444 0943                       l2612 1534  
                     l2196 07F8                       l2188 07E1                       l2620 0CA6  
                     l3164 0775                       l3156 0754                       l3148 0739  
                     l3092 0450                       l3084 044C                       l3068 0349  
                     l3172 079D                       l3316 00A3                       l3252 1065  
                     l3244 100C                       l3190 1BFB                       l3182 1BED  
                     l3238 1C6A                       l2438 17FA                       l2390 176C  
                     l2382 1755                       l2374 1725                       l2366 16C3  
                     l2358 16B3                       l2294 15E5                       l2286 15D0  
                     l2278 15BD                       l2550 0C0D                       l2542 0BED  
                     l2534 0BD9                       l2526 0BBD                       l2518 0B39  
                     l2470 097F                       l2462 096F                       l2454 0958  
                     l2446 0949                       l2606 1483                       l2630 0D9E  
                     l2622 0CAD                       l3166 0783                       l3158 0765  
                     l3086 044E                       l3078 03C3                       l3254 107B  
                     l3246 1015                       l3270 1EC2                       l3192 08C6  
                     l3184 1BF4                       l2392 1770                       l2384 175A  
                     l2376 172B                       l2368 16CC                       l2296 15E9  
                     l2288 15D1                       l2800 1F6B                       l2720 12AD  
                     l2552 0C12                       l2560 0C43                       l2544 0BF1  
                     l2536 0BE2                       l2528 0BCB                       l2480 099B  
                     l2472 0984                       l2464 0975                       l2456 0960  
                     l2448 094D                       l2608 1489                       l2640 0E5A  
                     l2616 0CA0                       l3096 0487                       l3256 108C  
                     l3248 1019                       l3280 1F01                       l3272 1ED4  
                     l3194 1CCC                       l3186 1BF6                       l2810 1DCC  
                     l2394 1775                       l2378 1730                       l2298 15ED  
                     l2802 1F6C                       l2722 12BA                       l2714 1294  
                     l2706 127B                       l2570 0C76                       l2562 0C50  
                     l2554 0C20                       l2546 0C05                       l2538 0BE8  
                     l2490 09C6                       l2482 09A0                       l2474 098C  
                     l2466 0979                       l2458 0962                       l2634 0E26  
                     l2618 0CA4                       l3098 0491                       l3282 1F09  
                     l3274 1EDD                       l3196 1CCF                       l3188 1BF8  
                     l2812 1DE2                       l2396 1778                       l2388 1763  
                     l2804 1F75                       l2900 1EB3                       l2740 12F4  
                     l2732 12D0                       l2716 12A4                       l2708 128D  
                     l2572 0C84                       l2564 0C5B                       l2556 0C24  
                     l2492 09E3                       l2476 098E                       l2468 097A  
                     l2660 1BCF                       l2652 0FD3                       l2628 0D97  
                     l3284 1F12                       l3276 1EEE                       l2582 1BDA  
                     l3198 1CD5                       l2590 1BB8                       l2814 1DFE  
                     l2830 10CE                       l2822 1090                       l2398 177A  
                     l2806 1F7B                       l2902 1EB9                       l2750 1327  
                     l2742 12FD                       l2734 12D8                       l2726 12C3  
                     l2670 1203                       l2574 0C88                       l2566 0C6A  
                     l2558 0C3D                       l2494 09FF                       l2486 09A9  
                     l2478 0996                       l2662 1BD5                       l2646 0F44  
                     l2638 0E53                       l3278 1EFC                       l2584 1BDD  
                     l2592 1BBB                       l2816 1E18                       l2832 10F2  
                     l2824 10A6                       l2920 1160                       l2912 1137  
                     l2752 1331                       l2760 134B                       l2744 130F  
                     l2736 12E9                       l2680 121F                       l2576 0C89  
                     l2568 0C74                       l2496 0A2B                       l2488 09B9  
                     l2664 1BD7                       l2656 1BC8                       l2648 0F4B  
                     l2586 1BDF                       l2594 1BBD                       l2818 1E1A  
                     l2834 10F6                       l2826 10C2                       l2842 1BAC  
                     l2906 1E1C                       l2850 1F84                       l2930 1182  
                     l2914 113C                       l2746 131D                       l2738 12EB  
                     l2690 1248                       l2682 1225                       l2674 120C  
                     l2578 0C94                       l2498 0A47                       l2658 1BC9  
                     l2588 1BE8                       l2596 1BC3                       l2836 1130  
                     l2828 10CA                       l2844 1BB4                       l2908 1E20  
                     l2860 1FB0                       l2852 1F91                       l2780 1CBF  
                     l2772 1CA1                       l2940 11B3                       l2932 1186  
                     l2924 1169                       l2916 1140                       l2748 131E  
                     l2692 1256                       l2684 1234                       l2668 11F0  
                     l2838 1132                       l2846 1BB6                       l2862 1FB8  
                     l2790 1F31                       l2782 1CC5                       l2774 1CA5  
                     l2950 11E6                       l2942 11BD                       l2934 1194  
                     l2926 116E                       l2918 1150                       l2766 1352  
                     l2758 1339                       l2694 1260                       l2686 1236  
                     l2598 136E                       l2960 1C0F                       l2880 1FDF  
                     l2872 1FC6                       l2864 1FBA                       l2856 1F9A  
                     l2792 1F3E                       l2776 1CA9                       l2952 11E7  
                     l2944 11C7                       l2936 11A4                       l2928 117B  
                     l2768 1362                       l2696 1261                       l2688 123F  
                     l2962 1C16                       l2970 1D45                       l2882 1FEF  
                     l2866 1FBE                       l2874 1FD8                       l2858 1FAF  
                     l2794 1F42                       l2786 1F1C                       l2890 1E79  
                     l2778 1CB8                       l2946 11DD                       l2938 11AF  
                     l2698 1269                       l2964 1C1C                       l2956 1C05  
                     l2972 1D61                       l2884 1FF4                       l2796 1F4B  
                     l2788 1F2E                       l2892 1E86                       l2948 11E2  
                     l2980 002A                       l2966 1C21                       l2958 1C0A  
                     l2974 1D69                       l2798 1F5D                       l2894 1E8A  
                     l2886 1E6C                       l2990 0045                       l2982 0031  
                     l2968 1D40                       l2896 1E9C                       l2888 1E76  
                     l2992 0049                       l2984 0036                       l2976 001F  
                     l2898 1EAA                       l2994 004C                       l2986 0038  
                     l2978 0024                       l2996 0061                       l2988 0044  
                     l2998 0074                       STR_1 08B1                       STR_2 08A0  
                     STR_3 08BB                       STR_4 08C1                       u3010 1D1E  
                     u3011 1D1D                       u3100 15C3                       u3020 1D28  
                     u3101 15C2                       u3021 1D27                       u3005 1D10  
                     u3110 15C8                       u3111 15C7                       u3200 1682  
                     u3120 15E1                       u3040 1D3B                       u3201 1681  
                     u3121 15E0                       u3041 1D3A                       u3025 1D24  
                     u3210 1686                       u3130 15E5                       u3050 1589  
                     u4010 0D9E                       u3211 1685                       u3131 15E4  
                     u3051 1588                       u3035 1D2F                       u4011 0D9D  
                     u3300 1712                       u3220 168B                       u3140 163D  
                     u3060 158F                       u3301 1713                       u3221 168A  
                     u3141 163C                       u3061 158E                       u4005 0D56  
                     u3310 1730                       u3302 1718                       u3150 1648  
                     u3070 1594                       u3311 172F                       u3303 1719  
                     u3231 169D                       u3151 1646                       u3071 1593  
                     u3400 1790                       u3320 1755                       u3240 16AF  
                     u3232 16A4                       u3160 1649                       u3080 15B2  
                     u4200 126F                       u5000 0088                       u3401 178F  
                     u3321 1754                       u3241 16AE                       u3233 16AB  
                     u3145 1639                       u3081 15B1                       u4201 126E  
                     u4105 0F5E                       u4025 0DB1                       u5001 0087  
                     u3410 1797                       u3330 175A                       u3250 16B3  
                     u3170 165D                       u3090 15BD                       u4210 1273  
                     u4130 1BCF                       u4050 0E5A                       u5010 00B7  
                     u3411 1796                       u3331 1759                       u3251 16B2  
                     u3171 165C                       u3091 15BC                       u4211 1272  
                     u4131 1BCE                       u4115 0F9A                       u4051 0E59  
                     u4035 0DED                       u5011 00B6                       u3500 17FE  
                     u3420 179D                       u3260 16C2                       u3180 166C  
                     u4220 127A                       u2700 1C88                       u4140 1BD5  
                     u5100 02EA                       u5020 00BB                       u3501 17FD  
                     u3421 179C                       u3261 16C1                       u3181 166B  
                     u4221 1279                       u2701 1C87                       u4141 1BD4  
                     u4125 0FD6                       u4045 0E29                       u5101 02E9  
                     u5021 00BA                       u3430 17AF                       u3350 1770  
                     u4310 130F                       u4150 1203                       u3510 094D  
                     u5110 0311                       u5030 00F8                       u3431 17AE  
                     u3351 176F                       u4311 130E                       u4151 1202  
                     u3511 094C                       u5111 0310                       u5031 00F7  
                     u3440 17BE                       u3360 1775                       u3280 16E7  
                     u4400 1362                       u4240 128C                       u4160 121D  
                     u2720 1C9C                       u3520 0953                       u5200 0577  
                     u5120 0320                       u5040 0140                       u3361 1774  
                     u3345 1765                       u3281 16E6                       u4401 1361  
                     u4305 12F6                       u4241 128B                       u4161 121C  
                     u2721 1C9B                       u3601 0A0D                       u3521 0952  
                     u4065 0E7C                       u5201 0576                       u5121 031F  
                     u5041 013F                       u3450 17CD                       u3370 177F  
                     u4410 1CA9                       u4330 132D                       u4250 1293  
                     u3602 0A14                       u3530 0958                       u2810 092D  
                     u2730 08DA                       u4090 0F4B                       u5210 0586  
                     u5130 0349                       u5050 018B                       u3451 17CC  
                     u3371 177E                       u3291 16FE                       u3283 16E3  
                     u3275 16C5                       u3195 166F                       u4411 1CA8  
                     u4331 132C                       u4315 130B                       u4251 1292  
                     u4235 127C                       u2715 1C8F                       u3611 0A39  
                     u3603 0A1B                       u3531 0957                       u2811 092C  
                     u2731 08D9                       u4091 0F4A                       u4075 0EB8  
                     u5211 0585                       u5131 0348                       u5051 018A  
                     u3460 17D6                       u3380 1785                       u3292 16FF  
                     u4340 1331                       u4180 1256                       u3700 0B72  
                     u3612 0A40                       u3540 0979                       u2820 0932  
                     u2740 08E5                       u2900 07EE                       u5300 0775  
                     u5220 05A1                       u5060 0222                       u3461 17D5  
                     u3445 17B9                       u3381 1784                       u3293 1704  
                     u4341 1330                       u4325 1320                       u4181 1255  
                     u3621 0A55                       u3613 0A47                       u3541 0978  
                     u2821 0931                       u2805 0921                       u2741 08E4  
                     u2901 07ED                       u4085 0F03                       u5301 0774  
                     u5221 05A0                       u5205 0573                       u5125 031C  
                     u5061 0221                       u3470 17DB                       u3390 178A  
                     u3294 1705                       u4510 1F7B                       u4350 1338  
                     u4270 12A4                       u3622 0A5C                       u3550 097F  
                     u2750 08F6                       u2910 07F3                       u2830 07A9  
                     u5310 0783                       u5150 0486                       u5070 0254  
                     u3471 17DA                       u3391 1789                       u3295 170A  
                     u4511 1F7A                       u4351 1337                       u4271 12A3  
                     u4175 1241                       u3711 0B7E                       u3623 0A63  
                     u3551 097E                       u2751 08F5                       u2911 07F2  
                     u2831 07A8                       u5311 0782                       u5215 0582  
                     u5151 0485                       u5071 0253                       u4520 1DE2  
                     u3480 17E8                       u3296 170B                       u4440 1CC5  
                     u4280 12BA                       u3800 0C05                       u3720 0B9A  
                     u3712 0B85                       u3560 0984                       u2920 1D90  
                     u2840 07B4                       u5320 079D                       u5160 0491  
                     u5080 026B                       u4521 1DE1                       u4601 1105  
                     u3481 17E7                       u4505 1F6D                       u4441 1CC4  
                     u4425 1CB2                       u4281 12B9                       u4265 1296  
                     u4185 1252                       u3801 0C04                       u3713 0B8C  
                     u3705 0B6D                       u3641 0A8B                       u3561 0983  
                     u2921 1D8F                       u2841 07B3                       u5321 079C  
                     u5305 0771                       u5161 0490                       u5145 0453  
                     u5081 026A                       u5330 1BF4                       u4530 1DFE  
                     u4610 1130                       u4602 1106                       u3490 17ED  
                     u4450 1F2E                       u4370 134A                       u4290 12CE  
                     u3810 0C0C                       u3642 0A92                       u3570 099B  
                     u2770 0908                       u2850 07BF                       u5250 072D  
                     u5170 049D                       u5090 02C1                       u5331 1BF3  
                     u4531 1DFD                       u4611 112F                       u4603 110B  
                     u3491 17EC                       u4451 1F2D                       u4435 1CB9  
                     u4371 1349                       u4291 12CD                       u4195 1262  
                     u3811 0C0B                       u3731 0BA6                       u3651 0AB8  
                     u3643 0A99                       u3635 0A65                       u3571 099A  
                     u2771 0907                       u2851 07BE                       u5251 072C  
                     u5235 0628                       u5171 049C                       u5155 0482  
                     u5091 02C0                       u4540 1E18                       u4604 110C  
                     u4620 1BB4                       u4380 1351                       u3820 0C12  
                     u3732 0BAD                       u3652 0ABF                       u3580 09A0  
                     u2940 1DA2                       u5260 0745                       u5340 1019  
                     u4541 1E17                       u4605 1111                       u4621 1BB3  
                     u4381 1350                       u4365 133A                       u3821 0C11  
                     u3733 0BB4                       u3725 0B95                       u3653 0AC6  
                     u3581 099F                       u2941 1DA1                       u2765 08FA  
                     u5261 0744                       u5245 06CE                       u5085 0267  
                     u5341 1018                       u4606 1112                       u4550 10A6  
                     u4710 1FEF                       u4630 1F91                       u4470 1F42  
                     u3830 0C24                       u2790 0919                       u2870 07D1  
                     u5270 074C                       u5190 0556                       u5350 101E  
                     u5407 1CDB                       u4615 112C                       u4551 10A5  
                     u4711 1FEE                       u4631 1F90                       u4471 1F41  
                     u3831 0C23                       u3671 0AEE                       u3591 09F1  
                     u2935 1D94                       u2791 0918                       u2871 07D0  
                     u5271 074B                       u5191 0555                       u5095 02BD  
                     u5351 101D                       u4560 10C2                       u4720 1FF4  
                     u4640 1FA8                       u4800 1140                       u3840 0C33  
                     u3760 0BD8                       u3672 0AF5                       u3592 09F8  
                     u2960 1DB3                       u3920 1489                       u2880 07DB  
                     u5280 0754                       u5417 1CE9                       u4545 1E14  
                     u4561 10C1                       u4721 1FF3                       u4705 1FE1  
                     u4465 1F33                       u4801 113F                       u3761 0BD7  
                     u3745 0BB6                       u3681 0B1B                       u3673 0AFC  
                     u3665 0AC8                       u3593 09FF                       u2961 1DB2  
                     u3921 1488                       u3905 13ED                       u2785 0909  
                     u2881 07DA                       u2865 07C3                       u5281 0753  
                     u5185 04AC                       u4570 10CE                       u4650 1FBE  
                     u4490 1F5D                       u4730 1E76                       u4810 1160  
                     u3850 0C50                       u3682 0B22                       u5290 0765  
                     u5427 1BE4                       u4571 10CD                       u4651 1FBD  
                     u4491 1F5C                       u4731 1E75                       u4811 115F  
                     u4395 1354                       u3851 0C4F                       u3755 0BCD  
                     u3691 0B48                       u3683 0B29                       u2955 1DA3  
                     u3915 1442                       u2795 0915                       u5291 0764  
                     u4660 1FC5                       u4900 11D2                       u3860 0C6A  
                     u3780 0BEC                       u3692 0B4F                       u2980 1DC7  
                     u4581 10DD                       u4661 1FC4                       u4645 1FA3  
                     u4485 1F44                       u3861 0C69                       u3845 0C2E  
                     u3781 0BEB                       u3693 0B56                       u2981 1DC6  
                     u2965 1DAF                       u2885 07D7                       u4590 10F6  
                     u4582 10DE                       u4750 1E8A                       u4910 11E2  
                     u4830 1181                       u3870 0C88                       u3790 0BF1  
                     u2990 1D0A                       u4591 10F5                       u4583 10E3  
                     u4495 1F59                       u4751 1E89                       u4911 11E1  
                     u4831 1180                       u3871 0C87                       u3855 0C4C  
                     u3791 0BF0                       u3775 0BDB                       u2975 1DBB  
                     u2991 1D09                       u3935 14A6                       u2895 07E2  
                     u5295 0761                       u4584 10E4                       u4680 1FD7  
                     u4760 1E9C                       u4920 11E6                       u3880 1374  
                     u3960 0CA4                       u4585 10E9                       u4681 1FD6  
                     u4761 1E9B                       u4745 1E7B                       u4921 11E5  
                     u4905 11CD                       u4825 1173                       u3865 0C66  
                     u3945 14F3                       u3881 1373                       u3961 0CA3  
                     u4930 1C0A                       u4586 10EA                       u4690 1FDE  
                     u4850 11A3                       u3970 0CAD                       u4931 1C09  
                     u4691 1FDD                       u4675 1FC7                       u4851 11A2  
                     u3955 153F                       u3971 0CAC                       u5387 1EF6  
                     u4940 1C1C                       u4780 1EB9                       i1l93 1C48  
                     u4941 1C1B                       u5397 1BC0                       u4781 1EB8  
                     u4765 1E98                       u4845 1195                       u4950 1D4F  
                     u4870 11B3                       u4790 113C                       u4775 1EAB  
                     u4871 11B2                       u4791 113B                       u3895 1391  
                     u4960 1D73                       u4880 11B9                       u4881 11B8  
                     u4865 11A8                       u3985 0CCF                       u4970 1D85  
                     u4890 11BD                       u4971 1D84                       u4891 11BC  
                     u3995 0D0B                       u4980 002A                       u4981 0029  
                     u4990 0044                       u4991 0043          ?_Lcd_Write_String 0077  
                     _main 1EC2                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0020               _sprintf$1165 00B2            __end_of_Lcd_Cmd 1BEC  
                    ??_ISR 0071              ___fltol@sign1 0062            __end_of___fladd 1800  
                    ?_main 0070            __end_of___awdiv 093C            __end_of___flneg 1BB7  
          __end_of___awmod 07FD            __end_of___flmul 0C9D            __end_of___flsub 1E6C  
          __end_of___fltol 2000                      _ANSEL 0188            __end_of___lldiv 1F84  
          ___awdiv@divisor 0023            __end_of___llmod 1EC2            __end_of___lwdiv 1DCC  
                    i1l122 1008            __end_of___lwmod 1D40            ___awdiv@counter 0028  
                    _PORTB 0006    __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _SSPIF 0063  
          __end_of_dpowers 08A0                      _scale 0C9D            __end_of_isdigit 1BD9  
                    _vpot1 00CE                      pclath 000A            __end_of_spiInit 1C02  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07A2  
         __end_of_Lcd_Init 1D04            __initialization 000F               __end_of_main 1F1C  
                   ??_main 00CB         __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD  
         ___llmod@dividend 0024                     ?_scale 0046                     _ADRESH 001E  
         ___awdiv@dividend 0025                     _ANSELH 0189                     i1l3210 1004  
                   i1l3260 1C2E                     i1l3262 1C2F                     i1l3264 1C38  
                   i1l3266 1C3D                     i1l3258 1C28                     i1l3268 1C45  
                   u536_20 1C2E                     u536_21 1C2D                     u537_20 1C3D  
                   u537_21 1C3C                  ??_Lcd_Cmd 0075    __size_of_Lcd_Write_Char 0010  
                   _TRISC3 043B                     _TRISC5 043D                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of___xxtofl 11F0           __end_of__powers_ 0844  
                   ___flge 1090                     ___fleq 1DCC                  ??___fladd 0062  
                   ___wmul 1CA1                  ??___awdiv 0027                  ??___flneg 0079  
                ??___awmod 0020                  ??___flmul 0034                  ??___flsub 0079  
                ??___fltol 005D                  ??___lldiv 0075                  ??___llmod 0075  
                ??___lwdiv 0026                  ??___lwmod 0020                     _config 1C4F  
                   _buffer 00D4                     _fround 136B           ___awdiv@quotient 002A  
          ___awmod@divisor 0075            ___awmod@counter 0021                  ??_isdigit 0075  
       __size_of__Umul8_16 0029                     saved_w 007E           __end_of_spiWrite 1009  
                ??_spiInit 0078                  ??_sprintf 00AD            Lcd_Set_Cursor@a 0021  
          Lcd_Set_Cursor@b 0078                 ___flge@ff1 0020                 ___flge@ff2 0024  
             ___xxtofl@arg 0036               ___xxtofl@exp 0035               ___xxtofl@val 002C  
               ___fleq@ff1 0020                 ___fleq@ff2 0024    __end_of__initialization 0018  
               ___flneg@f1 0075          __end_of_Lcd_Clear 08D3                 ___fltol@f1 0059  
           __pcstackCOMMON 0070              __end_of_scale 1000             _Lcd_Set_Cursor 1C02  
               __div_to_l_ 12AD                  ?_Lcd_Init 0070            __div_to_l_@exp1 002D  
          __div_to_l_@cntr 002C                    ??_scale 004A            __div_to_l_@quot 0028  
               __pbssBANK1 00CE              __div_to_l_@f1 0020              __div_to_l_@f2 0024  
        __end_of__Umul8_16 1CA1                 __pmaintext 1EC2                    ?___flge 0020  
                  ?___fleq 0020                    ?___wmul 0075                 __pintentry 0004  
                  ?_config 0070                    ?_fround 0046  __size_of_Lcd_Write_String 0046  
   __end_of_Lcd_Set_Cursor 1C28                  ?___xxtofl 002C                 ??_Lcd_Init 0020  
                  _SSPSTAT 0094                 __stringtab 0800             _Lcd_Write_Char 1BB7  
                  _Lcd_Cmd 1BD9                 _conversion 1009          __end_of__npowers_ 0878  
               _scale$1164 0054                  ?_spiWrite 0070            __size_of___flge 00A4  
          __size_of___fleq 0050                    ___fladd 1578                    ___awdiv 08D3  
                  ___flneg 1BAC                    ___awmod 07A2                    ___flmul 093C  
                  ___flsub 1E1C                    ___fltol 1F84                    ___lldiv 1F1C  
          __size_of___wmul 002B                    ___llmod 1E6C                    ___lwdiv 1D86  
                  ___lwmod 1D04            __size_of_config 0029                  _ANSELbits 0188  
          __size_of_fround 020D            ?_Lcd_Set_Cursor 0078                    __ptext1 1009  
                  __ptext2 001C                    __ptext3 0C9D                    __ptext4 07A2  
                  __ptext5 08D3                    __ptext6 1BC7                    __ptext7 136B  
                  __ptext8 1D04                    __ptext9 1D86               __size_of_ISR 0027  
              ?__div_to_l_ 0020                    _dpowers 0878                    _isdigit 1BC7  
               ??___xxtofl 0030           ___awmod@dividend 0077                    _spiInit 1BEC  
                  _sprintf 001C     __end_of_Lcd_Write_Char 1BC7       end_of_initialization 0018  
          ___lldiv@divisor 0020            ___lldiv@counter 002C                 ??_spiWrite 0070  
           __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024              ??__tdiv_to_l_ 0075  
                _PORTDbits 0008                ___fladd@grs 006D              ___xxtofl@sign 0034  
                _TRISAbits 0085                spiWrite@dat 0070            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0023                ___flmul@grs 003A  
              ?_conversion 0070        __size_of__div_to_l_ 00BE                  _Lcd_Clear 08C6  
           __end_of___flge 1134             __end_of___fleq 1E1C             __end_of___wmul 1CCC  
         _Lcd_Write_String 1D40             __end_of_config 1C78             __end_of_fround 1578  
      start_initialization 000F                __end_of_ISR 1C4F        __end_of__tdiv_to_l_ 12AD  
        __size_of_Lcd_Init 0038            ___llmod@divisor 0020            ___llmod@counter 0076  
      conversion@puertoANL 006F                 ?_Lcd_Clear 0070                   ??___flge 0075  
                 ??___fleq 0075                   ??___wmul 0079                  __Umul8_16 1C78  
                 ??_config 0079            Lcd_Write_Char@a 0076                   ??_fround 004A  
            sprintf@tmpval 00BF                  ___fladd@a 005E                  ___fladd@b 005A  
      __size_of_conversion 0087                 fround@prec 0059                  ___flmul@a 0030  
                ___flmul@b 002C                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070                sprintf@flag 00B7  
              sprintf@eexp 00BD                sprintf@fval 00C6                sprintf@prec 00C4  
         ___lwdiv@dividend 0024           ??_Lcd_Set_Cursor 0020                   ?___fladd 005A  
                 ?___awdiv 0023                   ?___flneg 0075                   ?___awmod 0075  
                 ?___flmul 002C                   ?___flsub 00A0                   ?___fltol 0059  
                 ?___lldiv 0020                   ?___llmod 0020                  __npowers_ 0844  
               ?__Umul8_16 0075                   ?___lwdiv 0022                   ?___lwmod 0075  
        __size_of_spiWrite 0006                  __pstrings 0800                __tdiv_to_l_ 11F0  
             ??__div_to_l_ 0075                   ?_isdigit 0070                   ?_spiInit 0075  
         ___lwdiv@quotient 0027                   ?_sprintf 00A8             __size_of_scale 0363  
     spiInit@sTransmitEdge 0077          interrupt_function 0004             ___wmul@product 0020  
                 _PIE1bits 008C         spiInit@sDataSample 0075                   Lcd_Cmd@a 0077  
                 _PIR1bits 000C         __end_of__div_to_l_ 136B                ??_Lcd_Clear 0078  
               _ADCON0bits 001F                __stringbase 080F                 _ADCON1bits 009F  
        ___wmul@multiplier 0075           ??_Lcd_Write_Char 0075                   _Lcd_Init 1CCC  
 __end_of_Lcd_Write_String 1D86               ??_conversion 006E           __size_of_Lcd_Cmd 0013  
              ??__Umul8_16 0077           __size_of___fladd 0288           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 005B           __size_of___flmul 0361  
         __size_of___flsub 0050           __size_of___fltol 007C           __size_of___lldiv 0068  
         __size_of___llmod 0056           __size_of___lwdiv 0046           __size_of___lwmod 003C  
              _fround$1162 0055                _fround$1163 0051         __end_of__stringtab 0810  
              _isdigit$973 0075                 sprintf@val 00B9         __end_of_conversion 1090  
                 ___xxtofl 1134           __size_of_isdigit 0012            ___lwdiv@divisor 0022  
          ___lwdiv@counter 0029                   __ptext10 093C                   __ptext11 1C78  
                 __ptext20 1578                   __ptext12 11F0                   __ptext21 1BAC  
                 __ptext13 12AD                   __ptext30 08C6                   __ptext22 1090  
                 __ptext14 1134                   __ptext31 1BD9                   __ptext23 1DCC  
                 __ptext15 1CA1                   __ptext32 1C28                   __ptext24 1D40  
                 __ptext16 1E6C                   __ptext33 1003                   __ptext25 1BB7  
                 __ptext17 1F1C                   __ptext26 1C02                   __ptext18 1F84  
                 __ptext27 1C4F                   __ptext19 1E1C                   __ptext28 1BEC  
                 __ptext29 1CCC           __size_of_spiInit 0016                   __powers_ 0810  
         __size_of_sprintf 0786              __size_of_main 005A                   _spiWrite 1003  
             spiInit@sType 0078          spiInit@sClockIdle 0076                 _INTCONbits 000B  
                 isdigit@c 0076                   scale@scl 0058                   intlevel1 0000  
                sprintf@ap 00B6           __tdiv_to_l_@exp1 002D           __tdiv_to_l_@cntr 002C  
                sprintf@sp 00C3           __tdiv_to_l_@quot 0028           ___lwmod@dividend 0077  
         ___lldiv@dividend 0024                  stringcode 080A         Lcd_Set_Cursor@temp 0022  
             ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0075                   sprintf@c 00CA  
                 sprintf@f 00A8           ___lldiv@quotient 0028            ___lwmod@divisor 0075  
          ___lwmod@counter 0021                   stringdir 080A                   stringtab 0800  
            ___fladd@signs 006A               ___fladd@aexp 006B               ___fladd@bexp 006C  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
